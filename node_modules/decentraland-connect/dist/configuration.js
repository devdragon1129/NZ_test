"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRpcUrls = exports.getConfiguration = void 0;
const chain_id_1 = require("@dcl/schemas/dist/dapps/chain-id");
const provider_type_1 = require("@dcl/schemas/dist/dapps/provider-type");
const configuration = Object.freeze({
    storageKey: 'decentraland-connect-storage-key',
    [provider_type_1.ProviderType.INJECTED]: {},
    [provider_type_1.ProviderType.FORTMATIC]: {
        apiKeys: {
            [chain_id_1.ChainId.ETHEREUM_MAINNET]: 'pk_live_F8E24DF8DD5BCBC5',
            [chain_id_1.ChainId.ETHEREUM_ROPSTEN]: 'pk_test_5B728BEFE5C10911',
            [chain_id_1.ChainId.ETHEREUM_RINKEBY]: 'pk_test_5B728BEFE5C10911',
            [chain_id_1.ChainId.ETHEREUM_KOVAN]: 'pk_test_5B728BEFE5C10911'
        }
    },
    [provider_type_1.ProviderType.WALLET_CONNECT]: {
        urls: getRpcUrls(provider_type_1.ProviderType.WALLET_CONNECT)
    }
});
function getConfiguration() {
    return configuration;
}
exports.getConfiguration = getConfiguration;
function getRpcUrls(providerType) {
    const rpcUrls = {
        [chain_id_1.ChainId.ETHEREUM_MAINNET]: 'https://rpc.decentraland.org/mainnet',
        [chain_id_1.ChainId.ETHEREUM_ROPSTEN]: 'https://rpc.decentraland.org/ropsten',
        [chain_id_1.ChainId.ETHEREUM_RINKEBY]: 'https://rpc.decentraland.org/rinkeby',
        [chain_id_1.ChainId.ETHEREUM_GOERLI]: 'https://rpc.decentraland.org/goerli',
        [chain_id_1.ChainId.ETHEREUM_KOVAN]: 'https://rpc.decentraland.org/kovan',
        [chain_id_1.ChainId.MATIC_MAINNET]: 'https://rpc.decentraland.org/polygon',
        [chain_id_1.ChainId.MATIC_MUMBAI]: 'https://rpc.decentraland.org/mumbai'
    };
    let project = '';
    switch (providerType) {
        case provider_type_1.ProviderType.WALLET_CONNECT:
            project = 'walletconnect';
            break;
        case provider_type_1.ProviderType.WALLET_LINK:
            project = 'walletlink';
            break;
        default:
            break;
    }
    if (project) {
        for (const chainId in rpcUrls) {
            rpcUrls[chainId] += `?project=${project}`;
        }
    }
    return rpcUrls;
}
exports.getRpcUrls = getRpcUrls;
//# sourceMappingURL=configuration.js.map