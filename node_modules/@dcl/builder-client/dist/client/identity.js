"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createIdentity = void 0;
const dcl_crypto_1 = require("dcl-crypto");
const wallet_1 = require("@ethersproject/wallet");
/**
 * Creates an identity to later be used in the IAuthentication implementation.
 * @param signer - Any Ethereum signer (RPC or Wallet signer).
 * @param expiration - TTL in seconds of the identity.
 */
async function createIdentity(signer, expiration) {
    const address = await signer.getAddress();
    const wallet = wallet_1.Wallet.createRandom();
    const payload = {
        address: wallet.address,
        privateKey: wallet.privateKey,
        publicKey: wallet.publicKey
    };
    const identity = await dcl_crypto_1.Authenticator.initializeAuthChain(address, payload, expiration, (message) => signer.signMessage(message));
    return identity;
}
exports.createIdentity = createIdentity;
//# sourceMappingURL=identity.js.map