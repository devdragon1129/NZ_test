import { WearableBodyShape } from '../item/types';
import { Content, HashedContent, RawContent, SortedContent } from './types';
/**
 * Computes the hashes of RawContents.
 * @param contents - The raw contents of an item.
 */
export declare function computeHashes<T extends Content>(contents: RawContent<T>): Promise<HashedContent>;
/**
 * Prefixes a content name using the body shape.
 * @param bodyShape - The body shaped of the content.
 * @param contentKey - The name of the content.
 */
export declare function prefixContentName(bodyShape: WearableBodyShape, contentKey: string): string;
/**
 * Sorts the content into "male", "female" and "all" taking into consideration the body shape.
 * All contains the item thumbnail and both male and female representations according to the shape.
 * If the body representation is male, "female" will be an empty object and viceversa.
 * @param bodyShape - The body shaped used to sort the content.
 * @param contents - The contents to be sorted.
 */
export declare function sortContent<T extends Content>(bodyShape: WearableBodyShape, contents: RawContent<T>): SortedContent<T>;
