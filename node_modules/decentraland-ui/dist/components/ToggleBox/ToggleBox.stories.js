"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var react_1 = require("@storybook/react");
var react_2 = __importDefault(require("@storybook/addon-centered/react"));
var ToggleBox_1 = require("./ToggleBox");
(0, react_1.storiesOf)('ToggleBox', module)
    .addDecorator(react_2.default)
    .add('Simple', function () { return (React.createElement(ToggleBox_1.ToggleBox, { header: "Header text", items: [
        { title: 'Item 1', description: 'Description of the item 1' },
        { title: 'Item 2', description: 'Description of the item 2' },
        { title: 'Item 3', description: 'Description of the item 3' }
    ] })); })
    .add('With active item', function () { return (React.createElement(ToggleBox_1.ToggleBox, { header: "Header text", value: 1, items: [
        {
            title: 'Item 1',
            description: 'Description of the item 1',
            value: 1
        },
        {
            title: 'Item 2',
            description: 'Description of the Active item 2',
            value: 2
        },
        {
            title: 'Item 3',
            description: 'Description of the item 3',
            value: 3
        }
    ] })); })
    .add('With disable items', function () { return (React.createElement(ToggleBox_1.ToggleBox, { header: "Header text with disabled items", value: 3, items: [
        {
            title: 'Item 1',
            description: 'Description of the active item 1',
            value: 1,
            disabled: false
        },
        {
            title: 'Item 2',
            description: 'Description of the disabled item 2',
            value: 2,
            disabled: true
        },
        {
            title: 'Item 3',
            description: 'Description of the item 3',
            value: 3,
            disabled: false
        }
    ] })); })
    .add('Without border (borderless)', function () { return (React.createElement(ToggleBox_1.ToggleBox, { header: "Without border", borderless: true, value: 3, items: [
        {
            title: 'Item 1',
            description: 'Description of the active item 1',
            value: 1,
            disabled: false
        },
        {
            title: 'Item 2',
            description: 'Description of the disabled item 2',
            value: 2,
            disabled: true
        },
        {
            title: 'Item 3',
            description: 'Description of the item 3',
            value: 3,
            disabled: false
        }
    ] })); });
