"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextFilter = void 0;
var React = __importStar(require("react"));
var Header_1 = require("../Header/Header");
var input_1 = require("../../hooks/input");
require("./TextFilter.css");
var TextFilter = function (props) {
    var label = props.label, value = props.value, placeholder = props.placeholder, onChange = props.onChange;
    var _a = (0, input_1.useInput)(value, onChange), text = _a[0], setText = _a[1];
    var inputRef = React.useRef(null);
    React.useEffect(function () {
        if (inputRef.current) {
            inputRef.current.focus();
        }
    }, []);
    return (React.createElement("div", { className: "dcl text-filter" },
        label ? (React.createElement(Header_1.Header, { sub: true, className: "name" }, label)) : null,
        React.createElement("div", { className: "text-input" },
            React.createElement("input", { ref: inputRef, value: text, onChange: setText, placeholder: placeholder }))));
};
exports.TextFilter = TextFilter;
