import * as React from 'react';
import './SliderField.css';
export declare type SliderFieldProps = {
    range?: false;
    header: string;
    className?: string;
    min?: number;
    max?: number;
    defaultValue?: number;
    label?: string | React.PureComponent<{
        value: number;
    }>;
    onChange?: (ev: React.ChangeEvent<HTMLInputElement>, data: number) => void;
    onMouseUp?: (ev: React.MouseEvent<HTMLInputElement>, data: number) => void;
} | {
    range: true;
    header: string;
    className?: string;
    min?: number;
    max?: number;
    defaultValue?: readonly [number, number];
    label?: string | React.PureComponent<{
        value: readonly [number, number];
    }>;
    onChange?: (ev: React.ChangeEvent<HTMLInputElement>, data: readonly [number, number]) => void;
    onMouseUp?: (ev: React.MouseEvent<HTMLInputElement>, data: readonly [number, number]) => void;
};
export declare enum SliderLastInteraction {
    'from' = 0,
    'to' = 1
}
export declare const SliderDefault: {
    MIN: number;
    MAX: number;
    FROM: number;
    TO: number;
};
export declare type SliderFieldState = {
    from: number;
    to: number;
    lastInteraction: SliderLastInteraction;
};
export declare type SliderFieldLeftRightStyle = {
    left: string | number;
    right: string;
};
export declare class SliderField extends React.PureComponent<SliderFieldProps, SliderFieldState> {
    state: {
        from: number;
        to: number;
        lastInteraction: SliderLastInteraction;
    };
    componentDidMount(): void;
    handleChangeFrom: (e: React.ChangeEvent<HTMLInputElement>) => void;
    handleChangeTo: (e: React.ChangeEvent<HTMLInputElement>) => void;
    handleMouseUp: (e: React.MouseEvent<HTMLInputElement>) => void;
    getTrackStyles: (min: number, max: number) => SliderFieldLeftRightStyle;
    getLabel: () => string | number | React.PureComponent<{
        value: number;
    }, {}, any> | React.PureComponent<{
        value: readonly [number, number];
    }, {}, any>;
    getMarkStyle: (min: number, max: number) => SliderFieldLeftRightStyle;
    render(): JSX.Element;
}
