import { ApplicationName, ApplicationFeatures } from './types';
export declare const FETCH_APPLICATION_FEATURES_REQUEST = "[Request] Fetch application features";
export declare const FETCH_APPLICATION_FEATURES_SUCCESS = "[Success] Fetch application features";
export declare const FETCH_APPLICATION_FEATURES_FAILURE = "[Failure] Fetch application features";
export declare const fetchApplicationFeaturesRequest: (apps: ApplicationName[]) => import("typesafe-actions/dist/types").PayloadAction<"[Request] Fetch application features", {
    apps: ApplicationName[];
}>;
export declare const fetchApplicationFeaturesSuccess: (apps: ApplicationName[], features: Record<ApplicationName, ApplicationFeatures>) => import("typesafe-actions/dist/types").PayloadAction<"[Success] Fetch application features", {
    apps: ApplicationName[];
    features: Record<ApplicationName, ApplicationFeatures>;
}>;
export declare const fetchApplicationFeaturesFailure: (apps: ApplicationName[], error: string) => import("typesafe-actions/dist/types").PayloadAction<"[Failure] Fetch application features", {
    apps: ApplicationName[];
    error: string;
}>;
export declare type FetchApplicationFeaturesRequestAction = ReturnType<typeof fetchApplicationFeaturesRequest>;
export declare type FetchApplicationFeaturesSuccessAction = ReturnType<typeof fetchApplicationFeaturesSuccess>;
export declare type FetchApplicationFeaturesFailureAction = ReturnType<typeof fetchApplicationFeaturesFailure>;
