"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getChainConfiguration = exports.MANA_GRAPH_BY_CHAIN_ID = void 0;
const chain_id_1 = require("@dcl/schemas/dist/dapps/chain-id");
const NetworkConnector_1 = require("decentraland-connect/dist/connectors/NetworkConnector");
exports.MANA_GRAPH_BY_CHAIN_ID = {
    [chain_id_1.ChainId.ETHEREUM_MAINNET]: 'https://api.thegraph.com/subgraphs/name/decentraland/mana-ethereum-mainnet',
    [chain_id_1.ChainId.ETHEREUM_ROPSTEN]: 'https://api.thegraph.com/subgraphs/name/decentraland/mana-ethereum-ropsten',
    [chain_id_1.ChainId.ETHEREUM_GOERLI]: 'https://api.thegraph.com/subgraphs/name/decentraland/mana-ethereum-goerli',
    [chain_id_1.ChainId.ETHEREUM_RINKEBY]: 'https://api.thegraph.com/subgraphs/name/decentraland/mana-ethereum-rinkeby',
    [chain_id_1.ChainId.MATIC_MAINNET]: 'https://api.thegraph.com/subgraphs/name/decentraland/mana-matic-mainnet',
    [chain_id_1.ChainId.MATIC_MUMBAI]: 'https://api.thegraph.com/subgraphs/name/decentraland/mana-matic-mumbai'
};
function getChainConfiguration(chainId) {
    return {
        network: chain_id_1.getNetwork(chainId),
        manaGraphURL: exports.MANA_GRAPH_BY_CHAIN_ID[chainId],
        rpcURL: NetworkConnector_1.RPC_URLS[chainId],
        networkMapping: chain_id_1.getNetworkMapping(chainId)
    };
}
exports.getChainConfiguration = getChainConfiguration;
//# sourceMappingURL=chainConfiguration.js.map