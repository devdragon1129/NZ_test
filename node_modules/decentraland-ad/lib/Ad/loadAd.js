"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("./utils");
var endpoint = process.env.REACT_APP_HOUSE_AD_ENDPOINT ||
    process.env.HOUSE_AD_ENDPOINT ||
    'https://ad.decentraland.org/api/v1';
var ads = new Map();
var now = Date.now();
var loading = null;
function loadAllAds(_a) {
    var includeUnfinished = (_a === void 0 ? {} : _a).includeUnfinished;
    if (!loading) {
        if (!endpoint) {
            loading = Promise.resolve([]);
        }
        else {
            var params = '';
            if (window.URLSearchParams) {
                var options = new URLSearchParams();
                if (includeUnfinished) {
                    options.set('list', 'unfinished');
                }
                params = String(options) ? '?' + String(options) : '';
            }
            loading = fetch(endpoint + '/ads' + params)
                .then(function (response) { return (response.ok ? response.json() : []); })
                .catch(function (err) {
                console.error(err);
                return [];
            });
        }
    }
    return loading;
}
exports.loadAllAds = loadAllAds;
function loadAd(slotName) {
    return __awaiter(this, void 0, void 0, function () {
        var list;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!!loading) return [3 /*break*/, 2];
                    return [4 /*yield*/, loadAllAds()];
                case 1:
                    list = _a.sent();
                    list
                        .filter(function (ad) {
                        var startTime = utils_1.moment(ad.startAt).getTime();
                        var finishTime = ad.finishAt && utils_1.moment(ad.finishAt).getTime();
                        return (ad.isEnabled !== false &&
                            now >= startTime &&
                            (!finishTime || now < finishTime));
                    })
                        .forEach(function (ad) {
                        if (!ads.has(ad.slotName)) {
                            ads.set(ad.slotName, ad);
                        }
                        else {
                            var currentStartTime = utils_1.moment(ad.startAt).getTime();
                            var previousStartTime = utils_1.moment(ads.get(ad.slotName).startAt).getTime();
                            if (currentStartTime > previousStartTime) {
                                ads.set(ad.slotName, ad);
                            }
                        }
                    });
                    _a.label = 2;
                case 2: return [4 /*yield*/, loading];
                case 3:
                    _a.sent();
                    return [2 /*return*/, (slotName && ads.get(slotName)) || null];
            }
        });
    });
}
exports.default = loadAd;
//# sourceMappingURL=loadAd.js.map