"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("./types");
var utils_1 = require("../utils");
var utils_2 = require("./utils");
function createButtonContent(type, props, children) {
    if (type !== types_1.ContentType.Button) {
        return null;
    }
    var button = document.createElement('a');
    button.className = 'DCL__Ad__Button';
    if (props.href) {
        button.href = props.href;
    }
    if (props.target) {
        button.target = props.target;
    }
    if (props.rel) {
        button.rel = props.rel;
    }
    if (props.referrerPolicy) {
        button.referrerPolicy = props.referrerPolicy;
    }
    if (props.textColor) {
        button.style.color = props.textColor;
    }
    if (props.backgroundColor) {
        button.style.backgroundColor =
            props.backgroundColor === 'none' ? 'transparent' : props.backgroundColor;
    }
    if (props.textShadowColor) {
        button.style.textShadow = "0 0 .1em " + props.textShadowColor;
    }
    if (props.boxShadowColor) {
        button.style.boxShadow = "0 0 .1em " + props.boxShadowColor;
    }
    if (props.borderColor) {
        button.style.border = "1 solid " + props.borderColor;
    }
    if (props.width) {
        button.style.width = utils_1.measure(props.width);
    }
    if (!utils_2.isFalsy(props.bottom)) {
        button.style.bottom = utils_1.measure(props.bottom, 0);
    }
    else if (!utils_2.isFalsy(props.top)) {
        button.style.top = utils_1.measure(props.top, 0);
    }
    if (!utils_2.isFalsy(props.right)) {
        button.style.right = utils_1.measure(props.right, 0);
    }
    else if (!utils_2.isFalsy(props.left)) {
        button.style.left = utils_1.measure(props.left, 0);
    }
    var content = utils_2.Locate(props, children, props.lang || types_1.Locale.en);
    var text = document.createTextNode(String(content || '').trim());
    button.appendChild(text);
    return button;
}
exports.default = createButtonContent;
//# sourceMappingURL=createButtonContent.js.map