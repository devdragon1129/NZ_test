"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
// import Style from '../Ad.style'
var types_1 = require("./types");
var createButtonContent_1 = __importDefault(require("./createButtonContent"));
var createImageContent_1 = __importDefault(require("./createImageContent"));
var createTextBlockContent_1 = __importStar(require("./createTextBlockContent"));
var utils_1 = require("./utils");
function createContent(type, props, children) {
    if (children === void 0) { children = []; }
    switch (type) {
        case types_1.ContentType.Button:
            return createButtonContent_1.default(types_1.ContentType.Button, props, utils_1.ListChildren(children)
                .map(String)
                .join(' '));
        case types_1.ContentType.Image:
            return createImageContent_1.default(type, props);
        case types_1.ContentType.TextBlock:
            return createTextBlockContent_1.default(type, props, children);
        case types_1.ContentType.Paragraph:
        case types_1.ContentType.Link:
        case types_1.ContentType.Subtitle:
        case types_1.ContentType.Title:
            return createTextBlockContent_1.createTextContent(type, props, children);
        case types_1.ContentType.Emphasis:
        case types_1.ContentType.Strong:
        case types_1.ContentType.Underline:
        case types_1.ContentType.Delete:
            return createTextBlockContent_1.createTextContent(types_1.ContentType.Paragraph, { lang: props.lang }, { type: type, props: props, children: children });
        default:
            return null;
    }
}
exports.default = createContent;
//# sourceMappingURL=createContent.js.map