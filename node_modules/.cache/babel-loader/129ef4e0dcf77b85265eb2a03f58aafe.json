{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/DeployModal/DeployModal.tsx\";\nimport * as React from 'react';\nimport { Button, Header } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport Icon from 'components/Icon';\nimport DeployToLand from './DeployToLand';\nimport DeployToPool from './DeployToPool';\nimport ClearDeployment from './ClearDeployment';\nimport { DeployModalView } from './DeployModal.types';\nimport './DeployModal.css';\n\nvar DeployModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DeployModal, _React$PureComponent);\n\n  function DeployModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DeployModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DeployModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      view: DeployModalView.NONE,\n      deploymentId: null\n    };\n\n    _this.handleDeployToLand = function () {\n      _this.setState({\n        view: DeployModalView.DEPLOY_TO_LAND\n      });\n    };\n\n    _this.handleDeployToPool = function () {\n      _this.setState({\n        view: DeployModalView.DEPLOY_TO_POOL\n      });\n    };\n\n    _this.handleClickOutside = function () {\n      if (_this.state.view === DeployModalView.NONE) {\n        _this.props.onClose();\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        view: DeployModalView.NONE\n      });\n\n      _this.props.onClose();\n    };\n\n    _this.handleBack = function () {\n      _this.setState({\n        view: DeployModalView.NONE\n      });\n    };\n\n    _this.renderChoiceForm = function () {\n      var name = _this.props.name;\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: name,\n        onClose: _this.handleClickOutside,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"choice-form\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-header\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"modal-close\",\n        onClick: _this.handleClose,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Header, {\n        size: \"large\",\n        className: \"modal-title\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, t('deployment_modal.title')), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"modal-subtitle\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, t('deployment_modal.description')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"options\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thumbnail deploy-to-pool\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, t('deployment_modal.option_pool.title')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"description\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, t('deployment_modal.option_pool.description')), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        size: \"small\",\n        onClick: _this.handleDeployToPool,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, t('deployment_modal.option_pool.action'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thumbnail deploy-to-land\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, t('deployment_modal.option_land.title')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"description\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, t('deployment_modal.option_land.description')), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        size: \"small\",\n        onClick: _this.handleDeployToLand,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, t('deployment_modal.option_land.action'))))));\n    };\n\n    return _this;\n  }\n\n  _createClass(DeployModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var metadata = this.props.metadata;\n\n      if (metadata) {\n        this.setState({\n          view: metadata.view || DeployModalView.NONE,\n          deploymentId: metadata.deploymentId || null\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          view = _this$state.view,\n          deploymentId = _this$state.deploymentId;\n      var _this$props = this.props,\n          name = _this$props.name,\n          currentPoolGroup = _this$props.currentPoolGroup;\n\n      if (view === DeployModalView.CLEAR_DEPLOYMENT && deploymentId) {\n        return /*#__PURE__*/React.createElement(ClearDeployment, {\n          deploymentId: deploymentId,\n          name: name,\n          onClose: this.handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (view === DeployModalView.DEPLOY_TO_LAND || currentPoolGroup) {\n        return /*#__PURE__*/React.createElement(DeployToLand, {\n          name: name,\n          onDeployToPool: this.handleDeployToPool,\n          onBack: this.handleBack,\n          onClose: this.handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (view === DeployModalView.DEPLOY_TO_POOL) {\n        return /*#__PURE__*/React.createElement(DeployToPool, {\n          name: name,\n          onClose: this.handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return this.renderChoiceForm();\n    }\n  }]);\n\n  return DeployModal;\n}(React.PureComponent);\n\nexport { DeployModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/DeployModal/DeployModal.tsx"],"names":["React","Button","Header","t","Modal","Icon","DeployToLand","DeployToPool","ClearDeployment","DeployModalView","DeployModal","state","view","NONE","deploymentId","handleDeployToLand","setState","DEPLOY_TO_LAND","handleDeployToPool","DEPLOY_TO_POOL","handleClickOutside","props","onClose","handleClose","handleBack","renderChoiceForm","name","metadata","currentPoolGroup","CLEAR_DEPLOYMENT","PureComponent"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,iBAA/B;AACA,SAASC,CAAT,QAAkB,mDAAlB;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAuBC,eAAvB,QAA8C,qBAA9C;AACA,OAAO,mBAAP;;IAEqBC,W;;;;;;;;;;;;;;;UACnBC,K,GAAe;AACbC,MAAAA,IAAI,EAAEH,eAAe,CAACI,IADT;AAEbC,MAAAA,YAAY,EAAE;AAFD,K;;UAefC,kB,GAAqB,YAAM;AACzB,YAAKC,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAEH,eAAe,CAACQ;AADV,OAAd;AAGD,K;;UAEDC,kB,GAAqB,YAAM;AACzB,YAAKF,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAEH,eAAe,CAACU;AADV,OAAd;AAGD,K;;UAEDC,kB,GAAqB,YAAM;AACzB,UAAI,MAAKT,KAAL,CAAWC,IAAX,KAAoBH,eAAe,CAACI,IAAxC,EAA8C;AAC5C,cAAKQ,KAAL,CAAWC,OAAX;AACD;AACF,K;;UAEDC,W,GAAc,YAAM;AAClB,YAAKP,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAEH,eAAe,CAACI;AADV,OAAd;;AAGA,YAAKQ,KAAL,CAAWC,OAAX;AACD,K;;UAEDE,U,GAAa,YAAM;AACjB,YAAKR,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAEH,eAAe,CAACI;AADV,OAAd;AAGD,K;;UAEDY,gB,GAAmB,YAAM;AAAA,UACfC,IADe,GACN,MAAKL,KADC,CACfK,IADe;AAGvB,0BACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,IAAb;AAAmB,QAAA,OAAO,EAAE,MAAKN,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAE,MAAKG,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAIE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,SAAS,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpB,CAAC,CAAC,wBAAD,CADJ,CAJF,eAOE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BA,CAAC,CAAC,8BAAD,CAAhC,CAPF,eAQE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBA,CAAC,CAAC,oCAAD,CAA1B,CAFF,eAGE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BA,CAAC,CAAC,0CAAD,CAAhC,CAHF,eAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,IAAI,EAAC,OAArB;AAA6B,QAAA,OAAO,EAAE,MAAKe,kBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,CAAC,CAAC,qCAAD,CADJ,CAJF,CADF,eASE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBA,CAAC,CAAC,oCAAD,CAA1B,CAFF,eAGE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BA,CAAC,CAAC,0CAAD,CAAhC,CAHF,eAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,IAAI,EAAC,OAArB;AAA6B,QAAA,OAAO,EAAE,MAAKY,kBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGZ,CAAC,CAAC,qCAAD,CADJ,CAJF,CATF,CARF,CADF,CADF;AA+BD,K;;;;;;;wCA3EmB;AAAA,UACVwB,QADU,GACG,KAAKN,KADR,CACVM,QADU;;AAElB,UAAIA,QAAJ,EAAc;AACZ,aAAKX,QAAL,CAAc;AACZJ,UAAAA,IAAI,EAAEe,QAAQ,CAACf,IAAT,IAAiBH,eAAe,CAACI,IAD3B;AAEZC,UAAAA,YAAY,EAAEa,QAAQ,CAACb,YAAT,IAAyB;AAF3B,SAAd;AAID;AACF;;;6BAqEQ;AAAA,wBACwB,KAAKH,KAD7B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOE,YADP,eACOA,YADP;AAAA,wBAE4B,KAAKO,KAFjC;AAAA,UAECK,IAFD,eAECA,IAFD;AAAA,UAEOE,gBAFP,eAEOA,gBAFP;;AAIP,UAAIhB,IAAI,KAAKH,eAAe,CAACoB,gBAAzB,IAA6Cf,YAAjD,EAA+D;AAC7D,4BAAO,oBAAC,eAAD;AAAiB,UAAA,YAAY,EAAEA,YAA/B;AAA6C,UAAA,IAAI,EAAEY,IAAnD;AAAyD,UAAA,OAAO,EAAE,KAAKH,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,UAAIX,IAAI,KAAKH,eAAe,CAACQ,cAAzB,IAA2CW,gBAA/C,EAAiE;AAC/D,4BAAO,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAEF,IAApB;AAA0B,UAAA,cAAc,EAAE,KAAKR,kBAA/C;AAAmE,UAAA,MAAM,EAAE,KAAKM,UAAhF;AAA4F,UAAA,OAAO,EAAE,KAAKD,WAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,UAAIX,IAAI,KAAKH,eAAe,CAACU,cAA7B,EAA6C;AAC3C,4BAAO,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAEO,IAApB;AAA0B,UAAA,OAAO,EAAE,KAAKH,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aAAO,KAAKE,gBAAL,EAAP;AACD;;;;EApGsCzB,KAAK,CAAC8B,a;;SAA1BpB,W","sourcesContent":["import * as React from 'react'\nimport { Button, Header } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport Icon from 'components/Icon'\nimport DeployToLand from './DeployToLand'\nimport DeployToPool from './DeployToPool'\nimport ClearDeployment from './ClearDeployment'\nimport { Props, State, DeployModalView } from './DeployModal.types'\nimport './DeployModal.css'\n\nexport default class DeployModal extends React.PureComponent<Props, State> {\n  state: State = {\n    view: DeployModalView.NONE,\n    deploymentId: null\n  }\n\n  componentDidMount() {\n    const { metadata } = this.props\n    if (metadata) {\n      this.setState({\n        view: metadata.view || DeployModalView.NONE,\n        deploymentId: metadata.deploymentId || null\n      })\n    }\n  }\n\n  handleDeployToLand = () => {\n    this.setState({\n      view: DeployModalView.DEPLOY_TO_LAND\n    })\n  }\n\n  handleDeployToPool = () => {\n    this.setState({\n      view: DeployModalView.DEPLOY_TO_POOL\n    })\n  }\n\n  handleClickOutside = () => {\n    if (this.state.view === DeployModalView.NONE) {\n      this.props.onClose()\n    }\n  }\n\n  handleClose = () => {\n    this.setState({\n      view: DeployModalView.NONE\n    })\n    this.props.onClose()\n  }\n\n  handleBack = () => {\n    this.setState({\n      view: DeployModalView.NONE\n    })\n  }\n\n  renderChoiceForm = () => {\n    const { name } = this.props\n\n    return (\n      <Modal name={name} onClose={this.handleClickOutside}>\n        <div className=\"choice-form\">\n          <div className=\"modal-header\">\n            <Icon name=\"modal-close\" onClick={this.handleClose} />\n          </div>\n          <Header size=\"large\" className=\"modal-title\">\n            {t('deployment_modal.title')}\n          </Header>\n          <p className=\"modal-subtitle\">{t('deployment_modal.description')}</p>\n          <div className=\"options\">\n            <div className=\"card\">\n              <div className=\"thumbnail deploy-to-pool\" />\n              <span className=\"title\">{t('deployment_modal.option_pool.title')}</span>\n              <span className=\"description\">{t('deployment_modal.option_pool.description')}</span>\n              <Button primary size=\"small\" onClick={this.handleDeployToPool}>\n                {t('deployment_modal.option_pool.action')}\n              </Button>\n            </div>\n            <div className=\"card\">\n              <div className=\"thumbnail deploy-to-land\" />\n              <span className=\"title\">{t('deployment_modal.option_land.title')}</span>\n              <span className=\"description\">{t('deployment_modal.option_land.description')}</span>\n              <Button primary size=\"small\" onClick={this.handleDeployToLand}>\n                {t('deployment_modal.option_land.action')}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n\n  render() {\n    const { view, deploymentId } = this.state\n    const { name, currentPoolGroup } = this.props\n\n    if (view === DeployModalView.CLEAR_DEPLOYMENT && deploymentId) {\n      return <ClearDeployment deploymentId={deploymentId} name={name} onClose={this.handleClose} />\n    }\n\n    if (view === DeployModalView.DEPLOY_TO_LAND || currentPoolGroup) {\n      return <DeployToLand name={name} onDeployToPool={this.handleDeployToPool} onBack={this.handleBack} onClose={this.handleClose} />\n    }\n\n    if (view === DeployModalView.DEPLOY_TO_POOL) {\n      return <DeployToPool name={name} onClose={this.handleClose} />\n    }\n\n    return this.renderChoiceForm()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}