{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/ItemEditorPage/CenterPanel/CenterPanel.tsx\";\nimport * as React from 'react';\nimport { PreviewEmote, WearableBodyShape, WearableCategory } from '@dcl/schemas';\nimport { Dropdown, Popup, Icon, Loader, Center } from 'decentraland-ui';\nimport { WearablePreview } from 'decentraland-ui/dist/components/WearablePreview/WearablePreview';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { getSkinColors, getEyeColors, getHairColors } from 'modules/editor/avatar';\nimport AvatarColorDropdown from './AvatarColorDropdown';\nimport AvatarWearableDropdown from './AvatarWearableDropdown';\nimport './CenterPanel.css';\nimport { toBase64, toHex } from 'modules/editor/utils';\n\nvar CenterPanel = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CenterPanel, _React$PureComponent);\n\n  function CenterPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CenterPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CenterPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isShowingAvatarAttributes: false,\n      isLoading: false\n    };\n\n    _this.handleToggleShowingAvatarAttributes = function () {\n      _this.setState({\n        isShowingAvatarAttributes: !_this.state.isShowingAvatarAttributes\n      });\n    };\n\n    _this.handleBodyShapeChange = function (_event, _ref) {\n      var value = _ref.value;\n      var onSetBodyShape = _this.props.onSetBodyShape;\n      onSetBodyShape(value);\n    };\n\n    _this.handleAnimationChange = function (_event, _ref2) {\n      var value = _ref2.value;\n      var onSetAvatarAnimation = _this.props.onSetAvatarAnimation;\n      onSetAvatarAnimation(value);\n    };\n\n    _this.handleSkinColorChange = function (color) {\n      var onSetSkinColor = _this.props.onSetSkinColor;\n      onSetSkinColor(color);\n    };\n\n    _this.handleEyeColorChange = function (color) {\n      var onSetEyeColor = _this.props.onSetEyeColor;\n      onSetEyeColor(color);\n    };\n\n    _this.handleHairColorChange = function (color) {\n      var onSetHairColor = _this.props.onSetHairColor;\n      onSetHairColor(color);\n    };\n\n    _this.handleWearableChange = function (category, bodyShape, wearable) {\n      var onSetBaseWearable = _this.props.onSetBaseWearable;\n      onSetBaseWearable(category, bodyShape, wearable);\n    };\n\n    return _this;\n  }\n\n  _createClass(CenterPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          bodyShapeBaseWearables = _this$props.selectedBaseWearables,\n          onFetchBaseWearables = _this$props.onFetchBaseWearables;\n\n      if (!bodyShapeBaseWearables) {\n        onFetchBaseWearables();\n      } // Setting the editor as loading as soon as it mounts. It will be turned of by the WearablePreview component once it's ready.\n\n\n      this.setState({\n        isLoading: true\n      });\n    }\n  }, {\n    key: \"renderSelectTrigger\",\n    value: function renderSelectTrigger(label, value) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, label), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, value), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"handle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"getDropdownAttributes\",\n    value: function getDropdownAttributes(value, options, label) {\n      var selected = options.find(function (option) {\n        return option.value === value;\n      });\n      return {\n        value: value,\n        options: options,\n        trigger: this.renderSelectTrigger(label, selected ? selected.text : '')\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          bodyShape = _this$props2.bodyShape,\n          skinColor = _this$props2.skinColor,\n          eyeColor = _this$props2.eyeColor,\n          hairColor = _this$props2.hairColor,\n          emote = _this$props2.emote,\n          selectedBaseWearables = _this$props2.selectedBaseWearables,\n          visibleItems = _this$props2.visibleItems;\n      var _this$state = this.state,\n          isShowingAvatarAttributes = _this$state.isShowingAvatarAttributes,\n          isLoading = _this$state.isLoading;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"CenterPanel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(WearablePreview, {\n        profile: \"default\",\n        bodyShape: bodyShape,\n        emote: emote,\n        skin: toHex(skinColor),\n        eyes: toHex(eyeColor),\n        hair: toHex(hairColor),\n        autoRotateSpeed: 0,\n        urns: selectedBaseWearables ? Object.values(selectedBaseWearables).map(function (wearable) {\n          return wearable ? wearable.id : null;\n        }).filter(function (urn) {\n          return urn !== null;\n        }) : [],\n        hotreload: true,\n        base64s: visibleItems.map(toBase64),\n        transparentBackground: true,\n        wheelZoom: 1.5,\n        wheelStart: 100,\n        onUpdate: function onUpdate() {\n          return _this2.setState({\n            isLoading: true\n          });\n        },\n        onLoad: function onLoad() {\n          return _this2.setState({\n            isLoading: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }), isLoading && /*#__PURE__*/React.createElement(Center, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"option \".concat(isShowingAvatarAttributes ? 'active' : ''),\n        onClick: this.handleToggleShowingAvatarAttributes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Popup, {\n        content: t('item_editor.center_panel.disabled_animation_dropdown'),\n        disabled: true,\n        position: \"top center\",\n        trigger: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"avatar-animation-dropdown-wrapper option\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          className: \"avatar-animation\",\n          value: emote,\n          options: PreviewEmote.schema.enum.map(function (value) {\n            return {\n              value: value,\n              text: t(\"emotes.\".concat(value))\n            };\n          }),\n          onChange: this.handleAnimationChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"avatar-attributes \".concat(isShowingAvatarAttributes ? 'active' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, Object.assign({\n        inline: true,\n        direction: \"right\",\n        className: \"Select\",\n        onChange: this.handleBodyShapeChange\n      }, this.getDropdownAttributes(bodyShape, [{\n        value: WearableBodyShape.MALE,\n        text: t('body_shapes.male')\n      }, {\n        value: WearableBodyShape.FEMALE,\n        text: t('body_shapes.female')\n      }], t('wearable.category.body_shape')), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AvatarColorDropdown, {\n        currentColor: skinColor,\n        colors: getSkinColors(),\n        label: t('wearable.color.skin'),\n        onChange: this.handleSkinColorChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AvatarColorDropdown, {\n        currentColor: eyeColor,\n        colors: getEyeColors(),\n        label: t('wearable.color.eye'),\n        onChange: this.handleEyeColorChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AvatarColorDropdown, {\n        currentColor: hairColor,\n        colors: getHairColors(),\n        label: t('wearable.color.hair'),\n        onChange: this.handleHairColorChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, selectedBaseWearables && /*#__PURE__*/React.createElement(AvatarWearableDropdown, {\n        wearable: selectedBaseWearables[WearableCategory.HAIR],\n        category: WearableCategory.HAIR,\n        bodyShape: bodyShape,\n        label: t('wearable.category.hair'),\n        onChange: this.handleWearableChange,\n        isNullable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, selectedBaseWearables && /*#__PURE__*/React.createElement(AvatarWearableDropdown, {\n        wearable: selectedBaseWearables[WearableCategory.FACIAL_HAIR],\n        category: WearableCategory.FACIAL_HAIR,\n        bodyShape: bodyShape,\n        label: t('wearable.category.facial_hair'),\n        onChange: this.handleWearableChange,\n        isNullable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, selectedBaseWearables && /*#__PURE__*/React.createElement(AvatarWearableDropdown, {\n        wearable: selectedBaseWearables[WearableCategory.UPPER_BODY],\n        category: WearableCategory.UPPER_BODY,\n        bodyShape: bodyShape,\n        label: t('wearable.category.upper_body'),\n        onChange: this.handleWearableChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, selectedBaseWearables && /*#__PURE__*/React.createElement(AvatarWearableDropdown, {\n        wearable: selectedBaseWearables[WearableCategory.LOWER_BODY],\n        category: WearableCategory.LOWER_BODY,\n        bodyShape: bodyShape,\n        label: t('wearable.category.lower_body'),\n        onChange: this.handleWearableChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return CenterPanel;\n}(React.PureComponent);\n\nexport { CenterPanel as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ItemEditorPage/CenterPanel/CenterPanel.tsx"],"names":["React","PreviewEmote","WearableBodyShape","WearableCategory","Dropdown","Popup","Icon","Loader","Center","WearablePreview","t","getSkinColors","getEyeColors","getHairColors","AvatarColorDropdown","AvatarWearableDropdown","toBase64","toHex","CenterPanel","state","isShowingAvatarAttributes","isLoading","handleToggleShowingAvatarAttributes","setState","handleBodyShapeChange","_event","value","onSetBodyShape","props","handleAnimationChange","onSetAvatarAnimation","handleSkinColorChange","color","onSetSkinColor","handleEyeColorChange","onSetEyeColor","handleHairColorChange","onSetHairColor","handleWearableChange","category","bodyShape","wearable","onSetBaseWearable","bodyShapeBaseWearables","selectedBaseWearables","onFetchBaseWearables","label","options","selected","find","option","trigger","renderSelectTrigger","text","skinColor","eyeColor","hairColor","emote","visibleItems","Object","values","map","id","filter","urn","schema","enum","getDropdownAttributes","MALE","FEMALE","HAIR","FACIAL_HAIR","UPPER_BODY","LOWER_BODY","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Color4, Wearable } from 'decentraland-ecs'\nimport { PreviewEmote, WearableBodyShape, WearableCategory } from '@dcl/schemas'\nimport { Dropdown, DropdownProps, Popup, Icon, Loader, Center } from 'decentraland-ui'\nimport { WearablePreview } from 'decentraland-ui/dist/components/WearablePreview/WearablePreview'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { getSkinColors, getEyeColors, getHairColors } from 'modules/editor/avatar'\nimport AvatarColorDropdown from './AvatarColorDropdown'\nimport AvatarWearableDropdown from './AvatarWearableDropdown'\nimport { Props, State } from './CenterPanel.types'\nimport './CenterPanel.css'\nimport { toBase64, toHex } from 'modules/editor/utils'\n\nexport default class CenterPanel extends React.PureComponent<Props, State> {\n  state = {\n    isShowingAvatarAttributes: false,\n    isLoading: false\n  }\n\n  componentDidMount() {\n    const { selectedBaseWearables: bodyShapeBaseWearables, onFetchBaseWearables } = this.props\n    if (!bodyShapeBaseWearables) {\n      onFetchBaseWearables()\n    }\n\n    // Setting the editor as loading as soon as it mounts. It will be turned of by the WearablePreview component once it's ready.\n    this.setState({ isLoading: true })\n  }\n\n  handleToggleShowingAvatarAttributes = () => {\n    this.setState({ isShowingAvatarAttributes: !this.state.isShowingAvatarAttributes })\n  }\n\n  handleBodyShapeChange = (_event: React.SyntheticEvent<HTMLElement, Event>, { value }: DropdownProps) => {\n    const { onSetBodyShape } = this.props\n    onSetBodyShape(value as WearableBodyShape)\n  }\n\n  handleAnimationChange = (_event: React.SyntheticEvent<HTMLElement, Event>, { value }: DropdownProps) => {\n    const { onSetAvatarAnimation } = this.props\n    onSetAvatarAnimation(value as PreviewEmote)\n  }\n\n  handleSkinColorChange = (color: Color4) => {\n    const { onSetSkinColor } = this.props\n    onSetSkinColor(color)\n  }\n\n  handleEyeColorChange = (color: Color4) => {\n    const { onSetEyeColor } = this.props\n    onSetEyeColor(color)\n  }\n\n  handleHairColorChange = (color: Color4) => {\n    const { onSetHairColor } = this.props\n    onSetHairColor(color)\n  }\n\n  handleWearableChange = (category: WearableCategory, bodyShape: WearableBodyShape, wearable: Wearable | null) => {\n    const { onSetBaseWearable } = this.props\n    onSetBaseWearable(category, bodyShape, wearable)\n  }\n\n  renderSelectTrigger(label: string, value: string) {\n    return (\n      <>\n        <div className=\"label\">{label}</div>\n        <div className=\"value\">{value}</div>\n        <div className=\"handle\" />\n      </>\n    )\n  }\n\n  getDropdownAttributes<T>(value: T, options: any[], label: string) {\n    const selected = options.find(option => option.value === value)\n\n    return {\n      value,\n      options,\n      trigger: this.renderSelectTrigger(label, selected ? selected.text : '')\n    }\n  }\n\n  render() {\n    const { bodyShape, skinColor, eyeColor, hairColor, emote, selectedBaseWearables, visibleItems } = this.props\n    const { isShowingAvatarAttributes, isLoading } = this.state\n\n    return (\n      <div className=\"CenterPanel\">\n        <WearablePreview\n          profile=\"default\"\n          bodyShape={bodyShape}\n          emote={emote}\n          skin={toHex(skinColor)}\n          eyes={toHex(eyeColor)}\n          hair={toHex(hairColor)}\n          autoRotateSpeed={0}\n          urns={\n            selectedBaseWearables\n              ? (Object.values(selectedBaseWearables)\n                  .map(wearable => (wearable ? wearable.id : null))\n                  .filter(urn => urn !== null) as string[])\n              : []\n          }\n          hotreload\n          base64s={visibleItems.map(toBase64)}\n          transparentBackground\n          wheelZoom={1.5}\n          wheelStart={100}\n          onUpdate={() => this.setState({ isLoading: true })}\n          onLoad={() => this.setState({ isLoading: false })}\n        />\n        {isLoading && (\n          <Center>\n            <Loader active />\n          </Center>\n        )}\n        <div className=\"footer\">\n          <div className=\"options\">\n            <div className={`option ${isShowingAvatarAttributes ? 'active' : ''}`} onClick={this.handleToggleShowingAvatarAttributes}>\n              <Icon name=\"user\" />\n            </div>\n            <Popup\n              content={t('item_editor.center_panel.disabled_animation_dropdown')}\n              disabled\n              position=\"top center\"\n              trigger={\n                <div className=\"avatar-animation-dropdown-wrapper option\">\n                  <Dropdown\n                    className=\"avatar-animation\"\n                    value={emote}\n                    options={PreviewEmote.schema.enum.map((value: PreviewEmote) => ({ value, text: t(`emotes.${value}`) }))}\n                    onChange={this.handleAnimationChange}\n                  />\n                </div>\n              }\n            />\n          </div>\n          <div className={`avatar-attributes ${isShowingAvatarAttributes ? 'active' : ''}`}>\n            <div className=\"dropdown-container\">\n              <Dropdown\n                inline\n                direction=\"right\"\n                className=\"Select\"\n                onChange={this.handleBodyShapeChange}\n                {...this.getDropdownAttributes(\n                  bodyShape,\n                  [\n                    { value: WearableBodyShape.MALE, text: t('body_shapes.male') },\n                    { value: WearableBodyShape.FEMALE, text: t('body_shapes.female') }\n                  ],\n                  t('wearable.category.body_shape')\n                )}\n              />\n            </div>\n\n            <div className=\"dropdown-container\">\n              <AvatarColorDropdown\n                currentColor={skinColor}\n                colors={getSkinColors()}\n                label={t('wearable.color.skin')}\n                onChange={this.handleSkinColorChange}\n              />\n            </div>\n            <div className=\"dropdown-container\">\n              <AvatarColorDropdown\n                currentColor={eyeColor}\n                colors={getEyeColors()}\n                label={t('wearable.color.eye')}\n                onChange={this.handleEyeColorChange}\n              />\n            </div>\n            <div className=\"dropdown-container\">\n              <AvatarColorDropdown\n                currentColor={hairColor}\n                colors={getHairColors()}\n                label={t('wearable.color.hair')}\n                onChange={this.handleHairColorChange}\n              />\n            </div>\n            <div className=\"dropdown-container\">\n              {selectedBaseWearables && (\n                <AvatarWearableDropdown\n                  wearable={selectedBaseWearables[WearableCategory.HAIR]}\n                  category={WearableCategory.HAIR}\n                  bodyShape={bodyShape}\n                  label={t('wearable.category.hair')}\n                  onChange={this.handleWearableChange}\n                  isNullable\n                />\n              )}\n            </div>\n            <div className=\"dropdown-container\">\n              {selectedBaseWearables && (\n                <AvatarWearableDropdown\n                  wearable={selectedBaseWearables[WearableCategory.FACIAL_HAIR]}\n                  category={WearableCategory.FACIAL_HAIR}\n                  bodyShape={bodyShape}\n                  label={t('wearable.category.facial_hair')}\n                  onChange={this.handleWearableChange}\n                  isNullable\n                />\n              )}\n            </div>\n            <div className=\"dropdown-container\">\n              {selectedBaseWearables && (\n                <AvatarWearableDropdown\n                  wearable={selectedBaseWearables[WearableCategory.UPPER_BODY]}\n                  category={WearableCategory.UPPER_BODY}\n                  bodyShape={bodyShape}\n                  label={t('wearable.category.upper_body')}\n                  onChange={this.handleWearableChange}\n                />\n              )}\n            </div>\n            <div className=\"dropdown-container\">\n              {selectedBaseWearables && (\n                <AvatarWearableDropdown\n                  wearable={selectedBaseWearables[WearableCategory.LOWER_BODY]}\n                  category={WearableCategory.LOWER_BODY}\n                  bodyShape={bodyShape}\n                  label={t('wearable.category.lower_body')}\n                  onChange={this.handleWearableChange}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}