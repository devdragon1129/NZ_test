{"ast":null,"code":"import { connect } from 'react-redux';\nimport { openModal } from 'modules/modal/actions';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { getItemCurations, getLoading as getLoadingItemCurations } from 'modules/curations/itemCuration/selectors';\nimport { FETCH_ITEM_CURATIONS_REQUEST } from 'modules/curations/itemCuration/actions';\nimport { getStatusForItemIds } from 'modules/item/selectors';\nimport CollectionPublishButton from './CollectionPublishButton';\n\nvar mapState = function mapState(state, ownProps) {\n  var collection = ownProps.collection,\n      items = ownProps.items;\n  return {\n    itemCurations: getItemCurations(state, collection.id),\n    isLoadingItemCurations: isLoadingType(getLoadingItemCurations(state), FETCH_ITEM_CURATIONS_REQUEST),\n    itemsStatus: getStatusForItemIds(state, items.map(function (i) {\n      return i.id;\n    }))\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onClick: function onClick(collectionId, itemIds, action) {\n      return dispatch(openModal('PublishThirdPartyCollectionModal', {\n        collectionId: collectionId,\n        itemIds: itemIds,\n        action: action\n      }));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CollectionPublishButton);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ThirdPartyCollectionDetailPage/CollectionPublishButton/CollectionPublishButton.container.ts"],"names":["connect","openModal","isLoadingType","getItemCurations","getLoading","getLoadingItemCurations","FETCH_ITEM_CURATIONS_REQUEST","getStatusForItemIds","CollectionPublishButton","mapState","state","ownProps","collection","items","itemCurations","id","isLoadingItemCurations","itemsStatus","map","i","mapDispatch","dispatch","onClick","collectionId","itemIds","action"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,aAAT,QAA8B,mDAA9B;AACA,SAASC,gBAAT,EAA2BC,UAAU,IAAIC,uBAAzC,QAAwE,0CAAxE;AACA,SAASC,4BAAT,QAA6C,wCAA7C;AACA,SAASC,mBAAT,QAAoC,wBAApC;AAEA,OAAOC,uBAAP,MAAoC,2BAApC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB,EAAyD;AAAA,MAChEC,UADgE,GAC1CD,QAD0C,CAChEC,UADgE;AAAA,MACpDC,KADoD,GAC1CF,QAD0C,CACpDE,KADoD;AAExE,SAAO;AACLC,IAAAA,aAAa,EAAEX,gBAAgB,CAACO,KAAD,EAAQE,UAAU,CAACG,EAAnB,CAD1B;AAELC,IAAAA,sBAAsB,EAAEd,aAAa,CAACG,uBAAuB,CAACK,KAAD,CAAxB,EAAiCJ,4BAAjC,CAFhC;AAGLW,IAAAA,WAAW,EAAEV,mBAAmB,CAC9BG,KAD8B,EAE9BG,KAAK,CAACK,GAAN,CAAU,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACJ,EAAN;AAAA,KAAX,CAF8B;AAH3B,GAAP;AAQD,CAVD;;AAYA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,OAAO,EAAE,iBAACC,YAAD,EAAuBC,OAAvB,EAA0CC,MAA1C;AAAA,aACPJ,QAAQ,CAACpB,SAAS,CAAC,kCAAD,EAAqC;AAAEsB,QAAAA,YAAY,EAAZA,YAAF;AAAgBC,QAAAA,OAAO,EAAPA,OAAhB;AAAyBC,QAAAA,MAAM,EAANA;AAAzB,OAArC,CAAV,CADD;AAAA;AADuD,GAA9C;AAAA,CAApB;;AAKA,eAAezB,OAAO,CAACS,QAAD,EAAWW,WAAX,CAAP,CAA+BZ,uBAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { RootState } from 'modules/common/types'\nimport { openModal } from 'modules/modal/actions'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { getItemCurations, getLoading as getLoadingItemCurations } from 'modules/curations/itemCuration/selectors'\nimport { FETCH_ITEM_CURATIONS_REQUEST } from 'modules/curations/itemCuration/actions'\nimport { getStatusForItemIds } from 'modules/item/selectors'\nimport { MapStateProps, MapDispatchProps, MapDispatch, OwnProps, PublishButtonAction } from './CollectionPublishButton.types'\nimport CollectionPublishButton from './CollectionPublishButton'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapStateProps => {\n  const { collection, items } = ownProps\n  return {\n    itemCurations: getItemCurations(state, collection.id),\n    isLoadingItemCurations: isLoadingType(getLoadingItemCurations(state), FETCH_ITEM_CURATIONS_REQUEST),\n    itemsStatus: getStatusForItemIds(\n      state,\n      items.map(i => i.id)\n    )\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onClick: (collectionId: string, itemIds: string[], action: PublishButtonAction) =>\n    dispatch(openModal('PublishThirdPartyCollectionModal', { collectionId, itemIds, action }))\n})\n\nexport default connect(mapState, mapDispatch)(CollectionPublishButton)\n"]},"metadata":{},"sourceType":"module"}