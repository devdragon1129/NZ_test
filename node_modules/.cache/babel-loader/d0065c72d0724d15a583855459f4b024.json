{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { isLoggedIn } from 'modules/identity/selectors';\nimport { locations } from 'routing/locations';\nimport Navbar from './Navbar';\n\nvar mapState = function mapState(state) {\n  return {\n    isConnected: isLoggedIn(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSignIn: function onSignIn() {\n      return dispatch(push(locations.signIn()));\n    }\n  };\n};\n\nvar mergeProps = function mergeProps(mapStateProps, mapDispatchProps, ownProps) {\n  return _objectSpread({}, mapStateProps, mapDispatchProps, ownProps);\n};\n\nexport default connect(mapState, mapDispatch, mergeProps)(Navbar);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Navbar/Navbar.container.ts"],"names":["connect","push","isLoggedIn","locations","Navbar","mapState","state","isConnected","mapDispatch","dispatch","onSignIn","signIn","mergeProps","mapStateProps","mapDispatchProps","ownProps"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AAEA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,WAAW,EAAEL,UAAU,CAACI,KAAD;AAD8B,GAAtC;AAAA,CAAjB;;AAIA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,QAAQ,EAAE;AAAA,aAAMD,QAAQ,CAACR,IAAI,CAACE,SAAS,CAACQ,MAAV,EAAD,CAAL,CAAd;AAAA;AADsD,GAA9C;AAAA,CAApB;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,aAAD,EAA+BC,gBAA/B,EAAmEC,QAAnE;AAAA,2BACdF,aADc,EAEdC,gBAFc,EAGdC,QAHc;AAAA,CAAnB;;AAMA,eAAef,OAAO,CAACK,QAAD,EAAWG,WAAX,EAAwBI,UAAxB,CAAP,CAA2CR,MAA3C,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { isLoggedIn } from 'modules/identity/selectors'\nimport { RootState } from 'modules/common/types'\nimport { locations } from 'routing/locations'\nimport { MapStateProps, MapDispatchProps, MapDispatch, OwnProps } from './Navbar.types'\nimport Navbar from './Navbar'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  isConnected: isLoggedIn(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSignIn: () => dispatch(push(locations.signIn()))\n})\n\nconst mergeProps = (mapStateProps: MapStateProps, mapDispatchProps: MapDispatchProps, ownProps: OwnProps) => ({\n  ...mapStateProps,\n  ...mapDispatchProps,\n  ...ownProps\n})\n\nexport default connect(mapState, mapDispatch, mergeProps)(Navbar)\n"]},"metadata":{},"sourceType":"module"}