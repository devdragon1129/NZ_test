{"ast":null,"code":"import _objectWithoutProperties from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/CreateSingleItemModal/CreateSingleItemModal.tsx\";\nimport * as React from 'react';\nimport { basename } from 'path';\nimport uuid from 'uuid';\nimport JSZip from 'jszip';\nimport { WearableBodyShape, WearableCategory } from '@dcl/schemas';\nimport { ModalNavigation, Row, Column, Button, Form, Field, Section, Header, SelectField } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport { cleanAssetName } from 'modules/asset/utils';\nimport { blobToDataURL, getImageType, dataURLToBlob, convertImageIntoWearableThumbnail } from 'modules/media/utils';\nimport { ImageType } from 'modules/media/types';\nimport { ITEM_EXTENSIONS, THUMBNAIL_PATH, BodyShapeType, ItemRarity, ITEM_NAME_MAX_LENGTH, MODEL_EXTENSIONS, IMAGE_EXTENSIONS, ItemType } from 'modules/item/types';\nimport { EngineType, getModelData } from 'lib/getModelData';\nimport { computeHashes } from 'modules/deployment/contentUtils';\nimport ItemDropdown from 'components/ItemDropdown';\nimport Icon from 'components/Icon';\nimport { getExtension } from 'lib/file';\nimport { buildThirdPartyURN, decodeURN, isThirdParty, URNType } from 'lib/urn';\nimport { getBodyShapeType, getMissingBodyShapeType, getRarities, getWearableCategories, getBackgroundStyle, isModelPath, isImageFile, MAX_FILE_SIZE, resizeImage, isImageCategory, getMaxSupplyForRarity, getEmoteCategories } from 'modules/item/utils';\nimport ItemImport from 'components/ItemImport';\nimport { ASSET_MANIFEST } from 'components/AssetImporter/utils';\nimport { FileTooBigError, WrongExtensionError, InvalidFilesError, MissingModelFileError } from 'modules/item/errors';\nimport { getThumbnailType, validateEnum, validatePath } from './utils';\nimport { CreateItemView } from './CreateSingleItemModal.types';\nimport './CreateSingleItemModal.css';\n\nvar CreateSingleItemModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CreateSingleItemModal, _React$PureComponent);\n\n  function CreateSingleItemModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateSingleItemModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateSingleItemModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _this.getInitialState();\n    _this.thumbnailInput = React.createRef();\n\n    _this.sortContent = function (bodyShape, contents) {\n      var male = bodyShape === BodyShapeType.BOTH || bodyShape === BodyShapeType.MALE ? _this.prefixContents(BodyShapeType.MALE, contents) : {};\n      var female = bodyShape === BodyShapeType.BOTH || bodyShape === BodyShapeType.FEMALE ? _this.prefixContents(BodyShapeType.FEMALE, contents) : {};\n\n      var all = _objectSpread(_defineProperty({}, THUMBNAIL_PATH, contents[THUMBNAIL_PATH]), male, female);\n\n      return {\n        male: male,\n        female: female,\n        all: all\n      };\n    };\n\n    _this.handleSubmit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$props, address, metadata, collection, onSave, id, changeItemFile, addRepresentation, pristineItem, _ref2, name, description, model, thumbnail, bodyShape, contents, type, metrics, collectionId, isRepresentation, editedItem, category, rarity, item, belongsToAThirdPartyCollection, blob, hasCustomThumbnail, sortedContents, hashedContents, wearableBodyShape, representationIndex, pristineBodyShape, representations, decodedCollectionUrn, urn;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, address = _this$props.address, metadata = _this$props.metadata, collection = _this$props.collection, onSave = _this$props.onSave;\n              id = _this.state.id;\n              changeItemFile = false;\n              addRepresentation = false;\n              pristineItem = null;\n\n              if (metadata) {\n                changeItemFile = metadata.changeItemFile;\n                addRepresentation = metadata.addRepresentation;\n                pristineItem = metadata.item;\n              }\n\n              if (!(id && _this.isValid())) {\n                _context.next = 61;\n                break;\n              }\n\n              _ref2 = _this.state, name = _ref2.name, description = _ref2.description, model = _ref2.model, thumbnail = _ref2.thumbnail, bodyShape = _ref2.bodyShape, contents = _ref2.contents, type = _ref2.type, metrics = _ref2.metrics, collectionId = _ref2.collectionId, isRepresentation = _ref2.isRepresentation, editedItem = _ref2.item, category = _ref2.category, rarity = _ref2.rarity;\n              belongsToAThirdPartyCollection = (collection === null || collection === void 0 ? void 0 : collection.urn) && isThirdParty(collection === null || collection === void 0 ? void 0 : collection.urn);\n              blob = dataURLToBlob(thumbnail);\n              hasCustomThumbnail = THUMBNAIL_PATH in contents;\n\n              if (blob && !hasCustomThumbnail) {\n                contents[THUMBNAIL_PATH] = blob;\n              }\n\n              sortedContents = _this.sortContent(bodyShape, contents); // Add this item as a representation of an existing item\n\n              if (!((isRepresentation || addRepresentation) && editedItem)) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.next = 16;\n              return computeHashes(bodyShape === BodyShapeType.MALE ? sortedContents.male : sortedContents.female);\n\n            case 16:\n              hashedContents = _context.sent;\n              item = _objectSpread({}, editedItem, {\n                data: _objectSpread({}, editedItem.data, {\n                  representations: [].concat(_toConsumableArray(editedItem.data.representations), _toConsumableArray(_this.buildRepresentations(bodyShape, model, sortedContents))),\n                  replaces: _toConsumableArray(editedItem.data.replaces),\n                  hides: _toConsumableArray(editedItem.data.hides),\n                  tags: _toConsumableArray(editedItem.data.tags)\n                }),\n                contents: _objectSpread({}, editedItem.contents, hashedContents),\n                updatedAt: +new Date()\n              }); // Do not change the thumbnail when adding a new representation\n\n              delete sortedContents.all[THUMBNAIL_PATH];\n              _context.next = 60;\n              break;\n\n            case 21:\n              if (!(pristineItem && changeItemFile)) {\n                _context.next = 41;\n                break;\n              }\n\n              _context.t0 = _objectSpread;\n              _context.t1 = {};\n              _context.t2 = pristineItem;\n              _context.t3 = _objectSpread({}, pristineItem.data, {\n                replaces: [],\n                hides: [],\n                category: category\n              });\n              _context.t4 = name;\n              _context.t5 = metrics;\n              _context.next = 30;\n              return computeHashes(sortedContents.all);\n\n            case 30:\n              _context.t6 = _context.sent;\n              _context.t7 = +new Date();\n              _context.t8 = {\n                data: _context.t3,\n                name: _context.t4,\n                metrics: _context.t5,\n                contents: _context.t6,\n                updatedAt: _context.t7\n              };\n              item = (0, _context.t0)(_context.t1, _context.t2, _context.t8);\n              wearableBodyShape = bodyShape === BodyShapeType.MALE ? WearableBodyShape.MALE : WearableBodyShape.FEMALE;\n              representationIndex = pristineItem.data.representations.findIndex(function (representation) {\n                return representation.bodyShapes[0] === wearableBodyShape;\n              });\n              pristineBodyShape = getBodyShapeType(pristineItem);\n              representations = _this.buildRepresentations(bodyShape, model, sortedContents);\n\n              if (representations.length === 2 || representationIndex === -1 || pristineBodyShape === BodyShapeType.BOTH) {\n                // Unisex or Representation changed\n                item.data.representations = representations;\n              } else {\n                // Edited representation\n                item.data.representations[representationIndex] = representations[0];\n              }\n\n              _context.next = 60;\n              break;\n\n            case 41:\n              // If it's a third party item, we need to automatically create an URN for it by generating a random uuid different from the id\n              decodedCollectionUrn = collection !== null && collection !== void 0 && collection.urn ? decodeURN(collection.urn) : null;\n\n              if (decodedCollectionUrn && decodedCollectionUrn.type === URNType.COLLECTIONS_THIRDPARTY && decodedCollectionUrn.thirdPartyCollectionId) {\n                urn = buildThirdPartyURN(decodedCollectionUrn.thirdPartyName, decodedCollectionUrn.thirdPartyCollectionId, uuid.v4());\n              } // create item to save\n\n\n              _context.t9 = id;\n              _context.t10 = name;\n              _context.t11 = urn;\n              _context.t12 = description || '';\n              _context.t13 = THUMBNAIL_PATH;\n              _context.t14 = type;\n              _context.t15 = collectionId;\n              _context.t16 = belongsToAThirdPartyCollection ? ItemRarity.UNIQUE : rarity;\n              _context.t17 = {\n                category: category,\n                replaces: [],\n                hides: [],\n                tags: [],\n                representations: _toConsumableArray(_this.buildRepresentations(bodyShape, model, sortedContents))\n              };\n              _context.t18 = address;\n              _context.t19 = metrics;\n              _context.next = 56;\n              return computeHashes(sortedContents.all);\n\n            case 56:\n              _context.t20 = _context.sent;\n              _context.t21 = +new Date();\n              _context.t22 = +new Date();\n              item = {\n                id: _context.t9,\n                name: _context.t10,\n                urn: _context.t11,\n                description: _context.t12,\n                thumbnail: _context.t13,\n                type: _context.t14,\n                collectionId: _context.t15,\n                totalSupply: 0,\n                isPublished: false,\n                isApproved: false,\n                inCatalyst: false,\n                blockchainContentHash: null,\n                currentContentHash: null,\n                catalystContentHash: null,\n                rarity: _context.t16,\n                data: _context.t17,\n                owner: _context.t18,\n                metrics: _context.t19,\n                contents: _context.t20,\n                createdAt: _context.t21,\n                updatedAt: _context.t22\n              };\n\n            case 60:\n              onSave(item, sortedContents.all);\n\n            case 61:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleZippedModelFiles = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(file) {\n        var zip, fileNames, assetJsonPath, assetJson, assetRaw, content, modelPath, files, contents, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return JSZip.loadAsync(file);\n\n              case 2:\n                zip = _context3.sent;\n                fileNames = [];\n                zip.forEach(function (fileName) {\n                  if (!basename(fileName).startsWith('.')) {\n                    fileNames.push(fileName);\n                  }\n                }); // asset.json contains data to populate parts of the state\n\n                assetJsonPath = fileNames.find(function (path) {\n                  return basename(path) === ASSET_MANIFEST;\n                });\n\n                if (!assetJsonPath) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                assetRaw = zip.file(assetJsonPath);\n                _context3.next = 10;\n                return assetRaw.async('text');\n\n              case 10:\n                content = _context3.sent;\n                assetJson = JSON.parse(content);\n\n              case 12:\n                modelPath = fileNames.find(isModelPath);\n                _context3.next = 15;\n                return Promise.all(fileNames.map(function (fileName) {\n                  return zip.file(fileName);\n                }).filter(function (file) {\n                  return !!file;\n                }).map( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file) {\n                    var blob;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return file.async('blob');\n\n                          case 2:\n                            blob = _context2.sent;\n\n                            if (!(blob.size > MAX_FILE_SIZE)) {\n                              _context2.next = 5;\n                              break;\n                            }\n\n                            throw new FileTooBigError();\n\n                          case 5:\n                            return _context2.abrupt(\"return\", {\n                              name: file.name,\n                              blob: blob\n                            });\n\n                          case 6:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x2) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }()));\n\n              case 15:\n                files = _context3.sent;\n                contents = files.reduce(function (contents, file) {\n                  contents[file.name] = file.blob;\n                  return contents;\n                }, {});\n\n                if (modelPath) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                throw new MissingModelFileError();\n\n              case 19:\n                _context3.next = 21;\n                return _this.processModel(modelPath, contents);\n\n              case 21:\n                result = _context3.sent;\n                return _context3.abrupt(\"return\", [].concat(_toConsumableArray(result), [assetJson]));\n\n              case 23:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleModelFile = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(file) {\n        var modelPath, contents;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(file.size > MAX_FILE_SIZE)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw new FileTooBigError();\n\n              case 2:\n                modelPath = file.name;\n                contents = _defineProperty({}, modelPath, file);\n                return _context4.abrupt(\"return\", _this.processModel(modelPath, contents));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDropAccepted = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(acceptedFiles) {\n        var metadata, _this$state, isRepresentation, category, changeItemFile, item, file, extension, handler, _yield$handler, _yield$handler2, thumbnail, model, metrics, contents, type, assetJson;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                metadata = _this.props.metadata;\n                _this$state = _this.state, isRepresentation = _this$state.isRepresentation, category = _this$state.category;\n                changeItemFile = false;\n                item = null;\n\n                if (metadata) {\n                  changeItemFile = metadata.changeItemFile;\n                  item = metadata.item;\n                }\n\n                file = acceptedFiles[0];\n                extension = getExtension(file.name);\n                _context5.prev = 7;\n\n                _this.setState({\n                  isLoading: true\n                });\n\n                if (extension) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                throw new WrongExtensionError();\n\n              case 11:\n                handler = extension === '.zip' ? _this.handleZippedModelFiles : _this.handleModelFile;\n                _context5.next = 14;\n                return handler(file);\n\n              case 14:\n                _yield$handler = _context5.sent;\n                _yield$handler2 = _slicedToArray(_yield$handler, 6);\n                thumbnail = _yield$handler2[0];\n                model = _yield$handler2[1];\n                metrics = _yield$handler2[2];\n                contents = _yield$handler2[3];\n                type = _yield$handler2[4];\n                assetJson = _yield$handler2[5];\n                _context5.t0 = _this;\n                _context5.t1 = _objectSpread;\n                _context5.t2 = {\n                  id: changeItemFile ? item.id : uuid.v4(),\n                  view: CreateItemView.DETAILS,\n                  name: changeItemFile ? item.name : cleanAssetName(file.name),\n                  thumbnail: thumbnail,\n                  model: model,\n                  metrics: metrics,\n                  contents: contents,\n                  type: type,\n                  error: '',\n                  category: isRepresentation ? category : undefined,\n                  isLoading: false\n                };\n                _context5.next = 27;\n                return _this.getAssetJsonProps(assetJson, contents);\n\n              case 27:\n                _context5.t3 = _context5.sent;\n                _context5.t4 = (0, _context5.t1)(_context5.t2, _context5.t3);\n\n                _context5.t0.setState.call(_context5.t0, _context5.t4);\n\n                _context5.next = 35;\n                break;\n\n              case 32:\n                _context5.prev = 32;\n                _context5.t5 = _context5[\"catch\"](7);\n\n                _this.setState({\n                  error: _context5.t5.message,\n                  isLoading: false\n                });\n\n              case 35:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[7, 32]]);\n      }));\n\n      return function (_x4) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDropRejected = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(rejectedFiles) {\n        var error;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                console.warn('rejected', rejectedFiles);\n                error = new InvalidFilesError();\n\n                _this.setState({\n                  error: error.message\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x5) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    _this.handleOpenDocs = function () {\n      return window.open('https://docs.decentraland.org/3d-modeling/3d-models/', '_blank');\n    };\n\n    _this.handleNameChange = function (_event, props) {\n      return _this.setState({\n        name: props.value.slice(0, ITEM_NAME_MAX_LENGTH)\n      });\n    };\n\n    _this.handleItemChange = function (item) {\n      _this.setState({\n        item: item,\n        category: item.data.category,\n        rarity: item.rarity\n      });\n    };\n\n    _this.handleCategoryChange = function (_event, _ref8) {\n      var value = _ref8.value;\n      var category = value;\n\n      if (_this.state.category !== category) {\n        if (_this.state.type === ItemType.WEARABLE) {\n          _this.updateThumbnailByCategory(category);\n        }\n\n        _this.setState({\n          category: category\n        });\n      }\n    };\n\n    _this.handleRarityChange = function (_event, _ref9) {\n      var value = _ref9.value;\n      var rarity = value;\n\n      _this.setState({\n        rarity: rarity\n      });\n    };\n\n    _this.handleOpenThumbnailDialog = function () {\n      if (_this.thumbnailInput.current) {\n        _this.thumbnailInput.current.click();\n      }\n    };\n\n    _this.handleThumbnailChange = /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(event) {\n        var contents, files, file, imageType, resizedFile, thumbnail;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                contents = _this.state.contents;\n                files = event.target.files;\n\n                if (!(files && files.length > 0)) {\n                  _context7.next = 16;\n                  break;\n                }\n\n                file = files[0];\n                _context7.next = 6;\n                return getImageType(file);\n\n              case 6:\n                imageType = _context7.sent;\n\n                if (!(imageType !== ImageType.PNG)) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                _this.setState({\n                  error: t('create_single_item_modal.wrong_thumbnail_format')\n                });\n\n                return _context7.abrupt(\"return\");\n\n              case 10:\n                _this.setState({\n                  error: undefined\n                });\n\n                _context7.next = 13;\n                return resizeImage(file);\n\n              case 13:\n                resizedFile = _context7.sent;\n                thumbnail = URL.createObjectURL(resizedFile);\n\n                _this.setState({\n                  thumbnail: thumbnail,\n                  contents: _objectSpread({}, contents, _defineProperty({}, THUMBNAIL_PATH, file))\n                });\n\n              case 16:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x6) {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n\n    _this.handleYes = function () {\n      return _this.setState({\n        isRepresentation: true\n      });\n    };\n\n    _this.handleNo = function () {\n      return _this.setState({\n        isRepresentation: false\n      });\n    };\n\n    _this.isAddingRepresentation = function () {\n      var metadata = _this.props.metadata;\n      return !!(metadata && metadata.item && !metadata.changeItemFile);\n    };\n\n    _this.filterItemsByBodyShape = function (item) {\n      var bodyShape = _this.state.bodyShape;\n      var metadata = _this.props.metadata;\n      return getMissingBodyShapeType(item) === bodyShape && metadata.collectionId === item.collectionId;\n    };\n\n    _this.renderModalTitle = function () {\n      var isAddingRepresentation = _this.isAddingRepresentation();\n\n      var bodyShape = _this.state.bodyShape;\n      var metadata = _this.props.metadata;\n\n      if (isAddingRepresentation) {\n        return t('create_single_item_modal.add_representation', {\n          bodyShape: t(\"body_shapes.\".concat(bodyShape))\n        });\n      }\n\n      if (metadata && metadata.changeItemFile) {\n        return t('create_single_item_modal.change_item_file');\n      }\n\n      return t('create_single_item_modal.title');\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateSingleItemModal, [{\n    key: \"getInitialState\",\n    value: function getInitialState() {\n      var metadata = this.props.metadata;\n      var state = {\n        view: CreateItemView.IMPORT\n      };\n\n      if (!metadata) {\n        return state;\n      }\n\n      var _ref11 = metadata,\n          collectionId = _ref11.collectionId,\n          item = _ref11.item,\n          addRepresentation = _ref11.addRepresentation;\n      state.collectionId = collectionId;\n\n      if (item) {\n        state.id = item.id;\n        state.name = item.name;\n        state.description = item.description;\n        state.item = item;\n        state.collectionId = item.collectionId;\n        state.bodyShape = getBodyShapeType(item);\n        state.category = item.data.category;\n        state.rarity = item.rarity;\n        state.isRepresentation = false;\n\n        if (addRepresentation) {\n          var missingBodyShape = getMissingBodyShapeType(item);\n\n          if (missingBodyShape) {\n            state.bodyShape = missingBodyShape;\n            state.isRepresentation = true;\n          }\n        }\n      }\n\n      return state;\n    }\n    /**\n     * Prefixes the content name by adding the adding the body shape name to it.\n     *\n     * @param bodyShape - The body shaped used to prefix the content name.\n     * @param contentKey - The content key or name to be prefixed.\n     */\n\n  }, {\n    key: \"prefixContentName\",\n    value: function prefixContentName(bodyShape, contentKey) {\n      return \"\".concat(bodyShape, \"/\").concat(contentKey);\n    }\n    /**\n     * Creates a new contents record with the names of the contents blobs record prefixed.\n     * The names need to be prefixed so they won't collide with other\n     * pre-uploaded models. The name of the content is the name of the uploaded file.\n     *\n     * @param bodyShape - The body shaped used to prefix the content names.\n     * @param contents - The contents which keys are going to be prefixed.\n     */\n\n  }, {\n    key: \"prefixContents\",\n    value: function prefixContents(bodyShape, contents) {\n      var _this2 = this;\n\n      return Object.keys(contents).reduce(function (newContents, key) {\n        // Do not include the thumbnail in each of the body shapes\n        if (key === THUMBNAIL_PATH) {\n          return newContents;\n        }\n\n        newContents[_this2.prefixContentName(bodyShape, key)] = contents[key];\n        return newContents;\n      }, {});\n    }\n    /**\n     * Sorts the content into \"male\", \"female\" and \"all\" taking into consideration the body shape.\n     * All contains the item thumbnail and both male and female representations according to the shape.\n     * If the body representation is male, \"female\" will be an empty object and viceversa.\n     *\n     * @param bodyShape - The body shaped used to sort the content.\n     * @param contents - The contents to be sorted.\n     */\n\n  }, {\n    key: \"getAssetJsonProps\",\n    value: function () {\n      var _getAssetJsonProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var assetJson,\n            contents,\n            thumbnail,\n            props,\n            _args8 = arguments;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                assetJson = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {};\n                contents = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n                thumbnail = assetJson.thumbnail, props = _objectWithoutProperties(assetJson, [\"thumbnail\"]); // sanizite\n\n                validatePath('thumbnail', assetJson, contents);\n                validatePath('model', assetJson, contents);\n                validateEnum('rarity', assetJson, Object.values(ItemRarity));\n                validateEnum('category', assetJson, Object.values(WearableCategory));\n                validateEnum('bodyShape', assetJson, Object.values(BodyShapeType));\n\n                if (!(thumbnail && thumbnail in contents)) {\n                  _context8.next = 17;\n                  break;\n                }\n\n                _context8.t0 = _objectSpread;\n                _context8.t1 = {};\n                _context8.t2 = props;\n                _context8.next = 14;\n                return blobToDataURL(contents[thumbnail]);\n\n              case 14:\n                _context8.t3 = _context8.sent;\n                _context8.t4 = {\n                  thumbnail: _context8.t3\n                };\n                return _context8.abrupt(\"return\", (0, _context8.t0)(_context8.t1, _context8.t2, _context8.t4));\n\n              case 17:\n                return _context8.abrupt(\"return\", props);\n\n              case 18:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function getAssetJsonProps() {\n        return _getAssetJsonProps.apply(this, arguments);\n      }\n\n      return getAssetJsonProps;\n    }()\n  }, {\n    key: \"processModel\",\n    value: function () {\n      var _processModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(model, contents) {\n        var thumbnail, metrics, type, url, data;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                thumbnail = '';\n                type = ItemType.WEARABLE;\n\n                if (!isImageFile(model)) {\n                  _context9.next = 9;\n                  break;\n                }\n\n                metrics = {\n                  triangles: 100,\n                  materials: 1,\n                  textures: 1,\n                  meshes: 1,\n                  bodies: 1,\n                  entities: 1\n                };\n                _context9.next = 6;\n                return convertImageIntoWearableThumbnail(contents[THUMBNAIL_PATH] || contents[model], this.state.category);\n\n              case 6:\n                thumbnail = _context9.sent;\n                _context9.next = 18;\n                break;\n\n              case 9:\n                url = URL.createObjectURL(contents[model]);\n                _context9.next = 12;\n                return getModelData(url, {\n                  width: 1024,\n                  height: 1024,\n                  extension: getExtension(model) || undefined,\n                  engine: EngineType.BABYLON\n                });\n\n              case 12:\n                data = _context9.sent;\n                URL.revokeObjectURL(url); // for some reason the renderer reports 2x the amount of textures for wearble items\n\n                data.info.textures = Math.round(data.info.textures / 2);\n                thumbnail = data.image;\n                metrics = data.info;\n                type = data.type;\n\n              case 18:\n                return _context9.abrupt(\"return\", [thumbnail, model, metrics, contents, type]);\n\n              case 19:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function processModel(_x7, _x8) {\n        return _processModel.apply(this, arguments);\n      }\n\n      return processModel;\n    }()\n    /**\n     * Updates the item's thumbnail if the user changes the category of the item.\n     *\n     * @param category - The category of the wearable.\n     */\n\n  }, {\n    key: \"updateThumbnailByCategory\",\n    value: function () {\n      var _updateThumbnailByCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(category) {\n        var _this$state2, model, contents, isCustom, thumbnail, url, _yield$getModelData, image;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _this$state2 = this.state, model = _this$state2.model, contents = _this$state2.contents;\n                isCustom = !!contents && THUMBNAIL_PATH in contents;\n\n                if (isCustom) {\n                  _context10.next = 17;\n                  break;\n                }\n\n                if (!(contents && isImageFile(model))) {\n                  _context10.next = 9;\n                  break;\n                }\n\n                _context10.next = 6;\n                return convertImageIntoWearableThumbnail(contents[THUMBNAIL_PATH] || contents[model], category);\n\n              case 6:\n                thumbnail = _context10.sent;\n                _context10.next = 16;\n                break;\n\n              case 9:\n                url = URL.createObjectURL(contents[model]);\n                _context10.next = 12;\n                return getModelData(url, {\n                  width: 1024,\n                  height: 1024,\n                  thumbnailType: getThumbnailType(category),\n                  extension: model && getExtension(model) || undefined,\n                  engine: EngineType.BABYLON\n                });\n\n              case 12:\n                _yield$getModelData = _context10.sent;\n                image = _yield$getModelData.image;\n                thumbnail = image;\n                URL.revokeObjectURL(url);\n\n              case 16:\n                this.setState({\n                  thumbnail: thumbnail\n                });\n\n              case 17:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function updateThumbnailByCategory(_x9) {\n        return _updateThumbnailByCategory.apply(this, arguments);\n      }\n\n      return updateThumbnailByCategory;\n    }()\n  }, {\n    key: \"buildRepresentations\",\n    value: function buildRepresentations(bodyShape, model, contents) {\n      var representations = []; // add male representation\n\n      if (bodyShape === BodyShapeType.MALE || bodyShape === BodyShapeType.BOTH) {\n        representations.push({\n          bodyShapes: [WearableBodyShape.MALE],\n          mainFile: this.prefixContentName(BodyShapeType.MALE, model),\n          contents: Object.keys(contents.male),\n          overrideHides: [],\n          overrideReplaces: []\n        });\n      } // add female representation\n\n\n      if (bodyShape === BodyShapeType.FEMALE || bodyShape === BodyShapeType.BOTH) {\n        representations.push({\n          bodyShapes: [WearableBodyShape.FEMALE],\n          mainFile: this.prefixContentName(BodyShapeType.FEMALE, model),\n          contents: Object.keys(contents.female),\n          overrideHides: [],\n          overrideReplaces: []\n        });\n      }\n\n      return representations;\n    }\n  }, {\n    key: \"renderImportView\",\n    value: function renderImportView() {\n      var _this$props2 = this.props,\n          onClose = _this$props2.onClose,\n          metadata = _this$props2.metadata;\n      var _ref12 = metadata,\n          changeItemFile = _ref12.changeItemFile;\n      var _this$state3 = this.state,\n          isRepresentation = _this$state3.isRepresentation,\n          category = _this$state3.category,\n          error = _this$state3.error;\n      var title = this.renderModalTitle();\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: title,\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ItemImport, {\n        error: error,\n        acceptedExtensions: isRepresentation || changeItemFile ? isImageCategory(category) ? IMAGE_EXTENSIONS : MODEL_EXTENSIONS : ITEM_EXTENSIONS,\n        onDropAccepted: this.handleDropAccepted,\n        onDropRejected: this.handleDropRejected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"renderFields\",\n    value: function renderFields() {\n      var collection = this.props.collection;\n      var _this$state4 = this.state,\n          name = _this$state4.name,\n          category = _this$state4.category,\n          rarity = _this$state4.rarity,\n          contents = _this$state4.contents,\n          item = _this$state4.item,\n          type = _this$state4.type;\n      var belongsToAThirdPartyCollection = (collection === null || collection === void 0 ? void 0 : collection.urn) && isThirdParty(collection.urn);\n      var rarities = getRarities();\n      var categories = type === ItemType.WEARABLE ? getWearableCategories(contents) : getEmoteCategories();\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Field, {\n        className: \"name\",\n        label: t('create_single_item_modal.name_label'),\n        value: name,\n        onChange: this.handleNameChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 9\n        }\n      }), (!item || !item.isPublished) && !belongsToAThirdPartyCollection ? /*#__PURE__*/React.createElement(SelectField, {\n        label: t('create_single_item_modal.rarity_label'),\n        placeholder: t('create_single_item_modal.rarity_placeholder'),\n        value: rarity,\n        options: rarities.map(function (value) {\n          return {\n            value: value,\n            label: t(\"wearable.supply\", {\n              count: getMaxSupplyForRarity(value),\n              formatted: getMaxSupplyForRarity(value).toLocaleString()\n            }),\n            text: t(\"wearable.rarity.\".concat(value))\n          };\n        }),\n        onChange: this.handleRarityChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }\n      }) : null, /*#__PURE__*/React.createElement(SelectField, {\n        required: true,\n        label: t('create_single_item_modal.category_label'),\n        placeholder: t('create_single_item_modal.category_placeholder'),\n        value: categories.includes(category) ? category : undefined,\n        options: categories.map(function (value) {\n          return {\n            value: value,\n            text: t(\"\".concat(type, \".category.\").concat(value))\n          };\n        }),\n        onChange: this.handleCategoryChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      var isLoading = this.props.isLoading;\n      return !this.isValid() || isLoading;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      var _this$state5 = this.state,\n          name = _this$state5.name,\n          thumbnail = _this$state5.thumbnail,\n          metrics = _this$state5.metrics,\n          bodyShape = _this$state5.bodyShape,\n          category = _this$state5.category,\n          rarity = _this$state5.rarity,\n          item = _this$state5.item,\n          isRepresentation = _this$state5.isRepresentation,\n          type = _this$state5.type;\n      var collection = this.props.collection;\n      var belongsToAThirdPartyCollection = (collection === null || collection === void 0 ? void 0 : collection.urn) && isThirdParty(collection.urn);\n      var required;\n\n      if (isRepresentation) {\n        required = [item];\n      } else if (belongsToAThirdPartyCollection) {\n        required = [name, thumbnail, metrics, bodyShape, category];\n      } else {\n        required = [name, thumbnail, metrics, bodyShape, category, rarity, type];\n      }\n\n      return required.every(function (prop) {\n        return prop !== undefined;\n      });\n    }\n  }, {\n    key: \"renderDetailsView\",\n    value: function renderDetailsView() {\n      var _this$props3 = this.props,\n          onClose = _this$props3.onClose,\n          metadata = _this$props3.metadata,\n          error = _this$props3.error,\n          isLoading = _this$props3.isLoading;\n      var _this$state6 = this.state,\n          thumbnail = _this$state6.thumbnail,\n          metrics = _this$state6.metrics,\n          bodyShape = _this$state6.bodyShape,\n          isRepresentation = _this$state6.isRepresentation,\n          item = _this$state6.item,\n          rarity = _this$state6.rarity,\n          stateError = _this$state6.error;\n      var isDisabled = this.isDisabled();\n      var isAddingRepresentation = this.isAddingRepresentation();\n      var thumbnailStyle = getBackgroundStyle(rarity);\n      var title = this.renderModalTitle();\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: title,\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        disabled: isDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        className: \"preview\",\n        width: 192,\n        grow: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thumbnail-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"thumbnail\",\n        src: thumbnail || undefined,\n        style: thumbnailStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 21\n        }\n      }), isRepresentation ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Icon, {\n        name: \"camera\",\n        onClick: this.handleOpenThumbnailDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        ref: this.thumbnailInput,\n        onChange: this.handleThumbnailChange,\n        accept: \"image/png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 25\n        }\n      }))), metrics ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"metrics\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"metric triangles\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 23\n        }\n      }, t('model_metrics.triangles', {\n        count: metrics.triangles\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"metric materials\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 23\n        }\n      }, t('model_metrics.materials', {\n        count: metrics.materials\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"metric textures\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 23\n        }\n      }, t('model_metrics.textures', {\n        count: metrics.textures\n      }))) : null), /*#__PURE__*/React.createElement(Column, {\n        className: \"data\",\n        grow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 17\n        }\n      }, isAddingRepresentation ? null : /*#__PURE__*/React.createElement(Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 23\n        }\n      }, t('create_single_item_modal.representation_label')), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 23\n        }\n      }, this.renderRepresentation(BodyShapeType.BOTH), this.renderRepresentation(BodyShapeType.MALE), this.renderRepresentation(BodyShapeType.FEMALE))), bodyShape && (!metadata || !metadata.changeItemFile) ? /*#__PURE__*/React.createElement(React.Fragment, null, bodyShape === BodyShapeType.BOTH ? this.renderFields() : /*#__PURE__*/React.createElement(React.Fragment, null, isAddingRepresentation ? null : /*#__PURE__*/React.createElement(Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 31\n        }\n      }, t('create_single_item_modal.existing_item')), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"option \".concat(isRepresentation === true ? 'active' : ''),\n        onClick: this.handleYes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 33\n        }\n      }, t('global.yes')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"option \".concat(isRepresentation === false ? 'active' : ''),\n        onClick: this.handleNo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 33\n        }\n      }, t('global.no')))), isRepresentation === undefined ? null : isRepresentation ? /*#__PURE__*/React.createElement(Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 31\n        }\n      }, isAddingRepresentation ? t('create_single_item_modal.adding_representation', {\n        bodyShape: t(\"body_shapes.\".concat(bodyShape))\n      }) : t('create_single_item_modal.pick_item', {\n        bodyShape: t(\"body_shapes.\".concat(bodyShape))\n      })), /*#__PURE__*/React.createElement(ItemDropdown, {\n        value: item,\n        filter: this.filterItemsByBodyShape,\n        onChange: this.handleItemChange,\n        isDisabled: isAddingRepresentation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 31\n        }\n      })) : this.renderFields())) : this.renderFields())), /*#__PURE__*/React.createElement(Row, {\n        className: \"actions\",\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        disabled: isDisabled,\n        loading: isLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 17\n        }\n      }, metadata && metadata.changeItemFile || isRepresentation ? t('global.save') : t('global.create'))), stateError ? /*#__PURE__*/React.createElement(Row, {\n        className: \"error\",\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"danger-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 19\n        }\n      }, stateError)) : null, error ? /*#__PURE__*/React.createElement(Row, {\n        className: \"error\",\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"danger-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 19\n        }\n      }, error)) : null))));\n    }\n  }, {\n    key: \"renderRepresentation\",\n    value: function renderRepresentation(type) {\n      var _this3 = this;\n\n      var bodyShape = this.state.bodyShape;\n      var metadata = this.props.metadata;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"option has-icon \".concat(type, \" \").concat(type === bodyShape ? 'active' : '').trim(),\n        onClick: function onClick() {\n          return _this3.setState({\n            bodyShape: type,\n            isRepresentation: metadata && metadata.changeItemFile ? false : undefined,\n            item: undefined\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 7\n        }\n      }, t('body_shapes.' + type));\n    }\n  }, {\n    key: \"renderView\",\n    value: function renderView() {\n      switch (this.state.view) {\n        case CreateItemView.IMPORT:\n          return this.renderImportView();\n\n        case CreateItemView.DETAILS:\n          return this.renderDetailsView();\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          name = _this$props4.name,\n          onClose = _this$props4.onClose;\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: name,\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 7\n        }\n      }, this.renderView());\n    }\n  }]);\n\n  return CreateSingleItemModal;\n}(React.PureComponent);\n\nexport { CreateSingleItemModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CreateSingleItemModal/CreateSingleItemModal.tsx"],"names":["React","basename","uuid","JSZip","WearableBodyShape","WearableCategory","ModalNavigation","Row","Column","Button","Form","Field","Section","Header","SelectField","t","Modal","cleanAssetName","blobToDataURL","getImageType","dataURLToBlob","convertImageIntoWearableThumbnail","ImageType","ITEM_EXTENSIONS","THUMBNAIL_PATH","BodyShapeType","ItemRarity","ITEM_NAME_MAX_LENGTH","MODEL_EXTENSIONS","IMAGE_EXTENSIONS","ItemType","EngineType","getModelData","computeHashes","ItemDropdown","Icon","getExtension","buildThirdPartyURN","decodeURN","isThirdParty","URNType","getBodyShapeType","getMissingBodyShapeType","getRarities","getWearableCategories","getBackgroundStyle","isModelPath","isImageFile","MAX_FILE_SIZE","resizeImage","isImageCategory","getMaxSupplyForRarity","getEmoteCategories","ItemImport","ASSET_MANIFEST","FileTooBigError","WrongExtensionError","InvalidFilesError","MissingModelFileError","getThumbnailType","validateEnum","validatePath","CreateItemView","CreateSingleItemModal","state","getInitialState","thumbnailInput","createRef","sortContent","bodyShape","contents","male","BOTH","MALE","prefixContents","female","FEMALE","all","handleSubmit","props","address","metadata","collection","onSave","id","changeItemFile","addRepresentation","pristineItem","item","isValid","name","description","model","thumbnail","type","metrics","collectionId","isRepresentation","editedItem","category","rarity","belongsToAThirdPartyCollection","urn","blob","hasCustomThumbnail","sortedContents","hashedContents","data","representations","buildRepresentations","replaces","hides","tags","updatedAt","Date","wearableBodyShape","representationIndex","findIndex","representation","bodyShapes","pristineBodyShape","length","decodedCollectionUrn","COLLECTIONS_THIRDPARTY","thirdPartyCollectionId","thirdPartyName","v4","UNIQUE","totalSupply","isPublished","isApproved","inCatalyst","blockchainContentHash","currentContentHash","catalystContentHash","owner","createdAt","handleZippedModelFiles","file","loadAsync","zip","fileNames","forEach","fileName","startsWith","push","assetJsonPath","find","path","assetRaw","async","content","assetJson","JSON","parse","modelPath","Promise","map","filter","size","files","reduce","processModel","result","handleModelFile","handleDropAccepted","acceptedFiles","extension","setState","isLoading","handler","view","DETAILS","error","undefined","getAssetJsonProps","message","handleDropRejected","rejectedFiles","console","warn","handleOpenDocs","window","open","handleNameChange","_event","value","slice","handleItemChange","handleCategoryChange","WEARABLE","updateThumbnailByCategory","handleRarityChange","handleOpenThumbnailDialog","current","click","handleThumbnailChange","event","target","imageType","PNG","resizedFile","URL","createObjectURL","handleYes","handleNo","isAddingRepresentation","filterItemsByBodyShape","renderModalTitle","IMPORT","missingBodyShape","contentKey","Object","keys","newContents","key","prefixContentName","values","triangles","materials","textures","meshes","bodies","entities","url","width","height","engine","BABYLON","revokeObjectURL","info","Math","round","image","isCustom","thumbnailType","mainFile","overrideHides","overrideReplaces","onClose","title","rarities","categories","label","count","formatted","toLocaleString","text","includes","required","every","prop","stateError","isDisabled","thumbnailStyle","renderRepresentation","renderFields","trim","renderImportView","renderDetailsView","renderView","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { basename } from 'path'\nimport uuid from 'uuid'\nimport JSZip from 'jszip'\nimport { WearableBodyShape, WearableCategory } from '@dcl/schemas'\nimport {\n  ModalNavigation,\n  Row,\n  Column,\n  Button,\n  Form,\n  Field,\n  Section,\n  Header,\n  InputOnChangeData,\n  SelectField,\n  DropdownProps\n} from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport { cleanAssetName } from 'modules/asset/utils'\nimport { blobToDataURL, getImageType, dataURLToBlob, convertImageIntoWearableThumbnail } from 'modules/media/utils'\nimport { ImageType } from 'modules/media/types'\nimport {\n  ITEM_EXTENSIONS,\n  THUMBNAIL_PATH,\n  Item,\n  BodyShapeType,\n  ItemRarity,\n  ITEM_NAME_MAX_LENGTH,\n  WearableRepresentation,\n  MODEL_EXTENSIONS,\n  IMAGE_EXTENSIONS,\n  ItemType\n} from 'modules/item/types'\nimport { EngineType, getModelData } from 'lib/getModelData'\nimport { computeHashes } from 'modules/deployment/contentUtils'\nimport ItemDropdown from 'components/ItemDropdown'\nimport Icon from 'components/Icon'\nimport { getExtension } from 'lib/file'\nimport { buildThirdPartyURN, DecodedURN, decodeURN, isThirdParty, URNType } from 'lib/urn'\nimport { ModelMetrics } from 'modules/models/types'\nimport {\n  getBodyShapeType,\n  getMissingBodyShapeType,\n  getRarities,\n  getWearableCategories,\n  getBackgroundStyle,\n  isModelPath,\n  isImageFile,\n  MAX_FILE_SIZE,\n  resizeImage,\n  isImageCategory,\n  getMaxSupplyForRarity,\n  getEmoteCategories\n} from 'modules/item/utils'\nimport ItemImport from 'components/ItemImport'\nimport { ASSET_MANIFEST } from 'components/AssetImporter/utils'\nimport { FileTooBigError, WrongExtensionError, InvalidFilesError, MissingModelFileError } from 'modules/item/errors'\nimport { getThumbnailType, validateEnum, validatePath } from './utils'\nimport {\n  Props,\n  State,\n  CreateItemView,\n  CreateSingleItemModalMetadata,\n  StateData,\n  SortedContent,\n  ItemAssetJson\n} from './CreateSingleItemModal.types'\nimport './CreateSingleItemModal.css'\n\nexport default class CreateSingleItemModal extends React.PureComponent<Props, State> {\n  state: State = this.getInitialState()\n  thumbnailInput = React.createRef<HTMLInputElement>()\n\n  getInitialState() {\n    const { metadata } = this.props\n\n    const state: State = { view: CreateItemView.IMPORT }\n    if (!metadata) {\n      return state\n    }\n\n    const { collectionId, item, addRepresentation } = metadata as CreateSingleItemModalMetadata\n    state.collectionId = collectionId\n\n    if (item) {\n      state.id = item.id\n      state.name = item.name\n      state.description = item.description\n      state.item = item\n      state.collectionId = item.collectionId\n      state.bodyShape = getBodyShapeType(item)\n      state.category = item.data.category\n      state.rarity = item.rarity\n      state.isRepresentation = false\n\n      if (addRepresentation) {\n        const missingBodyShape = getMissingBodyShapeType(item)\n        if (missingBodyShape) {\n          state.bodyShape = missingBodyShape\n          state.isRepresentation = true\n        }\n      }\n    }\n\n    return state\n  }\n\n  /**\n   * Prefixes the content name by adding the adding the body shape name to it.\n   *\n   * @param bodyShape - The body shaped used to prefix the content name.\n   * @param contentKey - The content key or name to be prefixed.\n   */\n  prefixContentName(bodyShape: BodyShapeType, contentKey: string): string {\n    return `${bodyShape}/${contentKey}`\n  }\n\n  /**\n   * Creates a new contents record with the names of the contents blobs record prefixed.\n   * The names need to be prefixed so they won't collide with other\n   * pre-uploaded models. The name of the content is the name of the uploaded file.\n   *\n   * @param bodyShape - The body shaped used to prefix the content names.\n   * @param contents - The contents which keys are going to be prefixed.\n   */\n  prefixContents(bodyShape: BodyShapeType, contents: Record<string, Blob>): Record<string, Blob> {\n    return Object.keys(contents).reduce((newContents: Record<string, Blob>, key: string) => {\n      // Do not include the thumbnail in each of the body shapes\n      if (key === THUMBNAIL_PATH) {\n        return newContents\n      }\n      newContents[this.prefixContentName(bodyShape, key)] = contents[key]\n      return newContents\n    }, {})\n  }\n\n  /**\n   * Sorts the content into \"male\", \"female\" and \"all\" taking into consideration the body shape.\n   * All contains the item thumbnail and both male and female representations according to the shape.\n   * If the body representation is male, \"female\" will be an empty object and viceversa.\n   *\n   * @param bodyShape - The body shaped used to sort the content.\n   * @param contents - The contents to be sorted.\n   */\n  sortContent = (bodyShape: BodyShapeType, contents: Record<string, Blob>): SortedContent => {\n    const male =\n      bodyShape === BodyShapeType.BOTH || bodyShape === BodyShapeType.MALE ? this.prefixContents(BodyShapeType.MALE, contents) : {}\n    const female =\n      bodyShape === BodyShapeType.BOTH || bodyShape === BodyShapeType.FEMALE ? this.prefixContents(BodyShapeType.FEMALE, contents) : {}\n    const all = { [THUMBNAIL_PATH]: contents[THUMBNAIL_PATH], ...male, ...female }\n\n    return { male, female, all }\n  }\n\n  handleSubmit = async () => {\n    const { address, metadata, collection, onSave } = this.props\n    const { id } = this.state\n\n    let changeItemFile = false\n    let addRepresentation = false\n    let pristineItem: Item | null = null\n\n    if (metadata) {\n      changeItemFile = metadata.changeItemFile\n      addRepresentation = metadata.addRepresentation\n      pristineItem = metadata.item\n    }\n\n    if (id && this.isValid()) {\n      const {\n        name,\n        description,\n        model,\n        thumbnail,\n        bodyShape,\n        contents,\n        type,\n        metrics,\n        collectionId,\n        isRepresentation,\n        item: editedItem,\n        category,\n        rarity\n      } = this.state as StateData\n\n      let item: Item\n\n      const belongsToAThirdPartyCollection = collection?.urn && isThirdParty(collection?.urn)\n      const blob = dataURLToBlob(thumbnail)\n      const hasCustomThumbnail = THUMBNAIL_PATH in contents\n      if (blob && !hasCustomThumbnail) {\n        contents[THUMBNAIL_PATH] = blob\n      }\n\n      const sortedContents = this.sortContent(bodyShape, contents)\n\n      // Add this item as a representation of an existing item\n      if ((isRepresentation || addRepresentation) && editedItem) {\n        const hashedContents = await computeHashes(bodyShape === BodyShapeType.MALE ? sortedContents.male : sortedContents.female)\n        item = {\n          ...editedItem,\n          data: {\n            ...editedItem.data,\n            representations: [\n              ...editedItem.data.representations,\n              // add new representation\n              ...this.buildRepresentations(bodyShape, model, sortedContents)\n            ],\n            replaces: [...editedItem.data.replaces],\n            hides: [...editedItem.data.hides],\n            tags: [...editedItem.data.tags]\n          },\n          contents: {\n            ...editedItem.contents,\n            ...hashedContents\n          },\n          updatedAt: +new Date()\n        }\n\n        // Do not change the thumbnail when adding a new representation\n        delete sortedContents.all[THUMBNAIL_PATH]\n      } else if (pristineItem && changeItemFile) {\n        item = {\n          ...(pristineItem as Item),\n          data: {\n            ...pristineItem.data,\n            replaces: [],\n            hides: [],\n            category: category as WearableCategory\n          },\n          name,\n          metrics,\n          contents: await computeHashes(sortedContents.all),\n          updatedAt: +new Date()\n        }\n\n        const wearableBodyShape = bodyShape === BodyShapeType.MALE ? WearableBodyShape.MALE : WearableBodyShape.FEMALE\n        const representationIndex = pristineItem.data.representations.findIndex(\n          (representation: WearableRepresentation) => representation.bodyShapes[0] === wearableBodyShape\n        )\n        const pristineBodyShape = getBodyShapeType(pristineItem)\n        const representations = this.buildRepresentations(bodyShape, model, sortedContents)\n        if (representations.length === 2 || representationIndex === -1 || pristineBodyShape === BodyShapeType.BOTH) {\n          // Unisex or Representation changed\n          item.data.representations = representations\n        } else {\n          // Edited representation\n          item.data.representations[representationIndex] = representations[0]\n        }\n      } else {\n        // If it's a third party item, we need to automatically create an URN for it by generating a random uuid different from the id\n        let decodedCollectionUrn: DecodedURN<any> | null = collection?.urn ? decodeURN(collection.urn) : null\n        let urn: string | undefined\n        if (\n          decodedCollectionUrn &&\n          decodedCollectionUrn.type === URNType.COLLECTIONS_THIRDPARTY &&\n          decodedCollectionUrn.thirdPartyCollectionId\n        ) {\n          urn = buildThirdPartyURN(decodedCollectionUrn.thirdPartyName, decodedCollectionUrn.thirdPartyCollectionId, uuid.v4())\n        }\n\n        // create item to save\n        item = {\n          id,\n          name,\n          urn,\n          description: description || '',\n          thumbnail: THUMBNAIL_PATH,\n          type: type as ItemType.WEARABLE,\n          collectionId,\n          totalSupply: 0,\n          isPublished: false,\n          isApproved: false,\n          inCatalyst: false,\n          blockchainContentHash: null,\n          currentContentHash: null,\n          catalystContentHash: null,\n          rarity: belongsToAThirdPartyCollection ? ItemRarity.UNIQUE : rarity,\n          data: {\n            category: category as WearableCategory,\n            replaces: [],\n            hides: [],\n            tags: [],\n            representations: [...this.buildRepresentations(bodyShape, model, sortedContents)]\n          },\n          owner: address!,\n          metrics,\n          contents: await computeHashes(sortedContents.all),\n          createdAt: +new Date(),\n          updatedAt: +new Date()\n        }\n      }\n\n      onSave(item, sortedContents.all)\n    }\n  }\n\n  /**\n   * Unzip files and processes the model files.\n   * One of the models will be taken into consideration if multiple models are uploaded.\n   *\n   * @param file - The ZIP file.\n   */\n  handleZippedModelFiles = async (file: File) => {\n    const zip: JSZip = await JSZip.loadAsync(file)\n    const fileNames: string[] = []\n\n    zip.forEach(fileName => {\n      if (!basename(fileName).startsWith('.')) {\n        fileNames.push(fileName)\n      }\n    })\n\n    // asset.json contains data to populate parts of the state\n    const assetJsonPath = fileNames.find(path => basename(path) === ASSET_MANIFEST)\n    let assetJson: ItemAssetJson | undefined\n\n    if (assetJsonPath) {\n      const assetRaw = zip.file(assetJsonPath)\n      const content = await assetRaw.async('text')\n      assetJson = JSON.parse(content)\n    }\n\n    const modelPath = fileNames.find(isModelPath)\n\n    const files = await Promise.all(\n      fileNames\n        .map(fileName => zip.file(fileName))\n        .filter(file => !!file)\n        .map(async file => {\n          const blob = await file.async('blob')\n\n          if (blob.size > MAX_FILE_SIZE) {\n            throw new FileTooBigError()\n          }\n\n          return {\n            name: file.name,\n            blob\n          }\n        })\n    )\n\n    const contents = files.reduce<Record<string, Blob>>((contents, file) => {\n      contents[file.name] = file.blob\n      return contents\n    }, {})\n\n    if (!modelPath) {\n      throw new MissingModelFileError()\n    }\n\n    const result = await this.processModel(modelPath, contents)\n\n    return [...result, assetJson] as const\n  }\n\n  /**\n   * Processes a model file.\n   *\n   * @param file - The model file.\n   */\n  handleModelFile = async (file: File) => {\n    if (file.size > MAX_FILE_SIZE) {\n      throw new FileTooBigError()\n    }\n\n    const modelPath = file.name\n    const contents = {\n      [modelPath]: file\n    }\n\n    return this.processModel(modelPath, contents)\n  }\n\n  handleDropAccepted = async (acceptedFiles: File[]) => {\n    const { metadata } = this.props\n    const { isRepresentation, category } = this.state\n\n    let changeItemFile = false\n    let item = null\n\n    if (metadata) {\n      changeItemFile = metadata.changeItemFile\n      item = metadata.item\n    }\n\n    const file = acceptedFiles[0]\n    const extension = getExtension(file.name)\n\n    try {\n      this.setState({ isLoading: true })\n\n      if (!extension) {\n        throw new WrongExtensionError()\n      }\n\n      const handler = extension === '.zip' ? this.handleZippedModelFiles : this.handleModelFile\n      const [thumbnail, model, metrics, contents, type, assetJson] = await handler(file)\n\n      this.setState({\n        id: changeItemFile ? item!.id : uuid.v4(),\n        view: CreateItemView.DETAILS,\n        name: changeItemFile ? item!.name : cleanAssetName(file.name),\n        thumbnail,\n        model,\n        metrics,\n        contents,\n        type,\n        error: '',\n        category: isRepresentation ? category : undefined,\n        isLoading: false,\n        ...(await this.getAssetJsonProps(assetJson, contents))\n      })\n    } catch (error) {\n      this.setState({ error: error.message, isLoading: false })\n    }\n  }\n\n  async getAssetJsonProps(assetJson: ItemAssetJson = {}, contents: Record<string, Blob> = {}): Promise<ItemAssetJson> {\n    const { thumbnail, ...props } = assetJson\n\n    // sanizite\n    validatePath('thumbnail', assetJson, contents)\n    validatePath('model', assetJson, contents)\n    validateEnum('rarity', assetJson, Object.values(ItemRarity))\n    validateEnum('category', assetJson, Object.values(WearableCategory))\n    validateEnum('bodyShape', assetJson, Object.values(BodyShapeType))\n\n    if (thumbnail && thumbnail in contents) {\n      return {\n        ...props,\n        thumbnail: await blobToDataURL(contents[thumbnail])\n      }\n    }\n\n    return props\n  }\n\n  handleDropRejected = async (rejectedFiles: File[]) => {\n    console.warn('rejected', rejectedFiles)\n    const error = new InvalidFilesError()\n    this.setState({ error: error.message })\n  }\n\n  handleOpenDocs = () => window.open('https://docs.decentraland.org/3d-modeling/3d-models/', '_blank')\n\n  handleNameChange = (_event: React.ChangeEvent<HTMLInputElement>, props: InputOnChangeData) =>\n    this.setState({ name: props.value.slice(0, ITEM_NAME_MAX_LENGTH) })\n\n  handleItemChange = (item: Item) => {\n    this.setState({ item: item, category: item.data.category, rarity: item.rarity })\n  }\n\n  handleCategoryChange = (_event: React.SyntheticEvent<HTMLElement, Event>, { value }: DropdownProps) => {\n    const category = value as WearableCategory\n    if (this.state.category !== category) {\n      if (this.state.type === ItemType.WEARABLE) {\n        this.updateThumbnailByCategory(category)\n      }\n      this.setState({ category })\n    }\n  }\n\n  handleRarityChange = (_event: React.SyntheticEvent<HTMLElement, Event>, { value }: DropdownProps) => {\n    const rarity = value as ItemRarity\n    this.setState({ rarity })\n  }\n\n  handleOpenThumbnailDialog = () => {\n    if (this.thumbnailInput.current) {\n      this.thumbnailInput.current.click()\n    }\n  }\n\n  handleThumbnailChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { contents } = this.state\n    const { files } = event.target\n\n    if (files && files.length > 0) {\n      const file = files[0]\n      const imageType = await getImageType(file)\n      if (imageType !== ImageType.PNG) {\n        this.setState({ error: t('create_single_item_modal.wrong_thumbnail_format') })\n        return\n      }\n      this.setState({ error: undefined })\n\n      const resizedFile = await resizeImage(file)\n      const thumbnail = URL.createObjectURL(resizedFile)\n\n      this.setState({\n        thumbnail,\n        contents: {\n          ...contents,\n          [THUMBNAIL_PATH]: file\n        }\n      })\n    }\n  }\n\n  handleYes = () => this.setState({ isRepresentation: true })\n\n  handleNo = () => this.setState({ isRepresentation: false })\n\n  isAddingRepresentation = () => {\n    const { metadata } = this.props\n    return !!(metadata && metadata.item && !metadata.changeItemFile)\n  }\n\n  filterItemsByBodyShape = (item: Item) => {\n    const { bodyShape } = this.state\n    const { metadata } = this.props\n    return getMissingBodyShapeType(item) === bodyShape && metadata.collectionId === item.collectionId\n  }\n\n  async processModel(\n    model: string,\n    contents: Record<string, Blob>\n  ): Promise<[string, string, ModelMetrics, Record<string, Blob>, ItemType]> {\n    let thumbnail: string = ''\n    let metrics: ModelMetrics\n    let type = ItemType.WEARABLE\n\n    if (isImageFile(model)) {\n      metrics = {\n        triangles: 100,\n        materials: 1,\n        textures: 1,\n        meshes: 1,\n        bodies: 1,\n        entities: 1\n      }\n\n      thumbnail = await convertImageIntoWearableThumbnail(\n        contents[THUMBNAIL_PATH] || contents[model],\n        this.state.category as WearableCategory\n      )\n    } else {\n      const url = URL.createObjectURL(contents[model])\n      const data = await getModelData(url, {\n        width: 1024,\n        height: 1024,\n        extension: getExtension(model) || undefined,\n        engine: EngineType.BABYLON\n      })\n      URL.revokeObjectURL(url)\n\n      // for some reason the renderer reports 2x the amount of textures for wearble items\n      data.info.textures = Math.round(data.info.textures / 2)\n\n      thumbnail = data.image\n      metrics = data.info\n      type = data.type\n    }\n\n    return [thumbnail, model, metrics, contents, type]\n  }\n\n  /**\n   * Updates the item's thumbnail if the user changes the category of the item.\n   *\n   * @param category - The category of the wearable.\n   */\n  async updateThumbnailByCategory(category: WearableCategory) {\n    const { model, contents } = this.state\n\n    const isCustom = !!contents && THUMBNAIL_PATH in contents\n    if (!isCustom) {\n      let thumbnail\n      if (contents && isImageFile(model!)) {\n        thumbnail = await convertImageIntoWearableThumbnail(contents[THUMBNAIL_PATH] || contents[model!], category)\n      } else {\n        const url = URL.createObjectURL(contents![model!])\n        const { image } = await getModelData(url, {\n          width: 1024,\n          height: 1024,\n          thumbnailType: getThumbnailType(category),\n          extension: (model && getExtension(model)) || undefined,\n          engine: EngineType.BABYLON\n        })\n        thumbnail = image\n        URL.revokeObjectURL(url)\n      }\n      this.setState({ thumbnail })\n    }\n  }\n\n  buildRepresentations(bodyShape: BodyShapeType, model: string, contents: SortedContent): WearableRepresentation[] {\n    const representations: WearableRepresentation[] = []\n\n    // add male representation\n    if (bodyShape === BodyShapeType.MALE || bodyShape === BodyShapeType.BOTH) {\n      representations.push({\n        bodyShapes: [WearableBodyShape.MALE],\n        mainFile: this.prefixContentName(BodyShapeType.MALE, model),\n        contents: Object.keys(contents.male),\n        overrideHides: [],\n        overrideReplaces: []\n      })\n    }\n\n    // add female representation\n    if (bodyShape === BodyShapeType.FEMALE || bodyShape === BodyShapeType.BOTH) {\n      representations.push({\n        bodyShapes: [WearableBodyShape.FEMALE],\n        mainFile: this.prefixContentName(BodyShapeType.FEMALE, model),\n        contents: Object.keys(contents.female),\n        overrideHides: [],\n        overrideReplaces: []\n      })\n    }\n\n    return representations\n  }\n\n  renderModalTitle = () => {\n    const isAddingRepresentation = this.isAddingRepresentation()\n    const { bodyShape } = this.state\n    const { metadata } = this.props\n    if (isAddingRepresentation) {\n      return t('create_single_item_modal.add_representation', { bodyShape: t(`body_shapes.${bodyShape}`) })\n    }\n\n    if (metadata && metadata.changeItemFile) {\n      return t('create_single_item_modal.change_item_file')\n    }\n\n    return t('create_single_item_modal.title')\n  }\n\n  renderImportView() {\n    const { onClose, metadata } = this.props\n    const { changeItemFile } = metadata as CreateSingleItemModalMetadata\n    const { isRepresentation, category, error } = this.state\n    const title = this.renderModalTitle()\n\n    return (\n      <>\n        <ModalNavigation title={title} onClose={onClose} />\n        <Modal.Content>\n          <ItemImport\n            error={error}\n            acceptedExtensions={\n              isRepresentation || changeItemFile\n                ? isImageCategory(category! as WearableCategory)\n                  ? IMAGE_EXTENSIONS\n                  : MODEL_EXTENSIONS\n                : ITEM_EXTENSIONS\n            }\n            onDropAccepted={this.handleDropAccepted}\n            onDropRejected={this.handleDropRejected}\n          />\n        </Modal.Content>\n      </>\n    )\n  }\n\n  renderFields() {\n    const { collection } = this.props\n    const { name, category, rarity, contents, item, type } = this.state\n\n    const belongsToAThirdPartyCollection = collection?.urn && isThirdParty(collection.urn)\n    const rarities = getRarities()\n    const categories: string[] = type === ItemType.WEARABLE ? getWearableCategories(contents) : getEmoteCategories()\n\n    return (\n      <>\n        <Field className=\"name\" label={t('create_single_item_modal.name_label')} value={name} onChange={this.handleNameChange} />\n        {(!item || !item.isPublished) && !belongsToAThirdPartyCollection ? (\n          <SelectField\n            label={t('create_single_item_modal.rarity_label')}\n            placeholder={t('create_single_item_modal.rarity_placeholder')}\n            value={rarity}\n            options={rarities.map(value => ({\n              value,\n              label: t(`wearable.supply`, {\n                count: getMaxSupplyForRarity(value),\n                formatted: getMaxSupplyForRarity(value).toLocaleString()\n              }),\n              text: t(`wearable.rarity.${value}`)\n            }))}\n            onChange={this.handleRarityChange}\n          />\n        ) : null}\n        <SelectField\n          required\n          label={t('create_single_item_modal.category_label')}\n          placeholder={t('create_single_item_modal.category_placeholder')}\n          value={categories.includes(category!) ? category : undefined}\n          options={categories.map(value => ({ value, text: t(`${type}.category.${value}`) }))}\n          onChange={this.handleCategoryChange}\n        />\n      </>\n    )\n  }\n\n  isDisabled(): boolean {\n    const { isLoading } = this.props\n\n    return !this.isValid() || isLoading\n  }\n\n  isValid(): boolean {\n    const { name, thumbnail, metrics, bodyShape, category, rarity, item, isRepresentation, type } = this.state\n    const { collection } = this.props\n    const belongsToAThirdPartyCollection = collection?.urn && isThirdParty(collection.urn)\n\n    let required: (string | ModelMetrics | Item | undefined)[]\n\n    if (isRepresentation) {\n      required = [item]\n    } else if (belongsToAThirdPartyCollection) {\n      required = [name, thumbnail, metrics, bodyShape, category]\n    } else {\n      required = [name, thumbnail, metrics, bodyShape, category, rarity, type]\n    }\n\n    return required.every(prop => prop !== undefined)\n  }\n\n  renderDetailsView() {\n    const { onClose, metadata, error, isLoading } = this.props\n    const { thumbnail, metrics, bodyShape, isRepresentation, item, rarity, error: stateError } = this.state\n\n    const isDisabled = this.isDisabled()\n    const isAddingRepresentation = this.isAddingRepresentation()\n    const thumbnailStyle = getBackgroundStyle(rarity)\n    const title = this.renderModalTitle()\n\n    return (\n      <>\n        <ModalNavigation title={title} onClose={onClose} />\n        <Modal.Content>\n          <Form onSubmit={this.handleSubmit} disabled={isDisabled}>\n            <Column>\n              <Row className=\"details\">\n                <Column className=\"preview\" width={192} grow={false}>\n                  <div className=\"thumbnail-container\">\n                    <img className=\"thumbnail\" src={thumbnail || undefined} style={thumbnailStyle} />\n                    {isRepresentation ? null : (\n                      <>\n                        <Icon name=\"camera\" onClick={this.handleOpenThumbnailDialog} />\n                        <input type=\"file\" ref={this.thumbnailInput} onChange={this.handleThumbnailChange} accept=\"image/png\" />\n                      </>\n                    )}\n                  </div>\n                  {metrics ? (\n                    <div className=\"metrics\">\n                      <div className=\"metric triangles\">{t('model_metrics.triangles', { count: metrics.triangles })}</div>\n                      <div className=\"metric materials\">{t('model_metrics.materials', { count: metrics.materials })}</div>\n                      <div className=\"metric textures\">{t('model_metrics.textures', { count: metrics.textures })}</div>\n                    </div>\n                  ) : null}\n                </Column>\n                <Column className=\"data\" grow={true}>\n                  {isAddingRepresentation ? null : (\n                    <Section>\n                      <Header sub>{t('create_single_item_modal.representation_label')}</Header>\n                      <Row>\n                        {this.renderRepresentation(BodyShapeType.BOTH)}\n                        {this.renderRepresentation(BodyShapeType.MALE)}\n                        {this.renderRepresentation(BodyShapeType.FEMALE)}\n                      </Row>\n                    </Section>\n                  )}\n                  {bodyShape && (!metadata || !metadata.changeItemFile) ? (\n                    <>\n                      {bodyShape === BodyShapeType.BOTH ? (\n                        this.renderFields()\n                      ) : (\n                        <>\n                          {isAddingRepresentation ? null : (\n                            <Section>\n                              <Header sub>{t('create_single_item_modal.existing_item')}</Header>\n                              <Row>\n                                <div className={`option ${isRepresentation === true ? 'active' : ''}`} onClick={this.handleYes}>\n                                  {t('global.yes')}\n                                </div>\n                                <div className={`option ${isRepresentation === false ? 'active' : ''}`} onClick={this.handleNo}>\n                                  {t('global.no')}\n                                </div>\n                              </Row>\n                            </Section>\n                          )}\n                          {isRepresentation === undefined ? null : isRepresentation ? (\n                            <Section>\n                              <Header sub>\n                                {isAddingRepresentation\n                                  ? t('create_single_item_modal.adding_representation', { bodyShape: t(`body_shapes.${bodyShape}`) })\n                                  : t('create_single_item_modal.pick_item', { bodyShape: t(`body_shapes.${bodyShape}`) })}\n                              </Header>\n                              <ItemDropdown\n                                value={item}\n                                filter={this.filterItemsByBodyShape}\n                                onChange={this.handleItemChange}\n                                isDisabled={isAddingRepresentation}\n                              />\n                            </Section>\n                          ) : (\n                            this.renderFields()\n                          )}\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    this.renderFields()\n                  )}\n                </Column>\n              </Row>\n              <Row className=\"actions\" align=\"right\">\n                <Button primary disabled={isDisabled} loading={isLoading}>\n                  {(metadata && metadata.changeItemFile) || isRepresentation ? t('global.save') : t('global.create')}\n                </Button>\n              </Row>\n              {stateError ? (\n                <Row className=\"error\" align=\"right\">\n                  <p className=\"danger-text\">{stateError}</p>\n                </Row>\n              ) : null}\n              {error ? (\n                <Row className=\"error\" align=\"right\">\n                  <p className=\"danger-text\">{error}</p>\n                </Row>\n              ) : null}\n            </Column>\n          </Form>\n        </Modal.Content>\n      </>\n    )\n  }\n\n  renderRepresentation(type: BodyShapeType) {\n    const { bodyShape } = this.state\n    const { metadata } = this.props\n    return (\n      <div\n        className={`option has-icon ${type} ${type === bodyShape ? 'active' : ''}`.trim()}\n        onClick={() =>\n          this.setState({ bodyShape: type, isRepresentation: metadata && metadata.changeItemFile ? false : undefined, item: undefined })\n        }\n      >\n        {t('body_shapes.' + type)}\n      </div>\n    )\n  }\n\n  renderView() {\n    switch (this.state.view) {\n      case CreateItemView.IMPORT:\n        return this.renderImportView()\n      case CreateItemView.DETAILS:\n        return this.renderDetailsView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const { name, onClose } = this.props\n    return (\n      <Modal name={name} onClose={onClose}>\n        {this.renderView()}\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}