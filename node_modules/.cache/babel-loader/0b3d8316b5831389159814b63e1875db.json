{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _wrapNativeSuper = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar resolve_1 = require(\"./resolve\");\n\nvar MissingRefError = /*#__PURE__*/function (_Error) {\n  _inherits(MissingRefError, _Error);\n\n  function MissingRefError(resolver, baseId, ref, msg) {\n    var _this;\n\n    _classCallCheck(this, MissingRefError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MissingRefError).call(this, msg || \"can't resolve reference \".concat(ref, \" from id \").concat(baseId)));\n    _this.missingRef = (0, resolve_1.resolveUrl)(resolver, baseId, ref);\n    _this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(resolver, _this.missingRef));\n    return _this;\n  }\n\n  return MissingRefError;\n}(_wrapNativeSuper(Error));\n\nexports.default = MissingRefError;","map":null,"metadata":{},"sourceType":"script"}