{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(committeeSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleConnectWallet);\n\nimport { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { CONNECT_WALLET_SUCCESS } from 'decentraland-dapps/dist/modules/wallet/actions';\nimport { fetchCommitteeMembersRequest, fetchCommitteeMembersFailure, fetchCommitteeMembersSuccess, FETCH_COMMITTEE_MEMBERS_REQUEST } from './action';\nexport function committeeSaga(builder) {\n  var _marked, handleFetchCommitteeMembersRequest;\n\n  return _regeneratorRuntime.wrap(function committeeSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          handleFetchCommitteeMembersRequest = function _handleFetchCommittee() {\n            var committee, members;\n            return _regeneratorRuntime.wrap(function handleFetchCommitteeMembersRequest$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return call(function () {\n                      return builder.fetchCommittee();\n                    });\n\n                  case 3:\n                    committee = _context.sent;\n                    members = committee.map(function (account) {\n                      return account.address;\n                    });\n                    _context.next = 7;\n                    return put(fetchCommitteeMembersSuccess(members));\n\n                  case 7:\n                    _context.next = 13;\n                    break;\n\n                  case 9:\n                    _context.prev = 9;\n                    _context.t0 = _context[\"catch\"](0);\n                    _context.next = 13;\n                    return put(fetchCommitteeMembersFailure(_context.t0.message));\n\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _marked, null, [[0, 9]]);\n          };\n\n          _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleFetchCommitteeMembersRequest);\n          _context2.next = 4;\n          return takeLatest(CONNECT_WALLET_SUCCESS, handleConnectWallet);\n\n        case 4:\n          _context2.next = 6;\n          return takeEvery(FETCH_COMMITTEE_MEMBERS_REQUEST, handleFetchCommitteeMembersRequest);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function handleConnectWallet() {\n  return _regeneratorRuntime.wrap(function handleConnectWallet$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return put(fetchCommitteeMembersRequest());\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/committee/sagas.ts"],"names":["committeeSaga","handleConnectWallet","call","put","takeEvery","takeLatest","CONNECT_WALLET_SUCCESS","fetchCommitteeMembersRequest","fetchCommitteeMembersFailure","fetchCommitteeMembersSuccess","FETCH_COMMITTEE_MEMBERS_REQUEST","builder","handleFetchCommitteeMembersRequest","fetchCommittee","committee","members","map","account","address","message"],"mappings":";;qDAWiBA,a;qDAeAC,mB;;AA1BjB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAASC,sBAAT,QAAuC,gDAAvC;AAEA,SACEC,4BADF,EAEEC,4BAFF,EAGEC,4BAHF,EAIEC,+BAJF,QAKO,UALP;AAQA,OAAO,SAAUV,aAAV,CAAwBW,OAAxB;AAAA,eAIKC,kCAJL;;AAAA;AAAA;AAAA;AAAA;AAIKA,UAAAA,kCAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM4B,2BAAMV,IAAI,CAAC;AAAA,6BAAMS,OAAO,CAACE,cAAR,EAAN;AAAA,qBAAD,CAAV;;AAN5B;AAMKC,oBAAAA,SANL;AAOKC,oBAAAA,OAPL,GAOeD,SAAS,CAACE,GAAV,CAAc,UAAAC,OAAO;AAAA,6BAAIA,OAAO,CAACC,OAAZ;AAAA,qBAArB,CAPf;AAAA;AAQD,2BAAMf,GAAG,CAACM,4BAA4B,CAACM,OAAD,CAA7B,CAAT;;AARC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAUD,2BAAMZ,GAAG,CAACK,4BAA4B,CAAC,YAAMW,OAAP,CAA7B,CAAT;;AAVC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,0DAIKP,kCAJL;AAAA;AACL,iBAAMP,UAAU,CAACC,sBAAD,EAAyBL,mBAAzB,CAAhB;;AADK;AAAA;AAEL,iBAAMG,SAAS,CAACM,+BAAD,EAAkCE,kCAAlC,CAAf;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeP,OAAO,SAAUX,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,GAAG,CAACI,4BAA4B,EAA7B,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects'\nimport { CONNECT_WALLET_SUCCESS } from 'decentraland-dapps/dist/modules/wallet/actions'\nimport { BuilderAPI } from 'lib/api/builder'\nimport {\n  fetchCommitteeMembersRequest,\n  fetchCommitteeMembersFailure,\n  fetchCommitteeMembersSuccess,\n  FETCH_COMMITTEE_MEMBERS_REQUEST\n} from './action'\nimport { Account } from './types'\n\nexport function* committeeSaga(builder: BuilderAPI) {\n  yield takeLatest(CONNECT_WALLET_SUCCESS, handleConnectWallet)\n  yield takeEvery(FETCH_COMMITTEE_MEMBERS_REQUEST, handleFetchCommitteeMembersRequest)\n\n  function* handleFetchCommitteeMembersRequest() {\n    try {\n      const committee: Account[] = yield call(() => builder.fetchCommittee())\n      const members = committee.map(account => account.address)\n      yield put(fetchCommitteeMembersSuccess(members))\n    } catch (error) {\n      yield put(fetchCommitteeMembersFailure(error.message))\n    }\n  }\n}\n\nexport function* handleConnectWallet() {\n  yield put(fetchCommitteeMembersRequest())\n}\n"]},"metadata":{},"sourceType":"module"}