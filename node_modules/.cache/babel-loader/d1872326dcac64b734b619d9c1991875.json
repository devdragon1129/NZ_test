{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/EditorPage/Metrics/Metrics.tsx\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport SquaresGrid from 'components/SquaresGrid';\nimport Icon from 'components/Icon';\nimport { getExceededMetrics } from 'modules/scene/utils';\nimport { getDimensions } from 'lib/layout';\nimport './Metrics.css';\n\nvar Metrics = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Metrics, _React$PureComponent);\n\n  function Metrics() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Metrics);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Metrics)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isBubbleVisible: false\n    };\n    _this.analytics = getAnalytics();\n    _this.metricsExceeded = [];\n\n    _this.handleToggle = function () {\n      var isBubbleVisible = !_this.state.isBubbleVisible;\n\n      if (isBubbleVisible) {\n        _this.analytics.track('Show metrics');\n      }\n\n      _this.setState({\n        isBubbleVisible: isBubbleVisible\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        isBubbleVisible: false\n      });\n    };\n\n    _this.handleClick = function (event) {\n      event.nativeEvent.stopImmediatePropagation();\n    };\n\n    return _this;\n  }\n\n  _createClass(Metrics, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      document.addEventListener('click', this.handleClose);\n      this.updateMetrics(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('click', this.handleClose);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.updateMetrics(nextProps);\n    }\n  }, {\n    key: \"updateMetrics\",\n    value: function updateMetrics(props) {\n      var metrics = props.metrics,\n          limits = props.limits;\n      var metricsExceeded = getExceededMetrics(metrics, limits);\n\n      var _iterator = _createForOfIteratorHelper(metricsExceeded),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var metric = _step.value;\n\n          if (!this.metricsExceeded.includes(metric)) {\n            this.analytics.track('Metrics exceeded', {\n              metric: metric,\n              count: metrics[metric],\n              limit: limits[metric]\n            });\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.metricsExceeded = metricsExceeded;\n    }\n  }, {\n    key: \"renderMetrics\",\n    value: function renderMetrics() {\n      var _this2 = this;\n\n      return Object.keys(this.props.metrics).map(function (key) {\n        return _this2.renderMetric(key);\n      });\n    }\n  }, {\n    key: \"renderMetric\",\n    value: function renderMetric(metric) {\n      var _this$props = this.props,\n          metrics = _this$props.metrics,\n          limits = _this$props.limits;\n      var classes = 'metric';\n\n      if (metrics[metric] > limits[metric]) {\n        classes += ' exceeded';\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes,\n        key: metric,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, t(\"metrics.\".concat(metric)), \":\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, metrics[metric].toLocaleString(), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value-limit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, \"\\xA0/\\xA0\", limits[metric].toLocaleString()), ' '));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          rows = _this$props2.rows,\n          cols = _this$props2.cols;\n      var isBubbleVisible = this.state.isBubbleVisible;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Metrics \".concat(this.metricsExceeded.length > 0 ? 'metric-exceeded' : ''),\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SquaresGrid, {\n        rows: 2,\n        cols: 2,\n        size: \"tiny\",\n        onClick: this.handleToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }), isBubbleVisible ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bubble\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bubble-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, rows, \"x\", cols, \" LAND\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"dimensions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, getDimensions(rows, cols))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }), this.renderMetrics()) : null, this.metricsExceeded.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value-too-high\",\n        onClick: this.handleToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }), t('metrics.too_many', {\n        metric: t(\"metrics.\".concat(this.metricsExceeded[0]))\n      })) : null);\n    }\n  }]);\n\n  return Metrics;\n}(React.PureComponent);\n\nexport { Metrics as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/EditorPage/Metrics/Metrics.tsx"],"names":["React","getAnalytics","t","SquaresGrid","Icon","getExceededMetrics","getDimensions","Metrics","state","isBubbleVisible","analytics","metricsExceeded","handleToggle","track","setState","handleClose","handleClick","event","nativeEvent","stopImmediatePropagation","document","addEventListener","updateMetrics","props","removeEventListener","nextProps","metrics","limits","metric","includes","count","limit","Object","keys","map","key","renderMetric","classes","toLocaleString","rows","cols","length","renderMetrics","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\n\nimport SquaresGrid from 'components/SquaresGrid'\nimport Icon from 'components/Icon'\nimport { ModelMetrics } from 'modules/models/types'\nimport { getExceededMetrics } from 'modules/scene/utils'\nimport { getDimensions } from 'lib/layout'\nimport { Props, State } from './Metrics.types'\nimport './Metrics.css'\n\nexport default class Metrics extends React.PureComponent<Props, State> {\n  state = {\n    isBubbleVisible: false\n  }\n\n  analytics = getAnalytics()\n  metricsExceeded: (keyof ModelMetrics)[] = []\n\n  componentWillMount() {\n    document.addEventListener('click', this.handleClose)\n    this.updateMetrics(this.props)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClose)\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    this.updateMetrics(nextProps)\n  }\n\n  updateMetrics(props: Props) {\n    const { metrics, limits } = props\n    const metricsExceeded = getExceededMetrics(metrics, limits)\n\n    for (const metric of metricsExceeded) {\n      if (!this.metricsExceeded.includes(metric)) {\n        this.analytics.track('Metrics exceeded', { metric, count: metrics[metric], limit: limits[metric] })\n      }\n    }\n    this.metricsExceeded = metricsExceeded\n  }\n\n  handleToggle = () => {\n    const isBubbleVisible = !this.state.isBubbleVisible\n\n    if (isBubbleVisible) {\n      this.analytics.track('Show metrics')\n    }\n    this.setState({ isBubbleVisible })\n  }\n\n  handleClose = () => {\n    this.setState({ isBubbleVisible: false })\n  }\n\n  handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.nativeEvent.stopImmediatePropagation()\n  }\n\n  renderMetrics() {\n    return Object.keys(this.props.metrics).map(key => this.renderMetric(key as keyof ModelMetrics))\n  }\n\n  renderMetric(metric: keyof ModelMetrics) {\n    const { metrics, limits } = this.props\n    let classes = 'metric'\n    if (metrics[metric] > limits[metric]) {\n      classes += ' exceeded'\n    }\n\n    return (\n      <div className={classes} key={metric}>\n        <div className=\"label\">{t(`metrics.${metric}`)}:</div>\n        <div className=\"value\">\n          {metrics[metric].toLocaleString()}\n          <span className=\"value-limit\">&nbsp;/&nbsp;{limits[metric].toLocaleString()}</span>{' '}\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { rows, cols } = this.props\n    const { isBubbleVisible } = this.state\n\n    return (\n      <div className={`Metrics ${this.metricsExceeded.length > 0 ? 'metric-exceeded' : ''}`} onClick={this.handleClick}>\n        <SquaresGrid rows={2} cols={2} size=\"tiny\" onClick={this.handleToggle} />\n\n        {isBubbleVisible ? (\n          <div className=\"bubble\">\n            <div className=\"bubble-title\">\n              <span>\n                {rows}x{cols} LAND\n              </span>\n              &nbsp;\n              <span className=\"dimensions\">{getDimensions(rows, cols)}</span>\n            </div>\n            <div className=\"divider\" />\n            {this.renderMetrics()}\n          </div>\n        ) : null}\n        {this.metricsExceeded.length > 0 ? (\n          <span className=\"value-too-high\" onClick={this.handleToggle}>\n            <Icon name=\"alert\" />\n            {t('metrics.too_many', { metric: t(`metrics.${this.metricsExceeded[0]}`) })}\n          </span>\n        ) : null}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}