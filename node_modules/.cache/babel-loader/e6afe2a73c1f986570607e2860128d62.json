{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { loadingReducer } from 'decentraland-dapps/dist/modules/loading/reducer';\nimport { FETCH_TILES_REQUEST, FETCH_TILES_SUCCESS, FETCH_TILES_FAILURE } from './actions';\nvar INITIAL_STATE = {\n  data: {},\n  loading: [],\n  error: null\n};\nexport function tileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_TILES_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action)\n        });\n      }\n\n    case FETCH_TILES_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: null,\n          data: action.payload.tiles\n        });\n      }\n\n    case FETCH_TILES_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: action.payload.error\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/tile/reducer.ts"],"names":["loadingReducer","FETCH_TILES_REQUEST","FETCH_TILES_SUCCESS","FETCH_TILES_FAILURE","INITIAL_STATE","data","loading","error","tileReducer","state","action","type","payload","tiles"],"mappings":";AACA,SAAuBA,cAAvB,QAA6C,iDAA7C;AACA,SAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,WAPP;AAeA,IAAMC,aAAwB,GAAG;AAC/BC,EAAAA,IAAI,EAAE,EADyB;AAE/BC,EAAAA,OAAO,EAAE,EAFsB;AAG/BC,EAAAA,KAAK,EAAE;AAHwB,CAAjC;AAQA,OAAO,SAASC,WAAT,GAAuE;AAAA,MAAlDC,KAAkD,uEAA1CL,aAA0C;AAAA,MAA3BM,MAA2B;;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,mBAAL;AAA0B;AACxB,iCACKQ,KADL;AAEEH,UAAAA,OAAO,EAAEN,cAAc,CAACS,KAAK,CAACH,OAAP,EAAgBI,MAAhB;AAFzB;AAID;;AACD,SAAKR,mBAAL;AAA0B;AACxB,iCACKO,KADL;AAEEH,UAAAA,OAAO,EAAEN,cAAc,CAACS,KAAK,CAACH,OAAP,EAAgBI,MAAhB,CAFzB;AAGEH,UAAAA,KAAK,EAAE,IAHT;AAIEF,UAAAA,IAAI,EAAEK,MAAM,CAACE,OAAP,CAAeC;AAJvB;AAMD;;AACD,SAAKV,mBAAL;AAA0B;AACxB,iCACKM,KADL;AAEEH,UAAAA,OAAO,EAAEN,cAAc,CAACS,KAAK,CAACH,OAAP,EAAgBI,MAAhB,CAFzB;AAGEH,UAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHxB;AAKD;;AACD;AACE,aAAOE,KAAP;AAvBJ;AAyBD","sourcesContent":["import { AtlasTile } from 'decentraland-ui'\nimport { LoadingState, loadingReducer } from 'decentraland-dapps/dist/modules/loading/reducer'\nimport {\n  FetchTilesRequestAction,\n  FetchTilesSuccessAction,\n  FetchTilesFailureAction,\n  FETCH_TILES_REQUEST,\n  FETCH_TILES_SUCCESS,\n  FETCH_TILES_FAILURE\n} from './actions'\n\nexport type TileState = {\n  data: Record<string, AtlasTile>\n  loading: LoadingState\n  error: string | null\n}\n\nconst INITIAL_STATE: TileState = {\n  data: {},\n  loading: [],\n  error: null\n}\n\ntype TileReducerAction = FetchTilesRequestAction | FetchTilesSuccessAction | FetchTilesFailureAction\n\nexport function tileReducer(state = INITIAL_STATE, action: TileReducerAction) {\n  switch (action.type) {\n    case FETCH_TILES_REQUEST: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action)\n      }\n    }\n    case FETCH_TILES_SUCCESS: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: null,\n        data: action.payload.tiles\n      }\n    }\n    case FETCH_TILES_FAILURE: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: action.payload.error\n      }\n    }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}