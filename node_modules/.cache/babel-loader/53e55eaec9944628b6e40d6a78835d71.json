{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar contract_1 = require(\"web3x/contract\");\n\nexports.default = new contract_1.ContractAbi([{\n  constant: true,\n  inputs: [{\n    name: '',\n    type: 'address'\n  }],\n  name: 'owners',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'hasInitialized',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'catalystCount',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_script',\n    type: 'bytes'\n  }],\n  name: 'getEVMScriptExecutor',\n  outputs: [{\n    name: '',\n    type: 'address'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'getRecoveryVault',\n  outputs: [{\n    name: '',\n    type: 'address'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '',\n    type: 'bytes32'\n  }],\n  name: 'catalystIndexById',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_id',\n    type: 'bytes32'\n  }],\n  name: 'catalystOwner',\n  outputs: [{\n    name: '',\n    type: 'address'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_id',\n    type: 'bytes32'\n  }],\n  name: 'catalystDomain',\n  outputs: [{\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  name: 'catalystIds',\n  outputs: [{\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: 'token',\n    type: 'address'\n  }],\n  name: 'allowRecoverability',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'appId',\n  outputs: [{\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [],\n  name: 'initialize',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'getInitializationBlock',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_token',\n    type: 'address'\n  }],\n  name: 'transferToVault',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '_sender',\n    type: 'address'\n  }, {\n    name: '_role',\n    type: 'bytes32'\n  }, {\n    name: '_params',\n    type: 'uint256[]'\n  }],\n  name: 'canPerform',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'getEVMScriptRegistry',\n  outputs: [{\n    name: '',\n    type: 'address'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_id',\n    type: 'bytes32'\n  }],\n  name: 'removeCatalyst',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '',\n    type: 'bytes32'\n  }],\n  name: 'domains',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: '',\n    type: 'bytes32'\n  }],\n  name: 'catalystById',\n  outputs: [{\n    name: 'id',\n    type: 'bytes32'\n  }, {\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'domain',\n    type: 'string'\n  }, {\n    name: 'startTime',\n    type: 'uint256'\n  }, {\n    name: 'endTime',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }, {\n    name: '_domain',\n    type: 'string'\n  }],\n  name: 'addCatalyst',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'kernel',\n  outputs: [{\n    name: '',\n    type: 'address'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'MODIFY_ROLE',\n  outputs: [{\n    name: '',\n    type: 'bytes32'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'isPetrified',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: '_id',\n    type: 'bytes32'\n  }, {\n    indexed: true,\n    name: '_owner',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: '_domain',\n    type: 'string'\n  }],\n  name: 'AddCatalyst',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: '_id',\n    type: 'bytes32'\n  }, {\n    indexed: true,\n    name: '_owner',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: '_domain',\n    type: 'string'\n  }],\n  name: 'RemoveCatalyst',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'executor',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'script',\n    type: 'bytes'\n  }, {\n    indexed: false,\n    name: 'input',\n    type: 'bytes'\n  }, {\n    indexed: false,\n    name: 'returnData',\n    type: 'bytes'\n  }],\n  name: 'ScriptResult',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'vault',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'token',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'RecoverToVault',\n  type: 'event'\n}]);","map":null,"metadata":{},"sourceType":"script"}