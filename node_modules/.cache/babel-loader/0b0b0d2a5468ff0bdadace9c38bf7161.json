{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { SerializationHelper, serialize, expandToProperty } from \"../../Misc/decorators\";\n/**\r\n * Define the code related to the BRDF parameters of the pbr material.\r\n */\n\nvar PBRBRDFConfiguration =\n/** @class */\nfunction () {\n  /**\r\n   * Instantiate a new istance of clear coat configuration.\r\n   * @param markAllSubMeshesAsMiscDirty Callback to flag the material to dirty\r\n   */\n  function PBRBRDFConfiguration(markAllSubMeshesAsMiscDirty) {\n    this._useEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION;\n    /**\r\n     * Defines if the material uses energy conservation.\r\n     */\n\n    this.useEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION;\n    this._useSmithVisibilityHeightCorrelated = PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED;\n    /**\r\n     * LEGACY Mode set to false\r\n     * Defines if the material uses height smith correlated visibility term.\r\n     * If you intent to not use our default BRDF, you need to load a separate BRDF Texture for the PBR\r\n     * You can either load https://assets.babylonjs.com/environments/uncorrelatedBRDF.png\r\n     * or https://assets.babylonjs.com/environments/uncorrelatedBRDF.dds to have more precision\r\n     * Not relying on height correlated will also disable energy conservation.\r\n     */\n\n    this.useSmithVisibilityHeightCorrelated = PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED;\n    this._useSphericalHarmonics = PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS;\n    /**\r\n     * LEGACY Mode set to false\r\n     * Defines if the material uses spherical harmonics vs spherical polynomials for the\r\n     * diffuse part of the IBL.\r\n     * The harmonics despite a tiny bigger cost has been proven to provide closer results\r\n     * to the ground truth.\r\n     */\n\n    this.useSphericalHarmonics = PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS;\n    this._useSpecularGlossinessInputEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION;\n    /**\r\n     * Defines if the material uses energy conservation, when the specular workflow is active.\r\n     * If activated, the albedo color is multiplied with (1. - maxChannel(specular color)).\r\n     * If deactivated, a material is only physically plausible, when (albedo color + specular color) < 1.\r\n     * In the deactivated case, the material author has to ensure energy conservation, for a physically plausible rendering.\r\n     */\n\n    this.useSpecularGlossinessInputEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION;\n    this._internalMarkAllSubMeshesAsMiscDirty = markAllSubMeshesAsMiscDirty;\n  }\n  /** @hidden */\n\n\n  PBRBRDFConfiguration.prototype._markAllSubMeshesAsMiscDirty = function () {\n    this._internalMarkAllSubMeshesAsMiscDirty();\n  };\n  /**\r\n   * Checks to see if a texture is used in the material.\r\n   * @param defines the list of \"defines\" to update.\r\n   */\n\n\n  PBRBRDFConfiguration.prototype.prepareDefines = function (defines) {\n    defines.BRDF_V_HEIGHT_CORRELATED = this._useSmithVisibilityHeightCorrelated;\n    defines.MS_BRDF_ENERGY_CONSERVATION = this._useEnergyConservation && this._useSmithVisibilityHeightCorrelated;\n    defines.SPHERICAL_HARMONICS = this._useSphericalHarmonics;\n    defines.SPECULAR_GLOSSINESS_ENERGY_CONSERVATION = this._useSpecularGlossinessInputEnergyConservation;\n  };\n  /**\r\n  * Get the current class name of the texture useful for serialization or dynamic coding.\r\n  * @returns \"PBRClearCoatConfiguration\"\r\n  */\n\n\n  PBRBRDFConfiguration.prototype.getClassName = function () {\n    return \"PBRBRDFConfiguration\";\n  };\n  /**\r\n   * Makes a duplicate of the current configuration into another one.\r\n   * @param brdfConfiguration define the config where to copy the info\r\n   */\n\n\n  PBRBRDFConfiguration.prototype.copyTo = function (brdfConfiguration) {\n    SerializationHelper.Clone(function () {\n      return brdfConfiguration;\n    }, this);\n  };\n  /**\r\n   * Serializes this BRDF configuration.\r\n   * @returns - An object with the serialized config.\r\n   */\n\n\n  PBRBRDFConfiguration.prototype.serialize = function () {\n    return SerializationHelper.Serialize(this);\n  };\n  /**\r\n   * Parses a anisotropy Configuration from a serialized object.\r\n   * @param source - Serialized object.\r\n   * @param scene Defines the scene we are parsing for\r\n   * @param rootUrl Defines the rootUrl to load from\r\n   */\n\n\n  PBRBRDFConfiguration.prototype.parse = function (source, scene, rootUrl) {\n    var _this = this;\n\n    SerializationHelper.Parse(function () {\n      return _this;\n    }, source, scene, rootUrl);\n  };\n  /**\r\n   * Default value used for the energy conservation.\r\n   * This should only be changed to adapt to the type of texture in scene.environmentBRDFTexture.\r\n   */\n\n\n  PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION = true;\n  /**\r\n   * Default value used for the Smith Visibility Height Correlated mode.\r\n   * This should only be changed to adapt to the type of texture in scene.environmentBRDFTexture.\r\n   */\n\n  PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED = true;\n  /**\r\n   * Default value used for the IBL diffuse part.\r\n   * This can help switching back to the polynomials mode globally which is a tiny bit\r\n   * less GPU intensive at the drawback of a lower quality.\r\n   */\n\n  PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS = true;\n  /**\r\n   * Default value used for activating energy conservation for the specular workflow.\r\n   * If activated, the albedo color is multiplied with (1. - maxChannel(specular color)).\r\n   * If deactivated, a material is only physically plausible, when (albedo color + specular color) < 1.\r\n   */\n\n  PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION = true;\n\n  __decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useEnergyConservation\", void 0);\n\n  __decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useSmithVisibilityHeightCorrelated\", void 0);\n\n  __decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useSphericalHarmonics\", void 0);\n\n  __decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useSpecularGlossinessInputEnergyConservation\", void 0);\n\n  return PBRBRDFConfiguration;\n}();\n\nexport { PBRBRDFConfiguration };","map":null,"metadata":{},"sourceType":"module"}