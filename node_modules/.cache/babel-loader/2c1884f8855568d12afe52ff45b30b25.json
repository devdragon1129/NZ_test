{"ast":null,"code":"export var filterAttributes = ['page', 'sortBy', 'sortOrder', 'group', 'ethAddress'];","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SceneListPage/SceneListPage.types.ts"],"names":["filterAttributes"],"mappings":"AAgCA,OAAO,IAAMA,gBAAgB,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,OAAhC,EAAyC,YAAzC,CAAzB","sourcesContent":["import { Dispatch } from 'redux'\nimport { Location } from 'history'\nimport { CallHistoryMethodAction } from 'connected-react-router'\n\nimport { Pool, PoolsRequestFilters } from 'modules/pool/types'\nimport { LikePoolRequestAction, LoadPoolsRequestAction, loadPoolsRequest } from 'modules/pool/actions'\nimport { openModal, OpenModalAction } from 'modules/modal/actions'\nimport { PoolGroup } from 'modules/poolGroup/types'\n\nexport type Props = PoolsRequestFilters & {\n  location: Location\n  pools: Pool[] | null\n  poolGroups: PoolGroup[]\n  total: number | null\n  totalPages: number | null\n  isLoggedIn: boolean\n  onNavegateToHome: () => void\n  onNavegateToViewPool: (poolId: string) => void\n  onPageChange: (filters: PoolsRequestFilters) => void\n  onLoadPools: typeof loadPoolsRequest\n  onOpenModal: typeof openModal\n}\n\nexport type State = {}\n\nexport type MapStateProps = Pick<\n  Props,\n  'location' | 'pools' | 'poolGroups' | 'total' | 'totalPages' | 'page' | 'sortBy' | 'sortOrder' | 'group' | 'ethAddress' | 'isLoggedIn'\n>\nexport type MapDispatchProps = Pick<Props, 'onOpenModal' | 'onPageChange' | 'onNavegateToHome' | 'onNavegateToViewPool' | 'onLoadPools'>\nexport type MapDispatch = Dispatch<LikePoolRequestAction | OpenModalAction | LoadPoolsRequestAction | CallHistoryMethodAction>\n\nexport const filterAttributes = ['page', 'sortBy', 'sortOrder', 'group', 'ethAddress'] as (keyof PoolsRequestFilters)[]\n"]},"metadata":{},"sourceType":"module"}