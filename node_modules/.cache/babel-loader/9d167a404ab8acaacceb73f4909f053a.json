{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProviderAdapter = void 0;\n/**\n * Adapt popular provider methods to they can work across different popular web3 libs (such as web3x and ethers).\n * `sendAsync`, another popular method, is not being adapted here as we didn't find it necessary in our testing.\n * In case you need to adapt it, please create and issue or send a PR\n */\n\nvar ProviderAdapter = /*#__PURE__*/function () {\n  function ProviderAdapter(provider) {\n    var _this = this;\n\n    _classCallCheck(this, ProviderAdapter);\n\n    this.provider = provider;\n    this.id = 0;\n\n    this.on = function (event, listener) {\n      return _this.provider.on(event, listener);\n    };\n\n    this.emit = function (event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return _this.provider.emit(event, args);\n    };\n\n    this.removeListener = function (event, listener) {\n      return _this.provider.removeListener(event, listener);\n    };\n\n    this.request = function (_ref) {\n      var method = _ref.method,\n          params = _ref.params;\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.isModernProvider() ? this.provider.request({\n                  method: method,\n                  params: params\n                }) : this.send(method, params));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    };\n\n    this.sendAsync = function (args, callback) {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.hasSendAsync() ? this.provider.sendAsync(args, callback) : this.send(args, callback));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    };\n  }\n\n  _createClass(ProviderAdapter, [{\n    key: \"send\",\n    value: function send(methodOrArgs, paramsOrCallback) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var method, params, callback, hasCallback, args, _yield$this$provider$, _yield$this$provider$2, err, result, returnValue, _ref2, _ref3, _err, value;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                hasCallback = typeof paramsOrCallback === 'function';\n\n                if (hasCallback) {\n                  args = methodOrArgs; // if sendParams is a function, the first argument has all the other data\n\n                  params = args.params || [];\n                  method = args.method;\n                  callback = paramsOrCallback;\n                } else {\n                  method = methodOrArgs;\n                  params = paramsOrCallback || [];\n\n                  callback = function callback(err, value) {\n                    if (err) {\n                      throw err;\n                    }\n\n                    return value;\n                  };\n                }\n\n                if (!this.isModernProvider()) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                _context3.next = 5;\n                return this.provider.request({\n                  method: method,\n                  params: params\n                }).then(function (result) {\n                  return [null, result];\n                }).catch(function (error) {\n                  return [error, undefined];\n                });\n\n              case 5:\n                _yield$this$provider$ = _context3.sent;\n                _yield$this$provider$2 = _slicedToArray(_yield$this$provider$, 2);\n                err = _yield$this$provider$2[0];\n                result = _yield$this$provider$2[1];\n                returnValue = hasCallback ? {\n                  id: '',\n                  jsonrpc: '2.0',\n                  result: result\n                } : result;\n                return _context3.abrupt(\"return\", callback(err, returnValue));\n\n              case 13:\n                this.patchOldMobile();\n\n                if (!hasCallback) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                _context3.next = 17;\n                return new Promise(function (resolve) {\n                  return _this2.provider.send(methodOrArgs, function (err, value) {\n                    resolve([err, value]);\n                  });\n                });\n\n              case 17:\n                _context3.t0 = _context3.sent;\n                _context3.next = 23;\n                break;\n\n              case 20:\n                _context3.next = 22;\n                return new Promise(function (resolve) {\n                  return _this2.provider.send({\n                    jsonrpc: '2.0',\n                    id: ++_this2.id,\n                    method: method,\n                    params: params\n                  }, function (err, value) {\n                    resolve([value && value.hasOwnProperty('error') ? value.error : err, value && value.hasOwnProperty('result') ? value.result : value]);\n                  });\n                });\n\n              case 22:\n                _context3.t0 = _context3.sent;\n\n              case 23:\n                _ref2 = _context3.t0;\n                _ref3 = _slicedToArray(_ref2, 2);\n                _err = _ref3[0];\n                value = _ref3[1];\n                return _context3.abrupt(\"return\", callback(_err, value));\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"isModernProvider\",\n    value: function isModernProvider() {\n      return typeof this.provider['request'] === 'function';\n    }\n  }, {\n    key: \"hasSendAsync\",\n    value: function hasSendAsync() {\n      return typeof this.provider['sendAsync'] === 'function';\n    }\n  }, {\n    key: \"patchOldMobile\",\n    value: function patchOldMobile() {\n      // Patch for old providers and mobile providers which do not use promises at send as sendAsync\n      if (this.provider && !this.provider.isDapper && !this.provider.isFortmatic && !this.provider.isMetamask && this.hasSendAsync() && this.provider.send !== this.provider.sendAsync) {\n        // send has to be replaced by sendAsync for old providers\n        this.provider.send = this.provider.sendAsync;\n      }\n    }\n  }], [{\n    key: \"adapt\",\n    value: function adapt(provider) {\n      var providerAdapter = new ProviderAdapter(provider);\n      return Object.assign(Object.assign({}, provider), {\n        on: providerAdapter.on,\n        emit: providerAdapter.emit,\n        removeListener: providerAdapter.removeListener,\n        request: providerAdapter.request,\n        sendAsync: providerAdapter.sendAsync,\n        send: providerAdapter.send.bind(providerAdapter)\n      });\n    }\n  }]);\n\n  return ProviderAdapter;\n}();\n\nexports.ProviderAdapter = ProviderAdapter;","map":null,"metadata":{},"sourceType":"script"}