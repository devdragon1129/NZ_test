{"ast":null,"code":"import { getCurrentLocale, t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport formatDistanceToNowI18N from 'date-fns/formatDistanceToNow';\nimport en from 'date-fns/locale/en-US';\nimport es from 'date-fns/locale/es';\nimport zh from 'date-fns/locale/zh-CN';\nvar locales = {\n  en: en,\n  'en-EN': en,\n  es: es,\n  'es-ES': es,\n  zh: zh,\n  'zh-CN': zh\n};\nexport function formatDistanceToNow(date) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var locale = locales[getCurrentLocale().locale];\n\n  if (locale) {\n    options.locale = locale;\n  }\n\n  return formatDistanceToNowI18N(date, options);\n}\nexport function formatTime(seconds) {\n  if (seconds > 3600) {\n    return t('time.hours', {\n      amount: Number((seconds / 3600).toFixed(1)).toLocaleString()\n    });\n  } else if (seconds > 60) {\n    return t('time.minutes', {\n      amount: Math.round(seconds / 60)\n    });\n  } else {\n    return t('time.seconds', {\n      amount: Math.round(seconds)\n    });\n  }\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/lib/date.ts"],"names":["getCurrentLocale","t","formatDistanceToNowI18N","en","es","zh","locales","formatDistanceToNow","date","options","locale","formatTime","seconds","amount","Number","toFixed","toLocaleString","Math","round"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,CAA3B,QAAoC,mDAApC;AACA,OAAOC,uBAAP,MAAoC,8BAApC;AACA,OAAOC,EAAP,MAAe,uBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,uBAAf;AAEA,IAAMC,OAA+B,GAAG;AACtCH,EAAAA,EAAE,EAAFA,EADsC;AAEtC,WAASA,EAF6B;AAGtCC,EAAAA,EAAE,EAAFA,EAHsC;AAItC,WAASA,EAJ6B;AAKtCC,EAAAA,EAAE,EAAFA,EALsC;AAMtC,WAASA;AAN6B,CAAxC;AASA,OAAO,SAASE,mBAAT,CACLC,IADK,EAOL;AAAA,MALAC,OAKA,uEADI,EACJ;AACA,MAAMC,MAAM,GAAGJ,OAAO,CAACN,gBAAgB,GAAGU,MAApB,CAAtB;;AAEA,MAAIA,MAAJ,EAAY;AACVD,IAAAA,OAAO,CAACC,MAAR,GAAiBA,MAAjB;AACD;;AAED,SAAOR,uBAAuB,CAACM,IAAD,EAAOC,OAAP,CAA9B;AACD;AAED,OAAO,SAASE,UAAT,CAAoBC,OAApB,EAAqC;AAC1C,MAAIA,OAAO,GAAG,IAAd,EAAoB;AAClB,WAAOX,CAAC,CAAC,YAAD,EAAe;AAAEY,MAAAA,MAAM,EAAEC,MAAM,CAAC,CAACF,OAAO,GAAG,IAAX,EAAiBG,OAAjB,CAAyB,CAAzB,CAAD,CAAN,CAAoCC,cAApC;AAAV,KAAf,CAAR;AACD,GAFD,MAEO,IAAIJ,OAAO,GAAG,EAAd,EAAkB;AACvB,WAAOX,CAAC,CAAC,cAAD,EAAiB;AAAEY,MAAAA,MAAM,EAAEI,IAAI,CAACC,KAAL,CAAWN,OAAO,GAAG,EAArB;AAAV,KAAjB,CAAR;AACD,GAFM,MAEA;AACL,WAAOX,CAAC,CAAC,cAAD,EAAiB;AAAEY,MAAAA,MAAM,EAAEI,IAAI,CAACC,KAAL,CAAWN,OAAX;AAAV,KAAjB,CAAR;AACD;AACF","sourcesContent":["import { getCurrentLocale, t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport formatDistanceToNowI18N from 'date-fns/formatDistanceToNow'\nimport en from 'date-fns/locale/en-US'\nimport es from 'date-fns/locale/es'\nimport zh from 'date-fns/locale/zh-CN'\n\nconst locales: Record<string, Locale> = {\n  en,\n  'en-EN': en,\n  es,\n  'es-ES': es,\n  zh,\n  'zh-CN': zh\n}\n\nexport function formatDistanceToNow(\n  date: number | Date,\n  options: {\n    includeSeconds?: boolean\n    addSuffix?: boolean\n    locale?: Locale\n  } = {}\n) {\n  const locale = locales[getCurrentLocale().locale]\n\n  if (locale) {\n    options.locale = locale\n  }\n\n  return formatDistanceToNowI18N(date, options)\n}\n\nexport function formatTime(seconds: number) {\n  if (seconds > 3600) {\n    return t('time.hours', { amount: Number((seconds / 3600).toFixed(1)).toLocaleString() })\n  } else if (seconds > 60) {\n    return t('time.minutes', { amount: Math.round(seconds / 60) })\n  } else {\n    return t('time.seconds', { amount: Math.round(seconds) })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}