{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../Misc/typeStore';\n/**\r\n * Operations supported by the Wave block\r\n */\n\nexport var WaveBlockKind;\n\n(function (WaveBlockKind) {\n  /** SawTooth */\n  WaveBlockKind[WaveBlockKind[\"SawTooth\"] = 0] = \"SawTooth\";\n  /** Square */\n\n  WaveBlockKind[WaveBlockKind[\"Square\"] = 1] = \"Square\";\n  /** Triangle */\n\n  WaveBlockKind[WaveBlockKind[\"Triangle\"] = 2] = \"Triangle\";\n})(WaveBlockKind || (WaveBlockKind = {}));\n/**\r\n * Block used to apply wave operation to floats\r\n */\n\n\nvar WaveBlock =\n/** @class */\nfunction (_super) {\n  __extends(WaveBlock, _super);\n  /**\r\n   * Creates a new WaveBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function WaveBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n    /**\r\n     * Gets or sets the kibnd of wave to be applied by the block\r\n     */\n\n\n    _this.kind = WaveBlockKind.SawTooth;\n\n    _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n\n    _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  WaveBlock.prototype.getClassName = function () {\n    return \"WaveBlock\";\n  };\n\n  Object.defineProperty(WaveBlock.prototype, \"input\", {\n    /**\r\n     * Gets the input component\r\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(WaveBlock.prototype, \"output\", {\n    /**\r\n     * Gets the output component\r\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  WaveBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n\n    switch (this.kind) {\n      case WaveBlockKind.SawTooth:\n        {\n          state.compilationString += this._declareOutput(output, state) + (\" = \" + this.input.associatedVariableName + \" - floor(0.5 + \" + this.input.associatedVariableName + \");\\r\\n\");\n          break;\n        }\n\n      case WaveBlockKind.Square:\n        {\n          state.compilationString += this._declareOutput(output, state) + (\" = 1.0 - 2.0 * round(fract(\" + this.input.associatedVariableName + \"));\\r\\n\");\n          break;\n        }\n\n      case WaveBlockKind.Triangle:\n        {\n          state.compilationString += this._declareOutput(output, state) + (\" = 2.0 * abs(2.0 * (\" + this.input.associatedVariableName + \" - floor(0.5 + \" + this.input.associatedVariableName + \"))) - 1.0;\\r\\n\");\n          break;\n        }\n    }\n\n    return this;\n  };\n\n  WaveBlock.prototype.serialize = function () {\n    var serializationObject = _super.prototype.serialize.call(this);\n\n    serializationObject.kind = this.kind;\n    return serializationObject;\n  };\n\n  WaveBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n    _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n\n    this.kind = serializationObject.kind;\n  };\n\n  return WaveBlock;\n}(NodeMaterialBlock);\n\nexport { WaveBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.WaveBlock\"] = WaveBlock;","map":null,"metadata":{},"sourceType":"module"}