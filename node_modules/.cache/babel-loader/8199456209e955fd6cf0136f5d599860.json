{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\r\n * Gather the list of keyboard event types as constants.\r\n */\n\nvar KeyboardEventTypes =\n/** @class */\nfunction () {\n  function KeyboardEventTypes() {}\n  /**\r\n   * The keydown event is fired when a key becomes active (pressed).\r\n   */\n\n\n  KeyboardEventTypes.KEYDOWN = 0x01;\n  /**\r\n   * The keyup event is fired when a key has been released.\r\n   */\n\n  KeyboardEventTypes.KEYUP = 0x02;\n  return KeyboardEventTypes;\n}();\n\nexport { KeyboardEventTypes };\n/**\r\n * This class is used to store keyboard related info for the onKeyboardObservable event.\r\n */\n\nvar KeyboardInfo =\n/** @class */\nfunction () {\n  /**\r\n   * Instantiates a new keyboard info.\r\n   * This class is used to store keyboard related info for the onKeyboardObservable event.\r\n   * @param type Defines the type of event (KeyboardEventTypes)\r\n   * @param event Defines the related dom event\r\n   */\n  function KeyboardInfo(\n  /**\r\n   * Defines the type of event (KeyboardEventTypes)\r\n   */\n  type,\n  /**\r\n   * Defines the related dom event\r\n   */\n  event) {\n    this.type = type;\n    this.event = event;\n  }\n\n  return KeyboardInfo;\n}();\n\nexport { KeyboardInfo };\n/**\r\n * This class is used to store keyboard related info for the onPreKeyboardObservable event.\r\n * Set the skipOnKeyboardObservable property to true if you want the engine to stop any process after this event is triggered, even not calling onKeyboardObservable\r\n */\n\nvar KeyboardInfoPre =\n/** @class */\nfunction (_super) {\n  __extends(KeyboardInfoPre, _super);\n  /**\r\n   * Instantiates a new keyboard pre info.\r\n   * This class is used to store keyboard related info for the onPreKeyboardObservable event.\r\n   * @param type Defines the type of event (KeyboardEventTypes)\r\n   * @param event Defines the related dom event\r\n   */\n\n\n  function KeyboardInfoPre(\n  /**\r\n   * Defines the type of event (KeyboardEventTypes)\r\n   */\n  type,\n  /**\r\n   * Defines the related dom event\r\n   */\n  event) {\n    var _this = _super.call(this, type, event) || this;\n\n    _this.type = type;\n    _this.event = event;\n    _this.skipOnPointerObservable = false;\n    return _this;\n  }\n\n  return KeyboardInfoPre;\n}(KeyboardInfo);\n\nexport { KeyboardInfoPre };","map":null,"metadata":{},"sourceType":"module"}