{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getCurrentProject } from 'modules/project/selectors';\nimport { isReady, isLoading, isScreenshotReady } from 'modules/editor/selectors';\nimport { shareProject } from 'modules/project/actions';\nimport { shareScene } from 'modules/ui/share/actions';\nimport { isLoggedIn } from 'modules/identity/selectors';\nimport { loginRequest } from 'modules/identity/actions';\nimport ShareModal from './ShareModal';\n\nvar mapState = function mapState(state, _ownProps) {\n  return {\n    project: getCurrentProject(state),\n    isLoading: !isReady(state) || isLoading(state),\n    isScreenshotReady: isScreenshotReady(state),\n    isLoggedIn: isLoggedIn(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onUpdate: function onUpdate(id) {\n      return dispatch(shareProject(id));\n    },\n    onLogin: function onLogin(providerType) {\n      return dispatch(loginRequest(providerType));\n    },\n    onShare: function onShare(target) {\n      return dispatch(shareScene(target));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(ShareModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/ShareModal/ShareModal.container.ts"],"names":["connect","getCurrentProject","isReady","isLoading","isScreenshotReady","shareProject","shareScene","isLoggedIn","loginRequest","ShareModal","mapState","state","_ownProps","project","mapDispatch","dispatch","onUpdate","id","onLogin","providerType","onShare","target"],"mappings":"AACA,SAASA,OAAT,QAAwB,aAAxB;AAGA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,iBAA7B,QAAsD,0BAAtD;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,SAAnB;AAAA,SAA2D;AAC1EC,IAAAA,OAAO,EAAEZ,iBAAiB,CAACU,KAAD,CADgD;AAE1ER,IAAAA,SAAS,EAAE,CAACD,OAAO,CAACS,KAAD,CAAR,IAAmBR,SAAS,CAACQ,KAAD,CAFmC;AAG1EP,IAAAA,iBAAiB,EAAEA,iBAAiB,CAACO,KAAD,CAHsC;AAI1EJ,IAAAA,UAAU,EAAEA,UAAU,CAACI,KAAD;AAJoD,GAA3D;AAAA,CAAjB;;AAOA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA2C;AAC7DC,IAAAA,QAAQ,EAAE,kBAACC,EAAD;AAAA,aAAgBF,QAAQ,CAACV,YAAY,CAACY,EAAD,CAAb,CAAxB;AAAA,KADmD;AAE7DC,IAAAA,OAAO,EAAE,iBAAAC,YAAY;AAAA,aAAIJ,QAAQ,CAACP,YAAY,CAACW,YAAD,CAAb,CAAZ;AAAA,KAFwC;AAG7DC,IAAAA,OAAO,EAAE,iBAACC,MAAD;AAAA,aAAyBN,QAAQ,CAACT,UAAU,CAACe,MAAD,CAAX,CAAjC;AAAA;AAHoD,GAA3C;AAAA,CAApB;;AAMA,eAAerB,OAAO,CAACU,QAAD,EAAWI,WAAX,CAAP,CAA+BL,UAA/B,CAAf","sourcesContent":["import { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { RootState } from 'modules/common/types'\nimport { MapStateProps, MapDispatchProps, OwnProps } from './ShareModal.types'\nimport { getCurrentProject } from 'modules/project/selectors'\nimport { isReady, isLoading, isScreenshotReady } from 'modules/editor/selectors'\nimport { shareProject } from 'modules/project/actions'\nimport { shareScene } from 'modules/ui/share/actions'\nimport { ShareTarget } from 'modules/ui/share/types'\nimport { isLoggedIn } from 'modules/identity/selectors'\nimport { loginRequest } from 'modules/identity/actions'\nimport ShareModal from './ShareModal'\n\nconst mapState = (state: RootState, _ownProps: OwnProps): MapStateProps => ({\n  project: getCurrentProject(state)!,\n  isLoading: !isReady(state) || isLoading(state),\n  isScreenshotReady: isScreenshotReady(state),\n  isLoggedIn: isLoggedIn(state)\n})\n\nconst mapDispatch = (dispatch: Dispatch): MapDispatchProps => ({\n  onUpdate: (id: string) => dispatch(shareProject(id)),\n  onLogin: providerType => dispatch(loginRequest(providerType)),\n  onShare: (target: ShareTarget) => dispatch(shareScene(target))\n})\n\nexport default connect(mapState, mapDispatch)(ShareModal)\n"]},"metadata":{},"sourceType":"module"}