{"ast":null,"code":"import _toConsumableArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/CollectionManagersModal/CollectionManagersModal.tsx\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\nimport { ModalNavigation, ModalActions } from 'decentraland-ui';\nimport { Network } from '@dcl/schemas';\nimport { NetworkButton } from 'decentraland-dapps/dist/containers';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport { isValid } from 'lib/address';\nimport Manager from './Manager';\nimport EmptyManager from './EmptyManager';\nimport './CollectionManagersModal.css';\n\nvar CollectionManagersModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CollectionManagersModal, _React$PureComponent);\n\n  function CollectionManagersModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionManagersModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionManagersModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _this.getInitialState();\n\n    _this.handleAddNewManager = function () {\n      var managers = _this.state.managers;\n\n      _this.setState({\n        managers: [].concat(_toConsumableArray(managers), [undefined])\n      });\n    };\n\n    _this.handleAddManager = function (index, manager) {\n      if (_this.isValidManager(manager)) {\n        var managers = _this.removeManagerAtIndex(index);\n\n        managers.push(manager);\n\n        _this.setState({\n          managers: managers\n        });\n      }\n    };\n\n    _this.handleRemoveManager = function (manager) {\n      var managers = _this.state.managers;\n\n      _this.setState({\n        managers: managers.filter(function (_manager) {\n          return _manager !== manager;\n        })\n      });\n    };\n\n    _this.handleCancelNew = function (index) {\n      _this.setState({\n        managers: _this.removeManagerAtIndex(index)\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var _this$props = _this.props,\n          collection = _this$props.collection,\n          onSetManagers = _this$props.onSetManagers;\n      var managers = _this.state.managers;\n      var accessList = [];\n\n      var _iterator = _createForOfIteratorHelper(collection.managers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var manager = _step.value;\n\n          if (!managers.includes(manager)) {\n            accessList.push({\n              address: manager,\n              hasAccess: false,\n              collection: collection\n            });\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(managers),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _manager2 = _step2.value;\n\n          if (!collection.managers.includes(_manager2)) {\n            accessList.push({\n              address: _manager2,\n              hasAccess: true,\n              collection: collection\n            });\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      onSetManagers(collection, accessList);\n    };\n\n    return _this;\n  }\n\n  _createClass(CollectionManagersModal, [{\n    key: \"getInitialState\",\n    value: function getInitialState() {\n      var collection = this.props.collection;\n      var managers = new Set(collection.managers);\n      return {\n        managers: Array.from(managers)\n      };\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      return this.state.managers.every(function (manager) {\n        return !manager;\n      });\n    }\n  }, {\n    key: \"removeManagerAtIndex\",\n    value: function removeManagerAtIndex(index) {\n      var managers = this.state.managers;\n      return [].concat(_toConsumableArray(managers.slice(0, index)), _toConsumableArray(managers.slice(index + 1)));\n    }\n  }, {\n    key: \"isValidManager\",\n    value: function isValidManager(manager) {\n      return isValid(manager) && !this.state.managers.includes(manager);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          isLoading = _this$props2.isLoading,\n          onClose = _this$props2.onClose;\n      var managers = this.state.managers;\n      return /*#__PURE__*/React.createElement(Modal, {\n        className: \"CollectionManagersModal\",\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('collection_managers_modal.title'),\n        subtitle: t('collection_managers_modal.subtitle'),\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"managers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, managers.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"managers-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, managers.map(function (manager, index) {\n        return manager ? /*#__PURE__*/React.createElement(Manager, {\n          key: index,\n          manager: manager,\n          onRemove: _this2.handleRemoveManager,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }\n        }) : /*#__PURE__*/React.createElement(EmptyManager, {\n          key: index,\n          onAdd: function onAdd(manager) {\n            return _this2.handleAddManager(index, manager);\n          },\n          onCancel: function onCancel() {\n            return _this2.handleCancelNew(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 23\n          }\n        });\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"add-managers link\",\n        onClick: this.handleAddNewManager,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, t('collection_managers_modal.add_manager'))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty-managers-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, t('collection_managers_modal.no_managers'), \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"link\",\n        onClick: this.handleAddNewManager,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, t('collection_managers_modal.adding_one')))), managers.length ? /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NetworkButton, {\n        primary: true,\n        onClick: this.handleSubmit,\n        loading: isLoading,\n        disabled: this.isDisabled(),\n        network: Network.MATIC,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, t('global.add'))) : null));\n    }\n  }]);\n\n  return CollectionManagersModal;\n}(React.PureComponent);\n\nexport { CollectionManagersModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CollectionManagersModal/CollectionManagersModal.tsx"],"names":["React","ModalNavigation","ModalActions","Network","NetworkButton","t","Modal","isValid","Manager","EmptyManager","CollectionManagersModal","state","getInitialState","handleAddNewManager","managers","setState","undefined","handleAddManager","index","manager","isValidManager","removeManagerAtIndex","push","handleRemoveManager","filter","_manager","handleCancelNew","handleSubmit","props","collection","onSetManagers","accessList","includes","address","hasAccess","Set","Array","from","every","slice","isLoading","onClose","length","map","isDisabled","MATIC","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { ModalNavigation, ModalActions } from 'decentraland-ui'\nimport { Network } from '@dcl/schemas'\nimport { NetworkButton } from 'decentraland-dapps/dist/containers'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\n\nimport { isValid } from 'lib/address'\nimport { Access } from 'modules/collection/types'\nimport Manager from './Manager'\nimport EmptyManager from './EmptyManager'\nimport { Props, State } from './CollectionManagersModal.types'\nimport './CollectionManagersModal.css'\n\nexport default class CollectionManagersModal extends React.PureComponent<Props, State> {\n  state: State = this.getInitialState()\n\n  getInitialState(): State {\n    const { collection } = this.props\n    const managers = new Set(collection.managers)\n    return {\n      managers: Array.from(managers)\n    }\n  }\n\n  handleAddNewManager = () => {\n    const { managers } = this.state\n    this.setState({\n      managers: [...managers, undefined]\n    })\n  }\n\n  handleAddManager = (index: number, manager: string) => {\n    if (this.isValidManager(manager)) {\n      const managers = this.removeManagerAtIndex(index)\n      managers.push(manager)\n      this.setState({ managers })\n    }\n  }\n\n  handleRemoveManager = (manager: string) => {\n    const { managers } = this.state\n    this.setState({\n      managers: managers.filter(_manager => _manager !== manager)\n    })\n  }\n\n  handleCancelNew = (index: number) => {\n    this.setState({\n      managers: this.removeManagerAtIndex(index)\n    })\n  }\n\n  handleSubmit = () => {\n    const { collection, onSetManagers } = this.props\n    const { managers } = this.state\n    const accessList: Access[] = []\n    for (const manager of collection.managers) {\n      if (!managers.includes(manager)) {\n        accessList.push({ address: manager, hasAccess: false, collection })\n      }\n    }\n    for (const manager of managers) {\n      if (!collection.managers.includes(manager!)) {\n        accessList.push({ address: manager!, hasAccess: true, collection })\n      }\n    }\n    onSetManagers(collection, accessList)\n  }\n\n  isDisabled() {\n    return this.state.managers.every(manager => !manager)\n  }\n\n  removeManagerAtIndex(index: number) {\n    const { managers } = this.state\n    return [...managers.slice(0, index), ...managers.slice(index + 1)]\n  }\n\n  isValidManager(manager: string) {\n    return isValid(manager) && !this.state.managers.includes(manager)\n  }\n\n  render() {\n    const { isLoading, onClose } = this.props\n    const { managers } = this.state\n    return (\n      <Modal className=\"CollectionManagersModal\" onClose={onClose}>\n        <ModalNavigation\n          title={t('collection_managers_modal.title')}\n          subtitle={t('collection_managers_modal.subtitle')}\n          onClose={onClose}\n        />\n        <Modal.Content>\n          <div className=\"managers\">\n            {managers.length > 0 ? (\n              <>\n                <div className=\"managers-list\">\n                  {managers.map((manager, index) =>\n                    manager ? (\n                      <Manager key={index} manager={manager} onRemove={this.handleRemoveManager} />\n                    ) : (\n                      <EmptyManager\n                        key={index}\n                        onAdd={(manager: string) => this.handleAddManager(index, manager)}\n                        onCancel={() => this.handleCancelNew(index)}\n                      />\n                    )\n                  )}\n                </div>\n                <div className=\"add-managers link\" onClick={this.handleAddNewManager}>\n                  {t('collection_managers_modal.add_manager')}\n                </div>\n              </>\n            ) : (\n              <div className=\"empty-managers-list\">\n                {t('collection_managers_modal.no_managers')}&nbsp;\n                <span className=\"link\" onClick={this.handleAddNewManager}>\n                  {t('collection_managers_modal.adding_one')}\n                </span>\n              </div>\n            )}\n          </div>\n          {managers.length ? (\n            <ModalActions>\n              <NetworkButton primary onClick={this.handleSubmit} loading={isLoading} disabled={this.isDisabled()} network={Network.MATIC}>\n                {t('global.add')}\n              </NetworkButton>\n            </ModalActions>\n          ) : null}\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}