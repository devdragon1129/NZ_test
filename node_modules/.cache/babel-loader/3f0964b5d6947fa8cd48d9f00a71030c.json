{"ast":null,"code":"import { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial\";\nimport { GLTFLoader } from \"../glTFLoader\";\nvar NAME = \"KHR_materials_ior\";\n/**\r\n * [Proposed Specification](https://github.com/KhronosGroup/glTF/pull/1718)\r\n * !!! Experimental Extension Subject to Changes !!!\r\n */\n\nvar KHR_materials_ior =\n/** @class */\nfunction () {\n  /** @hidden */\n  function KHR_materials_ior(loader) {\n    /**\r\n     * The name of this extension.\r\n     */\n    this.name = NAME;\n    /**\r\n     * Defines a number that determines the order the extensions are applied.\r\n     */\n\n    this.order = 180;\n    this._loader = loader;\n    this.enabled = this._loader.isExtensionUsed(NAME);\n  }\n  /** @hidden */\n\n\n  KHR_materials_ior.prototype.dispose = function () {\n    this._loader = null;\n  };\n  /** @hidden */\n\n\n  KHR_materials_ior.prototype.loadMaterialPropertiesAsync = function (context, material, babylonMaterial) {\n    var _this = this;\n\n    return GLTFLoader.LoadExtensionAsync(context, material, this.name, function (extensionContext, extension) {\n      var promises = new Array();\n      promises.push(_this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n      promises.push(_this._loadIorPropertiesAsync(extensionContext, extension, babylonMaterial));\n      return Promise.all(promises).then(function () {});\n    });\n  };\n\n  KHR_materials_ior.prototype._loadIorPropertiesAsync = function (context, properties, babylonMaterial) {\n    if (!(babylonMaterial instanceof PBRMaterial)) {\n      throw new Error(context + \": Material type not supported\");\n    }\n\n    if (properties.ior !== undefined) {\n      babylonMaterial.indexOfRefraction = properties.ior;\n    } else {\n      babylonMaterial.indexOfRefraction = KHR_materials_ior._DEFAULT_IOR;\n    }\n\n    return Promise.resolve();\n  };\n  /**\r\n   * Default ior Value from the spec.\r\n   */\n\n\n  KHR_materials_ior._DEFAULT_IOR = 1.5;\n  return KHR_materials_ior;\n}();\n\nexport { KHR_materials_ior };\nGLTFLoader.RegisterExtension(NAME, function (loader) {\n  return new KHR_materials_ior(loader);\n});","map":null,"metadata":{},"sourceType":"module"}