{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/SceneListPage/SceneListPage.tsx\";\nimport * as React from 'react';\nimport { Loader, Page, Container, Pagination, Dropdown, Responsive, Row, Column, Narrow, Section, Header } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Footer from 'components/Footer';\nimport Navbar from 'components/Navbar';\nimport Back from 'components/Back';\nimport { SortBy } from 'modules/pool/types';\nimport { filterAttributes } from './SceneListPage.types';\nimport PoolCard from './PoolCard';\nimport './SceneListPage.css';\n\nvar SceneListPage = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(SceneListPage, _React$PureComponent);\n\n  function SceneListPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SceneListPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SceneListPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChangeGroup = function (_event, data) {\n      var _this$getFilters = _this.getFilters(),\n          group = _this$getFilters.group,\n          filters = _objectWithoutProperties(_this$getFilters, [\"group\"]);\n\n      var page = 1;\n\n      if (data.value === 'all') {\n        _this.handleChangeFilters(_objectSpread({}, filters, {\n          page: page\n        }));\n      } else {\n        _this.handleChangeFilters(_objectSpread({}, filters, {\n          page: page,\n          group: data.value\n        }));\n      }\n    };\n\n    _this.handleChangeUser = function (_event, data) {\n      var _this$getFilters2 = _this.getFilters(),\n          ethAddress = _this$getFilters2.ethAddress,\n          filters = _objectWithoutProperties(_this$getFilters2, [\"ethAddress\"]);\n\n      var page = 1;\n\n      if (data.value === 'all') {\n        _this.handleChangeFilters(_objectSpread({}, filters, {\n          page: page\n        }));\n      } else {\n        _this.handleChangeFilters(_objectSpread({}, filters, {\n          page: page,\n          ethAddress: data.value\n        }));\n      }\n    };\n\n    _this.handleChangeSort = function (_event, data) {\n      var filters = _this.getFilters();\n\n      var page = 1;\n\n      if (data.value && filters.sortBy !== data.value) {\n        switch (data.value) {\n          case SortBy.NAME:\n            _this.handleChangeFilters(_objectSpread({}, filters, {\n              page: page,\n              sortBy: data.value,\n              sortOrder: 'asc'\n            }));\n\n            break;\n\n          default:\n            _this.handleChangeFilters(_objectSpread({}, filters, {\n              page: page,\n              sortBy: data.value,\n              sortOrder: 'desc'\n            }));\n\n        }\n      }\n    };\n\n    _this.handlePageChange = function (_event, data) {\n      var filters = _this.getFilters();\n\n      var newPage = Number(data.activePage);\n\n      if (!Number.isNaN(newPage) && newPage > 0) {\n        _this.handleChangeFilters(_objectSpread({}, filters, {\n          page: newPage\n        }));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SceneListPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var location = this.props.location;\n      var filters = this.getFilters();\n\n      if (location.search === '' || location.search === '?') {\n        filters.sortBy = SortBy.NEWEST;\n        filters.sortOrder = 'desc';\n      }\n\n      this.handleChangeFilters(filters);\n    }\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      return filterAttributes.reduce(function (filters, key) {\n        var value = props[key];\n\n        if (value !== undefined) {\n          filters[key] = value;\n        }\n\n        return filters;\n      }, {});\n    }\n  }, {\n    key: \"handleChangeFilters\",\n    value: function handleChangeFilters(filters) {\n      var _this$props = this.props,\n          onPageChange = _this$props.onPageChange,\n          onLoadPools = _this$props.onLoadPools;\n      onPageChange(filters);\n      onLoadPools(filters);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          pools = _this$props2.pools,\n          total = _this$props2.total,\n          totalPages = _this$props2.totalPages,\n          isLoggedIn = _this$props2.isLoggedIn,\n          onNavegateToHome = _this$props2.onNavegateToHome;\n      var filters = this.getFilters();\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n        isFullscreen: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Page, {\n        isFullscreen: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SceneListPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Section, {\n        className: \"navigation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Back, {\n        absolute: true,\n        onClick: onNavegateToHome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Narrow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 27\n        }\n      }, t('scene_list_page.projects_title')))), /*#__PURE__*/React.createElement(Column, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Responsive, {\n        minWidth: 1025,\n        as: React.Fragment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 27\n        }\n      }, isLoggedIn && /*#__PURE__*/React.createElement(Dropdown, {\n        direction: \"left\",\n        value: filters.ethAddress || 'all',\n        options: [{\n          value: 'all',\n          text: t('scene_list_page.filters.all_users')\n        }, {\n          value: 'me',\n          text: t('scene_list_page.filters.only_me')\n        }],\n        onChange: this.handleChangeUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(Dropdown, {\n        direction: \"left\",\n        value: filters.sortBy,\n        options: [{\n          value: SortBy.NEWEST,\n          text: t('scene_list_page.filters.newest')\n        }, {\n          value: SortBy.NAME,\n          text: t('scene_list_page.filters.name')\n        }, {\n          value: SortBy.LIKES,\n          text: t('scene_list_page.filters.likes')\n        }, {\n          value: SortBy.ITEMS,\n          text: t('scene_list_page.filters.items')\n        }, {\n          value: SortBy.SMART_ITEMS,\n          text: t('scene_list_page.filters.smart_items')\n        }, {\n          value: SortBy.SIZE,\n          text: t('scene_list_page.filters.size')\n        }],\n        onChange: this.handleChangeSort,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 27\n        }\n      }))))))), /*#__PURE__*/React.createElement(Narrow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"PoolCardList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, pools === null && /*#__PURE__*/React.createElement(Loader, {\n        active: true,\n        size: \"huge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 38\n        }\n      }), Array.isArray(pools) && total === 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty-projects\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 59\n        }\n      }, t('scene_list_page.no_projects')), Array.isArray(pools) && total !== 0 && /*#__PURE__*/React.createElement(React.Fragment, null, pools.map(function (pool) {\n        return /*#__PURE__*/React.createElement(PoolCard, {\n          key: pool.id,\n          pool: pool,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }\n        });\n      }))))), /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, total !== null && totalPages !== null && /*#__PURE__*/React.createElement(Pagination, {\n        firstItem: null,\n        lastItem: null,\n        totalPages: totalPages,\n        activePage: filters.page,\n        onPageChange: this.handlePageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SceneListPage;\n}(React.PureComponent);\n\nexport { SceneListPage as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SceneListPage/SceneListPage.tsx"],"names":["React","Loader","Page","Container","Pagination","Dropdown","Responsive","Row","Column","Narrow","Section","Header","t","Footer","Navbar","Back","SortBy","filterAttributes","PoolCard","SceneListPage","handleChangeGroup","_event","data","getFilters","group","filters","page","value","handleChangeFilters","handleChangeUser","ethAddress","handleChangeSort","sortBy","NAME","sortOrder","handlePageChange","newPage","Number","activePage","isNaN","location","props","search","NEWEST","reduce","key","undefined","onPageChange","onLoadPools","pools","total","totalPages","isLoggedIn","onNavegateToHome","Fragment","text","LIKES","ITEMS","SMART_ITEMS","SIZE","Array","isArray","map","pool","id","PureComponent"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,QALF,EAQEC,UARF,EASEC,GATF,EAUEC,MAVF,EAWEC,MAXF,EAYEC,OAZF,EAaEC,MAbF,QAcO,iBAdP;AAeA,SAASC,CAAT,QAAkB,mDAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAA8BC,MAA9B,QAA4C,oBAA5C;AAEA,SAAuBC,gBAAvB,QAA+C,uBAA/C;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,qBAAP;;IAEqBC,a;;;;;;;;;;;;;;;;UA4BnBC,iB,GAAoB,UAACC,MAAD,EAAoCC,IAApC,EAA4D;AAAA,6BAChD,MAAKC,UAAL,EADgD;AAAA,UACtEC,KADsE,oBACtEA,KADsE;AAAA,UAC5DC,OAD4D;;AAE9E,UAAMC,IAAI,GAAG,CAAb;;AACA,UAAIJ,IAAI,CAACK,KAAL,KAAe,KAAnB,EAA0B;AACxB,cAAKC,mBAAL,mBAA8BH,OAA9B;AAAuCC,UAAAA,IAAI,EAAJA;AAAvC;AACD,OAFD,MAEO;AACL,cAAKE,mBAAL,mBAA8BH,OAA9B;AAAuCC,UAAAA,IAAI,EAAJA,IAAvC;AAA6CF,UAAAA,KAAK,EAAEF,IAAI,CAACK;AAAzD;AACD;AACF,K;;UAEDE,gB,GAAmB,UAACR,MAAD,EAAoCC,IAApC,EAA4D;AAAA,8BAC1C,MAAKC,UAAL,EAD0C;AAAA,UACrEO,UADqE,qBACrEA,UADqE;AAAA,UACtDL,OADsD;;AAE7E,UAAMC,IAAI,GAAG,CAAb;;AACA,UAAIJ,IAAI,CAACK,KAAL,KAAe,KAAnB,EAA0B;AACxB,cAAKC,mBAAL,mBAA8BH,OAA9B;AAAuCC,UAAAA,IAAI,EAAJA;AAAvC;AACD,OAFD,MAEO;AACL,cAAKE,mBAAL,mBAA8BH,OAA9B;AAAuCC,UAAAA,IAAI,EAAJA,IAAvC;AAA6CI,UAAAA,UAAU,EAAER,IAAI,CAACK;AAA9D;AACD;AACF,K;;UAEDI,gB,GAAmB,UAACV,MAAD,EAAoCC,IAApC,EAA4D;AAC7E,UAAMG,OAAO,GAAG,MAAKF,UAAL,EAAhB;;AACA,UAAMG,IAAI,GAAG,CAAb;;AACA,UAAIJ,IAAI,CAACK,KAAL,IAAcF,OAAO,CAACO,MAAR,KAAmBV,IAAI,CAACK,KAA1C,EAAiD;AAC/C,gBAAQL,IAAI,CAACK,KAAb;AACE,eAAKX,MAAM,CAACiB,IAAZ;AACE,kBAAKL,mBAAL,mBAA8BH,OAA9B;AAAuCC,cAAAA,IAAI,EAAJA,IAAvC;AAA6CM,cAAAA,MAAM,EAAEV,IAAI,CAACK,KAA1D;AAA2EO,cAAAA,SAAS,EAAE;AAAtF;;AACA;;AACF;AACE,kBAAKN,mBAAL,mBAA8BH,OAA9B;AAAuCC,cAAAA,IAAI,EAAJA,IAAvC;AAA6CM,cAAAA,MAAM,EAAEV,IAAI,CAACK,KAA1D;AAA2EO,cAAAA,SAAS,EAAE;AAAtF;;AALJ;AAOD;AACF,K;;UAEDC,gB,GAAmB,UAACd,MAAD,EAAoCC,IAApC,EAA8D;AAC/E,UAAMG,OAAO,GAAG,MAAKF,UAAL,EAAhB;;AACA,UAAMa,OAAO,GAAGC,MAAM,CAACf,IAAI,CAACgB,UAAN,CAAtB;;AACA,UAAI,CAACD,MAAM,CAACE,KAAP,CAAaH,OAAb,CAAD,IAA0BA,OAAO,GAAG,CAAxC,EAA2C;AACzC,cAAKR,mBAAL,mBAA8BH,OAA9B;AAAuCC,UAAAA,IAAI,EAAEU;AAA7C;AACD;AACF,K;;;;;;;wCAnEmB;AAAA,UACVI,QADU,GACG,KAAKC,KADR,CACVD,QADU;AAElB,UAAMf,OAAO,GAAG,KAAKF,UAAL,EAAhB;;AACA,UAAIiB,QAAQ,CAACE,MAAT,KAAoB,EAApB,IAA0BF,QAAQ,CAACE,MAAT,KAAoB,GAAlD,EAAuD;AACrDjB,QAAAA,OAAO,CAACO,MAAR,GAAiBhB,MAAM,CAAC2B,MAAxB;AACAlB,QAAAA,OAAO,CAACS,SAAR,GAAoB,MAApB;AACD;;AAED,WAAKN,mBAAL,CAAyBH,OAAzB;AACD;;;iCAE8B;AAAA,UAApBgB,KAAoB,uEAAZ,KAAKA,KAAO;AAC7B,aAAOxB,gBAAgB,CAAC2B,MAAjB,CAAwB,UAACnB,OAAD,EAAUoB,GAAV,EAAkB;AAC/C,YAAMlB,KAAK,GAAGc,KAAK,CAACI,GAAD,CAAnB;;AACA,YAAIlB,KAAK,KAAKmB,SAAd,EAAyB;AACvBrB,UAAAA,OAAO,CAACoB,GAAD,CAAP,GAAelB,KAAf;AACD;;AACD,eAAOF,OAAP;AACD,OANM,EAMJ,EANI,CAAP;AAOD;;;wCAEmBA,O,EAA8B;AAAA,wBACV,KAAKgB,KADK;AAAA,UACxCM,YADwC,eACxCA,YADwC;AAAA,UAC1BC,WAD0B,eAC1BA,WAD0B;AAEhDD,MAAAA,YAAY,CAACtB,OAAD,CAAZ;AACAuB,MAAAA,WAAW,CAACvB,OAAD,CAAX;AACD;;;6BA4CQ;AAAA;;AAAA,yBAC4D,KAAKgB,KADjE;AAAA,UACCQ,KADD,gBACCA,KADD;AAAA,UACQC,KADR,gBACQA,KADR;AAAA,UACeC,UADf,gBACeA,UADf;AAAA,UAC2BC,UAD3B,gBAC2BA,UAD3B;AAAA,UACuCC,gBADvC,gBACuCA,gBADvC;AAEP,UAAM5B,OAAO,GAAG,KAAKF,UAAL,EAAhB;AAEA,0BACE,uDACE,oBAAC,MAAD;AAAQ,QAAA,YAAY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,IAAD;AAAM,QAAA,YAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,MAAd;AAAe,QAAA,OAAO,EAAE8B,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBzC,CAAC,CAAC,gCAAD,CAAvB,CADF,CADF,CADF,eAME,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,IAAtB;AAA4B,QAAA,EAAE,EAAEZ,KAAK,CAACsD,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,UAAU,iBACT,oBAAC,QAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAE3B,OAAO,CAACK,UAAR,IAAsB,KAF/B;AAGE,QAAA,OAAO,EAAE,CACP;AAAEH,UAAAA,KAAK,EAAE,KAAT;AAAgB4B,UAAAA,IAAI,EAAE3C,CAAC,CAAC,mCAAD;AAAvB,SADO,EAEP;AAAEe,UAAAA,KAAK,EAAE,IAAT;AAAe4B,UAAAA,IAAI,EAAE3C,CAAC,CAAC,iCAAD;AAAtB,SAFO,CAHX;AAOE,QAAA,QAAQ,EAAE,KAAKiB,gBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF,eAcE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAEJ,OAAO,CAACO,MAFjB;AAGE,QAAA,OAAO,EAAE,CACP;AAAEL,UAAAA,KAAK,EAAEX,MAAM,CAAC2B,MAAhB;AAAwBY,UAAAA,IAAI,EAAE3C,CAAC,CAAC,gCAAD;AAA/B,SADO,EAEP;AAAEe,UAAAA,KAAK,EAAEX,MAAM,CAACiB,IAAhB;AAAsBsB,UAAAA,IAAI,EAAE3C,CAAC,CAAC,8BAAD;AAA7B,SAFO,EAGP;AAAEe,UAAAA,KAAK,EAAEX,MAAM,CAACwC,KAAhB;AAAuBD,UAAAA,IAAI,EAAE3C,CAAC,CAAC,+BAAD;AAA9B,SAHO,EAIP;AAAEe,UAAAA,KAAK,EAAEX,MAAM,CAACyC,KAAhB;AAAuBF,UAAAA,IAAI,EAAE3C,CAAC,CAAC,+BAAD;AAA9B,SAJO,EAKP;AAAEe,UAAAA,KAAK,EAAEX,MAAM,CAAC0C,WAAhB;AAA6BH,UAAAA,IAAI,EAAE3C,CAAC,CAAC,qCAAD;AAApC,SALO,EAMP;AAAEe,UAAAA,KAAK,EAAEX,MAAM,CAAC2C,IAAhB;AAAsBJ,UAAAA,IAAI,EAAE3C,CAAC,CAAC,8BAAD;AAA7B,SANO,CAHX;AAWE,QAAA,QAAQ,EAAE,KAAKmB,gBAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF,CANF,CADF,CAFF,CADF,CADF,eA6CE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGkB,KAAK,KAAK,IAAV,iBAAkB,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,IAAI,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrB,EAEGW,KAAK,CAACC,OAAN,CAAcZ,KAAd,KAAwBC,KAAK,KAAK,CAAlC,iBAAuC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCtC,CAAC,CAAC,6BAAD,CAAlC,CAF1C,EAGGgD,KAAK,CAACC,OAAN,CAAcZ,KAAd,KAAwBC,KAAK,KAAK,CAAlC,iBACC,0CACGD,KAAK,CAACa,GAAN,CAAU,UAAAC,IAAI;AAAA,4BACb,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,UAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADa;AAAA,OAAd,CADH,CAJJ,CADF,CA7CF,CADF,eA4DE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,KAAK,KAAK,IAAV,IAAkBC,UAAU,KAAK,IAAjC,iBACC,oBAAC,UAAD;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,UAAU,EAAEA,UAHd;AAIE,QAAA,UAAU,EAAE1B,OAAO,CAACC,IAJtB;AAKE,QAAA,YAAY,EAAE,KAAKS,gBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA5DF,CADF,CAFF,eA4EE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5EF,CADF;AAgFD;;;;EA1JwCnC,KAAK,CAACiE,a;;SAA5B9C,a","sourcesContent":["import * as React from 'react'\nimport {\n  Loader,\n  Page,\n  Container,\n  Pagination,\n  Dropdown,\n  DropdownProps,\n  PaginationProps,\n  Responsive,\n  Row,\n  Column,\n  Narrow,\n  Section,\n  Header\n} from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\n\nimport Footer from 'components/Footer'\nimport Navbar from 'components/Navbar'\nimport Back from 'components/Back'\nimport { PoolsRequestFilters, SortBy } from 'modules/pool/types'\n\nimport { Props, State, filterAttributes } from './SceneListPage.types'\nimport PoolCard from './PoolCard'\n\nimport './SceneListPage.css'\n\nexport default class SceneListPage extends React.PureComponent<Props, State> {\n  componentDidMount() {\n    const { location } = this.props\n    const filters = this.getFilters()\n    if (location.search === '' || location.search === '?') {\n      filters.sortBy = SortBy.NEWEST\n      filters.sortOrder = 'desc'\n    }\n\n    this.handleChangeFilters(filters)\n  }\n\n  getFilters(props = this.props) {\n    return filterAttributes.reduce((filters, key) => {\n      const value = props[key]\n      if (value !== undefined) {\n        filters[key] = value as any\n      }\n      return filters\n    }, {} as PoolsRequestFilters)\n  }\n\n  handleChangeFilters(filters: PoolsRequestFilters) {\n    const { onPageChange, onLoadPools } = this.props\n    onPageChange(filters)\n    onLoadPools(filters)\n  }\n\n  handleChangeGroup = (_event: React.SyntheticEvent<any>, data: DropdownProps) => {\n    const { group, ...filters } = this.getFilters()\n    const page = 1\n    if (data.value === 'all') {\n      this.handleChangeFilters({ ...filters, page })\n    } else {\n      this.handleChangeFilters({ ...filters, page, group: data.value as string })\n    }\n  }\n\n  handleChangeUser = (_event: React.SyntheticEvent<any>, data: DropdownProps) => {\n    const { ethAddress, ...filters } = this.getFilters()\n    const page = 1\n    if (data.value === 'all') {\n      this.handleChangeFilters({ ...filters, page })\n    } else {\n      this.handleChangeFilters({ ...filters, page, ethAddress: data.value as string })\n    }\n  }\n\n  handleChangeSort = (_event: React.SyntheticEvent<any>, data: DropdownProps) => {\n    const filters = this.getFilters()\n    const page = 1\n    if (data.value && filters.sortBy !== data.value) {\n      switch (data.value) {\n        case SortBy.NAME:\n          this.handleChangeFilters({ ...filters, page, sortBy: data.value as string, sortOrder: 'asc' })\n          break\n        default:\n          this.handleChangeFilters({ ...filters, page, sortBy: data.value as string, sortOrder: 'desc' })\n      }\n    }\n  }\n\n  handlePageChange = (_event: React.SyntheticEvent<any>, data: PaginationProps) => {\n    const filters = this.getFilters()\n    const newPage = Number(data.activePage)\n    if (!Number.isNaN(newPage) && newPage > 0) {\n      this.handleChangeFilters({ ...filters, page: newPage })\n    }\n  }\n\n  render() {\n    const { pools, total, totalPages, isLoggedIn, onNavegateToHome } = this.props\n    const filters = this.getFilters()\n\n    return (\n      <>\n        <Navbar isFullscreen />\n        <Page isFullscreen>\n          <div className=\"SceneListPage\">\n            <Container>\n              <Section className=\"navigation\">\n                <Row>\n                  <Back absolute onClick={onNavegateToHome}></Back>\n                  <Narrow>\n                    <Row>\n                      <Column>\n                        <Row>\n                          <Header size=\"large\">{t('scene_list_page.projects_title')}</Header>\n                        </Row>\n                      </Column>\n                      <Column align=\"right\">\n                        <Row>\n                          <Responsive minWidth={1025} as={React.Fragment}>\n                            {isLoggedIn && (\n                              <Dropdown\n                                direction=\"left\"\n                                value={filters.ethAddress || 'all'}\n                                options={[\n                                  { value: 'all', text: t('scene_list_page.filters.all_users') },\n                                  { value: 'me', text: t('scene_list_page.filters.only_me') }\n                                ]}\n                                onChange={this.handleChangeUser}\n                              />\n                            )}\n                          </Responsive>\n                          <Dropdown\n                            direction=\"left\"\n                            value={filters.sortBy}\n                            options={[\n                              { value: SortBy.NEWEST, text: t('scene_list_page.filters.newest') },\n                              { value: SortBy.NAME, text: t('scene_list_page.filters.name') },\n                              { value: SortBy.LIKES, text: t('scene_list_page.filters.likes') },\n                              { value: SortBy.ITEMS, text: t('scene_list_page.filters.items') },\n                              { value: SortBy.SMART_ITEMS, text: t('scene_list_page.filters.smart_items') },\n                              { value: SortBy.SIZE, text: t('scene_list_page.filters.size') }\n                            ]}\n                            onChange={this.handleChangeSort}\n                          />\n                        </Row>\n                      </Column>\n                    </Row>\n                  </Narrow>\n                </Row>\n              </Section>\n              <Narrow>\n                <div className=\"PoolCardList\">\n                  {pools === null && <Loader active size=\"huge\" />}\n                  {Array.isArray(pools) && total === 0 && <div className=\"empty-projects\">{t('scene_list_page.no_projects')}</div>}\n                  {Array.isArray(pools) && total !== 0 && (\n                    <>\n                      {pools.map(pool => (\n                        <PoolCard key={pool.id} pool={pool} />\n                      ))}\n                    </>\n                  )}\n                </div>\n              </Narrow>\n            </Container>\n            <Container>\n              {total !== null && totalPages !== null && (\n                <Pagination\n                  firstItem={null}\n                  lastItem={null}\n                  totalPages={totalPages}\n                  activePage={filters.page}\n                  onPageChange={this.handlePageChange}\n                />\n              )}\n            </Container>\n          </div>\n        </Page>\n        <Footer />\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}