{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/MintItemsModal/MintableItem/MintableItem.tsx\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\nimport { Row, Column, Field, Section } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { isValid } from 'lib/address';\nimport ItemImage from 'components/ItemImage';\nimport Icon from 'components/Icon';\nimport { getMaxSupply } from 'modules/item/utils';\nimport ItemStatus from 'components/ItemStatus';\nimport './MintableItem.css';\n\nvar MintableItem = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MintableItem, _React$PureComponent);\n\n  function MintableItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MintableItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MintableItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleAddNewMint = function () {\n      var _this$props = _this.props,\n          item = _this$props.item,\n          mints = _this$props.mints,\n          onChange = _this$props.onChange;\n      onChange(item, [].concat(_toConsumableArray(mints), [{\n        item: item\n      }]));\n    };\n\n    return _this;\n  }\n\n  _createClass(MintableItem, [{\n    key: \"getChangeAddressHandler\",\n    value: function getChangeAddressHandler(index) {\n      var _this$props2 = this.props,\n          item = _this$props2.item,\n          mints = _this$props2.mints,\n          onChange = _this$props2.onChange;\n      return function (_event, data) {\n        var mint = _objectSpread({}, mints[index], {\n          address: data.value ? data.value : undefined\n        });\n\n        var newMints = [].concat(_toConsumableArray(mints.slice(0, index)), [mint], _toConsumableArray(mints.slice(index + 1)));\n        onChange(item, newMints);\n      };\n    }\n  }, {\n    key: \"getChangeAmountHandler\",\n    value: function getChangeAmountHandler(index) {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          item = _this$props3.item,\n          mints = _this$props3.mints,\n          onChange = _this$props3.onChange;\n      return function (_event, data) {\n        var mint = _objectSpread({}, mints[index], {\n          amount: data.value ? Number(data.value) : undefined\n        });\n\n        var newMints = [].concat(_toConsumableArray(mints.slice(0, index)), [mint], _toConsumableArray(mints.slice(index + 1)));\n\n        var currentSupply = _this2.getSupply(newMints);\n\n        if (_this2.isValidSupply(currentSupply)) {\n          onChange(item, newMints);\n        }\n      };\n    }\n  }, {\n    key: \"getRemoveMintHandler\",\n    value: function getRemoveMintHandler(index) {\n      var _this$props4 = this.props,\n          item = _this$props4.item,\n          mints = _this$props4.mints,\n          onChange = _this$props4.onChange;\n      return function () {\n        if (mints.length > 1) {\n          onChange(item, [].concat(_toConsumableArray(mints.slice(0, index)), _toConsumableArray(mints.slice(index + 1))));\n        }\n      };\n    }\n  }, {\n    key: \"isValidAddress\",\n    value: function isValidAddress(address) {\n      return address === undefined || isValid(address);\n    }\n  }, {\n    key: \"isValidAmount\",\n    value: function isValidAmount(amount) {\n      return amount === undefined || amount >= 0;\n    }\n  }, {\n    key: \"isValidSupply\",\n    value: function isValidSupply(supply) {\n      var item = this.props.item;\n      return supply >= 0 && supply <= getMaxSupply(item);\n    }\n  }, {\n    key: \"getSupply\",\n    value: function getSupply(mints) {\n      var item = this.props.item;\n      var totalSupply = item.totalSupply || 0;\n      var currentSupply = 0;\n\n      var _iterator = _createForOfIteratorHelper(mints),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var mint = _step.value;\n          currentSupply += mint.amount || 0;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return totalSupply + currentSupply;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props5 = this.props,\n          item = _this$props5.item,\n          mints = _this$props5.mints;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"MintableItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        grow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ItemImage, {\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ItemStatus, {\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, item.name))), /*#__PURE__*/React.createElement(Column, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"stock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, t('item.supply'), \" \", this.getSupply(mints), \"/\", getMaxSupply(item)), /*#__PURE__*/React.createElement(Icon, {\n        name: \"plus\",\n        className: \"item-action\",\n        onClick: this.handleAddNewMint,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      })))), mints.map(function (_ref, index) {\n        var address = _ref.address,\n            amount = _ref.amount;\n        return /*#__PURE__*/React.createElement(Section, {\n          key: index,\n          className: \"mint\",\n          size: \"tiny\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          className: \"rounded\",\n          type: \"address\",\n          placeholder: t('global.address'),\n          value: address || '',\n          message: undefined,\n          error: !_this3.isValidAddress(address),\n          onChange: _this3.getChangeAddressHandler(index),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Field, {\n          className: \"rounded\",\n          type: \"number\",\n          placeholder: t('global.amount'),\n          value: amount || '',\n          message: undefined,\n          error: !_this3.isValidAmount(amount),\n          onChange: _this3.getChangeAmountHandler(index),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }\n        }), mints.length > 1 ? /*#__PURE__*/React.createElement(Icon, {\n          name: \"minus\",\n          className: \"item-action\",\n          onClick: _this3.getRemoveMintHandler(index),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }\n        }) : null);\n      }));\n    }\n  }]);\n\n  return MintableItem;\n}(React.PureComponent);\n\nexport { MintableItem as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/MintItemsModal/MintableItem/MintableItem.tsx"],"names":["React","Row","Column","Field","Section","t","isValid","ItemImage","Icon","getMaxSupply","ItemStatus","MintableItem","handleAddNewMint","props","item","mints","onChange","index","_event","data","mint","address","value","undefined","newMints","slice","amount","Number","currentSupply","getSupply","isValidSupply","length","supply","totalSupply","name","map","isValidAddress","getChangeAddressHandler","isValidAmount","getChangeAmountHandler","getRemoveMintHandler","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Row, Column, Field, Section, InputOnChangeData } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\n\nimport { isValid } from 'lib/address'\nimport ItemImage from 'components/ItemImage'\nimport Icon from 'components/Icon'\nimport { getMaxSupply } from 'modules/item/utils'\nimport { Props } from './MintableItem.types'\nimport ItemStatus from 'components/ItemStatus'\n\nimport './MintableItem.css'\n\nexport default class MintableItem extends React.PureComponent<Props> {\n  handleAddNewMint = () => {\n    const { item, mints, onChange } = this.props\n    onChange(item, [...mints, { item }])\n  }\n\n  getChangeAddressHandler(index: number) {\n    const { item, mints, onChange } = this.props\n    return (_event: React.ChangeEvent<HTMLInputElement>, data: InputOnChangeData) => {\n      const mint = {\n        ...mints[index],\n        address: data.value ? data.value : undefined\n      }\n      const newMints = [...mints.slice(0, index), mint, ...mints.slice(index + 1)]\n      onChange(item, newMints)\n    }\n  }\n\n  getChangeAmountHandler(index: number) {\n    const { item, mints, onChange } = this.props\n    return (_event: React.ChangeEvent<HTMLInputElement>, data: InputOnChangeData) => {\n      const mint = {\n        ...mints[index],\n        amount: data.value ? Number(data.value) : undefined\n      }\n      const newMints = [...mints.slice(0, index), mint, ...mints.slice(index + 1)]\n\n      const currentSupply = this.getSupply(newMints)\n      if (this.isValidSupply(currentSupply)) {\n        onChange(item, newMints)\n      }\n    }\n  }\n\n  getRemoveMintHandler(index: number) {\n    const { item, mints, onChange } = this.props\n    return () => {\n      if (mints.length > 1) {\n        onChange(item, [...mints.slice(0, index), ...mints.slice(index + 1)])\n      }\n    }\n  }\n\n  isValidAddress(address?: string) {\n    return address === undefined || isValid(address)\n  }\n\n  isValidAmount(amount?: number) {\n    return amount === undefined || amount >= 0\n  }\n\n  isValidSupply(supply: number) {\n    const { item } = this.props\n    return supply >= 0 && supply <= getMaxSupply(item)\n  }\n\n  getSupply(mints: Props['mints']) {\n    const { item } = this.props\n    const totalSupply = item.totalSupply || 0\n    let currentSupply = 0\n    for (const mint of mints) {\n      currentSupply += mint.amount || 0\n    }\n    return totalSupply + currentSupply\n  }\n\n  render() {\n    const { item, mints } = this.props\n\n    return (\n      <div className=\"MintableItem\">\n        <Row>\n          <Column grow={true}>\n            <div className=\"item-header\">\n              <ItemImage item={item} />\n              <ItemStatus item={item} />\n              <span>{item.name}</span>\n            </div>\n          </Column>\n\n          <Column align=\"right\">\n            <div className=\"item-header\">\n              <span className=\"stock\">\n                {t('item.supply')} {this.getSupply(mints)}/{getMaxSupply(item)}\n              </span>\n              <Icon name=\"plus\" className=\"item-action\" onClick={this.handleAddNewMint} />\n            </div>\n          </Column>\n        </Row>\n        {mints.map(({ address, amount }, index) => (\n          <Section key={index} className=\"mint\" size=\"tiny\">\n            <Field\n              className=\"rounded\"\n              type=\"address\"\n              placeholder={t('global.address')}\n              value={address || ''}\n              message={undefined}\n              error={!this.isValidAddress(address)}\n              onChange={this.getChangeAddressHandler(index)}\n            />\n            <Field\n              className=\"rounded\"\n              type=\"number\"\n              placeholder={t('global.amount')}\n              value={amount || ''}\n              message={undefined}\n              error={!this.isValidAmount(amount)}\n              onChange={this.getChangeAmountHandler(index)}\n            />\n            {mints.length > 1 ? <Icon name=\"minus\" className=\"item-action\" onClick={this.getRemoveMintHandler(index)} /> : null}\n          </Section>\n        ))}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}