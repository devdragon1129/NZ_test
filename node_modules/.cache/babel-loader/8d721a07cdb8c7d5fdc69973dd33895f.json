{"ast":null,"code":"import { action } from 'typesafe-actions';\n// Fetch Entities By Pointers\nexport var FETCH_ENTITIES_BY_POINTERS_REQUEST = '[Request] Fetch Entities By Pointers';\nexport var FETCH_ENTITIES_BY_POINTERS_SUCCESS = '[Success] Fetch Entities By Pointers';\nexport var FETCH_ENTITIES_BY_POINTERS_FAILURE = '[Failure] Fetch Entities By Pointers';\nexport var fetchEntitiesByPointersRequest = function fetchEntitiesByPointersRequest(type, pointers) {\n  return action(FETCH_ENTITIES_BY_POINTERS_REQUEST, {\n    type: type,\n    pointers: pointers\n  });\n};\nexport var fetchEntitiesByPointersSuccess = function fetchEntitiesByPointersSuccess(type, pointers, entities) {\n  return action(FETCH_ENTITIES_BY_POINTERS_SUCCESS, {\n    entities: entities,\n    type: type,\n    pointers: pointers\n  });\n};\nexport var fetchEntitiesByPointersFailure = function fetchEntitiesByPointersFailure(type, pointers, error) {\n  return action(FETCH_ENTITIES_BY_POINTERS_FAILURE, {\n    error: error,\n    type: type,\n    pointers: pointers\n  });\n};\n// Fetch Entities By Hash\nexport var FETCH_ENTITIES_BY_IDS_REQUEST = '[Request] Fetch Entities By Ids';\nexport var FETCH_ENTITIES_BY_IDS_SUCCESS = '[Success] Fetch Entities By Ids';\nexport var FETCH_ENTITIES_BY_IDS_FAILURE = '[Failure] Fetch Entities By Ids';\nexport var fetchEntitiesByIdsRequest = function fetchEntitiesByIdsRequest(type, ids) {\n  return action(FETCH_ENTITIES_BY_IDS_REQUEST, {\n    type: type,\n    ids: ids\n  });\n};\nexport var fetchEntitiesByIdsSuccess = function fetchEntitiesByIdsSuccess(type, ids, entities) {\n  return action(FETCH_ENTITIES_BY_IDS_SUCCESS, {\n    type: type,\n    ids: ids,\n    entities: entities\n  });\n};\nexport var fetchEntitiesByIdsFailure = function fetchEntitiesByIdsFailure(type, ids, error) {\n  return action(FETCH_ENTITIES_BY_IDS_FAILURE, {\n    type: type,\n    ids: ids,\n    error: error\n  });\n};\n// Deploy entities\nexport var DEPLOY_ENTITIES_REQUEST = '[Request] Deploy entities';\nexport var DEPLOY_ENTITIES_SUCCESS = '[Success] Deploy entities';\nexport var DEPLOY_ENTITIES_FAILURE = '[Failure] Deploy entities';\nexport var deployEntitiesRequest = function deployEntitiesRequest(entities) {\n  return action(DEPLOY_ENTITIES_REQUEST, {\n    entities: entities\n  });\n};\nexport var deployEntitiesSuccess = function deployEntitiesSuccess(entities) {\n  return action(DEPLOY_ENTITIES_SUCCESS, {\n    entities: entities\n  });\n};\nexport var deployEntitiesFailure = function deployEntitiesFailure(entities, error) {\n  return action(DEPLOY_ENTITIES_FAILURE, {\n    entities: entities,\n    error: error\n  });\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/entity/actions.ts"],"names":["action","FETCH_ENTITIES_BY_POINTERS_REQUEST","FETCH_ENTITIES_BY_POINTERS_SUCCESS","FETCH_ENTITIES_BY_POINTERS_FAILURE","fetchEntitiesByPointersRequest","type","pointers","fetchEntitiesByPointersSuccess","entities","fetchEntitiesByPointersFailure","error","FETCH_ENTITIES_BY_IDS_REQUEST","FETCH_ENTITIES_BY_IDS_SUCCESS","FETCH_ENTITIES_BY_IDS_FAILURE","fetchEntitiesByIdsRequest","ids","fetchEntitiesByIdsSuccess","fetchEntitiesByIdsFailure","DEPLOY_ENTITIES_REQUEST","DEPLOY_ENTITIES_SUCCESS","DEPLOY_ENTITIES_FAILURE","deployEntitiesRequest","deployEntitiesSuccess","deployEntitiesFailure"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AAIA;AACA,OAAO,IAAMC,kCAAkC,GAAG,sCAA3C;AACP,OAAO,IAAMC,kCAAkC,GAAG,sCAA3C;AACP,OAAO,IAAMC,kCAAkC,GAAG,sCAA3C;AAEP,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,IAAD,EAAmBC,QAAnB;AAAA,SAC5CN,MAAM,CAACC,kCAAD,EAAqC;AAAEI,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,QAAQ,EAARA;AAAR,GAArC,CADsC;AAAA,CAAvC;AAEP,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACF,IAAD,EAAmBC,QAAnB,EAAuCE,QAAvC;AAAA,SAC5CR,MAAM,CAACE,kCAAD,EAAqC;AAAEM,IAAAA,QAAQ,EAARA,QAAF;AAAYH,IAAAA,IAAI,EAAJA,IAAZ;AAAkBC,IAAAA,QAAQ,EAARA;AAAlB,GAArC,CADsC;AAAA,CAAvC;AAEP,OAAO,IAAMG,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACJ,IAAD,EAAmBC,QAAnB,EAAuCI,KAAvC;AAAA,SAC5CV,MAAM,CAACG,kCAAD,EAAqC;AAAEO,IAAAA,KAAK,EAALA,KAAF;AAASL,IAAAA,IAAI,EAAJA,IAAT;AAAeC,IAAAA,QAAQ,EAARA;AAAf,GAArC,CADsC;AAAA,CAAvC;AAOP;AACA,OAAO,IAAMK,6BAA6B,GAAG,iCAAtC;AACP,OAAO,IAAMC,6BAA6B,GAAG,iCAAtC;AACP,OAAO,IAAMC,6BAA6B,GAAG,iCAAtC;AAEP,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACT,IAAD,EAAmBU,GAAnB;AAAA,SAAqCf,MAAM,CAACW,6BAAD,EAAgC;AAAEN,IAAAA,IAAI,EAAJA,IAAF;AAAQU,IAAAA,GAAG,EAAHA;AAAR,GAAhC,CAA3C;AAAA,CAAlC;AACP,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACX,IAAD,EAAmBU,GAAnB,EAAkCP,QAAlC;AAAA,SACvCR,MAAM,CAACY,6BAAD,EAAgC;AAAEP,IAAAA,IAAI,EAAJA,IAAF;AAAQU,IAAAA,GAAG,EAAHA,GAAR;AAAaP,IAAAA,QAAQ,EAARA;AAAb,GAAhC,CADiC;AAAA,CAAlC;AAEP,OAAO,IAAMS,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACZ,IAAD,EAAmBU,GAAnB,EAAkCL,KAAlC;AAAA,SACvCV,MAAM,CAACa,6BAAD,EAAgC;AAAER,IAAAA,IAAI,EAAJA,IAAF;AAAQU,IAAAA,GAAG,EAAHA,GAAR;AAAaL,IAAAA,KAAK,EAALA;AAAb,GAAhC,CADiC;AAAA,CAAlC;AAOP;AAEA,OAAO,IAAMQ,uBAAuB,GAAG,2BAAhC;AACP,OAAO,IAAMC,uBAAuB,GAAG,2BAAhC;AACP,OAAO,IAAMC,uBAAuB,GAAG,2BAAhC;AAEP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACb,QAAD;AAAA,SAA2CR,MAAM,CAACkB,uBAAD,EAA0B;AAAEV,IAAAA,QAAQ,EAARA;AAAF,GAA1B,CAAjD;AAAA,CAA9B;AACP,OAAO,IAAMc,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACd,QAAD;AAAA,SAA2CR,MAAM,CAACmB,uBAAD,EAA0B;AAAEX,IAAAA,QAAQ,EAARA;AAAF,GAA1B,CAAjD;AAAA,CAA9B;AACP,OAAO,IAAMe,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACf,QAAD,EAAwCE,KAAxC;AAAA,SACnCV,MAAM,CAACoB,uBAAD,EAA0B;AAAEZ,IAAAA,QAAQ,EAARA,QAAF;AAAYE,IAAAA,KAAK,EAALA;AAAZ,GAA1B,CAD6B;AAAA,CAA9B","sourcesContent":["import { action } from 'typesafe-actions'\nimport { DeploymentPreparationData } from 'dcl-catalyst-client'\nimport { Entity, EntityType } from 'dcl-catalyst-commons'\n\n// Fetch Entities By Pointers\nexport const FETCH_ENTITIES_BY_POINTERS_REQUEST = '[Request] Fetch Entities By Pointers'\nexport const FETCH_ENTITIES_BY_POINTERS_SUCCESS = '[Success] Fetch Entities By Pointers'\nexport const FETCH_ENTITIES_BY_POINTERS_FAILURE = '[Failure] Fetch Entities By Pointers'\n\nexport const fetchEntitiesByPointersRequest = (type: EntityType, pointers: string[]) =>\n  action(FETCH_ENTITIES_BY_POINTERS_REQUEST, { type, pointers })\nexport const fetchEntitiesByPointersSuccess = (type: EntityType, pointers: string[], entities: Entity[]) =>\n  action(FETCH_ENTITIES_BY_POINTERS_SUCCESS, { entities, type, pointers })\nexport const fetchEntitiesByPointersFailure = (type: EntityType, pointers: string[], error: string) =>\n  action(FETCH_ENTITIES_BY_POINTERS_FAILURE, { error, type, pointers })\n\nexport type FetchEntitiesByPointersRequestAction = ReturnType<typeof fetchEntitiesByPointersRequest>\nexport type FetchEntitiesByPointersSuccessAction = ReturnType<typeof fetchEntitiesByPointersSuccess>\nexport type FetchEntitiesByPointersFailureAction = ReturnType<typeof fetchEntitiesByPointersFailure>\n\n// Fetch Entities By Hash\nexport const FETCH_ENTITIES_BY_IDS_REQUEST = '[Request] Fetch Entities By Ids'\nexport const FETCH_ENTITIES_BY_IDS_SUCCESS = '[Success] Fetch Entities By Ids'\nexport const FETCH_ENTITIES_BY_IDS_FAILURE = '[Failure] Fetch Entities By Ids'\n\nexport const fetchEntitiesByIdsRequest = (type: EntityType, ids: string[]) => action(FETCH_ENTITIES_BY_IDS_REQUEST, { type, ids })\nexport const fetchEntitiesByIdsSuccess = (type: EntityType, ids: string[], entities: Entity[]) =>\n  action(FETCH_ENTITIES_BY_IDS_SUCCESS, { type, ids, entities })\nexport const fetchEntitiesByIdsFailure = (type: EntityType, ids: string[], error: string) =>\n  action(FETCH_ENTITIES_BY_IDS_FAILURE, { type, ids, error })\n\nexport type FetchEntitiesByIdsRequestAction = ReturnType<typeof fetchEntitiesByIdsRequest>\nexport type FetchEntitiesByIdsSuccessAction = ReturnType<typeof fetchEntitiesByIdsSuccess>\nexport type FetchEntitiesByIdsFailureAction = ReturnType<typeof fetchEntitiesByIdsFailure>\n\n// Deploy entities\n\nexport const DEPLOY_ENTITIES_REQUEST = '[Request] Deploy entities'\nexport const DEPLOY_ENTITIES_SUCCESS = '[Success] Deploy entities'\nexport const DEPLOY_ENTITIES_FAILURE = '[Failure] Deploy entities'\n\nexport const deployEntitiesRequest = (entities: DeploymentPreparationData[]) => action(DEPLOY_ENTITIES_REQUEST, { entities })\nexport const deployEntitiesSuccess = (entities: DeploymentPreparationData[]) => action(DEPLOY_ENTITIES_SUCCESS, { entities })\nexport const deployEntitiesFailure = (entities: DeploymentPreparationData[], error: string) =>\n  action(DEPLOY_ENTITIES_FAILURE, { entities, error })\n\nexport type DeployEntitiesRequestAction = ReturnType<typeof deployEntitiesRequest>\nexport type DeployEntitiesSuccessAction = ReturnType<typeof deployEntitiesSuccess>\nexport type DeployEntitiesFailureAction = ReturnType<typeof deployEntitiesFailure>\n"]},"metadata":{},"sourceType":"module"}