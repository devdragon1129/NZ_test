{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController\";\nimport { Mesh } from \"../../Meshes/mesh\";\nimport { Quaternion } from \"../../Maths/math.vector\";\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager\";\n/**\r\n * The motion controller class for the standard HTC-Vive controllers\r\n */\n\nvar WebXRHTCViveMotionController =\n/** @class */\nfunction (_super) {\n  __extends(WebXRHTCViveMotionController, _super);\n  /**\r\n   * Create a new Vive motion controller object\r\n   * @param scene the scene to use to create this controller\r\n   * @param gamepadObject the corresponding gamepad object\r\n   * @param handedness the handedness of the controller\r\n   */\n\n\n  function WebXRHTCViveMotionController(scene, gamepadObject, handedness) {\n    var _this = _super.call(this, scene, HTCViveLayout[handedness], gamepadObject, handedness) || this;\n\n    _this.profileId = \"htc-vive\";\n    return _this;\n  }\n\n  WebXRHTCViveMotionController.prototype._getFilenameAndPath = function () {\n    var filename = WebXRHTCViveMotionController.MODEL_FILENAME;\n    var path = WebXRHTCViveMotionController.MODEL_BASE_URL;\n    return {\n      filename: filename,\n      path: path\n    };\n  };\n\n  WebXRHTCViveMotionController.prototype._getModelLoadingConstraints = function () {\n    return true;\n  };\n\n  WebXRHTCViveMotionController.prototype._processLoadedModel = function (_meshes) {\n    var _this = this;\n\n    this.getComponentIds().forEach(function (id) {\n      var comp = id && _this.getComponent(id);\n\n      if (comp) {\n        comp.onButtonStateChangedObservable.add(function (component) {\n          if (!_this.rootMesh || _this.disableAnimation) {\n            return;\n          }\n\n          switch (id) {\n            case \"xr-standard-trigger\":\n              _this._modelRootNode.getChildren()[6].rotation.x = -component.value * 0.15;\n              return;\n\n            case \"xr-standard-touchpad\":\n              return;\n\n            case \"xr-standard-squeeze\":\n              return;\n          }\n        }, undefined, true);\n      }\n    });\n  };\n\n  WebXRHTCViveMotionController.prototype._setRootMesh = function (meshes) {\n    this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n    meshes.forEach(function (mesh) {\n      mesh.isPickable = false;\n    });\n    this._modelRootNode = meshes[1];\n    this._modelRootNode.parent = this.rootMesh;\n\n    if (!this.scene.useRightHandedSystem) {\n      this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n    }\n  };\n\n  WebXRHTCViveMotionController.prototype._updateModel = function () {// no-op. model is updated using observables.\n  };\n  /**\r\n   * The base url used to load the left and right controller models\r\n   */\n\n\n  WebXRHTCViveMotionController.MODEL_BASE_URL = \"https://controllers.babylonjs.com/vive/\";\n  /**\r\n   * File name for the controller model.\r\n   */\n\n  WebXRHTCViveMotionController.MODEL_FILENAME = \"wand.babylon\";\n  return WebXRHTCViveMotionController;\n}(WebXRAbstractMotionController);\n\nexport { WebXRHTCViveMotionController }; // register the profile\n\nWebXRMotionControllerManager.RegisterController(\"htc-vive\", function (xrInput, scene) {\n  return new WebXRHTCViveMotionController(scene, xrInput.gamepad, xrInput.handedness);\n}); // WebXRMotionControllerManager.RegisterController(\"htc-vive-legacy\", (xrInput: XRInputSource, scene: Scene) => {\n//     return new WebXRHTCViveMotionController(scene, <any>(xrInput.gamepad), xrInput.handedness, true);\n// });\n\nvar HTCViveLayout = {\n  left: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {}\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {}\n      },\n      menu: {\n        type: \"button\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"menu\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"htc_vive_none\",\n    assetPath: \"none.glb\"\n  },\n  right: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {}\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {}\n      },\n      menu: {\n        type: \"button\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"menu\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"htc_vive_none\",\n    assetPath: \"none.glb\"\n  },\n  none: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {}\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {}\n      },\n      menu: {\n        type: \"button\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"menu\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"htc-vive-none\",\n    assetPath: \"none.glb\"\n  }\n};","map":null,"metadata":{},"sourceType":"module"}