{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createClass = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _classCallCheck = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _wrapNativeSuper = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletConnectConnector = exports.BaseWalletConnectConnector = exports.UserRejectedRequestError = exports.URI_AVAILABLE = void 0;\n\nvar provider_type_1 = require(\"@dcl/schemas/dist/dapps/provider-type\");\n\nvar abstract_connector_1 = require(\"@web3-react/abstract-connector\");\n\nvar configuration_1 = require(\"../configuration\");\n\nexports.URI_AVAILABLE = 'URI_AVAILABLE';\n\nvar UserRejectedRequestError = /*#__PURE__*/function (_Error) {\n  _inherits(UserRejectedRequestError, _Error);\n\n  function UserRejectedRequestError() {\n    var _this;\n\n    _classCallCheck(this, UserRejectedRequestError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserRejectedRequestError).call(this));\n    _this.name = _this.constructor.name;\n    _this.message = 'The user rejected the request.';\n    return _this;\n  }\n\n  return UserRejectedRequestError;\n}(_wrapNativeSuper(Error));\n\nexports.UserRejectedRequestError = UserRejectedRequestError;\n\nfunction getSupportedChains(_ref) {\n  var supportedChainIds = _ref.supportedChainIds,\n      rpc = _ref.rpc;\n\n  if (supportedChainIds) {\n    return supportedChainIds;\n  }\n\n  return rpc ? Object.keys(rpc).map(function (k) {\n    return Number(k);\n  }) : undefined;\n}\n\nvar BaseWalletConnectConnector = /*#__PURE__*/function (_abstract_connector_) {\n  _inherits(BaseWalletConnectConnector, _abstract_connector_);\n\n  function BaseWalletConnectConnector(config) {\n    var _this2;\n\n    _classCallCheck(this, BaseWalletConnectConnector);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(BaseWalletConnectConnector).call(this, {\n      supportedChainIds: getSupportedChains(config)\n    }));\n    _this2.config = config;\n    _this2.handleChainChanged = _this2.handleChainChanged.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleAccountsChanged = _this2.handleAccountsChanged.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleDisconnect = _this2.handleDisconnect.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(BaseWalletConnectConnector, [{\n    key: \"activate\",\n    value: function activate() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var WalletConnectProvider, account;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.walletConnectProvider) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return Promise.resolve().then(function () {\n                  return __importStar(require('@walletconnect/web3-provider'));\n                }).then(function (m) {\n                  var _a;\n\n                  return (_a = m === null || m === void 0 ? void 0 : m.default) !== null && _a !== void 0 ? _a : m;\n                });\n\n              case 3:\n                WalletConnectProvider = _context.sent;\n                this.walletConnectProvider = new WalletConnectProvider(this.config);\n\n              case 5:\n                account = '';\n\n                if (BaseWalletConnectConnector.isEnabling) {\n                  _context.next = 11;\n                  break;\n                }\n\n                BaseWalletConnectConnector.isEnabling = true;\n                _context.next = 10;\n                return this.walletConnectProvider.enable().then(function (accounts) {\n                  return accounts[0];\n                }).catch(function (error) {\n                  // TODO ideally this would be a better check\n                  if (error.message === 'User closed modal') {\n                    throw new UserRejectedRequestError();\n                  }\n\n                  throw error;\n                }).finally(function () {\n                  BaseWalletConnectConnector.isEnabling = false;\n                });\n\n              case 10:\n                account = _context.sent;\n\n              case 11:\n                this.walletConnectProvider.on('disconnect', this.handleDisconnect);\n                this.walletConnectProvider.on('chainChanged', this.handleChainChanged);\n                this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged);\n                return _context.abrupt(\"return\", {\n                  provider: this.walletConnectProvider,\n                  account: account\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"getProvider\",\n    value: function getProvider() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.walletConnectProvider);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.walletConnectProvider.send('eth_chainId'));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"getAccount\",\n    value: function getAccount() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.walletConnectProvider.send('eth_accounts').then(function (accounts) {\n                  return accounts[0];\n                }));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      if (this.walletConnectProvider) {\n        this.walletConnectProvider.stop();\n        this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect);\n        this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged);\n        this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged);\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return (_a = this.walletConnectProvider) === null || _a === void 0 ? void 0 : _a.close();\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"handleChainChanged\",\n    value: function handleChainChanged(chainId) {\n      this.emitUpdate({\n        chainId: chainId\n      });\n    }\n  }, {\n    key: \"handleAccountsChanged\",\n    value: function handleAccountsChanged(accounts) {\n      this.emitUpdate({\n        account: accounts[0]\n      });\n    }\n  }, {\n    key: \"handleDisconnect\",\n    value: function handleDisconnect() {\n      this.emitDeactivate(); // we have to do this because of a @walletconnect/web3-provider bug\n\n      if (this.walletConnectProvider) {\n        this.walletConnectProvider.stop();\n        this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged);\n        this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged);\n        this.walletConnectProvider = undefined;\n      }\n\n      this.emitDeactivate();\n    }\n  }]);\n\n  return BaseWalletConnectConnector;\n}(abstract_connector_1.AbstractConnector);\n\nexports.BaseWalletConnectConnector = BaseWalletConnectConnector;\nBaseWalletConnectConnector.isEnabling = false;\n\nvar WalletConnectConnector = /*#__PURE__*/function (_BaseWalletConnectCon) {\n  _inherits(WalletConnectConnector, _BaseWalletConnectCon);\n\n  function WalletConnectConnector() {\n    var _this3;\n\n    _classCallCheck(this, WalletConnectConnector);\n\n    var urls = configuration_1.getConfiguration()[provider_type_1.ProviderType.WALLET_CONNECT].urls;\n    var params = {\n      rpc: urls,\n      qrcode: true,\n      pollingInterval: 150000\n    };\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(WalletConnectConnector).call(this, params));\n    _this3.params = params;\n    return _this3;\n  }\n\n  _createClass(WalletConnectConnector, [{\n    key: \"getRpc\",\n    value: function getRpc() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var chainId;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.getChainId();\n\n              case 2:\n                chainId = _context6.sent;\n                return _context6.abrupt(\"return\", this.params.rpc[chainId]);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"getQrCode\",\n    value: function getQrCode() {\n      return this.params.qrcode;\n    }\n  }, {\n    key: \"getPollingInterval\",\n    value: function getPollingInterval() {\n      return this.params.pollingInterval;\n    }\n  }]);\n\n  return WalletConnectConnector;\n}(BaseWalletConnectConnector);\n\nexports.WalletConnectConnector = WalletConnectConnector;","map":null,"metadata":{},"sourceType":"script"}