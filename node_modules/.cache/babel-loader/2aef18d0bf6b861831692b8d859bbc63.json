{"ast":null,"code":"import _toConsumableArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/AssetsEditor/AssetsEditor.tsx\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport * as React from 'react';\nimport { Button } from 'decentraland-ui';\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport SingleAssetEditor from 'components/AssetsEditor/SingleAssetEditor';\nimport { MAX_TAGS, MAX_NAME_LENGTH, MIN_NAME_LENGTH } from 'modules/asset/utils';\nimport './AssetsEditor.css';\n\nvar AssetsEditor = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AssetsEditor, _React$PureComponent);\n\n  function AssetsEditor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AssetsEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AssetsEditor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentAsset: _this.getStartingAsset(),\n      errors: {},\n      isDirty: false\n    };\n    _this.analytics = getAnalytics();\n\n    _this.handlePrev = function () {\n      _this.setState({\n        currentAsset: Math.max(_this.state.currentAsset - 1, 0)\n      });\n    };\n\n    _this.handleNext = function () {\n      _this.setState({\n        currentAsset: Math.min(_this.state.currentAsset + 1, _this.props.assetPack.assets.length - 1)\n      });\n    };\n\n    _this.getErrors = function (asset) {\n      var errors = _this.state.errors;\n      var newErrors = {};\n\n      if (asset.tags && asset.tags.length > MAX_TAGS) {\n        newErrors.tags = t('asset_pack.edit_asset.errors.tag_count', {\n          count: MAX_TAGS\n        });\n      }\n\n      if (asset.name.length > MAX_NAME_LENGTH) {\n        newErrors.name = t('asset_pack.edit_asset.errors.max_name_length', {\n          count: MAX_NAME_LENGTH\n        });\n      }\n\n      if (asset.name.length < MIN_NAME_LENGTH) {\n        newErrors.name = t('asset_pack.edit_asset.errors.min_name_length', {\n          count: MIN_NAME_LENGTH\n        });\n      }\n\n      var hasErrors = Object.keys(newErrors).length > 0;\n\n      if (errors[asset.id] && !hasErrors) {\n        // Remove key from dictionary if all errors are fixed\n        var _ = errors[asset.id],\n            newState = _objectWithoutProperties(errors, [asset.id].map(_toPropertyKey));\n\n        return newState;\n      } else if (hasErrors) {\n        return _objectSpread({}, errors, _defineProperty({}, asset.id, newErrors));\n      }\n\n      return errors;\n    };\n\n    _this.getAssetPackErrors = function () {\n      var errors = {};\n\n      var _iterator = _createForOfIteratorHelper(_this.getAssets()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var asset = _step.value;\n          errors = _objectSpread({}, errors, _this.getErrors(asset));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return errors;\n    };\n\n    _this.handleChange = function (asset) {\n      var assetPack = _this.props.assetPack;\n      var isDirty = _this.state.isDirty;\n\n      if (isDirty) {\n        var errors = _this.getErrors(asset);\n\n        _this.setState({\n          errors: errors\n        });\n      }\n\n      if (assetPack) {\n        var assets = _toConsumableArray(assetPack.assets);\n\n        var index = assets.findIndex(function (a) {\n          return a.id === asset.id;\n        });\n        assets[index] = asset;\n\n        _this.props.onChange(_objectSpread({}, assetPack, {\n          assets: assets\n        }));\n      }\n    };\n\n    _this.getAssetIndex = function (assetId) {\n      var assets = _this.getAssets();\n\n      for (var i = 0; i < assets.length; i++) {\n        var asset = assets[i];\n\n        if (asset.id === assetId) {\n          return i;\n        }\n      }\n\n      return 0;\n    };\n\n    _this.handleSubmit = function () {\n      var currentAsset = _this.state.currentAsset;\n\n      var errors = _this.getAssetPackErrors();\n\n      var errorKeys = Object.keys(errors);\n      var hasErrors = errorKeys.length > 0;\n\n      var assets = _this.getAssets();\n\n      var isLast = currentAsset === assets.length - 1;\n\n      if (!isLast) {\n        _this.analytics.track('Asset Review Skip');\n      }\n\n      _this.setState({\n        isDirty: true,\n        errors: errors,\n        currentAsset: hasErrors ? _this.getAssetIndex(errorKeys[0]) : currentAsset\n      });\n\n      if (!hasErrors) {\n        _this.props.onSubmit(_this.props.assetPack);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AssetsEditor, [{\n    key: \"getAssets\",\n    value: function getAssets() {\n      var _this$props = this.props,\n          assetPack = _this$props.assetPack,\n          ignoredAssets = _this$props.ignoredAssets;\n      var assets = [];\n\n      var _iterator2 = _createForOfIteratorHelper(assetPack.assets),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var asset = _step2.value;\n\n          if (ignoredAssets && ignoredAssets.length > 0 && ignoredAssets.includes(asset.id)) {\n            continue;\n          }\n\n          assets.push(asset);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return assets;\n    }\n  }, {\n    key: \"getStartingAsset\",\n    value: function getStartingAsset() {\n      var startingAsset = this.props.startingAsset;\n      if (!startingAsset) return 0;\n      var assets = this.getAssets();\n      var found = assets.findIndex(function (asset) {\n        return asset.id === startingAsset;\n      });\n      return found === -1 ? 0 : found;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isEditing = this.props.isEditing;\n      var _this$state = this.state,\n          currentAsset = _this$state.currentAsset,\n          errors = _this$state.errors,\n          isDirty = _this$state.isDirty;\n      var hasErrors = Object.keys(errors).length > 0;\n      var isSubmitDisabled = isDirty ? hasErrors : false;\n      var assets = this.getAssets();\n      var isFirst = currentAsset === 0;\n      var isLast = currentAsset === assets.length - 1;\n      var asset = assets[currentAsset];\n      var currentAssetError = errors[asset.id];\n      var paginationClasses = 'pagination';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"AssetsEditor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SingleAssetEditor, {\n        asset: asset,\n        onChange: this.handleChange,\n        errors: currentAssetError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, assets.length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n        className: paginationClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handlePrev,\n        icon: \"angle left\",\n        disabled: isFirst,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"current\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, currentAsset + 1, \"/\", assets.length), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleNext,\n        icon: \"angle right\",\n        disabled: isLast,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"submit\",\n        primary: isLast || isEditing,\n        disabled: isSubmitDisabled,\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }, isEditing && t('global.save'), !isEditing && (isLast ? t('asset_pack.edit_asset.action') : t('asset_pack.edit_asset.action_skip')))));\n    }\n  }]);\n\n  return AssetsEditor;\n}(React.PureComponent);\n\nexport { AssetsEditor as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/AssetsEditor/AssetsEditor.tsx"],"names":["React","Button","getAnalytics","t","SingleAssetEditor","MAX_TAGS","MAX_NAME_LENGTH","MIN_NAME_LENGTH","AssetsEditor","state","currentAsset","getStartingAsset","errors","isDirty","analytics","handlePrev","setState","Math","max","handleNext","min","props","assetPack","assets","length","getErrors","asset","newErrors","tags","count","name","hasErrors","Object","keys","id","_","newState","getAssetPackErrors","getAssets","handleChange","index","findIndex","a","onChange","getAssetIndex","assetId","i","handleSubmit","errorKeys","isLast","track","onSubmit","ignoredAssets","includes","push","startingAsset","found","isEditing","isSubmitDisabled","isFirst","currentAssetError","paginationClasses","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Button } from 'decentraland-ui'\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport SingleAssetEditor from 'components/AssetsEditor/SingleAssetEditor'\nimport { MAX_TAGS, MAX_NAME_LENGTH, MIN_NAME_LENGTH } from 'modules/asset/utils'\nimport { RawAssetPack, MixedAssetPack } from 'modules/assetPack/types'\nimport { RawAsset } from 'modules/asset/types'\nimport { Props, State } from './AssetsEditor.types'\nimport './AssetsEditor.css'\n\nexport default class AssetsEditor<T extends MixedAssetPack = RawAssetPack> extends React.PureComponent<Props<T>, State> {\n  state: State = {\n    currentAsset: this.getStartingAsset(),\n    errors: {},\n    isDirty: false\n  }\n\n  analytics = getAnalytics()\n\n  getAssets() {\n    const { assetPack, ignoredAssets } = this.props\n    let assets = []\n    for (let asset of assetPack.assets) {\n      if (ignoredAssets && ignoredAssets.length > 0 && ignoredAssets.includes(asset.id)) {\n        continue\n      }\n      assets.push(asset)\n    }\n\n    return assets\n  }\n\n  getStartingAsset() {\n    const { startingAsset } = this.props\n    if (!startingAsset) return 0\n\n    const assets = this.getAssets()\n    const found = assets.findIndex(asset => asset.id === startingAsset)\n    return found === -1 ? 0 : found\n  }\n\n  handlePrev = () => {\n    this.setState({\n      currentAsset: Math.max(this.state.currentAsset - 1, 0)\n    })\n  }\n\n  handleNext = () => {\n    this.setState({\n      currentAsset: Math.min(this.state.currentAsset + 1, this.props.assetPack.assets.length - 1)\n    })\n  }\n\n  getErrors = (asset: T['assets'][number]) => {\n    const { errors } = this.state\n    const newErrors: Record<string, string> = {}\n\n    if (asset.tags && asset.tags.length > MAX_TAGS) {\n      newErrors.tags = t('asset_pack.edit_asset.errors.tag_count', {\n        count: MAX_TAGS\n      })\n    }\n\n    if (asset.name.length > MAX_NAME_LENGTH) {\n      newErrors.name = t('asset_pack.edit_asset.errors.max_name_length', {\n        count: MAX_NAME_LENGTH\n      })\n    }\n\n    if (asset.name.length < MIN_NAME_LENGTH) {\n      newErrors.name = t('asset_pack.edit_asset.errors.min_name_length', {\n        count: MIN_NAME_LENGTH\n      })\n    }\n\n    const hasErrors = Object.keys(newErrors).length > 0\n\n    if (errors[asset.id] && !hasErrors) {\n      // Remove key from dictionary if all errors are fixed\n      const { [asset.id]: _, ...newState } = errors\n      return newState\n    } else if (hasErrors) {\n      return { ...errors, [asset.id]: newErrors }\n    }\n\n    return errors\n  }\n\n  getAssetPackErrors = () => {\n    let errors: Record<string, Record<string, string>> = {}\n    for (let asset of this.getAssets()) {\n      errors = { ...errors, ...this.getErrors(asset) }\n    }\n    return errors\n  }\n\n  handleChange = (asset: RawAsset) => {\n    const { assetPack } = this.props\n    const { isDirty } = this.state\n\n    if (isDirty) {\n      const errors = this.getErrors(asset)\n      this.setState({ errors: errors })\n    }\n\n    if (assetPack) {\n      const assets = [...assetPack.assets]\n      const index = assets.findIndex(a => a.id === asset.id)\n      assets[index] = asset\n\n      this.props.onChange({\n        ...assetPack,\n        assets\n      })\n    }\n  }\n\n  getAssetIndex = (assetId: string) => {\n    const assets = this.getAssets()\n    for (let i = 0; i < assets.length; i++) {\n      const asset = assets[i]\n      if (asset.id === assetId) {\n        return i\n      }\n    }\n    return 0\n  }\n\n  handleSubmit = () => {\n    const { currentAsset } = this.state\n    const errors = this.getAssetPackErrors()\n    const errorKeys = Object.keys(errors)\n    const hasErrors = errorKeys.length > 0\n    const assets = this.getAssets()\n    const isLast = currentAsset === assets.length - 1\n\n    if (!isLast) {\n      this.analytics.track('Asset Review Skip')\n    }\n\n    this.setState({\n      isDirty: true,\n      errors,\n      currentAsset: hasErrors ? this.getAssetIndex(errorKeys[0]) : currentAsset\n    })\n\n    if (!hasErrors) {\n      this.props.onSubmit(this.props.assetPack)\n    }\n  }\n\n  render() {\n    const { isEditing } = this.props\n    const { currentAsset, errors, isDirty } = this.state\n    const hasErrors = Object.keys(errors).length > 0\n    const isSubmitDisabled = isDirty ? hasErrors : false\n    const assets = this.getAssets()\n    const isFirst = currentAsset === 0\n    const isLast = currentAsset === assets.length - 1\n    const asset = assets[currentAsset]\n    const currentAssetError = errors[asset.id]\n\n    let paginationClasses = 'pagination'\n\n    return (\n      <div className=\"AssetsEditor\">\n        <SingleAssetEditor asset={asset} onChange={this.handleChange} errors={currentAssetError} />\n\n        <div className=\"actions\">\n          {assets.length > 1 && (\n            <div className={paginationClasses}>\n              <Button onClick={this.handlePrev} icon=\"angle left\" disabled={isFirst} />\n              <span className=\"current\">\n                {currentAsset + 1}/{assets.length}\n              </span>\n              <Button onClick={this.handleNext} icon=\"angle right\" disabled={isLast} />\n            </div>\n          )}\n\n          <Button className=\"submit\" primary={isLast || isEditing} disabled={isSubmitDisabled} onClick={this.handleSubmit}>\n            {isEditing && t('global.save')}\n            {!isEditing && (isLast ? t('asset_pack.edit_asset.action') : t('asset_pack.edit_asset.action_skip'))}\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}