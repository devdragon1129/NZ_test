{"ast":null,"code":"import { config } from 'config';\nimport { locations } from 'routing/locations';\nimport { getThumbnailURL } from 'modules/item/utils';\nimport { shorten } from 'lib/address';\nvar MARKETPLACE_WEB_URL = config.get('MARKETPLACE_WEB_URL', '');\nexport function buildCollectionForumPost(collection, items) {\n  var ownerName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var collectionURL = window.location.origin + locations.itemEditor({\n    collectionId: collection.id\n  }); // We only post in English\n\n  return {\n    title: \"Collection '\".concat(collection.name, \"' created by \").concat(ownerName || shorten(collection.owner), \" is ready for review!\"),\n    raw: \"# \".concat(collection.name, \"\\n\\n  [View entire collection](\").concat(collectionURL, \")\\n    \\n  ## Wearables\\n\\n  \").concat(items.map(toRawItem).join('\\n\\n'))\n  };\n}\n\nfunction toRawItem(item) {\n  var sections = [];\n\n  if (item.description) {\n    sections.push(\"- Description: \".concat(item.description));\n  }\n\n  if (item.rarity) {\n    sections.push(\"- Rarity: \".concat(item.rarity));\n  }\n\n  if (item.data.category) {\n    sections.push(\"- Category: \".concat(item.data.category));\n  }\n\n  return \"**\".concat(item.name, \"**\\n\").concat(sections.join('\\n'), \"\\n![](\").concat(getThumbnailURL(item), \")\\n[Link to editor](\").concat(window.location.origin).concat(locations.itemEditor({\n    itemId: item.id\n  }), \")\");\n}\n\nexport function buildCollectionNewAssigneePostBody(assignee, profile) {\n  // We only post in English\n  return \"The collection has been \".concat(assignee ? profile !== null && profile !== void 0 && profile.avatars[0].name ? \"assigned to <a target=\\\"_blank\\\" href=\\\"\".concat(MARKETPLACE_WEB_URL, \"/accounts/\").concat(assignee, \"\\\">\").concat(profile.avatars[0].name, \"</a>\") : \"assigned to \".concat(assignee) : 'unassigned.');\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/forum/utils.ts"],"names":["config","locations","getThumbnailURL","shorten","MARKETPLACE_WEB_URL","get","buildCollectionForumPost","collection","items","ownerName","collectionURL","window","location","origin","itemEditor","collectionId","id","title","name","owner","raw","map","toRawItem","join","item","sections","description","push","rarity","data","category","itemId","buildCollectionNewAssigneePostBody","assignee","profile","avatars"],"mappings":"AACA,SAASA,MAAT,QAAuB,QAAvB;AAGA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,IAAMC,mBAAmB,GAAGJ,MAAM,CAACK,GAAP,CAAW,qBAAX,EAAkC,EAAlC,CAA5B;AAEA,OAAO,SAASC,wBAAT,CAAkCC,UAAlC,EAA0DC,KAA1D,EAA4G;AAAA,MAAnCC,SAAmC,uEAAf,EAAe;AACjH,MAAMC,aAAa,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBZ,SAAS,CAACa,UAAV,CAAqB;AAAEC,IAAAA,YAAY,EAAER,UAAU,CAACS;AAA3B,GAArB,CAA/C,CADiH,CAGjH;;AACA,SAAO;AACLC,IAAAA,KAAK,wBAAiBV,UAAU,CAACW,IAA5B,0BAAgDT,SAAS,IAAIN,OAAO,CAACI,UAAU,CAACY,KAAZ,CAApE,0BADA;AAELC,IAAAA,GAAG,cAAOb,UAAU,CAACW,IAAlB,4CAEsBR,aAFtB,0CAMHF,KAAK,CAACa,GAAN,CAAUC,SAAV,EAAqBC,IAArB,CAA0B,MAA1B,CANG;AAFE,GAAP;AAUD;;AAED,SAASD,SAAT,CAAmBE,IAAnB,EAA+B;AAC7B,MAAMC,QAAQ,GAAG,EAAjB;;AACA,MAAID,IAAI,CAACE,WAAT,EAAsB;AACpBD,IAAAA,QAAQ,CAACE,IAAT,0BAAgCH,IAAI,CAACE,WAArC;AACD;;AACD,MAAIF,IAAI,CAACI,MAAT,EAAiB;AACfH,IAAAA,QAAQ,CAACE,IAAT,qBAA2BH,IAAI,CAACI,MAAhC;AACD;;AACD,MAAIJ,IAAI,CAACK,IAAL,CAAUC,QAAd,EAAwB;AACtBL,IAAAA,QAAQ,CAACE,IAAT,uBAA6BH,IAAI,CAACK,IAAL,CAAUC,QAAvC;AACD;;AACD,qBAAYN,IAAI,CAACN,IAAjB,iBACAO,QAAQ,CAACF,IAAT,CAAc,IAAd,CADA,mBAEIrB,eAAe,CAACsB,IAAD,CAFnB,iCAGiBb,MAAM,CAACC,QAAP,CAAgBC,MAHjC,SAG0CZ,SAAS,CAACa,UAAV,CAAqB;AAAEiB,IAAAA,MAAM,EAAEP,IAAI,CAACR;AAAf,GAArB,CAH1C;AAID;;AAED,OAAO,SAASgB,kCAAT,CAA4CC,QAA5C,EAAiFC,OAAjF,EAA0G;AAC/G;AACA,2CACED,QAAQ,GACJC,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEC,OAAT,CAAiB,CAAjB,EAAoBjB,IAApB,qDAC0Cd,mBAD1C,uBAC0E6B,QAD1E,gBACuFC,OAAO,CAACC,OAAR,CAAgB,CAAhB,EAAmBjB,IAD1G,kCAEiBe,QAFjB,CADI,GAIJ,aALN;AAOD","sourcesContent":["import { Profile } from 'decentraland-dapps/dist/modules/profile/types'\nimport { config } from 'config'\nimport { Item } from 'modules/item/types'\nimport { Collection } from 'modules/collection/types'\nimport { locations } from 'routing/locations'\nimport { getThumbnailURL } from 'modules/item/utils'\nimport { shorten } from 'lib/address'\nimport { ForumPost } from './types'\n\nconst MARKETPLACE_WEB_URL = config.get('MARKETPLACE_WEB_URL', '')\n\nexport function buildCollectionForumPost(collection: Collection, items: Item[], ownerName: string = ''): ForumPost {\n  const collectionURL = window.location.origin + locations.itemEditor({ collectionId: collection.id })\n\n  // We only post in English\n  return {\n    title: `Collection '${collection.name}' created by ${ownerName || shorten(collection.owner)} is ready for review!`,\n    raw: `# ${collection.name}\n\n  [View entire collection](${collectionURL})\n    \n  ## Wearables\n\n  ${items.map(toRawItem).join('\\n\\n')}`\n  }\n}\n\nfunction toRawItem(item: Item) {\n  const sections = []\n  if (item.description) {\n    sections.push(`- Description: ${item.description}`)\n  }\n  if (item.rarity) {\n    sections.push(`- Rarity: ${item.rarity}`)\n  }\n  if (item.data.category) {\n    sections.push(`- Category: ${item.data.category}`)\n  }\n  return `**${item.name}**\n${sections.join('\\n')}\n![](${getThumbnailURL(item)})\n[Link to editor](${window.location.origin}${locations.itemEditor({ itemId: item.id })})`\n}\n\nexport function buildCollectionNewAssigneePostBody(assignee: string | null | undefined, profile: Profile | null) {\n  // We only post in English\n  return `The collection has been ${\n    assignee\n      ? profile?.avatars[0].name\n        ? `assigned to <a target=\"_blank\" href=\"${MARKETPLACE_WEB_URL}/accounts/${assignee}\">${profile.avatars[0].name}</a>`\n        : `assigned to ${assignee}`\n      : 'unassigned.'\n  }`\n}\n"]},"metadata":{},"sourceType":"module"}