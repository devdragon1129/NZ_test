{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Profile/Profile.tsx\";\nimport * as React from 'react';\nimport { Profile as BaseProfile } from 'decentraland-dapps/dist/containers';\nimport { isEqual } from 'lib/address';\nimport { LAND_POOL_ADDRESS } from 'modules/land/utils';\n\nvar Profile = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Profile, _React$PureComponent);\n\n  function Profile() {\n    _classCallCheck(this, Profile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Profile).apply(this, arguments));\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      var newProps = _objectSpread({}, this.props);\n\n      if (isEqual(newProps.address, LAND_POOL_ADDRESS)) {\n        newProps.isDecentraland = true;\n      }\n\n      return /*#__PURE__*/React.createElement(BaseProfile, Object.assign({}, newProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return Profile;\n}(React.PureComponent);\n\nexport { Profile as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Profile/Profile.tsx"],"names":["React","Profile","BaseProfile","isEqual","LAND_POOL_ADDRESS","newProps","props","address","isDecentraland","PureComponent"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,OAAO,IAAIC,WAApB,QAAuC,oCAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;IAEqBH,O;;;;;;;;;;;6BACV;AACP,UAAMI,QAAQ,qBAAQ,KAAKC,KAAb,CAAd;;AACA,UAAIH,OAAO,CAACE,QAAQ,CAACE,OAAV,EAAmBH,iBAAnB,CAAX,EAAkD;AAChDC,QAAAA,QAAQ,CAACG,cAAT,GAA0B,IAA1B;AACD;;AAED,0BAAO,oBAAC,WAAD,oBAAiBH,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EARkCL,KAAK,CAACS,a;;SAAtBR,O","sourcesContent":["import * as React from 'react'\nimport { ProfileProps } from 'decentraland-ui'\nimport { Profile as BaseProfile } from 'decentraland-dapps/dist/containers'\nimport { isEqual } from 'lib/address'\nimport { LAND_POOL_ADDRESS } from 'modules/land/utils'\n\nexport default class Profile extends React.PureComponent<ProfileProps> {\n  render() {\n    const newProps = { ...this.props }\n    if (isEqual(newProps.address, LAND_POOL_ADDRESS)) {\n      newProps.isDecentraland = true\n    }\n\n    return <BaseProfile {...newProps} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}