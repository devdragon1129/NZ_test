{"ast":null,"code":"export var ProgressStage;\n\n(function (ProgressStage) {\n  ProgressStage[ProgressStage[\"NONE\"] = 0] = \"NONE\";\n  ProgressStage[ProgressStage[\"UPLOAD_RECORDING\"] = 1] = \"UPLOAD_RECORDING\";\n  ProgressStage[ProgressStage[\"CREATE_FILES\"] = 2] = \"CREATE_FILES\";\n  ProgressStage[ProgressStage[\"UPLOAD_SCENE_ASSETS\"] = 3] = \"UPLOAD_SCENE_ASSETS\";\n})(ProgressStage || (ProgressStage = {}));\n\nexport var DeploymentStatus;\n\n(function (DeploymentStatus) {\n  DeploymentStatus[DeploymentStatus[\"UNPUBLISHED\"] = 0] = \"UNPUBLISHED\";\n  DeploymentStatus[DeploymentStatus[\"PUBLISHED\"] = 1] = \"PUBLISHED\";\n  DeploymentStatus[DeploymentStatus[\"NEEDS_SYNC\"] = 2] = \"NEEDS_SYNC\";\n})(DeploymentStatus || (DeploymentStatus = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/deployment/types.ts"],"names":["ProgressStage","DeploymentStatus"],"mappings":"AAcA,WAAYA,aAAZ;;WAAYA,a;AAAAA,EAAAA,a,CAAAA,a;AAAAA,EAAAA,a,CAAAA,a;AAAAA,EAAAA,a,CAAAA,a;AAAAA,EAAAA,a,CAAAA,a;GAAAA,a,KAAAA,a;;AAeZ,WAAYC,gBAAZ;;WAAYA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;GAAAA,gB,KAAAA,gB","sourcesContent":["import { EntityType } from 'dcl-catalyst-commons'\nimport { Project, Layout } from 'modules/project/types'\n\nexport type ContentIdentifier = {\n  cid: string\n  name: string\n}\n\nexport type ContentServiceFile = {\n  path: string\n  content: Buffer\n  size: number\n}\n\nexport enum ProgressStage {\n  NONE,\n  UPLOAD_RECORDING, // Client images/video are uploaded to LAND pool\n  CREATE_FILES, // Creates scene files\n  UPLOAD_SCENE_ASSETS // Scene assets are uploaded to the content server (LAND deployment)\n}\n\nexport type ContentManifest = Record<string, ContentIdentifier>\n\nexport type Coordinate = { x: number; y: number }\n\nexport type Rotation = 'north' | 'east' | 'south' | 'west'\n\nexport type Placement = { point: Coordinate; rotation: Rotation }\n\nexport enum DeploymentStatus {\n  UNPUBLISHED,\n  PUBLISHED,\n  NEEDS_SYNC\n}\n\nexport type ContentServiceScene = {\n  id: string\n  type: EntityType\n  timestamp: number\n  pointers: string[]\n  content: string[]\n  metadata: any\n}[]\n\nexport type Deployment = {\n  id: string\n  projectId: string | null\n  timestamp: number\n  name: string\n  thumbnail: string | null\n  placement: Placement\n  owner: string\n  layout: Layout | null\n  base: string\n  parcels: string[]\n}\n\nexport type SceneDefinition = {\n  display?: {\n    title: string\n    favicon: string\n    navmapThumbnail?: string\n  }\n  main: string\n  owner: string\n  scene: { parcels: string[]; base: string }\n  source?: {\n    version?: number\n    origin: string\n    projectId: string\n    point?: Placement['point']\n    rotation?: Placement['rotation']\n    layout?: Project['layout']\n    isEmpty?: boolean\n  }\n  contact: {\n    name: string\n    email: string\n  }\n  tags: string[]\n}\n"]},"metadata":{},"sourceType":"module"}