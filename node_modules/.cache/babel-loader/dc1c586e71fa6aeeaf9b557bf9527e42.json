{"ast":null,"code":"export var ENSOrigin;\n\n(function (ENSOrigin) {\n  ENSOrigin[\"RESOLVER\"] = \"Resolver\";\n  ENSOrigin[\"CONTENT\"] = \"Content\";\n})(ENSOrigin || (ENSOrigin = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/ens/types.ts"],"names":["ENSOrigin"],"mappings":"AAsBA,WAAYA,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S","sourcesContent":["export type ENS = {\n  address: string\n\n  name: string\n  subdomain: string\n  resolver: string\n  content: string\n\n  ipfsHash?: string\n\n  // We'll need to change `landId` eventually so it can handle different content types. We could use:\n  //   contentId?: string\n  //   contentType?: ENSContent {LAND = 'land', (...)}\n  landId?: string\n}\n\nexport type ENSError = {\n  message: string\n  code?: number\n  origin?: ENSOrigin\n}\n\nexport enum ENSOrigin {\n  RESOLVER = 'Resolver',\n  CONTENT = 'Content'\n}\n\nexport type Authorization = {\n  allowance: string\n}\n"]},"metadata":{},"sourceType":"module"}