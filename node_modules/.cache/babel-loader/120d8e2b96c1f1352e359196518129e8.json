{"ast":null,"code":"import { ThinEngine } from \"../../Engines/thinEngine\";\n\nThinEngine.prototype.setAlphaConstants = function (r, g, b, a) {\n  this._alphaState.setAlphaBlendConstants(r, g, b, a);\n};\n\nThinEngine.prototype.setAlphaMode = function (mode, noDepthWriteChange) {\n  if (noDepthWriteChange === void 0) {\n    noDepthWriteChange = false;\n  }\n\n  if (this._alphaMode === mode) {\n    return;\n  }\n\n  switch (mode) {\n    case 0:\n      this._alphaState.alphaBlend = false;\n      break;\n\n    case 7:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA, this._gl.ONE, this._gl.ONE);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 8:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA, this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 2:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA, this._gl.ONE_MINUS_SRC_ALPHA, this._gl.ONE, this._gl.ONE);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 6:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE, this._gl.ZERO, this._gl.ONE);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 1:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA, this._gl.ONE, this._gl.ZERO, this._gl.ONE);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 3:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.ZERO, this._gl.ONE_MINUS_SRC_COLOR, this._gl.ONE, this._gl.ONE);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 4:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.DST_COLOR, this._gl.ZERO, this._gl.ONE, this._gl.ONE);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 5:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA, this._gl.ONE_MINUS_SRC_COLOR, this._gl.ONE, this._gl.ONE);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 9:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.CONSTANT_COLOR, this._gl.ONE_MINUS_CONSTANT_COLOR, this._gl.CONSTANT_ALPHA, this._gl.ONE_MINUS_CONSTANT_ALPHA);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 10:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE_MINUS_SRC_COLOR, this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 11:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE, this._gl.ONE, this._gl.ONE);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 12:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.DST_ALPHA, this._gl.ONE, this._gl.ZERO, this._gl.ZERO);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 13:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE_MINUS_DST_COLOR, this._gl.ONE_MINUS_SRC_COLOR, this._gl.ONE_MINUS_DST_ALPHA, this._gl.ONE_MINUS_SRC_ALPHA);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 14:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA, this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 15:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE, this._gl.ONE, this._gl.ZERO);\n\n      this._alphaState.alphaBlend = true;\n      break;\n\n    case 16:\n      this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE_MINUS_DST_COLOR, this._gl.ONE_MINUS_SRC_COLOR, this._gl.ZERO, this._gl.ONE);\n\n      this._alphaState.alphaBlend = true;\n      break;\n  }\n\n  if (!noDepthWriteChange) {\n    this.depthCullingState.depthMask = mode === 0;\n  }\n\n  this._alphaMode = mode;\n};\n\nThinEngine.prototype.getAlphaMode = function () {\n  return this._alphaMode;\n};\n\nThinEngine.prototype.setAlphaEquation = function (equation) {\n  if (this._alphaEquation === equation) {\n    return;\n  }\n\n  switch (equation) {\n    case 0:\n      this._alphaState.setAlphaEquationParameters(this._gl.FUNC_ADD, this._gl.FUNC_ADD);\n\n      break;\n\n    case 1:\n      this._alphaState.setAlphaEquationParameters(this._gl.FUNC_SUBTRACT, this._gl.FUNC_SUBTRACT);\n\n      break;\n\n    case 2:\n      this._alphaState.setAlphaEquationParameters(this._gl.FUNC_REVERSE_SUBTRACT, this._gl.FUNC_REVERSE_SUBTRACT);\n\n      break;\n\n    case 3:\n      this._alphaState.setAlphaEquationParameters(this._gl.MAX, this._gl.MAX);\n\n      break;\n\n    case 4:\n      this._alphaState.setAlphaEquationParameters(this._gl.MIN, this._gl.MIN);\n\n      break;\n\n    case 5:\n      this._alphaState.setAlphaEquationParameters(this._gl.MIN, this._gl.FUNC_ADD);\n\n      break;\n  }\n\n  this._alphaEquation = equation;\n};\n\nThinEngine.prototype.getAlphaEquation = function () {\n  return this._alphaEquation;\n};","map":null,"metadata":{},"sourceType":"module"}