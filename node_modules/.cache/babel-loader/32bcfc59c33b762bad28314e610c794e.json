{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/ENSSelectLandPage/ENSSelectLandPage.tsx\";\nimport * as React from 'react';\nimport { Loader, Row, Column, Section, Header, Button, Narrow } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport LoggedInDetailPage from 'components/LoggedInDetailPage';\nimport { locations } from 'routing/locations';\nimport { coordsToId, locateNextLand } from 'modules/land/utils';\nimport { Atlas } from 'components/Atlas';\nimport Back from 'components/Back';\nimport NotFound from 'components/NotFound';\nimport './ENSSelectLandPage.css';\n\nvar ENSSelectLandPage = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ENSSelectLandPage, _React$PureComponent);\n\n  function ENSSelectLandPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ENSSelectLandPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ENSSelectLandPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleBack = function () {\n      _this.props.onNavigate(locations.root());\n    };\n\n    _this.handleSelectLand = function (x, y) {\n      var selectedLand = _this.getOwnedLand(x, y);\n\n      if (selectedLand) {\n        _this.setState({\n          selectedLand: selectedLand\n        });\n      }\n    };\n\n    _this.handleLocateLand = function () {\n      var landTiles = _this.props.landTiles;\n      var selectedLand = _this.state.selectedLand;\n      var nextLand = locateNextLand(landTiles, selectedLand.id);\n\n      _this.setState({\n        selectedLand: nextLand\n      });\n    };\n\n    _this.handleReassignENS = function () {\n      var _this$props = _this.props,\n          onNavigate = _this$props.onNavigate,\n          ens = _this$props.ens;\n      var selectedLand = _this.state.selectedLand;\n\n      if (selectedLand) {\n        onNavigate(locations.landAssignENS(selectedLand.id, ens.subdomain));\n      }\n    };\n\n    _this.hoverLayer = function (x, y) {\n      return _this.isHovered(x, y) && _this.getOwnedLand(x, y) ? {\n        color: '#fcc6d1',\n        scale: 1.4\n      } : null;\n    };\n\n    _this.handleOnHover = function (x, y) {\n      _this.setState({\n        hoveredLandId: coordsToId(x, y)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ENSSelectLandPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props2 = this.props,\n          isLoading = _this$props2.isLoading,\n          ens = _this$props2.ens;\n      var selectedLand = this.state.selectedLand;\n\n      if (!selectedLand && !isLoading && ens) {\n        this.setState({\n          selectedLand: this.getFirstAvailableLand()\n        });\n      }\n    }\n  }, {\n    key: \"isHovered\",\n    value: function isHovered(x, y) {\n      var _this$state = this.state,\n          selectedLand = _this$state.selectedLand,\n          hoveredLandId = _this$state.hoveredLandId;\n      var landId = coordsToId(x, y);\n      return (!selectedLand || selectedLand.id !== landId) && hoveredLandId === landId;\n    }\n  }, {\n    key: \"getOwnedLand\",\n    value: function getOwnedLand(x, y) {\n      var landTiles = this.props.landTiles;\n      var landId = coordsToId(x, y);\n      return landTiles && landId in landTiles ? landTiles[landId].land : undefined;\n    }\n  }, {\n    key: \"getFirstAvailableLand\",\n    value: function getFirstAvailableLand() {\n      var _this$props3 = this.props,\n          ens = _this$props3.ens,\n          landTiles = _this$props3.landTiles;\n      var tiles = Object.values(landTiles || {});\n\n      if (tiles.length === 1) {\n        return tiles[0].land;\n      }\n\n      var land;\n\n      for (var _i = 0, _tiles = tiles; _i < _tiles.length; _i++) {\n        var tile = _tiles[_i];\n\n        if (tile.land.id !== ens.landId) {\n          land = tile.land;\n          break;\n        }\n      }\n\n      return land;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          ens = _this$props4.ens,\n          isLoading = _this$props4.isLoading,\n          onBack = _this$props4.onBack;\n      var selectedLand = this.state.selectedLand;\n      var isSameLand = selectedLand && ens && selectedLand.id === ens.landId;\n      return /*#__PURE__*/React.createElement(LoggedInDetailPage, {\n        className: \"ENSSelectLandPage\",\n        hasNavigation: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, isLoading ? /*#__PURE__*/React.createElement(Loader, {\n        active: true,\n        size: \"massive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }) : !ens ? /*#__PURE__*/React.createElement(NotFound, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Back, {\n        absolute: true,\n        onClick: this.handleBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Narrow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        className: \"title\",\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, t('ens_select_land_page.title', {\n        name: ens ? ens.subdomain : t('global.name')\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"subtitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, t('ens_select_land_page.subtitle'))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"atlas-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Atlas, {\n        showControls: true,\n        showOwner: true,\n        isDraggable: true,\n        landId: selectedLand ? selectedLand.id : undefined,\n        onClick: this.handleSelectLand,\n        onHover: this.handleOnHover,\n        onLocateLand: this.handleLocateLand,\n        layers: [this.hoverLayer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        className: \"atlas-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        grow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, selectedLand ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"selected-land\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }\n      }, t('ens_select_land_page.land_selected')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"land\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 23\n        }\n      }, selectedLand.name, \" (\", selectedLand.id, \")\")) : null), /*#__PURE__*/React.createElement(Column, {\n        grow: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        onClick: onBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, t('global.cancel')), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        disabled: !selectedLand || isSameLand,\n        onClick: this.handleReassignENS,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, isSameLand ? t('ens_select_land_page.already_assigned') : t('global.continue'))))))));\n    }\n  }]);\n\n  return ENSSelectLandPage;\n}(React.PureComponent);\n\nexport { ENSSelectLandPage as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ENSSelectLandPage/ENSSelectLandPage.tsx"],"names":["React","Loader","Row","Column","Section","Header","Button","Narrow","t","LoggedInDetailPage","locations","coordsToId","locateNextLand","Atlas","Back","NotFound","ENSSelectLandPage","state","handleBack","props","onNavigate","root","handleSelectLand","x","y","selectedLand","getOwnedLand","setState","handleLocateLand","landTiles","nextLand","id","handleReassignENS","ens","landAssignENS","subdomain","hoverLayer","isHovered","color","scale","handleOnHover","hoveredLandId","isLoading","getFirstAvailableLand","landId","land","undefined","tiles","Object","values","length","tile","onBack","isSameLand","name","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Loader, Row, Column, Section, Header, Button, Narrow } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport LoggedInDetailPage from 'components/LoggedInDetailPage'\nimport { locations } from 'routing/locations'\nimport { Land } from 'modules/land/types'\nimport { coordsToId, locateNextLand } from 'modules/land/utils'\nimport { Atlas } from 'components/Atlas'\nimport Back from 'components/Back'\nimport NotFound from 'components/NotFound'\nimport { Props, State } from './ENSSelectLandPage.types'\nimport './ENSSelectLandPage.css'\n\nexport default class ENSSelectLandPage extends React.PureComponent<Props, State> {\n  state: State = {}\n\n  componentDidUpdate() {\n    const { isLoading, ens } = this.props\n    const { selectedLand } = this.state\n\n    if (!selectedLand && !isLoading && ens) {\n      this.setState({ selectedLand: this.getFirstAvailableLand() })\n    }\n  }\n\n  handleBack = () => {\n    this.props.onNavigate(locations.root())\n  }\n\n  handleSelectLand = (x: number, y: number) => {\n    const selectedLand = this.getOwnedLand(x, y)\n    if (selectedLand) {\n      this.setState({ selectedLand })\n    }\n  }\n\n  handleLocateLand = () => {\n    const { landTiles } = this.props\n    const { selectedLand } = this.state\n\n    const nextLand = locateNextLand(landTiles!, selectedLand!.id)\n    this.setState({ selectedLand: nextLand })\n  }\n\n  handleReassignENS = () => {\n    const { onNavigate, ens } = this.props\n    const { selectedLand } = this.state\n    if (selectedLand) {\n      onNavigate(locations.landAssignENS(selectedLand!.id, ens!.subdomain))\n    }\n  }\n\n  hoverLayer = (x: number, y: number) => {\n    return this.isHovered(x, y) && this.getOwnedLand(x, y) ? { color: '#fcc6d1', scale: 1.4 } : null\n  }\n\n  isHovered(x: number, y: number) {\n    const { selectedLand, hoveredLandId } = this.state\n    const landId = coordsToId(x, y)\n    return (!selectedLand || selectedLand.id !== landId) && hoveredLandId === landId\n  }\n\n  getOwnedLand(x: number, y: number) {\n    const { landTiles } = this.props\n    const landId = coordsToId(x, y)\n    return landTiles && landId in landTiles ? landTiles[landId].land : undefined\n  }\n\n  handleOnHover = (x: number, y: number) => {\n    this.setState({ hoveredLandId: coordsToId(x, y) })\n  }\n\n  getFirstAvailableLand() {\n    const { ens, landTiles } = this.props\n    const tiles = Object.values(landTiles || {})\n    if (tiles.length === 1) {\n      return tiles[0].land\n    }\n\n    let land: Land | undefined\n    for (const tile of tiles) {\n      if (tile.land.id !== ens!.landId) {\n        land = tile.land\n        break\n      }\n    }\n    return land\n  }\n\n  render() {\n    const { ens, isLoading, onBack } = this.props\n    const { selectedLand } = this.state\n\n    const isSameLand = selectedLand && ens && selectedLand.id === ens.landId\n\n    return (\n      <LoggedInDetailPage className=\"ENSSelectLandPage\" hasNavigation={false}>\n        {isLoading ? (\n          <Loader active size=\"massive\" />\n        ) : !ens ? (\n          <NotFound />\n        ) : (\n          <>\n            <Back absolute onClick={this.handleBack} />\n            <Narrow>\n              <Row>\n                <Column>\n                  <Section>\n                    <Header className=\"title\" size=\"large\">\n                      {t('ens_select_land_page.title', { name: ens ? ens.subdomain : t('global.name') })}\n                    </Header>\n                    <span className=\"subtitle\">{t('ens_select_land_page.subtitle')}</span>\n                  </Section>\n                </Column>\n              </Row>\n              <div className=\"atlas-wrapper\">\n                <Atlas\n                  showControls\n                  showOwner\n                  isDraggable\n                  landId={selectedLand ? selectedLand.id : undefined}\n                  onClick={this.handleSelectLand}\n                  onHover={this.handleOnHover}\n                  onLocateLand={this.handleLocateLand}\n                  layers={[this.hoverLayer]}\n                />\n              </div>\n              <Row className=\"atlas-footer\">\n                <Column grow>\n                  {selectedLand ? (\n                    <div className=\"selected-land\">\n                      <div className=\"label\">{t('ens_select_land_page.land_selected')}</div>\n                      <div className=\"land\">\n                        {selectedLand.name} ({selectedLand.id})\n                      </div>\n                    </div>\n                  ) : null}\n                </Column>\n                <Column grow={false}>\n                  <div className=\"actions\">\n                    <Button secondary onClick={onBack}>\n                      {t('global.cancel')}\n                    </Button>\n                    <Button primary disabled={!selectedLand || isSameLand} onClick={this.handleReassignENS}>\n                      {isSameLand ? t('ens_select_land_page.already_assigned') : t('global.continue')}\n                    </Button>\n                  </div>\n                </Column>\n              </Row>\n            </Narrow>\n          </>\n        )}\n      </LoggedInDetailPage>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}