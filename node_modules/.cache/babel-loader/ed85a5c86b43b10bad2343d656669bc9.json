{"ast":null,"code":"import { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial\";\nimport { GLTFLoader } from \"../glTFLoader\";\nvar NAME = \"MSFT_sRGBFactors\";\n/** @hidden */\n\nvar MSFT_sRGBFactors =\n/** @class */\nfunction () {\n  function MSFT_sRGBFactors(loader) {\n    this.name = NAME;\n    this._loader = loader;\n    this.enabled = this._loader.isExtensionUsed(NAME);\n  }\n\n  MSFT_sRGBFactors.prototype.dispose = function () {\n    this._loader = null;\n  };\n\n  MSFT_sRGBFactors.prototype.loadMaterialPropertiesAsync = function (context, material, babylonMaterial) {\n    var _this = this;\n\n    return GLTFLoader.LoadExtraAsync(context, material, this.name, function (extraContext, extra) {\n      if (extra) {\n        if (!(babylonMaterial instanceof PBRMaterial)) {\n          throw new Error(extraContext + \": Material type not supported\");\n        }\n\n        var promise = _this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial);\n\n        if (!babylonMaterial.albedoTexture) {\n          babylonMaterial.albedoColor.toLinearSpaceToRef(babylonMaterial.albedoColor);\n        }\n\n        if (!babylonMaterial.reflectivityTexture) {\n          babylonMaterial.reflectivityColor.toLinearSpaceToRef(babylonMaterial.reflectivityColor);\n        }\n\n        return promise;\n      }\n\n      return null;\n    });\n  };\n\n  return MSFT_sRGBFactors;\n}();\n\nexport { MSFT_sRGBFactors };\nGLTFLoader.RegisterExtension(NAME, function (loader) {\n  return new MSFT_sRGBFactors(loader);\n});","map":null,"metadata":{},"sourceType":"module"}