{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/SideBar/EntityEditor/NumberField/NumberField.tsx\";\nimport * as React from 'react';\nimport { Field } from 'decentraland-ui';\nimport './NumberField.css';\n\nvar NumberField = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(NumberField, _React$PureComponent);\n\n  function NumberField() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NumberField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NumberField)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: _this.props.value !== undefined && _this.props.value !== null ? _this.props.value.toString() : '0',\n      id: _this.props.id || ''\n    };\n\n    _this.handleChange = function (_, props) {\n      var _this$props = _this.props,\n          allowFloat = _this$props.allowFloat,\n          onChange = _this$props.onChange;\n      var value = allowFloat ? props.value : props.value.replace(/,|\\./g, '');\n\n      _this.setState({\n        value: value\n      });\n\n      var numericValue = allowFloat ? parseFloat(value) : parseInt(value, 10);\n\n      if (!Number.isNaN(numericValue)) {\n        onChange(numericValue);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(NumberField, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          label = _this$props2.label,\n          _this$props2$classNam = _this$props2.className,\n          className = _this$props2$classNam === void 0 ? '' : _this$props2$classNam;\n      var value = this.state.value;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NumberField ParameterField \".concat(className),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: id,\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, label), /*#__PURE__*/React.createElement(Field, {\n        id: id,\n        value: value,\n        onChange: this.handleChange,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      if (props.value && props.id !== prevState.id) {\n        return {\n          value: props.value,\n          entityName: props.id\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return NumberField;\n}(React.PureComponent);\n\nexport { NumberField as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SideBar/EntityEditor/NumberField/NumberField.tsx"],"names":["React","Field","NumberField","state","value","props","undefined","toString","id","handleChange","_","allowFloat","onChange","replace","setState","numericValue","parseFloat","parseInt","Number","isNaN","label","className","prevState","entityName","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAyC,iBAAzC;AAEA,OAAO,mBAAP;;IAEqBC,W;;;;;;;;;;;;;;;UACnBC,K,GAAe;AACbC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD,KAAX,KAAqBE,SAArB,IAAkC,MAAKD,KAAL,CAAWD,KAAX,KAAqB,IAAvD,GAA8D,MAAKC,KAAL,CAAWD,KAAX,CAAiBG,QAAjB,EAA9D,GAA4F,GADtF;AAEbC,MAAAA,EAAE,EAAE,MAAKH,KAAL,CAAWG,EAAX,IAAiB;AAFR,K;;UAgBfC,Y,GAAe,UAACC,CAAD,EAASL,KAAT,EAAsC;AAAA,wBAClB,MAAKA,KADa;AAAA,UAC3CM,UAD2C,eAC3CA,UAD2C;AAAA,UAC/BC,QAD+B,eAC/BA,QAD+B;AAEnD,UAAMR,KAAK,GAAGO,UAAU,GAAGN,KAAK,CAACD,KAAT,GAAiBC,KAAK,CAACD,KAAN,CAAYS,OAAZ,CAAoB,OAApB,EAA6B,EAA7B,CAAzC;;AACA,YAAKC,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAALA;AAAF,OAAd;;AACA,UAAMW,YAAY,GAAGJ,UAAU,GAAGK,UAAU,CAACZ,KAAD,CAAb,GAAuBa,QAAQ,CAACb,KAAD,EAAQ,EAAR,CAA9D;;AACA,UAAI,CAACc,MAAM,CAACC,KAAP,CAAaJ,YAAb,CAAL,EAAiC;AAC/BH,QAAAA,QAAQ,CAACG,YAAD,CAAR;AACD;AACF,K;;;;;;;6BAEQ;AAAA,yBAC+B,KAAKV,KADpC;AAAA,UACCG,EADD,gBACCA,EADD;AAAA,UACKY,KADL,gBACKA,KADL;AAAA,+CACYC,SADZ;AAAA,UACYA,SADZ,sCACwB,EADxB;AAAA,UAECjB,KAFD,GAEW,KAAKD,KAFhB,CAECC,KAFD;AAGP,0BACE;AAAK,QAAA,SAAS,uCAAgCiB,SAAhC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAEb,EAAhB;AAAoB,QAAA,SAAS,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGY,KADH,CADF,eAIE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAEZ,EAAX;AAAe,QAAA,KAAK,EAAEJ,KAAtB;AAA6B,QAAA,QAAQ,EAAE,KAAKK,YAA5C;AAA0D,QAAA,IAAI,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;6CAhC+BJ,K,EAAciB,S,EAAkB;AAC9D,UAAIjB,KAAK,CAACD,KAAN,IAAeC,KAAK,CAACG,EAAN,KAAac,SAAS,CAACd,EAA1C,EAA8C;AAC5C,eAAO;AACLJ,UAAAA,KAAK,EAAEC,KAAK,CAACD,KADR;AAELmB,UAAAA,UAAU,EAAElB,KAAK,CAACG;AAFb,SAAP;AAID;;AAED,aAAO,IAAP;AACD;;;;EAfsCR,KAAK,CAACwB,a;;SAA1BtB,W","sourcesContent":["import * as React from 'react'\nimport { Field, InputOnChangeData } from 'decentraland-ui'\nimport { Props, State } from './NumberField.types'\nimport './NumberField.css'\n\nexport default class NumberField extends React.PureComponent<Props, State> {\n  state: State = {\n    value: this.props.value !== undefined && this.props.value !== null ? this.props.value.toString() : '0',\n    id: this.props.id || ''\n  }\n\n  static getDerivedStateFromProps(props: Props, prevState: State) {\n    if (props.value && props.id !== prevState.id) {\n      return {\n        value: props.value,\n        entityName: props.id\n      }\n    }\n\n    return null\n  }\n\n  handleChange = (_: any, props: InputOnChangeData) => {\n    const { allowFloat, onChange } = this.props\n    const value = allowFloat ? props.value : props.value.replace(/,|\\./g, '')\n    this.setState({ value })\n    const numericValue = allowFloat ? parseFloat(value) : parseInt(value, 10)\n    if (!Number.isNaN(numericValue)) {\n      onChange(numericValue)\n    }\n  }\n\n  render() {\n    const { id, label, className = '' } = this.props\n    const { value } = this.state\n    return (\n      <div className={`NumberField ParameterField ${className}`}>\n        <label htmlFor={id} className=\"label\">\n          {label}\n        </label>\n        <Field id={id} value={value} onChange={this.handleChange} type=\"number\" />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}