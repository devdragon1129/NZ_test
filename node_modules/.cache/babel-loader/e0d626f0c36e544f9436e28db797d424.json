{"ast":null,"code":"import _objectWithoutProperties from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagasMiddleware from 'redux-saga';\nimport { createLogger } from 'redux-logger';\nimport { createBrowserHistory } from 'history';\nimport { BuilderClient } from '@dcl/builder-client';\nimport { CatalystClient } from 'dcl-catalyst-client';\nimport { config } from 'config';\nimport { createTransactionMiddleware } from 'decentraland-dapps/dist/modules/transaction/middleware';\nimport { createStorageMiddleware } from 'decentraland-dapps/dist/modules/storage/middleware';\nimport { createAnalyticsMiddleware } from 'decentraland-dapps/dist/modules/analytics/middleware';\nimport { configure as configureAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils';\nimport { getOpenModals } from 'decentraland-dapps/dist/modules/modal/selectors';\nimport { openModal } from 'decentraland-dapps/dist/modules/modal/actions';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { PROVISION_SCENE, CREATE_SCENE } from 'modules/scene/actions';\nimport { DEPLOY_TO_LAND_SUCCESS, CLEAR_DEPLOYMENT_SUCCESS } from 'modules/deployment/actions';\nimport { SET_PROJECT, DELETE_PROJECT, CREATE_PROJECT, EDIT_PROJECT_THUMBNAIL } from 'modules/project/actions';\nimport { SAVE_PROJECT_SUCCESS } from 'modules/sync/actions';\nimport { EDITOR_UNDO, EDITOR_REDO } from 'modules/editor/actions';\nimport { migrations } from 'modules/migrations/store';\nimport { getData } from 'modules/identity/selectors';\nimport { getLoadingSet } from 'modules/sync/selectors';\nimport { DISMISS_SIGN_IN_TOAST, DISMISS_SYNCED_TOAST, SET_SYNC } from 'modules/ui/dashboard/actions';\nimport { GENERATE_IDENTITY_SUCCESS, DESTROY_IDENTITY, LOGIN_SUCCESS, LOGIN_FAILURE } from 'modules/identity/actions';\nimport { fetchTilesRequest } from 'modules/tile/actions';\nimport { isDevelopment } from 'lib/environment';\nimport { BuilderAPI, BUILDER_SERVER_URL } from 'lib/api/builder';\nimport { Authorization } from 'lib/api/auth';\nimport { PEER_URL } from 'lib/api/peer';\nimport { createRootReducer } from './reducer';\nimport { rootSaga } from './sagas';\n\nvar builderVersion = require('../../../package.json').version;\n\nconfigureAnalytics({\n  transformPayload: function transformPayload(payload) {\n    if (typeof payload === 'string' || payload === undefined) return payload;\n    return _objectSpread({}, payload, {\n      version: builderVersion\n    });\n  }\n}); // @ts-ignore: Dev tools\n\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? // prettier-ignore\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  stateSanitizer: function stateSanitizer(state) {\n    var _ = state.scene,\n        newState = _objectWithoutProperties(state, [\"scene\"]);\n\n    return newState;\n  }\n}) : compose;\nvar history = createBrowserHistory();\nvar rootReducer = createRootReducer(history);\nvar historyMiddleware = routerMiddleware(history);\nvar sagasMiddleware = createSagasMiddleware();\nvar loggerMiddleware = createLogger({\n  predicate: function predicate() {\n    return isDevelopment;\n  },\n  collapsed: function collapsed() {\n    return true;\n  }\n});\n\nvar _createStorageMiddlew = createStorageMiddleware({\n  migrations: migrations,\n  storageKey: config.get('LOCAL_STORAGE_KEY', 'builder'),\n  paths: [['project', 'data'], ['scene', 'present'], ['ui', 'dashboard'], ['auth', 'data'], ['sync', 'localProjectIds'], ['identity', 'data']],\n  actions: [CREATE_PROJECT, SET_PROJECT, CREATE_SCENE, PROVISION_SCENE, EDITOR_UNDO, EDITOR_REDO, DELETE_PROJECT, DEPLOY_TO_LAND_SUCCESS, CLEAR_DEPLOYMENT_SUCCESS, LOGIN_SUCCESS, LOGIN_FAILURE, SAVE_PROJECT_SUCCESS, EDIT_PROJECT_THUMBNAIL, DISMISS_SIGN_IN_TOAST, DISMISS_SYNCED_TOAST, SET_SYNC, GENERATE_IDENTITY_SUCCESS, DESTROY_IDENTITY],\n  transform: function transform(state) {\n    var projects = {};\n    var scene = {};\n\n    var _iterator = _createForOfIteratorHelper(state.sync.project.localIds),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var id = _step.value;\n        var project = state.project.data[id];\n        if (!project) continue;\n        projects[id] = project;\n        scene[project.sceneId] = state.scene.present.data[project.sceneId];\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var newState = _objectSpread({}, state, {\n      project: _objectSpread({}, state.project, {\n        data: projects\n      }),\n      scene: _objectSpread({}, state.scene, {\n        present: _objectSpread({}, state.scene.present, {\n          data: scene\n        })\n      })\n    });\n\n    return newState;\n  },\n  onError: function onError(err, store) {\n    var isQuotaModalOpen = !!getOpenModals(store.getState())['QuotaExceededModal'];\n\n    if (err instanceof DOMException && err.name === 'QuotaExceededError' && !isQuotaModalOpen) {\n      store.dispatch(openModal('QuotaExceededModal'));\n    }\n  }\n}),\n    storageMiddleware = _createStorageMiddlew.storageMiddleware,\n    loadStorageMiddleware = _createStorageMiddlew.loadStorageMiddleware;\n\nvar transactionMiddleware = createTransactionMiddleware();\nvar analyticsMiddleware = createAnalyticsMiddleware(config.get('SEGMENT_API_KEY'));\nvar middlewares = [historyMiddleware, sagasMiddleware, loggerMiddleware, storageMiddleware, analyticsMiddleware, transactionMiddleware];\nvar middleware = applyMiddleware.apply(void 0, middlewares);\nvar enhancer = composeEnhancers(middleware);\nvar store = createStore(rootReducer, enhancer);\nvar builderAPI = new BuilderAPI(BUILDER_SERVER_URL, new Authorization(store));\nvar catalystClient = new CatalystClient({\n  catalystUrl: PEER_URL\n});\n\nvar getClientAddress = function getClientAddress() {\n  return getAddress(store.getState());\n};\n\nvar getClientAuthAuthority = function getClientAuthAuthority() {\n  var auths = getData(store.getState());\n  var address = getAddress(store.getState());\n  return auths[address];\n}; // As the builder client manages by itself the version of the API, we need to remove it from\n// the environment variable that we're using to with the older client.\n\n\nvar builderClientUrl = BUILDER_SERVER_URL.replace('/v1', '');\nvar newBuilderClient = new BuilderClient(builderClientUrl, getClientAuthAuthority, getClientAddress, fetch);\nsagasMiddleware.run(rootSaga, builderAPI, newBuilderClient, catalystClient);\nloadStorageMiddleware(store);\n\nif (isDevelopment) {\n  var _window = window;\n  _window.getState = store.getState;\n}\n\nwindow.onbeforeunload = function () {\n  var syncCount = getLoadingSet(store.getState()).size;\n  return syncCount > 0 || null;\n};\n\nstore.dispatch(fetchTilesRequest());\nexport { store, history };","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/common/store.ts"],"names":["createStore","compose","applyMiddleware","routerMiddleware","createSagasMiddleware","createLogger","createBrowserHistory","BuilderClient","CatalystClient","config","createTransactionMiddleware","createStorageMiddleware","createAnalyticsMiddleware","configure","configureAnalytics","getOpenModals","openModal","getAddress","PROVISION_SCENE","CREATE_SCENE","DEPLOY_TO_LAND_SUCCESS","CLEAR_DEPLOYMENT_SUCCESS","SET_PROJECT","DELETE_PROJECT","CREATE_PROJECT","EDIT_PROJECT_THUMBNAIL","SAVE_PROJECT_SUCCESS","EDITOR_UNDO","EDITOR_REDO","migrations","getData","getLoadingSet","DISMISS_SIGN_IN_TOAST","DISMISS_SYNCED_TOAST","SET_SYNC","GENERATE_IDENTITY_SUCCESS","DESTROY_IDENTITY","LOGIN_SUCCESS","LOGIN_FAILURE","fetchTilesRequest","isDevelopment","BuilderAPI","BUILDER_SERVER_URL","Authorization","PEER_URL","createRootReducer","rootSaga","builderVersion","require","version","transformPayload","payload","undefined","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","stateSanitizer","state","_","scene","newState","history","rootReducer","historyMiddleware","sagasMiddleware","loggerMiddleware","predicate","collapsed","storageKey","get","paths","actions","transform","projects","sync","project","localIds","id","data","sceneId","present","onError","err","store","isQuotaModalOpen","getState","DOMException","name","dispatch","storageMiddleware","loadStorageMiddleware","transactionMiddleware","analyticsMiddleware","middlewares","middleware","enhancer","builderAPI","catalystClient","catalystUrl","getClientAddress","getClientAuthAuthority","auths","address","builderClientUrl","replace","newBuilderClient","fetch","run","_window","onbeforeunload","syncCount","size"],"mappings":"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","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createSagasMiddleware from 'redux-saga'\nimport { createLogger } from 'redux-logger'\nimport { createBrowserHistory } from 'history'\nimport { BuilderClient } from '@dcl/builder-client'\n\nimport { CatalystClient } from 'dcl-catalyst-client'\nimport { config } from 'config'\nimport { DataByKey } from 'decentraland-dapps/dist/lib/types'\nimport { createTransactionMiddleware } from 'decentraland-dapps/dist/modules/transaction/middleware'\nimport { createStorageMiddleware } from 'decentraland-dapps/dist/modules/storage/middleware'\nimport { createAnalyticsMiddleware } from 'decentraland-dapps/dist/modules/analytics/middleware'\nimport { configure as configureAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils'\nimport { getOpenModals } from 'decentraland-dapps/dist/modules/modal/selectors'\nimport { openModal } from 'decentraland-dapps/dist/modules/modal/actions'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\n\nimport { PROVISION_SCENE, CREATE_SCENE } from 'modules/scene/actions'\nimport { DEPLOY_TO_LAND_SUCCESS, CLEAR_DEPLOYMENT_SUCCESS } from 'modules/deployment/actions'\nimport { SET_PROJECT, DELETE_PROJECT, CREATE_PROJECT, EDIT_PROJECT_THUMBNAIL } from 'modules/project/actions'\nimport { SAVE_PROJECT_SUCCESS } from 'modules/sync/actions'\nimport { EDITOR_UNDO, EDITOR_REDO } from 'modules/editor/actions'\nimport { Project } from 'modules/project/types'\nimport { migrations } from 'modules/migrations/store'\nimport { getData } from 'modules/identity/selectors'\nimport { Scene } from 'modules/scene/types'\nimport { getLoadingSet } from 'modules/sync/selectors'\nimport { DISMISS_SIGN_IN_TOAST, DISMISS_SYNCED_TOAST, SET_SYNC } from 'modules/ui/dashboard/actions'\nimport { GENERATE_IDENTITY_SUCCESS, DESTROY_IDENTITY, LOGIN_SUCCESS, LOGIN_FAILURE } from 'modules/identity/actions'\nimport { fetchTilesRequest } from 'modules/tile/actions'\nimport { isDevelopment } from 'lib/environment'\nimport { BuilderAPI, BUILDER_SERVER_URL } from 'lib/api/builder'\nimport { Authorization } from 'lib/api/auth'\nimport { PEER_URL } from 'lib/api/peer'\nimport { createRootReducer } from './reducer'\nimport { rootSaga } from './sagas'\nimport { RootState, RootStore } from './types'\n\nconst builderVersion = require('../../../package.json').version\n\nconfigureAnalytics({\n  transformPayload: payload => {\n    if (typeof payload === 'string' || payload === undefined) return payload\n    return { ...payload, version: builderVersion }\n  }\n})\n\n// @ts-ignore: Dev tools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? // prettier-ignore\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    stateSanitizer: (state: RootState) => {\n      const { scene: _, ...newState } = state\n      return newState\n    }\n  })\n  : compose\n\nconst history = createBrowserHistory()\nconst rootReducer = createRootReducer(history)\n\nconst historyMiddleware = routerMiddleware(history)\nconst sagasMiddleware = createSagasMiddleware()\nconst loggerMiddleware = createLogger({\n  predicate: () => isDevelopment,\n  collapsed: () => true\n})\nconst { storageMiddleware, loadStorageMiddleware } = createStorageMiddleware({\n  migrations,\n  storageKey: config.get('LOCAL_STORAGE_KEY', 'builder'),\n  paths: [\n    ['project', 'data'],\n    ['scene', 'present'],\n    ['ui', 'dashboard'],\n    ['auth', 'data'],\n    ['sync', 'localProjectIds'],\n    ['identity', 'data']\n  ],\n  actions: [\n    CREATE_PROJECT,\n    SET_PROJECT,\n    CREATE_SCENE,\n    PROVISION_SCENE,\n    EDITOR_UNDO,\n    EDITOR_REDO,\n    DELETE_PROJECT,\n    DEPLOY_TO_LAND_SUCCESS,\n    CLEAR_DEPLOYMENT_SUCCESS,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n    SAVE_PROJECT_SUCCESS,\n    EDIT_PROJECT_THUMBNAIL,\n    DISMISS_SIGN_IN_TOAST,\n    DISMISS_SYNCED_TOAST,\n    SET_SYNC,\n    GENERATE_IDENTITY_SUCCESS,\n    DESTROY_IDENTITY\n  ],\n  transform: state => {\n    let projects: DataByKey<Project> = {}\n    let scene: DataByKey<Scene> = {}\n\n    for (let id of state.sync.project.localIds) {\n      const project = state.project.data[id]\n      if (!project) continue\n      projects[id] = project\n      scene[project.sceneId] = state.scene.present.data[project.sceneId]\n    }\n\n    const newState: RootState = {\n      ...state,\n      project: {\n        ...state.project,\n        data: projects\n      },\n      scene: {\n        ...state.scene,\n        present: {\n          ...state.scene.present,\n          data: scene\n        }\n      }\n    }\n\n    return newState\n  },\n  onError: (err, store) => {\n    const isQuotaModalOpen = !!getOpenModals(store.getState())['QuotaExceededModal']\n    if (err instanceof DOMException && err.name === 'QuotaExceededError' && !isQuotaModalOpen) {\n      store.dispatch(openModal('QuotaExceededModal'))\n    }\n  }\n})\nconst transactionMiddleware = createTransactionMiddleware()\nconst analyticsMiddleware = createAnalyticsMiddleware(config.get('SEGMENT_API_KEY'))\n\nconst middlewares = [historyMiddleware, sagasMiddleware, loggerMiddleware, storageMiddleware, analyticsMiddleware, transactionMiddleware]\n\nconst middleware = applyMiddleware(...middlewares)\n\nconst enhancer = composeEnhancers(middleware)\nconst store = createStore(rootReducer, enhancer) as RootStore\n\nconst builderAPI = new BuilderAPI(BUILDER_SERVER_URL, new Authorization(store))\nconst catalystClient = new CatalystClient({ catalystUrl: PEER_URL })\n\nconst getClientAddress = () => getAddress(store.getState())!\nconst getClientAuthAuthority = () => {\n  const auths = getData(store.getState())\n  const address = getAddress(store.getState())\n  return auths[address!]\n}\n\n// As the builder client manages by itself the version of the API, we need to remove it from\n// the environment variable that we're using to with the older client.\nconst builderClientUrl: string = BUILDER_SERVER_URL.replace('/v1', '')\n\nconst newBuilderClient = new BuilderClient(builderClientUrl, getClientAuthAuthority, getClientAddress, fetch)\n\nsagasMiddleware.run(rootSaga, builderAPI, newBuilderClient, catalystClient)\nloadStorageMiddleware(store)\n\nif (isDevelopment) {\n  const _window = window as any\n  _window.getState = store.getState\n}\n\nwindow.onbeforeunload = function() {\n  const syncCount = getLoadingSet(store.getState()).size\n  return syncCount > 0 || null\n}\n\nstore.dispatch(fetchTilesRequest())\n\nexport { store, history }\n"]},"metadata":{},"sourceType":"module"}