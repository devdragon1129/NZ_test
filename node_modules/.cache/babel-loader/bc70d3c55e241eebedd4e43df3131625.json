{"ast":null,"code":"import { Logger } from './logger';\nimport { _TypeStore } from './typeStore';\n/**\r\n * Class used to enable instatition of objects by class name\r\n */\n\nvar InstantiationTools =\n/** @class */\nfunction () {\n  function InstantiationTools() {}\n  /**\r\n   * Tries to instantiate a new object from a given class name\r\n   * @param className defines the class name to instantiate\r\n   * @returns the new object or null if the system was not able to do the instantiation\r\n   */\n\n\n  InstantiationTools.Instantiate = function (className) {\n    if (this.RegisteredExternalClasses && this.RegisteredExternalClasses[className]) {\n      return this.RegisteredExternalClasses[className];\n    }\n\n    var internalClass = _TypeStore.GetClass(className);\n\n    if (internalClass) {\n      return internalClass;\n    }\n\n    Logger.Warn(className + \" not found, you may have missed an import.\");\n    var arr = className.split(\".\");\n    var fn = window || this;\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      fn = fn[arr[i]];\n    }\n\n    if (typeof fn !== \"function\") {\n      return null;\n    }\n\n    return fn;\n  };\n  /**\r\n   * Use this object to register external classes like custom textures or material\r\n   * to allow the laoders to instantiate them\r\n   */\n\n\n  InstantiationTools.RegisteredExternalClasses = {};\n  return InstantiationTools;\n}();\n\nexport { InstantiationTools };","map":null,"metadata":{},"sourceType":"module"}