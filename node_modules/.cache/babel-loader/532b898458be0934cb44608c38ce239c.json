{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar error = {\n  message: function message(_ref) {\n    var keyword = _ref.keyword,\n        schemaCode = _ref.schemaCode;\n    var comp = keyword === \"maxItems\" ? \"more\" : \"fewer\";\n    return codegen_1.str(_templateObject || (_templateObject = _taggedTemplateLiteral([\"should NOT have \", \" than \", \" items\"])), comp, schemaCode);\n  },\n  params: function params(_ref2) {\n    var schemaCode = _ref2.schemaCode;\n    return codegen_1._(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"{limit: \", \"}\"])), schemaCode);\n  }\n};\nvar def = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error: error,\n  code: function code(cxt) {\n    var keyword = cxt.keyword,\n        data = cxt.data,\n        schemaCode = cxt.schemaCode;\n    var op = keyword === \"maxItems\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n    cxt.fail$data(codegen_1._(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \".length \", \" \", \"\"])), data, op, schemaCode));\n  }\n};\nexports.default = def;","map":null,"metadata":{},"sourceType":"script"}