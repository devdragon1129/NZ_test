{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getLoadingSet, getErrorSet } from 'modules/sync/selectors';\nimport { retrySync } from 'modules/sync/actions';\nimport { didDismissSignInToast, didDismissSyncedToast, getProjects } from 'modules/ui/dashboard/selectors';\nimport { dismissSignInToast, dismissSyncedToast } from 'modules/ui/dashboard/actions';\nimport { isLoggedIn } from 'modules/identity/selectors';\nimport { openModal } from 'modules/modal/actions';\nimport SyncToast from './SyncToast';\n\nvar mapState = function mapState(state) {\n  return {\n    syncCount: getLoadingSet(state).size,\n    errorCount: getErrorSet(state).size,\n    projectCount: getProjects(state).length,\n    isLoggedIn: isLoggedIn(state),\n    didDismissSignInToast: didDismissSignInToast(state),\n    didDismissSyncedToast: didDismissSyncedToast(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onRetry: function onRetry() {\n      return dispatch(retrySync());\n    },\n    onOpenModal: function onOpenModal(name, metadata) {\n      return dispatch(openModal(name, metadata));\n    },\n    onDismissSignInToast: function onDismissSignInToast() {\n      return dispatch(dismissSignInToast());\n    },\n    onDismissSyncedToast: function onDismissSyncedToast() {\n      return dispatch(dismissSyncedToast());\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SyncToast);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SyncToast/SyncToast.container.ts"],"names":["connect","getLoadingSet","getErrorSet","retrySync","didDismissSignInToast","didDismissSyncedToast","getProjects","dismissSignInToast","dismissSyncedToast","isLoggedIn","openModal","SyncToast","mapState","state","syncCount","size","errorCount","projectCount","length","mapDispatch","dispatch","onRetry","onOpenModal","name","metadata","onDismissSignInToast","onDismissSyncedToast"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAGA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,wBAA3C;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,EAAuDC,WAAvD,QAA0E,gCAA1E;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,8BAAvD;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,SAAS,EAAEb,aAAa,CAACY,KAAD,CAAb,CAAqBE,IADqB;AAErDC,IAAAA,UAAU,EAAEd,WAAW,CAACW,KAAD,CAAX,CAAmBE,IAFsB;AAGrDE,IAAAA,YAAY,EAAEX,WAAW,CAACO,KAAD,CAAX,CAAmBK,MAHoB;AAIrDT,IAAAA,UAAU,EAAEA,UAAU,CAACI,KAAD,CAJ+B;AAKrDT,IAAAA,qBAAqB,EAAEA,qBAAqB,CAACS,KAAD,CALS;AAMrDR,IAAAA,qBAAqB,EAAEA,qBAAqB,CAACQ,KAAD;AANS,GAAtC;AAAA,CAAjB;;AASA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACjB,SAAS,EAAV,CAAd;AAAA,KADuD;AAEhEmB,IAAAA,WAAW,EAAE,qBAACC,IAAD,EAAOC,QAAP;AAAA,aAAoBJ,QAAQ,CAACV,SAAS,CAACa,IAAD,EAAOC,QAAP,CAAV,CAA5B;AAAA,KAFmD;AAGhEC,IAAAA,oBAAoB,EAAE;AAAA,aAAML,QAAQ,CAACb,kBAAkB,EAAnB,CAAd;AAAA,KAH0C;AAIhEmB,IAAAA,oBAAoB,EAAE;AAAA,aAAMN,QAAQ,CAACZ,kBAAkB,EAAnB,CAAd;AAAA;AAJ0C,GAA9C;AAAA,CAApB;;AAOA,eAAeR,OAAO,CAACY,QAAD,EAAWO,WAAX,CAAP,CAA+BR,SAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\n\nimport { RootState } from 'modules/common/types'\nimport { getLoadingSet, getErrorSet } from 'modules/sync/selectors'\nimport { retrySync } from 'modules/sync/actions'\nimport { didDismissSignInToast, didDismissSyncedToast, getProjects } from 'modules/ui/dashboard/selectors'\nimport { dismissSignInToast, dismissSyncedToast } from 'modules/ui/dashboard/actions'\nimport { isLoggedIn } from 'modules/identity/selectors'\nimport { openModal } from 'modules/modal/actions'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './SyncToast.types'\nimport SyncToast from './SyncToast'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  syncCount: getLoadingSet(state).size,\n  errorCount: getErrorSet(state).size,\n  projectCount: getProjects(state).length,\n  isLoggedIn: isLoggedIn(state),\n  didDismissSignInToast: didDismissSignInToast(state),\n  didDismissSyncedToast: didDismissSyncedToast(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onRetry: () => dispatch(retrySync()),\n  onOpenModal: (name, metadata) => dispatch(openModal(name, metadata)),\n  onDismissSignInToast: () => dispatch(dismissSignInToast()),\n  onDismissSyncedToast: () => dispatch(dismissSyncedToast())\n})\n\nexport default connect(mapState, mapDispatch)(SyncToast)\n"]},"metadata":{},"sourceType":"module"}