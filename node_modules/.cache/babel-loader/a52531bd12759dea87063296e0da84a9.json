{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { RECORD_MEDIA_SUCCESS, RECORD_MEDIA_REQUEST, RECORD_MEDIA_PROGRESS } from './actions';\nvar INITIAL_STATE = {\n  media: null,\n  progress: 0\n};\nexport var mediaReducer = function mediaReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECORD_MEDIA_SUCCESS:\n      {\n        var _action$payload$media = action.payload.media,\n            north = _action$payload$media.north,\n            east = _action$payload$media.east,\n            south = _action$payload$media.south,\n            west = _action$payload$media.west,\n            preview = _action$payload$media.preview;\n\n        if (state.media) {\n          Object.values(state.media).forEach(function (url) {\n            return window.URL.revokeObjectURL(url);\n          });\n        }\n\n        return _objectSpread({}, state, {\n          media: {\n            north: window.URL.createObjectURL(north),\n            east: window.URL.createObjectURL(east),\n            south: window.URL.createObjectURL(south),\n            west: window.URL.createObjectURL(west),\n            preview: window.URL.createObjectURL(preview)\n          },\n          progress: 0\n        });\n      }\n\n    case RECORD_MEDIA_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          media: null\n        });\n      }\n\n    case RECORD_MEDIA_PROGRESS:\n      {\n        return _objectSpread({}, state, {\n          progress: action.payload.progress\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/media/reducer.ts"],"names":["RECORD_MEDIA_SUCCESS","RECORD_MEDIA_REQUEST","RECORD_MEDIA_PROGRESS","INITIAL_STATE","media","progress","mediaReducer","state","action","type","payload","north","east","south","west","preview","Object","values","forEach","url","window","URL","revokeObjectURL","createObjectURL"],"mappings":";AAAA,SAEEA,oBAFF,EAIEC,oBAJF,EAMEC,qBANF,QAOO,WAPP;AAeA,IAAMC,aAAyB,GAAG;AAChCC,EAAAA,KAAK,EAAE,IADyB;AAEhCC,EAAAA,QAAQ,EAAE;AAFsB,CAAlC;AAOA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAmE;AAAA,MAAlEC,KAAkE,uEAA1DJ,aAA0D;AAAA,MAA3CK,MAA2C;;AAC7F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,oBAAL;AAA2B;AAAA,oCACqBQ,MAAM,CAACE,OAAP,CAAeN,KADpC;AAAA,YACjBO,KADiB,yBACjBA,KADiB;AAAA,YACVC,IADU,yBACVA,IADU;AAAA,YACJC,KADI,yBACJA,KADI;AAAA,YACGC,IADH,yBACGA,IADH;AAAA,YACSC,OADT,yBACSA,OADT;;AAGzB,YAAIR,KAAK,CAACH,KAAV,EAAiB;AACfY,UAAAA,MAAM,CAACC,MAAP,CAAcV,KAAK,CAACH,KAApB,EAA2Bc,OAA3B,CAAmC,UAAAC,GAAG;AAAA,mBAAIC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BH,GAA3B,CAAJ;AAAA,WAAtC;AACD;;AAED,iCACKZ,KADL;AAEEH,UAAAA,KAAK,EAAE;AACLO,YAAAA,KAAK,EAAES,MAAM,CAACC,GAAP,CAAWE,eAAX,CAA2BZ,KAA3B,CADF;AAELC,YAAAA,IAAI,EAAEQ,MAAM,CAACC,GAAP,CAAWE,eAAX,CAA2BX,IAA3B,CAFD;AAGLC,YAAAA,KAAK,EAAEO,MAAM,CAACC,GAAP,CAAWE,eAAX,CAA2BV,KAA3B,CAHF;AAILC,YAAAA,IAAI,EAAEM,MAAM,CAACC,GAAP,CAAWE,eAAX,CAA2BT,IAA3B,CAJD;AAKLC,YAAAA,OAAO,EAAEK,MAAM,CAACC,GAAP,CAAWE,eAAX,CAA2BR,OAA3B;AALJ,WAFT;AASEV,UAAAA,QAAQ,EAAE;AATZ;AAWD;;AACD,SAAKJ,oBAAL;AAA2B;AACzB,iCACKM,KADL;AAEEH,UAAAA,KAAK,EAAE;AAFT;AAID;;AACD,SAAKF,qBAAL;AAA4B;AAC1B,iCACKK,KADL;AAEEF,UAAAA,QAAQ,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAF3B;AAID;;AACD;AACE,aAAOE,KAAP;AAjCJ;AAmCD,CApCM","sourcesContent":["import {\n  RecordMediaRequestAction,\n  RECORD_MEDIA_SUCCESS,\n  RecordMediaSuccessAction,\n  RECORD_MEDIA_REQUEST,\n  RecordMediaProgressAction,\n  RECORD_MEDIA_PROGRESS\n} from './actions'\nimport { Media } from './types'\n\nexport type MediaState = {\n  media: Media | null\n  progress: number\n}\n\nconst INITIAL_STATE: MediaState = {\n  media: null,\n  progress: 0\n}\n\nexport type MediaReducerAction = RecordMediaRequestAction | RecordMediaSuccessAction | RecordMediaProgressAction\n\nexport const mediaReducer = (state = INITIAL_STATE, action: MediaReducerAction): MediaState => {\n  switch (action.type) {\n    case RECORD_MEDIA_SUCCESS: {\n      const { north, east, south, west, preview } = action.payload.media\n\n      if (state.media) {\n        Object.values(state.media).forEach(url => window.URL.revokeObjectURL(url))\n      }\n\n      return {\n        ...state,\n        media: {\n          north: window.URL.createObjectURL(north!),\n          east: window.URL.createObjectURL(east!),\n          south: window.URL.createObjectURL(south!),\n          west: window.URL.createObjectURL(west!),\n          preview: window.URL.createObjectURL(preview!)\n        },\n        progress: 0\n      }\n    }\n    case RECORD_MEDIA_REQUEST: {\n      return {\n        ...state,\n        media: null\n      }\n    }\n    case RECORD_MEDIA_PROGRESS: {\n      return {\n        ...state,\n        progress: action.payload.progress\n      }\n    }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}