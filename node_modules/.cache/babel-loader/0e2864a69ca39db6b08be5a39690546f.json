{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _without2 = _interopRequireDefault(require(\"lodash/without\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\n\nvar _Image = _interopRequireDefault(require(\"../Image\"));\n\nvar _HeaderSubheader = _interopRequireDefault(require(\"./HeaderSubheader\"));\n\nvar _HeaderContent = _interopRequireDefault(require(\"./HeaderContent\"));\n/**\n * A header provides a short summary of content\n */\n\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = (0, _clsx.default)('ui', color, size, (0, _lib.useKeyOnly)(block, 'block'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(dividing, 'dividing'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(icon === true, 'icon'), (0, _lib.useKeyOnly)(image === true, 'image'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(sub, 'sub'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useTextAlignProp)(textAlign), 'header', className);\n  var rest = (0, _lib.getUnhandledProps)(Header, props);\n  var ElementType = (0, _lib.getElementType)(Header, props);\n\n  if (!_lib.childrenUtils.isNil(children)) {\n    return /*#__PURE__*/_react.default.createElement(ElementType, (0, _extends2.default)({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = _Icon.default.create(icon, {\n    autoGenerateKey: false\n  });\n\n  var imageElement = _Image.default.create(image, {\n    autoGenerateKey: false\n  });\n\n  var subheaderElement = _HeaderSubheader.default.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return /*#__PURE__*/_react.default.createElement(ElementType, (0, _extends2.default)({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && /*#__PURE__*/_react.default.createElement(_HeaderContent.default, null, content, subheaderElement));\n  }\n\n  return /*#__PURE__*/_react.default.createElement(ElementType, (0, _extends2.default)({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _propTypes.default.elementType,\n\n  /** Attach header  to other content, like a segment. */\n  attached: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: _propTypes.default.bool,\n\n  /** Primary content. */\n  children: _propTypes.default.node,\n\n  /** Additional classes. */\n  className: _propTypes.default.string,\n\n  /** Color of the header. */\n  color: _propTypes.default.oneOf(_lib.SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: _propTypes.default.bool,\n\n  /** Divide header from the content below it. */\n  dividing: _propTypes.default.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: _propTypes.default.oneOf(_lib.SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['image']), _propTypes.default.oneOfType([_propTypes.default.bool, _lib.customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _propTypes.default.oneOfType([_propTypes.default.bool, _lib.customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: _propTypes.default.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: _propTypes.default.oneOf((0, _without2.default)(_lib.SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: _propTypes.default.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: _lib.customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: _propTypes.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = _HeaderContent.default;\nHeader.Subheader = _HeaderSubheader.default;\nvar _default = Header;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}