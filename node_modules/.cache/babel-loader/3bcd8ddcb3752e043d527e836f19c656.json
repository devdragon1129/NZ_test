{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(toastSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleShowToast),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleHideToast),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchMetaTransactionErrors),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleMetaTransactionError),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(handleSwitchNetworkSuccess);\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleMetaTransactionError = exports.watchMetaTransactionErrors = exports.createMetaTransactionsErrorChannel = exports.toastSaga = void 0;\n\nvar redux_saga_1 = require(\"redux-saga\");\n\nvar effects_1 = require(\"redux-saga/effects\");\n\nvar decentraland_transactions_1 = require(\"decentraland-transactions\");\n\nvar actions_1 = require(\"./actions\");\n\nvar selectors_1 = require(\"./selectors\");\n\nvar cache = __importStar(require(\"./cache\"));\n\nvar utils_1 = require(\"../wallet/utils\");\n\nvar actions_2 = require(\"../wallet/actions\");\n\nvar meta_transactions_1 = require(\"./toasts/meta-transactions\");\n\nfunction toastSaga() {\n  return _regeneratorRuntime.wrap(function toastSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return effects_1.fork(watchMetaTransactionErrors);\n\n        case 2:\n          _context.next = 4;\n          return effects_1.takeEvery(actions_1.SHOW_TOAST, handleShowToast);\n\n        case 4:\n          _context.next = 6;\n          return effects_1.takeEvery(actions_1.HIDE_TOAST, handleHideToast);\n\n        case 6:\n          _context.next = 8;\n          return effects_1.takeEvery(actions_2.SWITCH_NETWORK_SUCCESS, handleSwitchNetworkSuccess);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexports.toastSaga = toastSaga;\n\nfunction handleShowToast(action) {\n  var toast, ids, lastId, id;\n  return _regeneratorRuntime.wrap(function handleShowToast$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          toast = action.payload.toast;\n          _context2.next = 3;\n          return effects_1.select(selectors_1.getState);\n\n        case 3:\n          ids = _context2.sent;\n          lastId = Number(ids[ids.length - 1] || 0);\n          id = lastId + 1;\n          cache.set(id, toast);\n          _context2.next = 9;\n          return effects_1.put(actions_1.renderToast(id));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction handleHideToast(action) {\n  var id;\n  return _regeneratorRuntime.wrap(function handleHideToast$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          id = action.payload.id;\n          cache.remove(id);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction createMetaTransactionsErrorChannel() {\n  return redux_saga_1.eventChannel(function (emitter) {\n    function handleError(data) {\n      if (data.error instanceof decentraland_transactions_1.MetaTransactionError) {\n        emitter(data.error.code);\n      }\n    }\n\n    utils_1.transactionEvents.on(utils_1.TransactionEventType.ERROR, handleError);\n    return function () {\n      return utils_1.transactionEvents.removeListener(utils_1.TransactionEventType.ERROR, handleError);\n    };\n  });\n}\n\nexports.createMetaTransactionsErrorChannel = createMetaTransactionsErrorChannel;\n\nfunction watchMetaTransactionErrors() {\n  var channel, code;\n  return _regeneratorRuntime.wrap(function watchMetaTransactionErrors$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return effects_1.call(createMetaTransactionsErrorChannel);\n\n        case 2:\n          channel = _context4.sent;\n\n        case 3:\n          if (!true) {\n            _context4.next = 11;\n            break;\n          }\n\n          _context4.next = 6;\n          return effects_1.take(channel);\n\n        case 6:\n          code = _context4.sent;\n          _context4.next = 9;\n          return effects_1.call(handleMetaTransactionError, code);\n\n        case 9:\n          _context4.next = 3;\n          break;\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexports.watchMetaTransactionErrors = watchMetaTransactionErrors;\n\nfunction handleMetaTransactionError(code) {\n  return _regeneratorRuntime.wrap(function handleMetaTransactionError$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.t0 = code;\n          _context5.next = _context5.t0 === decentraland_transactions_1.ErrorCode.CONTRACT_ACCOUNT ? 3 : _context5.t0 === decentraland_transactions_1.ErrorCode.INVALID_ADDRESS ? 6 : _context5.t0 === decentraland_transactions_1.ErrorCode.SALE_PRICE_TOO_LOW ? 9 : _context5.t0 === decentraland_transactions_1.ErrorCode.USER_DENIED ? 12 : _context5.t0 === decentraland_transactions_1.ErrorCode.UNKNOWN ? 13 : 13;\n          break;\n\n        case 3:\n          _context5.next = 5;\n          return effects_1.put(actions_1.showToast(meta_transactions_1.getContractAccountErrorToast()));\n\n        case 5:\n          return _context5.abrupt(\"break\", 16);\n\n        case 6:\n          _context5.next = 8;\n          return effects_1.put(actions_1.showToast(meta_transactions_1.getInvalidAddressErrorToast()));\n\n        case 8:\n          return _context5.abrupt(\"break\", 16);\n\n        case 9:\n          _context5.next = 11;\n          return effects_1.put(actions_1.showToast(meta_transactions_1.getSalePriceTooLowErrorToast()));\n\n        case 11:\n          return _context5.abrupt(\"break\", 16);\n\n        case 12:\n          return _context5.abrupt(\"break\", 16);\n\n        case 13:\n          _context5.next = 15;\n          return effects_1.put(actions_1.showToast(meta_transactions_1.getUnknownErrorToast()));\n\n        case 15:\n          return _context5.abrupt(\"break\", 16);\n\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nexports.handleMetaTransactionError = handleMetaTransactionError;\n\nfunction handleSwitchNetworkSuccess() {\n  return _regeneratorRuntime.wrap(function handleSwitchNetworkSuccess$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return effects_1.put(actions_1.hideAllToasts());\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":null,"metadata":{},"sourceType":"script"}