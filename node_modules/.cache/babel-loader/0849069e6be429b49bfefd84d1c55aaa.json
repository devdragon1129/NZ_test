{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { INIT, REQUEST, SUCCESS, FAILURE, CREATE, REMOVE } from './actions';\nimport { addElement, removeElement, addEntry, removeEntry } from './utils';\nexport var INITIAL_STATE = {\n  localIds: [],\n  loadingIds: [],\n  errorsById: {}\n};\nexport function domainReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INIT:\n      {\n        var localIds = action.payload.localIds;\n        return _objectSpread({}, state, {\n          localIds: localIds\n        });\n      }\n\n    case REQUEST:\n      {\n        var id = action.payload.id;\n        return _objectSpread({}, state, {\n          loadingIds: addElement(state.loadingIds, id)\n        });\n      }\n\n    case SUCCESS:\n      {\n        var _id = action.payload.id;\n        return _objectSpread({}, state, {\n          localIds: removeElement(state.localIds, _id),\n          loadingIds: removeElement(state.loadingIds, _id),\n          errorsById: removeEntry(state.errorsById, _id)\n        });\n      }\n\n    case FAILURE:\n      {\n        var _action$payload = action.payload,\n            _id2 = _action$payload.id,\n            error = _action$payload.error;\n        return _objectSpread({}, state, {\n          localIds: addElement(state.localIds, _id2),\n          loadingIds: removeElement(state.loadingIds, _id2),\n          errorsById: addEntry(state.errorsById, _id2, error)\n        });\n      }\n\n    case CREATE:\n      {\n        var _id3 = action.payload.id;\n        return _objectSpread({}, state, {\n          localIds: addElement(state.localIds, _id3)\n        });\n      }\n\n    case REMOVE:\n      {\n        var _id4 = action.payload.id;\n        return _objectSpread({}, state, {\n          localIds: removeElement(state.localIds, _id4),\n          loadingIds: removeElement(state.loadingIds, _id4),\n          errorsById: removeEntry(state.errorsById, _id4)\n        });\n      }\n  }\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/sync/domain/reducer.ts"],"names":["INIT","REQUEST","SUCCESS","FAILURE","CREATE","REMOVE","addElement","removeElement","addEntry","removeEntry","INITIAL_STATE","localIds","loadingIds","errorsById","domainReducer","state","action","type","payload","id","error"],"mappings":";AACA,SAKEA,IALF,EAMEC,OANF,EAOEC,OAPF,EAQEC,OARF,EAUEC,MAVF,EAYEC,MAZF,QAaO,WAbP;AAcA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,QAApC,EAA8CC,WAA9C,QAAiE,SAAjE;AAEA,OAAO,IAAMC,aAA0B,GAAG;AACxCC,EAAAA,QAAQ,EAAE,EAD8B;AAExCC,EAAAA,UAAU,EAAE,EAF4B;AAGxCC,EAAAA,UAAU,EAAE;AAH4B,CAAnC;AAQP,OAAO,SAASC,aAAT,GAA+F;AAAA,MAAxEC,KAAwE,uEAAnDL,aAAmD;AAAA,MAApCM,MAAoC;;AACpG,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,IAAL;AAAW;AAAA,YACDW,QADC,GACYK,MAAM,CAACE,OADnB,CACDP,QADC;AAET,iCACKI,KADL;AAEEJ,UAAAA,QAAQ,EAARA;AAFF;AAID;;AACD,SAAKV,OAAL;AAAc;AAAA,YACJkB,EADI,GACGH,MAAM,CAACE,OADV,CACJC,EADI;AAEZ,iCACKJ,KADL;AAEEH,UAAAA,UAAU,EAAEN,UAAU,CAACS,KAAK,CAACH,UAAP,EAAmBO,EAAnB;AAFxB;AAID;;AACD,SAAKjB,OAAL;AAAc;AAAA,YACJiB,GADI,GACGH,MAAM,CAACE,OADV,CACJC,EADI;AAEZ,iCACKJ,KADL;AAEEJ,UAAAA,QAAQ,EAAEJ,aAAa,CAACQ,KAAK,CAACJ,QAAP,EAAiBQ,GAAjB,CAFzB;AAGEP,UAAAA,UAAU,EAAEL,aAAa,CAACQ,KAAK,CAACH,UAAP,EAAmBO,GAAnB,CAH3B;AAIEN,UAAAA,UAAU,EAAEJ,WAAW,CAACM,KAAK,CAACF,UAAP,EAAmBM,GAAnB;AAJzB;AAMD;;AACD,SAAKhB,OAAL;AAAc;AAAA,8BACUa,MAAM,CAACE,OADjB;AAAA,YACJC,IADI,mBACJA,EADI;AAAA,YACAC,KADA,mBACAA,KADA;AAEZ,iCACKL,KADL;AAEEJ,UAAAA,QAAQ,EAAEL,UAAU,CAACS,KAAK,CAACJ,QAAP,EAAiBQ,IAAjB,CAFtB;AAGEP,UAAAA,UAAU,EAAEL,aAAa,CAACQ,KAAK,CAACH,UAAP,EAAmBO,IAAnB,CAH3B;AAIEN,UAAAA,UAAU,EAAEL,QAAQ,CAACO,KAAK,CAACF,UAAP,EAAmBM,IAAnB,EAAuBC,KAAvB;AAJtB;AAMD;;AACD,SAAKhB,MAAL;AAAa;AAAA,YACHe,IADG,GACIH,MAAM,CAACE,OADX,CACHC,EADG;AAEX,iCACKJ,KADL;AAEEJ,UAAAA,QAAQ,EAAEL,UAAU,CAACS,KAAK,CAACJ,QAAP,EAAiBQ,IAAjB;AAFtB;AAID;;AACD,SAAKd,MAAL;AAAa;AAAA,YACHc,IADG,GACIH,MAAM,CAACE,OADX,CACHC,EADG;AAEX,iCACKJ,KADL;AAEEJ,UAAAA,QAAQ,EAAEJ,aAAa,CAACQ,KAAK,CAACJ,QAAP,EAAiBQ,IAAjB,CAFzB;AAGEP,UAAAA,UAAU,EAAEL,aAAa,CAACQ,KAAK,CAACH,UAAP,EAAmBO,IAAnB,CAH3B;AAIEN,UAAAA,UAAU,EAAEJ,WAAW,CAACM,KAAK,CAACF,UAAP,EAAmBM,IAAnB;AAJzB;AAMD;AAhDH;AAkDD","sourcesContent":["import { DomainState } from './types'\nimport {\n  InitAction,\n  RequestAction,\n  SuccessAction,\n  FailureAction,\n  INIT,\n  REQUEST,\n  SUCCESS,\n  FAILURE,\n  CreateAction,\n  CREATE,\n  RemoveAction,\n  REMOVE\n} from './actions'\nimport { addElement, removeElement, addEntry, removeEntry } from './utils'\n\nexport const INITIAL_STATE: DomainState = {\n  localIds: [],\n  loadingIds: [],\n  errorsById: {}\n}\n\nexport type ReducerAction = InitAction | RequestAction | SuccessAction | FailureAction | CreateAction | RemoveAction\n\nexport function domainReducer(state: DomainState = INITIAL_STATE, action: ReducerAction): DomainState {\n  switch (action.type) {\n    case INIT: {\n      const { localIds } = action.payload\n      return {\n        ...state,\n        localIds\n      }\n    }\n    case REQUEST: {\n      const { id } = action.payload\n      return {\n        ...state,\n        loadingIds: addElement(state.loadingIds, id)\n      }\n    }\n    case SUCCESS: {\n      const { id } = action.payload\n      return {\n        ...state,\n        localIds: removeElement(state.localIds, id),\n        loadingIds: removeElement(state.loadingIds, id),\n        errorsById: removeEntry(state.errorsById, id)\n      }\n    }\n    case FAILURE: {\n      const { id, error } = action.payload\n      return {\n        ...state,\n        localIds: addElement(state.localIds, id),\n        loadingIds: removeElement(state.loadingIds, id),\n        errorsById: addEntry(state.errorsById, id, error)\n      }\n    }\n    case CREATE: {\n      const { id } = action.payload\n      return {\n        ...state,\n        localIds: addElement(state.localIds, id)\n      }\n    }\n    case REMOVE: {\n      const { id } = action.payload\n      return {\n        ...state,\n        localIds: removeElement(state.localIds, id),\n        loadingIds: removeElement(state.loadingIds, id),\n        errorsById: removeEntry(state.errorsById, id)\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}