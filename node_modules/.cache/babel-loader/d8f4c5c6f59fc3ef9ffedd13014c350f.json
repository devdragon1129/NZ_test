{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { getData } from 'decentraland-dapps/dist/modules/profile/selectors';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { getCurrentPool } from 'modules/pool/selectors';\nimport { getCurrentProject } from 'modules/project/selectors';\nexport var getCurrentAuthor = createSelector(getCurrentProject, getCurrentPool, getData, function (project, pool, profiles) {\n  if (project && project.ethAddress && profiles[project.ethAddress]) {\n    return profiles[project.ethAddress];\n  } else if (pool && pool.ethAddress && profiles[pool.ethAddress]) {\n    return profiles[pool.ethAddress];\n  } else {\n    return null;\n  }\n});\nexport var getAvatar = createSelector(getAddress, getData, function (address, profileData) {\n  if (address) {\n    var profile = profileData[address];\n\n    if (profile) {\n      var avatar = profile.avatars[0];\n\n      if (avatar) {\n        return avatar;\n      }\n    }\n  }\n\n  return null;\n});\nexport var getName = createSelector(getAvatar, function (avatar) {\n  return avatar && avatar.name ? avatar.name : null;\n});","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/profile/selectors.ts"],"names":["createSelector","getData","getAddress","getCurrentPool","getCurrentProject","getCurrentAuthor","project","pool","profiles","ethAddress","getAvatar","address","profileData","profile","avatar","avatars","getName","name"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAGA,SAASC,OAAT,QAAwB,mDAAxB;AACA,SAASC,UAAT,QAA2B,kDAA3B;AAEA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AAEA,OAAO,IAAMC,gBAAgB,GAAGL,cAAc,CAACI,iBAAD,EAAoBD,cAApB,EAAoCF,OAApC,EAA6C,UAACK,OAAD,EAAUC,IAAV,EAAgBC,QAAhB,EAA6B;AACtH,MAAIF,OAAO,IAAIA,OAAO,CAACG,UAAnB,IAAiCD,QAAQ,CAACF,OAAO,CAACG,UAAT,CAA7C,EAAmE;AACjE,WAAOD,QAAQ,CAACF,OAAO,CAACG,UAAT,CAAf;AACD,GAFD,MAEO,IAAIF,IAAI,IAAIA,IAAI,CAACE,UAAb,IAA2BD,QAAQ,CAACD,IAAI,CAACE,UAAN,CAAvC,EAA0D;AAC/D,WAAOD,QAAQ,CAACD,IAAI,CAACE,UAAN,CAAf;AACD,GAFM,MAEA;AACL,WAAO,IAAP;AACD;AACF,CAR6C,CAAvC;AAUP,OAAO,IAAMC,SAAS,GAAGV,cAAc,CACrCE,UADqC,EAErCD,OAFqC,EAGrC,UAACU,OAAD,EAAUC,WAAV,EAA0B;AACxB,MAAID,OAAJ,EAAa;AACX,QAAME,OAAO,GAAGD,WAAW,CAACD,OAAD,CAA3B;;AACA,QAAIE,OAAJ,EAAa;AACX,UAAMC,MAAM,GAAGD,OAAO,CAACE,OAAR,CAAgB,CAAhB,CAAf;;AACA,UAAID,MAAJ,EAAY;AACV,eAAOA,MAAP;AACD;AACF;AACF;;AACD,SAAO,IAAP;AACD,CAdoC,CAAhC;AAiBP,OAAO,IAAME,OAAO,GAAGhB,cAAc,CAA0CU,SAA1C,EAAqD,UAAAI,MAAM,EAAI;AAClG,SAAOA,MAAM,IAAIA,MAAM,CAACG,IAAjB,GAAwBH,MAAM,CAACG,IAA/B,GAAsC,IAA7C;AACD,CAFoC,CAA9B","sourcesContent":["import { createSelector } from 'reselect'\nimport { Avatar } from '@dcl/schemas'\nimport { ProfileState } from 'decentraland-dapps/dist/modules/profile/reducer'\nimport { getData } from 'decentraland-dapps/dist/modules/profile/selectors'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { RootState } from 'modules/common/types'\nimport { getCurrentPool } from 'modules/pool/selectors'\nimport { getCurrentProject } from 'modules/project/selectors'\n\nexport const getCurrentAuthor = createSelector(getCurrentProject, getCurrentPool, getData, (project, pool, profiles) => {\n  if (project && project.ethAddress && profiles[project.ethAddress]) {\n    return profiles[project.ethAddress]\n  } else if (pool && pool.ethAddress && profiles[pool.ethAddress]) {\n    return profiles[pool.ethAddress]\n  } else {\n    return null\n  }\n})\n\nexport const getAvatar = createSelector<RootState, string | undefined, ProfileState['data'], Avatar | null>(\n  getAddress,\n  getData,\n  (address, profileData) => {\n    if (address) {\n      const profile = profileData[address]\n      if (profile) {\n        const avatar = profile.avatars[0]\n        if (avatar) {\n          return avatar\n        }\n      }\n    }\n    return null\n  }\n)\n\nexport const getName = createSelector<RootState, Avatar | null, string | null>(getAvatar, avatar => {\n  return avatar && avatar.name ? avatar.name : null\n})\n"]},"metadata":{},"sourceType":"module"}