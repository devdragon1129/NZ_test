{"ast":null,"code":"export var DEFAULT_ITEMS_PAGE = 1;\nexport var DEFAULT_ITEMS_PAGE_SIZE = 50;","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/CollectionProvider/CollectionProvider.types.ts"],"names":["DEFAULT_ITEMS_PAGE","DEFAULT_ITEMS_PAGE_SIZE"],"mappings":"AASA,OAAO,IAAMA,kBAAkB,GAAG,CAA3B;AACP,OAAO,IAAMC,uBAAuB,GAAG,EAAhC","sourcesContent":["import { Dispatch } from 'redux'\nimport { Collection } from 'modules/collection/types'\nimport { fetchCollectionRequest, FetchCollectionRequestAction } from 'modules/collection/actions'\nimport { Item } from 'modules/item/types'\nimport { fetchCollectionItemsRequest, FetchCollectionItemsRequestAction } from 'modules/item/actions'\nimport { CollectionCuration } from 'modules/curations/collectionCuration/types'\nimport { ItemCuration } from 'modules/curations/itemCuration/types'\nimport { CurationStatus } from 'modules/curations/types'\n\nexport const DEFAULT_ITEMS_PAGE = 1\nexport const DEFAULT_ITEMS_PAGE_SIZE = 50\n\nexport type Props = {\n  id: string | null\n  collection: Collection | null\n  paginatedCollections: Collection[]\n  items: Item[]\n  paginatedItems: Item[]\n  itemsPage?: number | number[]\n  itemsPageSize?: number\n  status?: CurationStatus\n  curation: CollectionCuration | null\n  itemCurations: ItemCuration[] | null\n  isLoading: boolean\n  isConnected: boolean\n  children: ({\n    collection,\n    items,\n    paginatedItems,\n    curation,\n    itemCurations,\n    isLoading,\n    onFetchCollectionItemsPages\n  }: {\n    collection: Collection | null\n    paginatedCollections: Collection[]\n    items: Item[]\n    paginatedItems: Item[]\n    curation: CollectionCuration | null\n    itemCurations: ItemCuration[] | null\n    isLoading: boolean\n    onFetchCollectionItemsPages: typeof fetchCollectionItemsRequest\n  }) => React.ReactNode\n  onFetchCollection: typeof fetchCollectionRequest\n  onFetchCollectionItems: typeof fetchCollectionItemsRequest\n}\n\nexport type MapStateProps = Pick<\n  Props,\n  'id' | 'collection' | 'items' | 'isLoading' | 'isConnected' | 'curation' | 'itemCurations' | 'paginatedItems' | 'paginatedCollections'\n>\nexport type MapDispatchProps = Pick<Props, 'onFetchCollection' | 'onFetchCollectionItems'>\nexport type MapDispatch = Dispatch<FetchCollectionRequestAction | FetchCollectionItemsRequestAction>\nexport type OwnProps = Partial<Pick<Props, 'id' | 'itemsPage' | 'itemsPageSize'>>\n"]},"metadata":{},"sourceType":"module"}