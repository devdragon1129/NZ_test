{"ast":null,"code":"import { Vector3, Matrix } from '../Maths/math.vector';\n/**\r\n * Class containing a set of static utilities functions for managing Pivots\r\n * @hidden\r\n */\n\nvar PivotTools =\n/** @class */\nfunction () {\n  function PivotTools() {}\n  /** @hidden */\n\n\n  PivotTools._RemoveAndStorePivotPoint = function (mesh) {\n    if (mesh && PivotTools._PivotCached === 0) {\n      // Save old pivot and set pivot to 0,0,0\n      mesh.getPivotPointToRef(PivotTools._OldPivotPoint);\n      PivotTools._PivotPostMultiplyPivotMatrix = mesh._postMultiplyPivotMatrix;\n\n      if (!PivotTools._OldPivotPoint.equalsToFloats(0, 0, 0)) {\n        mesh.setPivotMatrix(Matrix.IdentityReadOnly);\n\n        PivotTools._OldPivotPoint.subtractToRef(mesh.getPivotPoint(), PivotTools._PivotTranslation);\n\n        PivotTools._PivotTmpVector.copyFromFloats(1, 1, 1);\n\n        PivotTools._PivotTmpVector.subtractInPlace(mesh.scaling);\n\n        PivotTools._PivotTmpVector.multiplyInPlace(PivotTools._PivotTranslation);\n\n        mesh.position.addInPlace(PivotTools._PivotTmpVector);\n      }\n    }\n\n    PivotTools._PivotCached++;\n  };\n  /** @hidden */\n\n\n  PivotTools._RestorePivotPoint = function (mesh) {\n    if (mesh && !PivotTools._OldPivotPoint.equalsToFloats(0, 0, 0) && PivotTools._PivotCached === 1) {\n      mesh.setPivotPoint(PivotTools._OldPivotPoint);\n      mesh._postMultiplyPivotMatrix = PivotTools._PivotPostMultiplyPivotMatrix;\n\n      PivotTools._PivotTmpVector.copyFromFloats(1, 1, 1);\n\n      PivotTools._PivotTmpVector.subtractInPlace(mesh.scaling);\n\n      PivotTools._PivotTmpVector.multiplyInPlace(PivotTools._PivotTranslation);\n\n      mesh.position.subtractInPlace(PivotTools._PivotTmpVector);\n    }\n\n    this._PivotCached--;\n  }; // Stores the state of the pivot cache (_oldPivotPoint, _pivotTranslation)\n  // store/remove pivot point should only be applied during their outermost calls\n\n\n  PivotTools._PivotCached = 0;\n  PivotTools._OldPivotPoint = new Vector3();\n  PivotTools._PivotTranslation = new Vector3();\n  PivotTools._PivotTmpVector = new Vector3();\n  PivotTools._PivotPostMultiplyPivotMatrix = false;\n  return PivotTools;\n}();\n\nexport { PivotTools };","map":null,"metadata":{},"sourceType":"module"}