{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { authorizationReducer as authorization } from 'decentraland-dapps/dist/modules/authorization/reducer';\nimport { modalReducer as modal } from 'decentraland-dapps/dist/modules/modal/reducer';\nimport { profileReducer as profile } from 'decentraland-dapps/dist/modules/profile/reducer';\nimport { storageReducer as storage, storageReducerWrapper } from 'decentraland-dapps/dist/modules/storage/reducer';\nimport { toastReducer as toast } from 'decentraland-dapps/dist/modules/toast/reducer';\nimport { transactionReducer as transaction } from 'decentraland-dapps/dist/modules/transaction/reducer';\nimport { translationReducer as translation } from 'decentraland-dapps/dist/modules/translation/reducer';\nimport { walletReducer as wallet } from 'decentraland-dapps/dist/modules/wallet/reducer';\nimport { featuresReducer as features } from 'decentraland-dapps/dist/modules/features/reducer';\nimport { assetPackReducer as assetPack } from 'modules/assetPack/reducer';\nimport { assetReducer as asset } from 'modules/asset/reducer';\nimport { collectionReducer as collection } from 'modules/collection/reducer';\nimport { committeeReducer as committee } from 'modules/committee/reducer';\nimport { collectionCurationReducer as collectionCuration } from 'modules/curations/collectionCuration/reducer';\nimport { itemCurationReducer as itemCuration } from 'modules/curations/itemCuration/reducer';\nimport { deploymentReducer as deployment } from 'modules/deployment/reducer';\nimport { editorReducer as editor } from 'modules/editor/reducer';\nimport { ensReducer as ens } from 'modules/ens/reducer';\nimport { entityReducer as entity } from 'modules/entity/reducer';\nimport { identityReducer as identity } from 'modules/identity/reducer';\nimport { itemReducer as item } from 'modules/item/reducer';\nimport { landReducer as land } from 'modules/land/reducer';\nimport { locationReducer as location } from 'modules/location/reducer';\nimport { mediaReducer as media } from 'modules/media/reducer';\nimport { poolGroupReducer as poolGroup } from 'modules/poolGroup/reducer';\nimport { poolReducer as pool } from 'modules/pool/reducer';\nimport { projectReducer as project } from 'modules/project/reducer';\nimport { sceneReducer as scene } from 'modules/scene/reducer';\nimport { statsReducer as stats } from 'modules/stats/reducer';\nimport { syncReducer as sync } from 'modules/sync/reducer';\nimport { thirdPartyReducer as thirdParty } from 'modules/thirdParty/reducer';\nimport { tileReducer as tile } from 'modules/tile/reducer';\nimport { uiReducer as ui } from 'modules/ui/reducer';\nexport function createRootReducer(history) {\n  return storageReducerWrapper(combineReducers({\n    asset: asset,\n    assetPack: assetPack,\n    authorization: authorization,\n    collection: collection,\n    committee: committee,\n    collectionCuration: collectionCuration,\n    itemCuration: itemCuration,\n    deployment: deployment,\n    editor: editor,\n    ens: ens,\n    entity: entity,\n    identity: identity,\n    item: item,\n    land: land,\n    location: location,\n    media: media,\n    modal: modal,\n    pool: pool,\n    poolGroup: poolGroup,\n    profile: profile,\n    project: project,\n    router: connectRouter(history),\n    scene: scene,\n    stats: stats,\n    storage: storage,\n    sync: sync,\n    thirdParty: thirdParty,\n    tile: tile,\n    toast: toast,\n    transaction: transaction,\n    translation: translation,\n    ui: ui,\n    wallet: wallet,\n    features: features\n  }));\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/common/reducer.ts"],"names":["combineReducers","connectRouter","authorizationReducer","authorization","modalReducer","modal","profileReducer","profile","storageReducer","storage","storageReducerWrapper","toastReducer","toast","transactionReducer","transaction","translationReducer","translation","walletReducer","wallet","featuresReducer","features","assetPackReducer","assetPack","assetReducer","asset","collectionReducer","collection","committeeReducer","committee","collectionCurationReducer","collectionCuration","itemCurationReducer","itemCuration","deploymentReducer","deployment","editorReducer","editor","ensReducer","ens","entityReducer","entity","identityReducer","identity","itemReducer","item","landReducer","land","locationReducer","location","mediaReducer","media","poolGroupReducer","poolGroup","poolReducer","pool","projectReducer","project","sceneReducer","scene","statsReducer","stats","syncReducer","sync","thirdPartyReducer","thirdParty","tileReducer","tile","uiReducer","ui","createRootReducer","history","router"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport { History } from 'history'\nimport { authorizationReducer as authorization } from 'decentraland-dapps/dist/modules/authorization/reducer'\nimport { modalReducer as modal } from 'decentraland-dapps/dist/modules/modal/reducer'\nimport { profileReducer as profile } from 'decentraland-dapps/dist/modules/profile/reducer'\nimport { storageReducer as storage, storageReducerWrapper } from 'decentraland-dapps/dist/modules/storage/reducer'\nimport { toastReducer as toast } from 'decentraland-dapps/dist/modules/toast/reducer'\nimport { transactionReducer as transaction } from 'decentraland-dapps/dist/modules/transaction/reducer'\nimport { translationReducer as translation } from 'decentraland-dapps/dist/modules/translation/reducer'\nimport { walletReducer as wallet } from 'decentraland-dapps/dist/modules/wallet/reducer'\nimport { featuresReducer as features } from 'decentraland-dapps/dist/modules/features/reducer'\n\nimport { RootState } from 'modules/common/types'\nimport { assetPackReducer as assetPack } from 'modules/assetPack/reducer'\nimport { assetReducer as asset } from 'modules/asset/reducer'\nimport { collectionReducer as collection } from 'modules/collection/reducer'\nimport { committeeReducer as committee } from 'modules/committee/reducer'\nimport { collectionCurationReducer as collectionCuration } from 'modules/curations/collectionCuration/reducer'\nimport { itemCurationReducer as itemCuration } from 'modules/curations/itemCuration/reducer'\nimport { deploymentReducer as deployment } from 'modules/deployment/reducer'\nimport { editorReducer as editor } from 'modules/editor/reducer'\nimport { ensReducer as ens } from 'modules/ens/reducer'\nimport { entityReducer as entity } from 'modules/entity/reducer'\nimport { identityReducer as identity } from 'modules/identity/reducer'\nimport { itemReducer as item } from 'modules/item/reducer'\nimport { landReducer as land } from 'modules/land/reducer'\nimport { locationReducer as location } from 'modules/location/reducer'\nimport { mediaReducer as media } from 'modules/media/reducer'\nimport { poolGroupReducer as poolGroup } from 'modules/poolGroup/reducer'\nimport { poolReducer as pool } from 'modules/pool/reducer'\nimport { projectReducer as project } from 'modules/project/reducer'\nimport { sceneReducer as scene } from 'modules/scene/reducer'\nimport { statsReducer as stats } from 'modules/stats/reducer'\nimport { syncReducer as sync } from 'modules/sync/reducer'\nimport { thirdPartyReducer as thirdParty } from 'modules/thirdParty/reducer'\nimport { tileReducer as tile } from 'modules/tile/reducer'\nimport { uiReducer as ui } from 'modules/ui/reducer'\n\nexport function createRootReducer(history: History) {\n  return storageReducerWrapper(\n    combineReducers<RootState>({\n      asset,\n      assetPack,\n      authorization,\n      collection,\n      committee,\n      collectionCuration,\n      itemCuration,\n      deployment,\n      editor,\n      ens,\n      entity,\n      identity,\n      item,\n      land,\n      location,\n      media,\n      modal,\n      pool,\n      poolGroup,\n      profile,\n      project,\n      router: connectRouter(history),\n      scene,\n      stats,\n      storage,\n      sync,\n      thirdParty,\n      tile,\n      toast,\n      transaction,\n      translation,\n      ui,\n      wallet,\n      features\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}