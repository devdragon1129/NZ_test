{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/EditURNModals/EditURNModal/EditURNModal.tsx\";\nimport * as React from 'react';\nimport { ModalNavigation, ModalContent, ModalActions, Button, Field, Form, Message } from 'decentraland-ui';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { decodeURN as _decodeURN, isThirdParty, URNType } from 'lib/urn';\n\nvar EditURNModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(EditURNModal, _React$PureComponent);\n\n  function EditURNModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditURNModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditURNModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.decodedURN = _this.decodeURN();\n    _this.analytics = getAnalytics();\n    _this.state = {\n      newURNSection: ''\n    };\n\n    _this.handleURNChange = function (_event, data) {\n      _this.setState({\n        newURNSection: data.value\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var _this$props = _this.props,\n          onSave = _this$props.onSave,\n          oldURN = _this$props.urn;\n\n      var urn = _this.getUpdatedURN();\n\n      if (isThirdParty(urn)) {\n        var metric = _this.decodedURN.thirdPartyCollectionId ? 'Change TP Item URN' : 'Change TP Collection URN';\n\n        _this.analytics.track(metric, {\n          oldURN: oldURN,\n          newURN: urn\n        });\n      }\n\n      onSave(urn);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditURNModal, [{\n    key: \"getUpdatedURN\",\n    value: function getUpdatedURN() {\n      var _this$props2 = this.props,\n          urn = _this$props2.urn,\n          onBuildURN = _this$props2.onBuildURN;\n      var newURNSection = this.state.newURNSection;\n\n      if (!newURNSection) {\n        return urn;\n      }\n\n      return onBuildURN(this.decodedURN, newURNSection);\n    }\n  }, {\n    key: \"decodeURN\",\n    value: function decodeURN() {\n      var urn = this.props.urn;\n\n      var decodedURN = _decodeURN(urn);\n\n      if (decodedURN.type !== URNType.COLLECTIONS_THIRDPARTY) {\n        throw new Error(\"Invalid URN type \".concat(this.decodedURN.type));\n      }\n\n      return decodedURN;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          name = _this$props3.name,\n          elementName = _this$props3.elementName,\n          onClose = _this$props3.onClose,\n          isLoading = _this$props3.isLoading,\n          error = _this$props3.error;\n      var newURNSection = this.state.newURNSection;\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: name,\n        onClose: onClose,\n        size: \"tiny\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('edit_urn_modal.title'),\n        subtitle: t('edit_urn_modal.subtitle', {\n          name: elementName\n        }),\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, error ? /*#__PURE__*/React.createElement(Message, {\n        error: true,\n        size: \"tiny\",\n        visible: true,\n        className: \"warning-rescue-message\",\n        content: error,\n        header: t('global.error_ocurred'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }) : null, /*#__PURE__*/React.createElement(Field, {\n        label: t('global.urn'),\n        message: this.getUpdatedURN(),\n        value: newURNSection,\n        onChange: this.handleURNChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        loading: isLoading,\n        disabled: !newURNSection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, t('global.save')))));\n    }\n  }]);\n\n  return EditURNModal;\n}(React.PureComponent);\n\nexport { EditURNModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/EditURNModals/EditURNModal/EditURNModal.tsx"],"names":["React","ModalNavigation","ModalContent","ModalActions","Button","Field","Form","Message","Modal","getAnalytics","t","decodeURN","isThirdParty","URNType","EditURNModal","decodedURN","analytics","state","newURNSection","handleURNChange","_event","data","setState","value","handleSubmit","props","onSave","oldURN","urn","getUpdatedURN","metric","thirdPartyCollectionId","track","newURN","onBuildURN","type","COLLECTIONS_THIRDPARTY","Error","name","elementName","onClose","isLoading","error","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { ModalNavigation, ModalContent, ModalActions, Button, Field, InputOnChangeData, Form, Message } from 'decentraland-ui'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { DecodedURN, decodeURN, isThirdParty, URNType } from 'lib/urn'\nimport { Props, State } from './EditURNModal.types'\n\nexport default class EditURNModal extends React.PureComponent<Props, State> {\n  decodedURN: DecodedURN<URNType.COLLECTIONS_THIRDPARTY> = this.decodeURN()\n  analytics = getAnalytics()\n\n  state: State = {\n    newURNSection: ''\n  }\n\n  handleURNChange = (_event: React.ChangeEvent<HTMLInputElement>, data: InputOnChangeData) => {\n    this.setState({ newURNSection: data.value })\n  }\n\n  handleSubmit = () => {\n    const { onSave, urn: oldURN } = this.props\n    const urn = this.getUpdatedURN()\n    if (isThirdParty(urn)) {\n      const metric = this.decodedURN.thirdPartyCollectionId ? 'Change TP Item URN' : 'Change TP Collection URN'\n      this.analytics.track(metric, { oldURN, newURN: urn })\n    }\n\n    onSave(urn)\n  }\n\n  getUpdatedURN() {\n    const { urn, onBuildURN } = this.props\n    const { newURNSection } = this.state\n\n    if (!newURNSection) {\n      return urn\n    }\n\n    return onBuildURN(this.decodedURN, newURNSection)\n  }\n\n  decodeURN() {\n    const { urn } = this.props\n    const decodedURN = decodeURN(urn)\n    if (decodedURN.type !== URNType.COLLECTIONS_THIRDPARTY) {\n      throw new Error(`Invalid URN type ${this.decodedURN.type}`)\n    }\n    return decodedURN\n  }\n\n  render() {\n    const { name, elementName, onClose, isLoading, error } = this.props\n    const { newURNSection } = this.state\n\n    return (\n      <Modal name={name} onClose={onClose} size=\"tiny\">\n        <ModalNavigation\n          title={t('edit_urn_modal.title')}\n          subtitle={t('edit_urn_modal.subtitle', { name: elementName })}\n          onClose={onClose}\n        />\n        <Form onSubmit={this.handleSubmit}>\n          <ModalContent>\n            {error ? (\n              <Message error size=\"tiny\" visible className=\"warning-rescue-message\" content={error} header={t('global.error_ocurred')} />\n            ) : null}\n            <Field label={t('global.urn')} message={this.getUpdatedURN()} value={newURNSection} onChange={this.handleURNChange} />\n          </ModalContent>\n          <ModalActions>\n            <Button primary loading={isLoading} disabled={!newURNSection}>\n              {t('global.save')}\n            </Button>\n          </ModalActions>\n        </Form>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}