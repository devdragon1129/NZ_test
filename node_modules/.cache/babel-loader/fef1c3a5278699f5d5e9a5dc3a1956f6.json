{"ast":null,"code":"\"use strict\";\n/*\n  This file is part of web3x.\n\n  web3x is free software: you can redistribute it and/or modify\n  it under the terms of the GNU Lesser General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  web3x is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public License\n  along with web3x.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar JsonRpc = {\n  messageId: 0\n};\n\nvar validateSingleMessage = function validateSingleMessage(message) {\n  return !!message && !message.error && message.jsonrpc === '2.0' && (typeof message.id === 'number' || typeof message.id === 'string') && message.result !== undefined;\n};\n/**\n * Should be called to valid json create payload object\n */\n\n\nfunction createJsonRpcPayload(method, params) {\n  JsonRpc.messageId++;\n  return {\n    jsonrpc: '2.0',\n    id: JsonRpc.messageId,\n    method: method,\n    params: params || []\n  };\n}\n\nexports.createJsonRpcPayload = createJsonRpcPayload;\n/**\n * Should be called to check if jsonrpc response is valid\n */\n\nfunction isValidJsonRpcResponse(response) {\n  return Array.isArray(response) ? response.every(validateSingleMessage) : validateSingleMessage(response);\n}\n\nexports.isValidJsonRpcResponse = isValidJsonRpcResponse;\n/**\n * Should be called to create batch payload object\n */\n\nfunction createJsonRpcBatchPayload(messages) {\n  return messages.map(function (message) {\n    return createJsonRpcPayload(message.method, message.params);\n  });\n}\n\nexports.createJsonRpcBatchPayload = createJsonRpcBatchPayload;","map":null,"metadata":{},"sourceType":"script"}