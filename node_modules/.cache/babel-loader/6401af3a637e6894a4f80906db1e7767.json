{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextFilter = void 0;\n\nvar React = __importStar(require(\"react\"));\n\nvar Header_1 = require(\"../Header/Header\");\n\nvar input_1 = require(\"../../hooks/input\");\n\nrequire(\"./TextFilter.css\");\n\nvar TextFilter = function TextFilter(props) {\n  var label = props.label,\n      value = props.value,\n      placeholder = props.placeholder,\n      onChange = props.onChange;\n\n  var _a = (0, input_1.useInput)(value, onChange),\n      text = _a[0],\n      setText = _a[1];\n\n  var inputRef = React.useRef(null);\n  React.useEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"dcl text-filter\"\n  }, label ? React.createElement(Header_1.Header, {\n    sub: true,\n    className: \"name\"\n  }, label) : null, React.createElement(\"div\", {\n    className: \"text-input\"\n  }, React.createElement(\"input\", {\n    ref: inputRef,\n    value: text,\n    onChange: setText,\n    placeholder: placeholder\n  })));\n};\n\nexports.TextFilter = TextFilter;","map":null,"metadata":{},"sourceType":"script"}