{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(dashboardSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleSaveProjectSuccess),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleDeleteProject);\n\nimport { takeLatest, put, select } from 'redux-saga/effects';\nimport { SAVE_PROJECT_SUCCESS } from 'modules/sync/actions';\nimport { DELETE_PROJECT } from 'modules/project/actions';\nimport { setSync } from './actions';\nimport { getProjects } from './selectors';\nexport function dashboardSaga() {\n  return _regeneratorRuntime.wrap(function dashboardSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest(SAVE_PROJECT_SUCCESS, handleSaveProjectSuccess);\n\n        case 2:\n          _context.next = 4;\n          return takeLatest(DELETE_PROJECT, handleDeleteProject);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction handleSaveProjectSuccess() {\n  return _regeneratorRuntime.wrap(function handleSaveProjectSuccess$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return put(setSync(true));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction handleDeleteProject() {\n  var projects;\n  return _regeneratorRuntime.wrap(function handleDeleteProject$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return select(getProjects);\n\n        case 2:\n          projects = _context3.sent;\n\n          if (!(projects.length === 0)) {\n            _context3.next = 6;\n            break;\n          }\n\n          _context3.next = 6;\n          return put(setSync(false));\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/ui/dashboard/sagas.ts"],"names":["dashboardSaga","handleSaveProjectSuccess","handleDeleteProject","takeLatest","put","select","SAVE_PROJECT_SUCCESS","DELETE_PROJECT","setSync","getProjects","projects","length"],"mappings":";;oDAOiBA,a;qDAKPC,wB;qDAIAC,mB;;AAhBV,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,oBAAxC;AACA,SAASC,oBAAT,QAAqC,sBAArC;AAEA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,SAAUT,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMG,UAAU,CAACG,oBAAD,EAAuBL,wBAAvB,CAAhB;;AADK;AAAA;AAEL,iBAAME,UAAU,CAACI,cAAD,EAAiBL,mBAAjB,CAAhB;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKP,SAAUD,wBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMG,GAAG,CAACI,OAAO,CAAC,IAAD,CAAR,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUN,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC8B,iBAAMG,MAAM,CAACI,WAAD,CAAZ;;AAD9B;AACQC,UAAAA,QADR;;AAAA,gBAEMA,QAAQ,CAACC,MAAT,KAAoB,CAF1B;AAAA;AAAA;AAAA;;AAAA;AAGI,iBAAMP,GAAG,CAACI,OAAO,CAAC,KAAD,CAAR,CAAT;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeLatest, put, select } from 'redux-saga/effects'\nimport { SAVE_PROJECT_SUCCESS } from 'modules/sync/actions'\nimport { Project } from 'modules/project/types'\nimport { DELETE_PROJECT } from 'modules/project/actions'\nimport { setSync } from './actions'\nimport { getProjects } from './selectors'\n\nexport function* dashboardSaga() {\n  yield takeLatest(SAVE_PROJECT_SUCCESS, handleSaveProjectSuccess)\n  yield takeLatest(DELETE_PROJECT, handleDeleteProject)\n}\n\nfunction* handleSaveProjectSuccess() {\n  yield put(setSync(true))\n}\n\nfunction* handleDeleteProject() {\n  const projects: Project[] = yield select(getProjects)\n  if (projects.length === 0) {\n    yield put(setSync(false))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}