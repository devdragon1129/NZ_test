{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Scene = void 0;\n\nvar validation_1 = require(\"../../validation\");\n\nvar displayable_1 = require(\"../shared/displayable\");\n\nvar feature_toggles_1 = require(\"./feature-toggles\");\n\nvar scene_parcels_1 = require(\"./scene-parcels\");\n\nvar source_1 = require(\"./source\");\n\nvar spawn_point_1 = require(\"./spawn-point\");\n/** @alpha */\n\n\nvar Scene;\n\n(function (Scene) {\n  Scene.schema = {\n    type: 'object',\n    properties: _objectSpread({\n      main: {\n        description: \"File that contains the entry point of the scene's code\",\n        type: 'string',\n        minLength: 1\n      },\n      scene: scene_parcels_1.SceneParcels.schema\n    }, displayable_1.displayableProperties, {\n      display: {\n        description: 'Information related to how should this land be displayed apart from the normal rendering of the scene',\n        type: 'object',\n        properties: {\n          title: {\n            description: 'A name so other users can identify what the contents of this land should be',\n            type: 'string',\n            nullable: true\n          },\n          favicon: {\n            description: 'DEPRECATED. Allow the land owner to set up a favicon to this land',\n            type: 'string',\n            nullable: true\n          },\n          description: {\n            description: \"A description that will be shown on client's nav map when the scene is selected\",\n            type: 'string',\n            nullable: true\n          },\n          navmapThumbnail: {\n            type: 'string',\n            nullable: true\n          }\n        },\n        nullable: true,\n        required: []\n      },\n      owner: {\n        type: 'string',\n        nullable: true\n      },\n      contact: {\n        description: 'Describe different ways of contacting the land owner',\n        type: 'object',\n        properties: {\n          name: {\n            type: 'string',\n            nullable: true\n          },\n          email: {\n            type: 'string',\n            nullable: true\n          },\n          im: {\n            type: 'string',\n            nullable: true\n          },\n          url: {\n            type: 'string',\n            nullable: true\n          }\n        },\n        nullable: true,\n        required: []\n      },\n      tags: {\n        type: 'array',\n        items: {\n          type: 'string',\n          minLength: 1\n        },\n        nullable: true\n      },\n      source: _objectSpread({}, source_1.Source.schema, {\n        nullable: true\n      }),\n      spawnPoints: {\n        type: 'array',\n        items: spawn_point_1.SpawnPoint.schema,\n        nullable: true\n      },\n      requiredPermissions: {\n        type: 'array',\n        items: {\n          type: 'string'\n        },\n        nullable: true\n      },\n      featureToggles: _objectSpread({}, feature_toggles_1.FeatureToggles.schema, {\n        nullable: true\n      })\n    }),\n    additionalProperties: true,\n    required: ['main', 'scene']\n  };\n  Scene.validate = (0, validation_1.generateValidator)(Scene.schema);\n})(Scene = exports.Scene || (exports.Scene = {}));","map":null,"metadata":{},"sourceType":"script"}