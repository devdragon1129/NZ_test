{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trackConnectWallet = exports.configure = exports.getAnalytics = exports.isTrackable = exports.track = exports.add = exports.trackedActions = void 0;\nexports.trackedActions = {};\nvar transformPayload = null;\n\nfunction add(actionType, eventName, getPayload) {\n  if (actionType in exports.trackedActions) {\n    console.warn(\"Analytics: the action type \\\"\".concat(actionType, \"\\\" is already being tracked!\"));\n    return;\n  }\n\n  exports.trackedActions[actionType] = {\n    actionType: actionType,\n    eventName: eventName,\n    getPayload: getPayload\n  };\n}\n\nexports.add = add;\n\nfunction track(action) {\n  var analytics = getAnalytics();\n  if (!analytics) return;\n\n  if (isTrackable(action)) {\n    var _exports$trackedActio = exports.trackedActions[action.type],\n        eventName = _exports$trackedActio.eventName,\n        getPayload = _exports$trackedActio.getPayload;\n    var event = action.type;\n\n    if (eventName) {\n      if (typeof eventName === 'string') {\n        event = eventName;\n      } else {\n        event = eventName(action);\n      }\n    }\n\n    var payload;\n\n    if (getPayload) {\n      payload = getPayload(action);\n    }\n\n    analytics.track(event, transformPayload ? transformPayload(payload) : payload);\n  }\n}\n\nexports.track = track;\n\nfunction isTrackable(action) {\n  if (action && action.type) {\n    return action.type in exports.trackedActions;\n  }\n\n  console.warn(\"Analytics: invalid action \\\"\".concat(JSON.stringify(action), \"\\\"\"));\n  return false;\n}\n\nexports.isTrackable = isTrackable;\n\nfunction getAnalytics() {\n  return window.analytics;\n}\n\nexports.getAnalytics = getAnalytics;\n\nfunction configure(params) {\n  if (params.transformPayload) {\n    transformPayload = params.transformPayload;\n  }\n}\n\nexports.configure = configure;\n/**\n * Useful function for when you are not integrating the analytics module into your project\n * and want to manually track this event the same way as if the saga was integrated.\n */\n\nfunction trackConnectWallet(props) {\n  var analytics = getAnalytics();\n\n  if (analytics) {\n    analytics.track('Connect Wallet', props);\n  }\n}\n\nexports.trackConnectWallet = trackConnectWallet;","map":null,"metadata":{},"sourceType":"script"}