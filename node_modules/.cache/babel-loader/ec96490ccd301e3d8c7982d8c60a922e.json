{"ast":null,"code":"// @ts-nocheck\n;\n\n(function () {\n  // Create a queue, but don't obliterate an existing one!\n  var analytics = window.analytics = window.analytics || []; // If the real analytics.js is already on the page return.\n\n  if (analytics.initialize) return; // If the snippet was invoked already show an error.\n\n  if (analytics.invoked) {\n    if (window.console && console.error) {\n      console.error('Segment snippet included twice.');\n    }\n\n    return;\n  } // Invoked flag, to make sure the snippet\n  // is never invoked twice.\n\n\n  analytics.invoked = true; // A list of the methods in Analytics.js to stub.\n\n  analytics.methods = ['trackSubmit', 'trackClick', 'trackLink', 'trackForm', 'pageview', 'identify', 'reset', 'group', 'track', 'ready', 'alias', 'debug', 'page', 'once', 'off', 'on', 'addSourceMiddleware', 'addIntegrationMiddleware', 'setAnonymousId', 'addDestinationMiddleware']; // Define a factory to create stubs. These are placeholders\n  // for methods in Analytics.js so that you never have to wait\n  // for it to load to actually record data. The `method` is\n  // stored as the first argument, so we can replay the data.\n\n  analytics.factory = function (method) {\n    return function () {\n      var args = Array.prototype.slice.call(arguments);\n      args.unshift(method);\n      analytics.push(args);\n      return analytics;\n    };\n  }; // For each of our methods, generate a queueing stub.\n\n\n  for (var i = 0; i < analytics.methods.length; i++) {\n    var key = analytics.methods[i];\n    analytics[key] = analytics.factory(key);\n  } // Define a method to load Analytics.js from our CDN,\n  // and that will be sure to only ever load it once.\n\n\n  analytics.load = function (key, options) {\n    // Create an async script element based on your key.\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.src = 'https://cdn.segment.com/analytics.js/v1/' + key + '/analytics.min.js'; // Insert our script next to the first script element.\n\n    var first = document.getElementsByTagName('script')[0];\n    first.parentNode.insertBefore(script, first);\n    analytics._loadOptions = options;\n  }; // Add a version to keep track of what's in the wild.\n\n\n  analytics.SNIPPET_VERSION = '4.15.2';\n})();","map":null,"metadata":{},"sourceType":"script"}