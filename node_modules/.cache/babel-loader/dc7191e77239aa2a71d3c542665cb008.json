{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/ImportModal/ImportModal.tsx\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\nimport { Button } from 'decentraland-ui';\nimport JSZip from 'jszip';\nimport uuidv4 from 'uuid/v4';\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport { migrations } from 'modules/migrations/manifest';\nimport { EXPORT_PATH } from 'modules/project/export';\nimport { runMigrations } from 'modules/migrations/utils';\nimport FileImport from 'components/FileImport';\nimport Icon from 'components/Icon';\nimport './ImportModal.css';\n\nvar ImportModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ImportModal, _React$PureComponent);\n\n  function ImportModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImportModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImportModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      acceptedProjects: [],\n      canImport: false\n    };\n    _this.analytics = getAnalytics();\n\n    _this.renderProject = function (file) {\n      if (file.isCorrupted || !file.manifest || !file.manifest.project || !file.manifest.scene) {\n        if (file.fileName) {\n          var key = \"\".concat(file.fileName, \"-\").concat(Math.random()).replace(/\\s/g, '_');\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"project-card error\",\n            key: key,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"close-button\",\n            onClick: function onClick() {\n              return _this.handleRemoveProject(file.id);\n            },\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            name: \"close\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"error-icon\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"title\",\n            title: file.fileName,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }\n          }, file.fileName), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"error\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }\n          }, t('import_modal.invalid_file')));\n        } else {\n          // Hide any weird cases where no fileName is available\n          _this.handleRemoveProject(file.id);\n\n          return null;\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"project-card\",\n        key: file.manifest.project.id,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"close-button\",\n        onClick: function onClick() {\n          return _this.handleRemoveProject(file.id);\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"close\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"img\", {\n        src: file.manifest.project.thumbnail,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        title: file.manifest.project.title,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, file.manifest.project.title));\n    };\n\n    _this.renderProjects = function () {\n      var acceptedProjects = _this.state.acceptedProjects;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, acceptedProjects.length === 1 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"single-project\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 43\n        }\n      }, _this.renderProject(acceptedProjects[0])), acceptedProjects.length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"multiple-projects\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, acceptedProjects.map(function (saved) {\n        return _this.renderProject(saved);\n      }), \" \"));\n    };\n\n    _this.renderDropzoneCTA = function (open) {\n      return /*#__PURE__*/React.createElement(T, {\n        id: \"import_modal.cta\",\n        values: {\n          action: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"action\",\n            onClick: open,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }\n          }, t('import_modal.upload_manually'))\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.handleDropAccepted = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(acceptedFiles) {\n        var acceptedProjects, projects, _iterator, _step, file, zip, contentRaw, content, req, parsed, migrated, importedFile;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                acceptedProjects = _this.state.acceptedProjects;\n                projects = [];\n                _iterator = _createForOfIteratorHelper(acceptedFiles);\n                _context.prev = 3;\n\n                _iterator.s();\n\n              case 5:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 39;\n                  break;\n                }\n\n                file = _step.value;\n                _context.prev = 7;\n                _context.next = 10;\n                return JSZip.loadAsync(file);\n\n              case 10:\n                zip = _context.sent;\n                contentRaw = zip.file(EXPORT_PATH.MANIFEST_FILE);\n                _context.next = 14;\n                return contentRaw.async('text');\n\n              case 14:\n                content = _context.sent;\n                req = new Response(content);\n                _context.next = 18;\n                return req.json();\n\n              case 18:\n                parsed = _context.sent;\n\n                if (!(!parsed || !parsed.scene)) {\n                  _context.next = 21;\n                  break;\n                }\n\n                throw new Error('Invalid project');\n\n              case 21:\n                migrated = runMigrations(parsed, migrations);\n\n                if (!(!migrated.project || !migrated.scene)) {\n                  _context.next = 24;\n                  break;\n                }\n\n                throw new Error('Invalid project');\n\n              case 24:\n                migrated.project.createdAt = new Date().toISOString();\n                migrated.project.updatedAt = new Date().toISOString();\n                importedFile = {\n                  id: uuidv4(),\n                  fileName: file.name,\n                  manifest: _objectSpread({}, migrated)\n                };\n                importedFile.manifest.project.id = uuidv4();\n                importedFile.manifest.scene.id = uuidv4();\n                importedFile.manifest.project.sceneId = parsed.scene.id;\n                projects.push(importedFile);\n                _context.next = 37;\n                break;\n\n              case 33:\n                _context.prev = 33;\n                _context.t0 = _context[\"catch\"](7);\n\n                _this.analytics.track('Import project failure', {\n                  fileName: file.name\n                });\n\n                projects.push({\n                  id: uuidv4(),\n                  fileName: file.name,\n                  isCorrupted: true\n                });\n\n              case 37:\n                _context.next = 5;\n                break;\n\n              case 39:\n                _context.next = 44;\n                break;\n\n              case 41:\n                _context.prev = 41;\n                _context.t1 = _context[\"catch\"](3);\n\n                _iterator.e(_context.t1);\n\n              case 44:\n                _context.prev = 44;\n\n                _iterator.f();\n\n                return _context.finish(44);\n\n              case 47:\n                _this.setState({\n                  acceptedProjects: [].concat(_toConsumableArray(acceptedProjects), projects),\n                  canImport: true\n                });\n\n              case 48:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 41, 44, 47], [7, 33]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDropRejected = function (rejectedFiles) {\n      console.log('rejected', rejectedFiles);\n    };\n\n    _this.handleImport = function () {\n      // At this point we are sure that the accepted projects are all valid\n      var manifests = _this.state.acceptedProjects.map(function (p) {\n        return p.manifest;\n      });\n\n      _this.props.onImport(manifests);\n\n      _this.props.onClose();\n    };\n\n    _this.handleRemoveProject = function (id) {\n      var acceptedProjects = _this.state.acceptedProjects.filter(function (proj) {\n        return proj.id !== id;\n      });\n\n      _this.setState({\n        acceptedProjects: acceptedProjects,\n        canImport: acceptedProjects.length > 0\n      });\n    };\n\n    _this.hasCorruptedProjects = function () {\n      return _this.state.acceptedProjects.some(function (proj) {\n        return proj.isCorrupted === true;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ImportModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          onClose = _this$props.onClose;\n      var _this$state = this.state,\n          acceptedProjects = _this$state.acceptedProjects,\n          canImport = _this$state.canImport;\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, t('import_modal.title')), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }\n      }, t('import_modal.description')), /*#__PURE__*/React.createElement(FileImport, {\n        accept: \".zip\",\n        items: acceptedProjects,\n        renderFiles: this.renderProjects,\n        onAcceptedFiles: this.handleDropAccepted,\n        onRejectedFiles: this.handleDropRejected,\n        renderAction: this.renderDropzoneCTA,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        onClick: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, t('global.cancel')), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        onClick: this.handleImport,\n        disabled: !canImport || this.hasCorruptedProjects(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, acceptedProjects.length > 1 ? t('import_modal.action_many', {\n        count: acceptedProjects.length\n      }) : t('import_modal.action'))));\n    }\n  }]);\n\n  return ImportModal;\n}(React.PureComponent);\n\nexport { ImportModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/ImportModal/ImportModal.tsx"],"names":["React","Button","JSZip","uuidv4","t","T","getAnalytics","Modal","migrations","EXPORT_PATH","runMigrations","FileImport","Icon","ImportModal","state","acceptedProjects","canImport","analytics","renderProject","file","isCorrupted","manifest","project","scene","fileName","key","Math","random","replace","handleRemoveProject","id","thumbnail","title","renderProjects","length","map","saved","renderDropzoneCTA","open","action","handleDropAccepted","acceptedFiles","projects","loadAsync","zip","contentRaw","MANIFEST_FILE","async","content","req","Response","json","parsed","Error","migrated","createdAt","Date","toISOString","updatedAt","importedFile","name","sceneId","push","track","setState","handleDropRejected","rejectedFiles","console","log","handleImport","manifests","p","props","onImport","onClose","filter","proj","hasCorruptedProjects","some","count","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Button } from 'decentraland-ui'\nimport JSZip from 'jszip'\nimport uuidv4 from 'uuid/v4'\n\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport { migrations } from 'modules/migrations/manifest'\nimport { Manifest } from 'modules/project/types'\nimport { EXPORT_PATH } from 'modules/project/export'\nimport { runMigrations } from 'modules/migrations/utils'\nimport FileImport from 'components/FileImport'\nimport Icon from 'components/Icon'\n\nimport { Props, State, ImportedFile } from './ImportModal.types'\nimport './ImportModal.css'\n\nexport default class ImportModal extends React.PureComponent<Props, State> {\n  state: State = {\n    acceptedProjects: [],\n    canImport: false\n  }\n\n  analytics = getAnalytics()\n\n  renderProject = (file: ImportedFile) => {\n    if (file.isCorrupted || !file.manifest || !file.manifest.project || !file.manifest.scene) {\n      if (file.fileName) {\n        const key = `${file.fileName}-${Math.random()}`.replace(/\\s/g, '_')\n        return (\n          <div className=\"project-card error\" key={key}>\n            <div className=\"close-button\" onClick={() => this.handleRemoveProject(file.id)}>\n              <Icon name=\"close\" />\n            </div>\n            <div className=\"error-icon\" />\n            <span className=\"title\" title={file.fileName}>\n              {file.fileName}\n            </span>\n            <span className=\"error\">{t('import_modal.invalid_file')}</span>\n          </div>\n        )\n      } else {\n        // Hide any weird cases where no fileName is available\n        this.handleRemoveProject(file.id)\n        return null\n      }\n    }\n\n    return (\n      <div className=\"project-card\" key={file.manifest.project.id}>\n        <div className=\"close-button\" onClick={() => this.handleRemoveProject(file.id)}>\n          <Icon name=\"close\" />\n        </div>\n        <img src={file.manifest.project.thumbnail} />\n        <span className=\"title\" title={file.manifest.project.title}>\n          {file.manifest.project.title}\n        </span>\n      </div>\n    )\n  }\n\n  renderProjects = () => {\n    const { acceptedProjects } = this.state\n    return (\n      <>\n        {acceptedProjects.length === 1 && <div className=\"single-project\">{this.renderProject(acceptedProjects[0])}</div>}\n        {acceptedProjects.length > 1 && (\n          <div className=\"multiple-projects\">{(acceptedProjects as ImportedFile[]).map(saved => this.renderProject(saved))} </div>\n        )}\n      </>\n    )\n  }\n\n  renderDropzoneCTA = (open: () => void) => {\n    return (\n      <T\n        id=\"import_modal.cta\"\n        values={{\n          action: (\n            <span className=\"action\" onClick={open}>\n              {t('import_modal.upload_manually')}\n            </span>\n          )\n        }}\n      />\n    )\n  }\n\n  handleDropAccepted = async (acceptedFiles: File[]) => {\n    const { acceptedProjects } = this.state\n\n    let projects = []\n\n    for (let file of acceptedFiles) {\n      try {\n        const zip: JSZip = await JSZip.loadAsync(file)\n        const contentRaw = zip.file(EXPORT_PATH.MANIFEST_FILE)\n        const content = await contentRaw.async('text')\n        const req = new Response(content)\n        const parsed: Manifest = await req.json()\n        if (!parsed || !parsed.scene) {\n          throw new Error('Invalid project')\n        }\n\n        const migrated = runMigrations<Manifest>(parsed, migrations)\n\n        if (!migrated.project || !migrated.scene) {\n          throw new Error('Invalid project')\n        }\n\n        migrated.project.createdAt = new Date().toISOString()\n        migrated.project.updatedAt = new Date().toISOString()\n\n        let importedFile: ImportedFile = {\n          id: uuidv4(),\n          fileName: file.name,\n          manifest: {\n            ...migrated\n          }\n        }\n\n        importedFile.manifest!.project.id = uuidv4()\n        importedFile.manifest!.scene.id = uuidv4()\n        importedFile.manifest!.project.sceneId = parsed.scene.id\n\n        projects.push(importedFile)\n      } catch (e) {\n        this.analytics.track('Import project failure', {\n          fileName: file.name\n        })\n\n        projects.push({\n          id: uuidv4(),\n          fileName: file.name,\n          isCorrupted: true\n        } as ImportedFile)\n      }\n    }\n\n    this.setState({ acceptedProjects: [...acceptedProjects, ...projects], canImport: true })\n  }\n\n  handleDropRejected = (rejectedFiles: File[]) => {\n    console.log('rejected', rejectedFiles)\n  }\n\n  handleImport = () => {\n    // At this point we are sure that the accepted projects are all valid\n    const manifests = this.state.acceptedProjects.map(p => p.manifest!)\n    this.props.onImport(manifests)\n    this.props.onClose()\n  }\n\n  handleRemoveProject = (id: string) => {\n    const acceptedProjects = this.state.acceptedProjects.filter(proj => proj.id !== id)\n    this.setState({ acceptedProjects, canImport: acceptedProjects.length > 0 })\n  }\n\n  hasCorruptedProjects = () => {\n    return this.state.acceptedProjects.some(proj => proj.isCorrupted === true)\n  }\n\n  render() {\n    const { name, onClose } = this.props\n    const { acceptedProjects, canImport } = this.state\n    return (\n      <Modal name={name}>\n        <Modal.Header>{t('import_modal.title')}</Modal.Header>\n        <Modal.Content>\n          <div className=\"details\">{t('import_modal.description')}</div>\n          <FileImport<ImportedFile>\n            accept=\".zip\"\n            items={acceptedProjects}\n            renderFiles={this.renderProjects}\n            onAcceptedFiles={this.handleDropAccepted}\n            onRejectedFiles={this.handleDropRejected}\n            renderAction={this.renderDropzoneCTA}\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={onClose}>\n            {t('global.cancel')}\n          </Button>\n          <Button primary onClick={this.handleImport} disabled={!canImport || this.hasCorruptedProjects()}>\n            {acceptedProjects.length > 1 ? t('import_modal.action_many', { count: acceptedProjects.length }) : t('import_modal.action')}\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}