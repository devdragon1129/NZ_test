{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../Misc/typeStore';\n/**\r\n * Block used to desaturate a color\r\n */\n\nvar DesaturateBlock =\n/** @class */\nfunction (_super) {\n  __extends(DesaturateBlock, _super);\n  /**\r\n   * Creates a new DesaturateBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function DesaturateBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"color\", NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this.registerInput(\"level\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\n\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  DesaturateBlock.prototype.getClassName = function () {\n    return \"DesaturateBlock\";\n  };\n\n  Object.defineProperty(DesaturateBlock.prototype, \"color\", {\n    /**\r\n     * Gets the color operand input component\r\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DesaturateBlock.prototype, \"level\", {\n    /**\r\n     * Gets the level operand input component\r\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DesaturateBlock.prototype, \"output\", {\n    /**\r\n     * Gets the output component\r\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DesaturateBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    var color = this.color;\n    var colorName = color.associatedVariableName;\n\n    var tempMin = state._getFreeVariableName(\"colorMin\");\n\n    var tempMax = state._getFreeVariableName(\"colorMax\");\n\n    var tempMerge = state._getFreeVariableName(\"colorMerge\");\n\n    state.compilationString += \"float \" + tempMin + \" = min(min(\" + colorName + \".x, \" + colorName + \".y), \" + colorName + \".z);\\r\\n\";\n    state.compilationString += \"float \" + tempMax + \" = max(max(\" + colorName + \".x, \" + colorName + \".y), \" + colorName + \".z);\\r\\n\";\n    state.compilationString += \"float \" + tempMerge + \" = 0.5 * (\" + tempMin + \" + \" + tempMax + \");\\r\\n\";\n    state.compilationString += this._declareOutput(output, state) + (\" = mix(\" + colorName + \", vec3(\" + tempMerge + \", \" + tempMerge + \", \" + tempMerge + \"), \" + this.level.associatedVariableName + \");\\r\\n\");\n    return this;\n  };\n\n  return DesaturateBlock;\n}(NodeMaterialBlock);\n\nexport { DesaturateBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.DesaturateBlock\"] = DesaturateBlock;","map":null,"metadata":{},"sourceType":"module"}