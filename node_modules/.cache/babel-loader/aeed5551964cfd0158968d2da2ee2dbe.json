{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar selectors_1 = require(\"../../modules/wallet/selectors\");\n\nvar selectors_2 = require(\"../../modules/translation/selectors\");\n\nvar actions_1 = require(\"../../modules/wallet/actions\");\n\nvar Navbar_1 = __importDefault(require(\"./Navbar\"));\n\nvar mapState = function mapState(state) {\n  return {\n    chainId: selectors_1.getChainId(state),\n    mana: selectors_1.getMana(state),\n    address: selectors_1.getAddress(state),\n    isConnected: selectors_1.isConnected(state),\n    isConnecting: selectors_1.isConnecting(state),\n    hasTranslations: selectors_2.isEnabled(state),\n    hasAcceptedNetworkPartialSupport: selectors_1.hasAcceptedNetworkPartialSupport(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSwitchNetwork: function onSwitchNetwork(chainId) {\n      return dispatch(actions_1.switchNetworkRequest(chainId));\n    },\n    onSignOut: function onSignOut() {\n      return dispatch(actions_1.disconnectWallet());\n    },\n    onAcceptNetworkPartialSupport: function onAcceptNetworkPartialSupport() {\n      return dispatch(actions_1.acceptNetworkPartialSupport());\n    }\n  };\n};\n\nvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n  return Object.assign(Object.assign(Object.assign({}, stateProps), dispatchProps), ownProps);\n};\n\nexports.default = react_redux_1.connect(mapState, mapDispatch, mergeProps)(Navbar_1.default);","map":null,"metadata":{},"sourceType":"script"}