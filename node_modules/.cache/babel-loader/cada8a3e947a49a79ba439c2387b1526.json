{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { saveItemRequest, SAVE_ITEM_REQUEST } from 'modules/item/actions';\nimport { getLoading, getError } from 'modules/item/selectors';\nimport { getCollection } from 'modules/collection/selectors';\nimport CreateSingleItemModal from './CreateSingleItemModal';\n\nvar mapState = function mapState(state, ownProps) {\n  var collection = ownProps.metadata.collectionId ? getCollection(state, ownProps.metadata.collectionId) : null;\n  return {\n    collection: collection,\n    address: getAddress(state),\n    error: getError(state),\n    isLoading: isLoadingType(getLoading(state), SAVE_ITEM_REQUEST)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSave: function onSave(item, contents) {\n      return dispatch(saveItemRequest(item, contents));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CreateSingleItemModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CreateSingleItemModal/CreateSingleItemModal.container.ts"],"names":["connect","getAddress","isLoadingType","saveItemRequest","SAVE_ITEM_REQUEST","getLoading","getError","getCollection","CreateSingleItemModal","mapState","state","ownProps","collection","metadata","collectionId","address","error","isLoading","mapDispatch","dispatch","onSave","item","contents"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kDAA3B;AACA,SAASC,aAAT,QAA8B,mDAA9B;AAEA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,sBAAnD;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,wBAArC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AAGA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB,EAAyD;AACxE,MAAMC,UAA6B,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,YAAlB,GAAiCP,aAAa,CAACG,KAAD,EAAQC,QAAQ,CAACE,QAAT,CAAkBC,YAA1B,CAA9C,GAAwF,IAA9H;AAEA,SAAO;AACLF,IAAAA,UAAU,EAAVA,UADK;AAELG,IAAAA,OAAO,EAAEd,UAAU,CAACS,KAAD,CAFd;AAGLM,IAAAA,KAAK,EAAEV,QAAQ,CAACI,KAAD,CAHV;AAILO,IAAAA,SAAS,EAAEf,aAAa,CAACG,UAAU,CAACK,KAAD,CAAX,EAAoBN,iBAApB;AAJnB,GAAP;AAMD,CATD;;AAWA,IAAMc,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,QAAP;AAAA,aAAoBH,QAAQ,CAAChB,eAAe,CAACkB,IAAD,EAAOC,QAAP,CAAhB,CAA5B;AAAA;AADwD,GAA9C;AAAA,CAApB;;AAIA,eAAetB,OAAO,CAACS,QAAD,EAAWS,WAAX,CAAP,CAA+BV,qBAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { RootState } from 'modules/common/types'\nimport { saveItemRequest, SAVE_ITEM_REQUEST } from 'modules/item/actions'\nimport { getLoading, getError } from 'modules/item/selectors'\nimport { getCollection } from 'modules/collection/selectors'\nimport { Collection } from 'modules/collection/types'\nimport { MapStateProps, MapDispatchProps, MapDispatch, OwnProps } from './CreateSingleItemModal.types'\nimport CreateSingleItemModal from './CreateSingleItemModal'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapStateProps => {\n  const collection: Collection | null = ownProps.metadata.collectionId ? getCollection(state, ownProps.metadata.collectionId) : null\n\n  return {\n    collection,\n    address: getAddress(state),\n    error: getError(state),\n    isLoading: isLoadingType(getLoading(state), SAVE_ITEM_REQUEST)\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSave: (item, contents) => dispatch(saveItemRequest(item, contents))\n})\n\nexport default connect(mapState, mapDispatch)(CreateSingleItemModal)\n"]},"metadata":{},"sourceType":"module"}