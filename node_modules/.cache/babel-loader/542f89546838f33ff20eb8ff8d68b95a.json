{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getData as getAuthorizations } from 'decentraland-dapps/dist/modules/authorization/selectors';\nimport { getData as getWallet } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { fetchCollectionCurationRequest } from 'modules/curations/collectionCuration/actions';\nimport { getStatusByCollectionId } from 'modules/collection/selectors';\nimport { getHasPendingCollectionCuration } from 'modules/curations/collectionCuration/selectors';\nimport { getCollectionItems } from 'modules/item/selectors';\nimport { openModal } from 'modules/modal/actions';\nimport CollectionPublishButton from './CollectionPublishButton';\n\nvar mapState = function mapState(state, ownProps) {\n  var collectionId = ownProps.collection.id;\n  var statusByCollectionId = getStatusByCollectionId(state);\n  return {\n    wallet: getWallet(state),\n    items: getCollectionItems(state, collectionId),\n    authorizations: getAuthorizations(state),\n    status: statusByCollectionId[collectionId],\n    hasPendingCuration: getHasPendingCollectionCuration(state, collectionId)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch, ownProps) {\n  var collectionId = ownProps.collection.id;\n  return {\n    onPublish: function onPublish() {\n      return dispatch(openModal('PublishCollectionModal', {\n        collectionId: collectionId\n      }));\n    },\n    onPush: function onPush() {\n      return dispatch(openModal('PushCollectionChangesModal', {\n        collectionId: collectionId\n      }));\n    },\n    onInit: function onInit() {\n      return dispatch(fetchCollectionCurationRequest(collectionId));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CollectionPublishButton);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/CollectionDetailPage/CollectionPublishButton/CollectionPublishButton.container.ts"],"names":["connect","getData","getAuthorizations","getWallet","fetchCollectionCurationRequest","getStatusByCollectionId","getHasPendingCollectionCuration","getCollectionItems","openModal","CollectionPublishButton","mapState","state","ownProps","collectionId","collection","id","statusByCollectionId","wallet","items","authorizations","status","hasPendingCuration","mapDispatch","dispatch","onPublish","onPush","onInit"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAO,IAAIC,iBAApB,QAA6C,yDAA7C;AACA,SAASD,OAAO,IAAIE,SAApB,QAAqC,kDAArC;AAEA,SAASC,8BAAT,QAA+C,8CAA/C;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AACA,SAASC,+BAAT,QAAgD,gDAAhD;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,OAAOC,uBAAP,MAAoC,2BAApC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB,EAAyD;AAAA,MAC5DC,YAD4D,GAC3CD,QAAQ,CAACE,UADkC,CAChEC,EADgE;AAExE,MAAMC,oBAAoB,GAAGX,uBAAuB,CAACM,KAAD,CAApD;AAEA,SAAO;AACLM,IAAAA,MAAM,EAAEd,SAAS,CAACQ,KAAD,CADZ;AAELO,IAAAA,KAAK,EAAEX,kBAAkB,CAACI,KAAD,EAAQE,YAAR,CAFpB;AAGLM,IAAAA,cAAc,EAAEjB,iBAAiB,CAACS,KAAD,CAH5B;AAILS,IAAAA,MAAM,EAAEJ,oBAAoB,CAACH,YAAD,CAJvB;AAKLQ,IAAAA,kBAAkB,EAAEf,+BAA+B,CAACK,KAAD,EAAQE,YAAR;AAL9C,GAAP;AAOD,CAXD;;AAaA,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAwBX,QAAxB,EAAiE;AAAA,MACvEC,YADuE,GACtDD,QAAQ,CAACE,UAD6C,CAC3EC,EAD2E;AAGnF,SAAO;AACLS,IAAAA,SAAS,EAAE;AAAA,aAAMD,QAAQ,CAACf,SAAS,CAAC,wBAAD,EAA2B;AAAEK,QAAAA,YAAY,EAAZA;AAAF,OAA3B,CAAV,CAAd;AAAA,KADN;AAELY,IAAAA,MAAM,EAAE;AAAA,aAAMF,QAAQ,CAACf,SAAS,CAAC,4BAAD,EAA+B;AAAEK,QAAAA,YAAY,EAAZA;AAAF,OAA/B,CAAV,CAAd;AAAA,KAFH;AAGLa,IAAAA,MAAM,EAAE;AAAA,aAAMH,QAAQ,CAACnB,8BAA8B,CAACS,YAAD,CAA/B,CAAd;AAAA;AAHH,GAAP;AAKD,CARD;;AAUA,eAAeb,OAAO,CAACU,QAAD,EAAWY,WAAX,CAAP,CAA+Bb,uBAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { getData as getAuthorizations } from 'decentraland-dapps/dist/modules/authorization/selectors'\nimport { getData as getWallet } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { RootState } from 'modules/common/types'\nimport { fetchCollectionCurationRequest } from 'modules/curations/collectionCuration/actions'\nimport { getStatusByCollectionId } from 'modules/collection/selectors'\nimport { getHasPendingCollectionCuration } from 'modules/curations/collectionCuration/selectors'\nimport { getCollectionItems } from 'modules/item/selectors'\nimport { openModal } from 'modules/modal/actions'\nimport { MapStateProps, MapDispatchProps, MapDispatch, OwnProps } from './CollectionPublishButton.types'\nimport CollectionPublishButton from './CollectionPublishButton'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapStateProps => {\n  const { id: collectionId } = ownProps.collection\n  const statusByCollectionId = getStatusByCollectionId(state)\n\n  return {\n    wallet: getWallet(state)!,\n    items: getCollectionItems(state, collectionId),\n    authorizations: getAuthorizations(state),\n    status: statusByCollectionId[collectionId],\n    hasPendingCuration: getHasPendingCollectionCuration(state, collectionId)\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch, ownProps: OwnProps): MapDispatchProps => {\n  const { id: collectionId } = ownProps.collection\n\n  return {\n    onPublish: () => dispatch(openModal('PublishCollectionModal', { collectionId })),\n    onPush: () => dispatch(openModal('PushCollectionChangesModal', { collectionId })),\n    onInit: () => dispatch(fetchCollectionCurationRequest(collectionId))\n  }\n}\n\nexport default connect(mapState, mapDispatch)(CollectionPublishButton)\n"]},"metadata":{},"sourceType":"module"}