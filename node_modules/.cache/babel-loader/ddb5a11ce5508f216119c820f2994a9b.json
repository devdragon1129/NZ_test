{"ast":null,"code":"export var CreateAssetPackView;\n\n(function (CreateAssetPackView) {\n  CreateAssetPackView[CreateAssetPackView[\"LOGIN\"] = 0] = \"LOGIN\";\n  CreateAssetPackView[CreateAssetPackView[\"IMPORT\"] = 1] = \"IMPORT\";\n  CreateAssetPackView[CreateAssetPackView[\"EDIT_ASSETS\"] = 2] = \"EDIT_ASSETS\";\n  CreateAssetPackView[CreateAssetPackView[\"EDIT_ASSET_PACK\"] = 3] = \"EDIT_ASSET_PACK\";\n  CreateAssetPackView[CreateAssetPackView[\"PROGRESS\"] = 4] = \"PROGRESS\";\n  CreateAssetPackView[CreateAssetPackView[\"SUCCESS\"] = 5] = \"SUCCESS\";\n  CreateAssetPackView[CreateAssetPackView[\"EXIT\"] = 6] = \"EXIT\";\n})(CreateAssetPackView || (CreateAssetPackView = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CreateAssetPackModal/CreateAssetPackModal.types.ts"],"names":["CreateAssetPackView"],"mappings":"AAQA,WAAYA,mBAAZ;;WAAYA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;GAAAA,mB,KAAAA,mB","sourcesContent":["import { Dispatch } from 'redux'\nimport { ModalProps } from 'decentraland-dapps/dist/providers/ModalProvider/ModalProvider.types'\nimport { RawAssetPack, AssetPack } from 'modules/assetPack/types'\nimport { saveAssetPackRequest, SaveAssetPackRequestAction } from 'modules/assetPack/actions'\nimport { AssetPackState } from 'modules/assetPack/reducer'\nimport { Project } from 'modules/project/types'\nimport { openModal, OpenModalAction } from 'modules/modal/actions'\n\nexport enum CreateAssetPackView {\n  LOGIN,\n  IMPORT,\n  EDIT_ASSETS,\n  EDIT_ASSET_PACK,\n  PROGRESS,\n  SUCCESS,\n  EXIT\n}\n\nexport type State = {\n  view: CreateAssetPackView\n  back: CreateAssetPackView\n  assetPack: RawAssetPack\n}\n\nexport type Props = ModalProps & {\n  project: Project | null\n  progress: AssetPackState['progress']\n  error: AssetPackState['error']\n  assetPacks: AssetPack[]\n  ethAddress?: string\n  isLoggedIn: boolean\n  isLoading: boolean\n  onCreateAssetPack: typeof saveAssetPackRequest\n  onOpenModal: typeof openModal\n}\n\nexport type MapStateProps = Pick<Props, 'project' | 'progress' | 'error' | 'assetPacks' | 'isLoggedIn' | 'isLoading' | 'ethAddress'>\nexport type MapDispatchProps = Pick<Props, 'onCreateAssetPack' | 'onOpenModal'>\nexport type MapDispatch = Dispatch<SaveAssetPackRequestAction | OpenModalAction>\n"]},"metadata":{},"sourceType":"module"}