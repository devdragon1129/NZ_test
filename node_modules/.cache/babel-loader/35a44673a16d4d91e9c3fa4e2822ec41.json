{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from 'redux-saga/effects';\nimport { ApplicationName } from 'decentraland-dapps/dist/modules/features/types';\nimport { createProfileSaga } from 'decentraland-dapps/dist/modules/profile/sagas';\nimport { transactionSaga } from 'decentraland-dapps/dist/modules/transaction/sagas';\nimport { authorizationSaga } from 'decentraland-dapps/dist/modules/authorization/sagas';\nimport { toastSaga } from 'decentraland-dapps/dist/modules/toast/sagas';\nimport { featuresSaga } from 'decentraland-dapps/dist/modules/features/sagas';\nimport { analyticsSaga } from 'modules/analytics/sagas';\nimport { assetPackSaga } from 'modules/assetPack/sagas';\nimport { assetSaga } from 'modules/asset/sagas';\nimport { collectionSaga } from 'modules/collection/sagas';\nimport { committeeSaga } from 'modules/committee/sagas';\nimport { deploymentSaga } from 'modules/deployment/sagas';\nimport { editorSaga } from 'modules/editor/sagas';\nimport { ensSaga } from 'modules/ens/sagas';\nimport { forumSaga } from 'modules/forum/sagas';\nimport { identitySaga } from 'modules/identity/sagas';\nimport { itemSaga } from 'modules/item/sagas';\nimport { keyboardSaga } from 'modules/keyboard/sagas';\nimport { landSaga } from 'modules/land/sagas';\nimport { locationSaga } from 'modules/location/sagas';\nimport { mediaSaga } from 'modules/media/sagas';\nimport { modalSaga } from 'modules/modal/sagas';\nimport { poolGroupSaga } from 'modules/poolGroup/sagas';\nimport { poolSaga } from 'modules/pool/sagas';\nimport { projectSaga } from 'modules/project/sagas';\nimport { sceneSaga } from 'modules/scene/sagas';\nimport { statsSaga } from 'modules/stats/sagas';\nimport { syncSaga } from 'modules/sync/sagas';\nimport { thirdPartySaga } from 'modules/thirdParty/sagas';\nimport { tileSaga } from 'modules/tile/sagas';\nimport { translationSaga } from 'modules/translation/sagas';\nimport { uiSaga } from 'modules/ui/sagas';\nimport { walletSaga } from 'modules/wallet/sagas';\nimport { PEER_URL } from 'lib/api/peer';\nimport { entitySaga } from 'modules/entity/sagas';\nimport { collectionCurationSaga } from 'modules/curations/collectionCuration/sagas';\nimport { itemCurationSaga } from 'modules/curations/itemCuration/sagas';\nvar profileSaga = createProfileSaga({\n  peerUrl: PEER_URL\n});\nexport function rootSaga(builderAPI, newBuilderClient, catalystClient) {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([analyticsSaga(), assetPackSaga(builderAPI), assetSaga(newBuilderClient), authorizationSaga(), collectionSaga(builderAPI, newBuilderClient, catalystClient), committeeSaga(builderAPI), deploymentSaga(builderAPI, catalystClient), editorSaga(), ensSaga(), entitySaga(catalystClient), forumSaga(builderAPI), identitySaga(), itemSaga(builderAPI, newBuilderClient), keyboardSaga(), landSaga(), locationSaga(), mediaSaga(), modalSaga(), poolGroupSaga(builderAPI), poolSaga(builderAPI), profileSaga(), projectSaga(builderAPI), sceneSaga(), statsSaga(), syncSaga(builderAPI), thirdPartySaga(builderAPI, catalystClient), tileSaga(), toastSaga(), transactionSaga(), translationSaga(), uiSaga(), walletSaga(), collectionCurationSaga(builderAPI), itemCurationSaga(builderAPI), featuresSaga({\n            polling: {\n              apps: [ApplicationName.BUILDER],\n              delay: 60000\n              /** 60 seconds */\n\n            }\n          })]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/common/sagas.ts"],"names":["rootSaga","all","ApplicationName","createProfileSaga","transactionSaga","authorizationSaga","toastSaga","featuresSaga","analyticsSaga","assetPackSaga","assetSaga","collectionSaga","committeeSaga","deploymentSaga","editorSaga","ensSaga","forumSaga","identitySaga","itemSaga","keyboardSaga","landSaga","locationSaga","mediaSaga","modalSaga","poolGroupSaga","poolSaga","projectSaga","sceneSaga","statsSaga","syncSaga","thirdPartySaga","tileSaga","translationSaga","uiSaga","walletSaga","PEER_URL","entitySaga","collectionCurationSaga","itemCurationSaga","profileSaga","peerUrl","builderAPI","newBuilderClient","catalystClient","polling","apps","BUILDER","delay"],"mappings":"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","sourcesContent":["import { all } from 'redux-saga/effects'\nimport { CatalystClient } from 'dcl-catalyst-client'\nimport { BuilderClient } from '@dcl/builder-client'\nimport { ApplicationName } from 'decentraland-dapps/dist/modules/features/types'\n\nimport { createProfileSaga } from 'decentraland-dapps/dist/modules/profile/sagas'\nimport { transactionSaga } from 'decentraland-dapps/dist/modules/transaction/sagas'\nimport { authorizationSaga } from 'decentraland-dapps/dist/modules/authorization/sagas'\nimport { toastSaga } from 'decentraland-dapps/dist/modules/toast/sagas'\nimport { featuresSaga } from 'decentraland-dapps/dist/modules/features/sagas'\n\nimport { analyticsSaga } from 'modules/analytics/sagas'\nimport { assetPackSaga } from 'modules/assetPack/sagas'\nimport { assetSaga } from 'modules/asset/sagas'\nimport { collectionSaga } from 'modules/collection/sagas'\nimport { committeeSaga } from 'modules/committee/sagas'\nimport { deploymentSaga } from 'modules/deployment/sagas'\nimport { editorSaga } from 'modules/editor/sagas'\nimport { ensSaga } from 'modules/ens/sagas'\nimport { forumSaga } from 'modules/forum/sagas'\nimport { identitySaga } from 'modules/identity/sagas'\nimport { itemSaga } from 'modules/item/sagas'\nimport { keyboardSaga } from 'modules/keyboard/sagas'\nimport { landSaga } from 'modules/land/sagas'\nimport { locationSaga } from 'modules/location/sagas'\nimport { mediaSaga } from 'modules/media/sagas'\nimport { modalSaga } from 'modules/modal/sagas'\nimport { poolGroupSaga } from 'modules/poolGroup/sagas'\nimport { poolSaga } from 'modules/pool/sagas'\nimport { projectSaga } from 'modules/project/sagas'\nimport { sceneSaga } from 'modules/scene/sagas'\nimport { statsSaga } from 'modules/stats/sagas'\nimport { syncSaga } from 'modules/sync/sagas'\nimport { thirdPartySaga } from 'modules/thirdParty/sagas'\nimport { tileSaga } from 'modules/tile/sagas'\nimport { translationSaga } from 'modules/translation/sagas'\nimport { uiSaga } from 'modules/ui/sagas'\nimport { walletSaga } from 'modules/wallet/sagas'\nimport { PEER_URL } from 'lib/api/peer'\nimport { BuilderAPI } from 'lib/api/builder'\nimport { entitySaga } from 'modules/entity/sagas'\nimport { collectionCurationSaga } from 'modules/curations/collectionCuration/sagas'\nimport { itemCurationSaga } from 'modules/curations/itemCuration/sagas'\n\nconst profileSaga = createProfileSaga({ peerUrl: PEER_URL })\n\nexport function* rootSaga(builderAPI: BuilderAPI, newBuilderClient: BuilderClient, catalystClient: CatalystClient) {\n  yield all([\n    analyticsSaga(),\n    assetPackSaga(builderAPI),\n    assetSaga(newBuilderClient),\n    authorizationSaga(),\n    collectionSaga(builderAPI, newBuilderClient, catalystClient),\n    committeeSaga(builderAPI),\n    deploymentSaga(builderAPI, catalystClient),\n    editorSaga(),\n    ensSaga(),\n    entitySaga(catalystClient),\n    forumSaga(builderAPI),\n    identitySaga(),\n    itemSaga(builderAPI, newBuilderClient),\n    keyboardSaga(),\n    landSaga(),\n    locationSaga(),\n    mediaSaga(),\n    modalSaga(),\n    poolGroupSaga(builderAPI),\n    poolSaga(builderAPI),\n    profileSaga(),\n    projectSaga(builderAPI),\n    sceneSaga(),\n    statsSaga(),\n    syncSaga(builderAPI),\n    thirdPartySaga(builderAPI, catalystClient),\n    tileSaga(),\n    toastSaga(),\n    transactionSaga(),\n    translationSaga(),\n    uiSaga(),\n    walletSaga(),\n    collectionCurationSaga(builderAPI),\n    itemCurationSaga(builderAPI),\n    featuresSaga({ polling: { apps: [ApplicationName.BUILDER], delay: 60000 /** 60 seconds */ } })\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}