{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../../Misc/typeStore';\n/**\r\n * Block used to output the vertex position\r\n */\n\nvar VertexOutputBlock =\n/** @class */\nfunction (_super) {\n  __extends(VertexOutputBlock, _super);\n  /**\r\n   * Creates a new VertexOutputBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function VertexOutputBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Vertex, true) || this;\n\n    _this.registerInput(\"vector\", NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  VertexOutputBlock.prototype.getClassName = function () {\n    return \"VertexOutputBlock\";\n  };\n\n  Object.defineProperty(VertexOutputBlock.prototype, \"vector\", {\n    /**\r\n     * Gets the vector input component\r\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  VertexOutputBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var input = this.vector;\n    state.compilationString += \"gl_Position = \" + input.associatedVariableName + \";\\r\\n\";\n    return this;\n  };\n\n  return VertexOutputBlock;\n}(NodeMaterialBlock);\n\nexport { VertexOutputBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.VertexOutputBlock\"] = VertexOutputBlock;","map":null,"metadata":{},"sourceType":"module"}