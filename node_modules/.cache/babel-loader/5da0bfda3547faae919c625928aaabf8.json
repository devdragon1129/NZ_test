{"ast":null,"code":"/**\r\n * @hidden\r\n **/\nvar AlphaState =\n/** @class */\nfunction () {\n  /**\r\n   * Initializes the state.\r\n   */\n  function AlphaState() {\n    this._isAlphaBlendDirty = false;\n    this._isBlendFunctionParametersDirty = false;\n    this._isBlendEquationParametersDirty = false;\n    this._isBlendConstantsDirty = false;\n    this._alphaBlend = false;\n    this._blendFunctionParameters = new Array(4);\n    this._blendEquationParameters = new Array(2);\n    this._blendConstants = new Array(4);\n    this.reset();\n  }\n\n  Object.defineProperty(AlphaState.prototype, \"isDirty\", {\n    get: function get() {\n      return this._isAlphaBlendDirty || this._isBlendFunctionParametersDirty;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AlphaState.prototype, \"alphaBlend\", {\n    get: function get() {\n      return this._alphaBlend;\n    },\n    set: function set(value) {\n      if (this._alphaBlend === value) {\n        return;\n      }\n\n      this._alphaBlend = value;\n      this._isAlphaBlendDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AlphaState.prototype.setAlphaBlendConstants = function (r, g, b, a) {\n    if (this._blendConstants[0] === r && this._blendConstants[1] === g && this._blendConstants[2] === b && this._blendConstants[3] === a) {\n      return;\n    }\n\n    this._blendConstants[0] = r;\n    this._blendConstants[1] = g;\n    this._blendConstants[2] = b;\n    this._blendConstants[3] = a;\n    this._isBlendConstantsDirty = true;\n  };\n\n  AlphaState.prototype.setAlphaBlendFunctionParameters = function (value0, value1, value2, value3) {\n    if (this._blendFunctionParameters[0] === value0 && this._blendFunctionParameters[1] === value1 && this._blendFunctionParameters[2] === value2 && this._blendFunctionParameters[3] === value3) {\n      return;\n    }\n\n    this._blendFunctionParameters[0] = value0;\n    this._blendFunctionParameters[1] = value1;\n    this._blendFunctionParameters[2] = value2;\n    this._blendFunctionParameters[3] = value3;\n    this._isBlendFunctionParametersDirty = true;\n  };\n\n  AlphaState.prototype.setAlphaEquationParameters = function (rgb, alpha) {\n    if (this._blendEquationParameters[0] === rgb && this._blendEquationParameters[1] === alpha) {\n      return;\n    }\n\n    this._blendEquationParameters[0] = rgb;\n    this._blendEquationParameters[1] = alpha;\n    this._isBlendEquationParametersDirty = true;\n  };\n\n  AlphaState.prototype.reset = function () {\n    this._alphaBlend = false;\n    this._blendFunctionParameters[0] = null;\n    this._blendFunctionParameters[1] = null;\n    this._blendFunctionParameters[2] = null;\n    this._blendFunctionParameters[3] = null;\n    this._blendEquationParameters[0] = null;\n    this._blendEquationParameters[1] = null;\n    this._blendConstants[0] = null;\n    this._blendConstants[1] = null;\n    this._blendConstants[2] = null;\n    this._blendConstants[3] = null;\n    this._isAlphaBlendDirty = true;\n    this._isBlendFunctionParametersDirty = false;\n    this._isBlendEquationParametersDirty = false;\n    this._isBlendConstantsDirty = false;\n  };\n\n  AlphaState.prototype.apply = function (gl) {\n    if (!this.isDirty) {\n      return;\n    } // Alpha blend\n\n\n    if (this._isAlphaBlendDirty) {\n      if (this._alphaBlend) {\n        gl.enable(gl.BLEND);\n      } else {\n        gl.disable(gl.BLEND);\n      }\n\n      this._isAlphaBlendDirty = false;\n    } // Alpha function\n\n\n    if (this._isBlendFunctionParametersDirty) {\n      gl.blendFuncSeparate(this._blendFunctionParameters[0], this._blendFunctionParameters[1], this._blendFunctionParameters[2], this._blendFunctionParameters[3]);\n      this._isBlendFunctionParametersDirty = false;\n    } // Alpha equation\n\n\n    if (this._isBlendEquationParametersDirty) {\n      gl.blendEquationSeparate(this._blendEquationParameters[0], this._blendEquationParameters[1]);\n      this._isBlendEquationParametersDirty = false;\n    } // Constants\n\n\n    if (this._isBlendConstantsDirty) {\n      gl.blendColor(this._blendConstants[0], this._blendConstants[1], this._blendConstants[2], this._blendConstants[3]);\n      this._isBlendConstantsDirty = false;\n    }\n  };\n\n  return AlphaState;\n}();\n\nexport { AlphaState };","map":null,"metadata":{},"sourceType":"module"}