{"ast":null,"code":"export var CreateItemView;\n\n(function (CreateItemView) {\n  CreateItemView[\"IMPORT\"] = \"import\";\n  CreateItemView[\"DETAILS\"] = \"details\";\n})(CreateItemView || (CreateItemView = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CreateSingleItemModal/CreateSingleItemModal.types.ts"],"names":["CreateItemView"],"mappings":"AAOA,WAAYA,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c","sourcesContent":["import { Dispatch } from 'redux'\nimport { ModalProps } from 'decentraland-dapps/dist/providers/ModalProvider/ModalProvider.types'\nimport { ModelMetrics } from 'modules/models/types'\nimport { Collection } from 'modules/collection/types'\nimport { saveItemRequest, SaveItemRequestAction } from 'modules/item/actions'\nimport { BodyShapeType, Item, ItemRarity, ItemType } from 'modules/item/types'\n\nexport enum CreateItemView {\n  IMPORT = 'import',\n  DETAILS = 'details'\n}\n\nexport type Props = ModalProps & {\n  address?: string\n  metadata: CreateSingleItemModalMetadata\n  error: string | null\n  isLoading: boolean\n  collection: Collection | null\n  onSave: typeof saveItemRequest\n}\n\nexport type StateData = {\n  id: string\n  name: string\n  description: string\n  type: ItemType\n  category: string\n  rarity: ItemRarity\n  bodyShape: BodyShapeType\n  thumbnail: string\n  model: string\n  metrics: ModelMetrics\n  contents: Record<string, Blob>\n  isRepresentation: boolean\n  item: Item\n  collectionId: string\n  isLoading: boolean\n  error: string\n}\nexport type State = { view: CreateItemView } & Partial<StateData>\n\nexport type CreateSingleItemModalMetadata = {\n  collectionId?: string\n  item?: Item\n  addRepresentation?: boolean\n  changeItemFile?: boolean\n}\n\nexport type ItemAssetJson = Pick<State, 'name' | 'description' | 'category' | 'rarity' | 'thumbnail' | 'model' | 'bodyShape'>\n\nexport type SortedContent = { male: Record<string, Blob>; female: Record<string, Blob>; all: Record<string, Blob> }\n\nexport type OwnProps = Pick<Props, 'metadata' | 'name' | 'onClose'>\nexport type MapStateProps = Pick<Props, 'address' | 'error' | 'isLoading' | 'collection'>\nexport type MapDispatchProps = Pick<Props, 'onSave'>\nexport type MapDispatch = Dispatch<SaveItemRequestAction>\n"]},"metadata":{},"sourceType":"module"}