{"ast":null,"code":"export var collectionTarget = {\n  drop: function drop(props, monitor) {\n    var _monitor$getItem = monitor.getItem(),\n        item = _monitor$getItem.item;\n\n    props.onSetCollection(item, props.collection.id);\n  },\n  canDrop: function canDrop(props) {\n    return !props.collection.isPublished;\n  }\n}; // @ts-ignore\n\nexport var collect = function collect(connect, monitor, props) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    canDrop: monitor.canDrop(),\n    isOver: monitor.isOver()\n  };\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ItemEditorPage/LeftPanel/Collections/SidebarCollection/SidebarCollection.dnd.ts"],"names":["collectionTarget","drop","props","monitor","getItem","item","onSetCollection","collection","id","canDrop","isPublished","collect","connect","connectDropTarget","dropTarget","isOver"],"mappings":"AAUA,OAAO,IAAMA,gBAAuC,GAAG;AACrDC,EAAAA,IADqD,gBAChDC,KADgD,EACzCC,OADyC,EAChC;AAAA,2BACqBA,OAAO,CAACC,OAAR,EADrB;AAAA,QACXC,IADW,oBACXA,IADW;;AAEnBH,IAAAA,KAAK,CAACI,eAAN,CAAsBD,IAAtB,EAA4BH,KAAK,CAACK,UAAN,CAAiBC,EAA7C;AACD,GAJoD;AAKrDC,EAAAA,OALqD,mBAK7CP,KAL6C,EAKtC;AACb,WAAO,CAACA,KAAK,CAACK,UAAN,CAAiBG,WAAzB;AACD;AAPoD,CAAhD,C,CAUP;;AACA,OAAO,IAAMC,OAA4C,GAAG,SAA/CA,OAA+C,CAACC,OAAD,EAAUT,OAAV,EAAmBD,KAAnB,EAAoC;AAC9F,SAAO;AACLW,IAAAA,iBAAiB,EAAED,OAAO,CAACE,UAAR,EADd;AAELL,IAAAA,OAAO,EAAEN,OAAO,CAACM,OAAR,EAFJ;AAGLM,IAAAA,MAAM,EAAEZ,OAAO,CAACY,MAAR;AAHH,GAAP;AAKD,CANM","sourcesContent":["import { SidebarItemDragObject } from '../../Items/SidebarItem/SidebarItem.dnd'\nimport { ConnectDropTarget, DropTargetSpec } from 'react-dnd'\nimport { Props } from './SidebarCollection.types'\n\nexport type CollectedProps = {\n  connectDropTarget: ConnectDropTarget\n  canDrop: boolean\n  isOver: boolean\n}\n\nexport const collectionTarget: DropTargetSpec<Props> = {\n  drop(props, monitor) {\n    const { item }: SidebarItemDragObject = monitor.getItem()\n    props.onSetCollection(item, props.collection.id)\n  },\n  canDrop(props) {\n    return !props.collection.isPublished\n  }\n}\n\n// @ts-ignore\nexport const collect: DropTargetCollector<CollectedProps> = (connect, monitor, props: Props) => {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    canDrop: monitor.canDrop(),\n    isOver: monitor.isOver()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}