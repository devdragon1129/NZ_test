{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getAddress, isConnected } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { getItem, getError as getItemError, isDownloading } from 'modules/item/selectors';\nimport { deleteItemRequest, downloadItemRequest, saveItemRequest, setCollection } from 'modules/item/actions';\nimport { openModal } from 'modules/modal/actions';\nimport { isOwner } from 'modules/item/utils';\nimport { getSelectedItemId } from 'modules/location/selectors';\nimport { getCollection, hasViewAndEditRights } from 'modules/collection/selectors';\nimport { isWalletCommitteeMember } from 'modules/committee/selectors';\nimport RightPanel from './RightPanel';\n\nvar mapState = function mapState(state) {\n  var selectedItemId = getSelectedItemId(state) || '';\n  var selectedItem = getItem(state, selectedItemId);\n  var address = getAddress(state) || '';\n  var collection = selectedItemId && selectedItem && selectedItem.collectionId ? getCollection(state, selectedItem.collectionId) : null;\n  return {\n    address: address,\n    collection: collection,\n    selectedItem: selectedItem,\n    selectedItemId: selectedItemId,\n    canEditSelectedItem: selectedItem ? collection ? hasViewAndEditRights(state, address, collection) : isOwner(selectedItem, address) : false,\n    error: getItemError(state),\n    isConnected: isConnected(state),\n    isDownloading: isDownloading(state),\n    isCommitteeMember: isWalletCommitteeMember(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSaveItem: function onSaveItem(item, contents) {\n      return dispatch(saveItemRequest(item, contents));\n    },\n    onDeleteItem: function onDeleteItem(item) {\n      return dispatch(deleteItemRequest(item));\n    },\n    onOpenModal: function onOpenModal(name, metadata) {\n      return dispatch(openModal(name, metadata));\n    },\n    onSetCollection: function onSetCollection(item, collectionId) {\n      return dispatch(setCollection(item, collectionId));\n    },\n    onDownload: function onDownload(itemId) {\n      return dispatch(downloadItemRequest(itemId));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(RightPanel);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ItemEditorPage/RightPanel/RightPanel.container.ts"],"names":["connect","getAddress","isConnected","getItem","getError","getItemError","isDownloading","deleteItemRequest","downloadItemRequest","saveItemRequest","setCollection","openModal","isOwner","getSelectedItemId","getCollection","hasViewAndEditRights","isWalletCommitteeMember","RightPanel","mapState","state","selectedItemId","selectedItem","address","collection","collectionId","canEditSelectedItem","error","isCommitteeMember","mapDispatch","dispatch","onSaveItem","item","contents","onDeleteItem","onOpenModal","name","metadata","onSetCollection","onDownload","itemId"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kDAAxC;AAEA,SAASC,OAAT,EAAkBC,QAAQ,IAAIC,YAA9B,EAA4CC,aAA5C,QAAiE,wBAAjE;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,EAAiDC,eAAjD,EAAkEC,aAAlE,QAAuF,sBAAvF;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,aAAT,EAAwBC,oBAAxB,QAAoD,8BAApD;AACA,SAASC,uBAAT,QAAwC,6BAAxC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAqC;AACpD,MAAMC,cAAc,GAAGP,iBAAiB,CAACM,KAAD,CAAjB,IAA4B,EAAnD;AACA,MAAME,YAAY,GAAGlB,OAAO,CAACgB,KAAD,EAAQC,cAAR,CAA5B;AACA,MAAME,OAAO,GAAGrB,UAAU,CAACkB,KAAD,CAAV,IAAqB,EAArC;AACA,MAAMI,UAAU,GAAGH,cAAc,IAAIC,YAAlB,IAAkCA,YAAY,CAACG,YAA/C,GAA8DV,aAAa,CAACK,KAAD,EAAQE,YAAY,CAACG,YAArB,CAA3E,GAAgH,IAAnI;AACA,SAAO;AACLF,IAAAA,OAAO,EAAPA,OADK;AAELC,IAAAA,UAAU,EAAVA,UAFK;AAGLF,IAAAA,YAAY,EAAZA,YAHK;AAILD,IAAAA,cAAc,EAAdA,cAJK;AAKLK,IAAAA,mBAAmB,EAAEJ,YAAY,GAC7BE,UAAU,GACRR,oBAAoB,CAACI,KAAD,EAAQG,OAAR,EAAiBC,UAAjB,CADZ,GAERX,OAAO,CAACS,YAAD,EAAeC,OAAf,CAHoB,GAI7B,KATC;AAULI,IAAAA,KAAK,EAAErB,YAAY,CAACc,KAAD,CAVd;AAWLjB,IAAAA,WAAW,EAAEA,WAAW,CAACiB,KAAD,CAXnB;AAYLb,IAAAA,aAAa,EAAEA,aAAa,CAACa,KAAD,CAZvB;AAaLQ,IAAAA,iBAAiB,EAAEX,uBAAuB,CAACG,KAAD;AAbrC,GAAP;AAeD,CApBD;;AAsBA,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,UAAU,EAAE,oBAACC,IAAD,EAAOC,QAAP;AAAA,aAAoBH,QAAQ,CAACpB,eAAe,CAACsB,IAAD,EAAOC,QAAP,CAAhB,CAA5B;AAAA,KADoD;AAEhEC,IAAAA,YAAY,EAAE,sBAAAF,IAAI;AAAA,aAAIF,QAAQ,CAACtB,iBAAiB,CAACwB,IAAD,CAAlB,CAAZ;AAAA,KAF8C;AAGhEG,IAAAA,WAAW,EAAE,qBAACC,IAAD,EAAOC,QAAP;AAAA,aAAoBP,QAAQ,CAAClB,SAAS,CAACwB,IAAD,EAAOC,QAAP,CAAV,CAA5B;AAAA,KAHmD;AAIhEC,IAAAA,eAAe,EAAE,yBAACN,IAAD,EAAOP,YAAP;AAAA,aAAwBK,QAAQ,CAACnB,aAAa,CAACqB,IAAD,EAAOP,YAAP,CAAd,CAAhC;AAAA,KAJ+C;AAKhEc,IAAAA,UAAU,EAAE,oBAAAC,MAAM;AAAA,aAAIV,QAAQ,CAACrB,mBAAmB,CAAC+B,MAAD,CAApB,CAAZ;AAAA;AAL8C,GAA9C;AAAA,CAApB;;AAQA,eAAevC,OAAO,CAACkB,QAAD,EAAWU,WAAX,CAAP,CAA+BX,UAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { getAddress, isConnected } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { RootState } from 'modules/common/types'\nimport { getItem, getError as getItemError, isDownloading } from 'modules/item/selectors'\nimport { deleteItemRequest, downloadItemRequest, saveItemRequest, setCollection } from 'modules/item/actions'\nimport { openModal } from 'modules/modal/actions'\nimport { isOwner } from 'modules/item/utils'\nimport { getSelectedItemId } from 'modules/location/selectors'\nimport { getCollection, hasViewAndEditRights } from 'modules/collection/selectors'\nimport { isWalletCommitteeMember } from 'modules/committee/selectors'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './RightPanel.types'\nimport RightPanel from './RightPanel'\n\nconst mapState = (state: RootState): MapStateProps => {\n  const selectedItemId = getSelectedItemId(state) || ''\n  const selectedItem = getItem(state, selectedItemId)\n  const address = getAddress(state) || ''\n  const collection = selectedItemId && selectedItem && selectedItem.collectionId ? getCollection(state, selectedItem.collectionId) : null\n  return {\n    address,\n    collection,\n    selectedItem,\n    selectedItemId,\n    canEditSelectedItem: selectedItem\n      ? collection\n        ? hasViewAndEditRights(state, address, collection)\n        : isOwner(selectedItem, address)\n      : false,\n    error: getItemError(state),\n    isConnected: isConnected(state),\n    isDownloading: isDownloading(state),\n    isCommitteeMember: isWalletCommitteeMember(state)\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSaveItem: (item, contents) => dispatch(saveItemRequest(item, contents)),\n  onDeleteItem: item => dispatch(deleteItemRequest(item)),\n  onOpenModal: (name, metadata) => dispatch(openModal(name, metadata)),\n  onSetCollection: (item, collectionId) => dispatch(setCollection(item, collectionId)),\n  onDownload: itemId => dispatch(downloadItemRequest(itemId))\n})\n\nexport default connect(mapState, mapDispatch)(RightPanel)\n"]},"metadata":{},"sourceType":"module"}