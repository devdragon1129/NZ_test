{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(collectionCurationSaga);\n\nimport { call, select, takeEvery } from '@redux-saga/core/effects';\nimport { ToastType } from 'decentraland-ui';\nimport { closeModal } from 'decentraland-dapps/dist/modules/modal/actions';\nimport { showToast } from 'decentraland-dapps/dist/modules/toast/actions';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { CONNECT_WALLET_SUCCESS } from 'decentraland-dapps/dist/modules/wallet/actions';\nimport { getCollection } from 'modules/collection/selectors';\nimport { put } from 'redux-saga-test-plan/matchers';\nimport { CurationStatus } from '../types';\nimport { approveCollectionCurationFailure, approveCollectionCurationSuccess, APPROVE_COLLECTION_CURATION_REQUEST, fetchCollectionCurationFailure, fetchCollectionCurationRequest, fetchCollectionCurationsFailure, fetchCollectionCurationsRequest, fetchCollectionCurationsSuccess, fetchCollectionCurationSuccess, FETCH_COLLECTION_CURATIONS_REQUEST, FETCH_COLLECTION_CURATION_REQUEST, pushCollectionCurationFailure, pushCollectionCurationSuccess, PUSH_COLLECTION_CURATION_REQUEST, rejectCollectionCurationFailure, rejectCollectionCurationSuccess, REJECT_COLLECTION_CURATION_REQUEST, setCollectionCurationAssigneeFailure, setCollectionCurationAssigneeSuccess, SET_COLLECTION_CURATION_ASSIGNEE_REQUEST } from './actions';\nimport { getSuccessfulAssignmentToastBody } from './toasts';\nexport function collectionCurationSaga(builder) {\n  var _marked, _marked2, _marked3, _marked4, _marked5, _marked6, _marked7, handleFetchCurationsRequest, handleFetchCurationRequest, handlePushCurationRequest, handleApproveCurationRequest, handleRejectCurationRequest, handleConnectWalletSuccess, handleSetCurationCuratorAssigneeRequest;\n\n  return _regeneratorRuntime.wrap(function collectionCurationSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          handleSetCurationCuratorAssigneeRequest = function _handleSetCurationCur(action) {\n            var _action$payload, collectionId, assignee, curation, collection, address, updatedCuration;\n\n            return _regeneratorRuntime.wrap(function handleSetCurationCuratorAssigneeRequest$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _action$payload = action.payload, collectionId = _action$payload.collectionId, assignee = _action$payload.assignee, curation = _action$payload.curation;\n                    _context7.next = 3;\n                    return select(getCollection, collectionId);\n\n                  case 3:\n                    collection = _context7.sent;\n                    _context7.next = 6;\n                    return select(getAddress);\n\n                  case 6:\n                    address = _context7.sent;\n                    _context7.prev = 7;\n\n                    if (curation) {\n                      _context7.next = 14;\n                      break;\n                    }\n\n                    _context7.next = 11;\n                    return call([builder, builder.pushCuration], collectionId, assignee);\n\n                  case 11:\n                    updatedCuration = _context7.sent;\n                    _context7.next = 17;\n                    break;\n\n                  case 14:\n                    _context7.next = 16;\n                    return call([builder, builder.updateCuration], collectionId, {\n                      assignee: assignee\n                    });\n\n                  case 16:\n                    updatedCuration = _context7.sent;\n\n                  case 17:\n                    _context7.next = 19;\n                    return put(setCollectionCurationAssigneeSuccess(collectionId, updatedCuration));\n\n                  case 19:\n                    _context7.next = 21;\n                    return put(showToast({\n                      type: ToastType.INFO,\n                      title: assignee ? t('curation_page.assign_success_title') : t('curation_page.unassign_success_title'),\n                      body: getSuccessfulAssignmentToastBody(assignee, address, collection.name),\n                      timeout: 6000,\n                      closable: true\n                    }));\n\n                  case 21:\n                    _context7.next = 29;\n                    break;\n\n                  case 23:\n                    _context7.prev = 23;\n                    _context7.t0 = _context7[\"catch\"](7);\n                    _context7.next = 27;\n                    return put(showToast({\n                      type: ToastType.ERROR,\n                      title: t('curation_page.error_message_title'),\n                      body: t('curation_page.error_message_body'),\n                      timeout: 6000,\n                      closable: true\n                    }));\n\n                  case 27:\n                    _context7.next = 29;\n                    return put(setCollectionCurationAssigneeFailure(collectionId, _context7.t0.message));\n\n                  case 29:\n                    _context7.prev = 29;\n                    _context7.next = 32;\n                    return put(closeModal('EditCurationAssigneeModal'));\n\n                  case 32:\n                    return _context7.finish(29);\n\n                  case 33:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _marked7, null, [[7, 23, 29, 33]]);\n          };\n\n          handleConnectWalletSuccess = function _handleConnectWalletS() {\n            return _regeneratorRuntime.wrap(function handleConnectWalletSuccess$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return put(fetchCollectionCurationsRequest());\n\n                  case 2:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _marked6);\n          };\n\n          handleRejectCurationRequest = function _handleRejectCuration(action) {\n            var collectionId;\n            return _regeneratorRuntime.wrap(function handleRejectCurationRequest$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    collectionId = action.payload.collectionId;\n                    _context5.prev = 1;\n                    _context5.next = 4;\n                    return call([builder, 'updateCurationStatus'], collectionId, CurationStatus.REJECTED);\n\n                  case 4:\n                    _context5.next = 6;\n                    return put(rejectCollectionCurationSuccess(collectionId));\n\n                  case 6:\n                    _context5.next = 12;\n                    break;\n\n                  case 8:\n                    _context5.prev = 8;\n                    _context5.t0 = _context5[\"catch\"](1);\n                    _context5.next = 12;\n                    return put(rejectCollectionCurationFailure(collectionId, _context5.t0.message));\n\n                  case 12:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _marked5, null, [[1, 8]]);\n          };\n\n          handleApproveCurationRequest = function _handleApproveCuratio(action) {\n            var collectionId;\n            return _regeneratorRuntime.wrap(function handleApproveCurationRequest$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    collectionId = action.payload.collectionId;\n                    _context4.prev = 1;\n                    _context4.next = 4;\n                    return call([builder, 'updateCurationStatus'], collectionId, CurationStatus.APPROVED);\n\n                  case 4:\n                    _context4.next = 6;\n                    return put(approveCollectionCurationSuccess(collectionId));\n\n                  case 6:\n                    _context4.next = 12;\n                    break;\n\n                  case 8:\n                    _context4.prev = 8;\n                    _context4.t0 = _context4[\"catch\"](1);\n                    _context4.next = 12;\n                    return put(approveCollectionCurationFailure(collectionId, _context4.t0.message));\n\n                  case 12:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _marked4, null, [[1, 8]]);\n          };\n\n          handlePushCurationRequest = function _handlePushCurationRe(action) {\n            var collectionId;\n            return _regeneratorRuntime.wrap(function handlePushCurationRequest$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    collectionId = action.payload.collectionId;\n                    _context3.prev = 1;\n                    _context3.next = 4;\n                    return call([builder, builder.pushCuration], collectionId);\n\n                  case 4:\n                    _context3.next = 6;\n                    return put(pushCollectionCurationSuccess());\n\n                  case 6:\n                    _context3.next = 8;\n                    return put(fetchCollectionCurationRequest(collectionId));\n\n                  case 8:\n                    _context3.next = 14;\n                    break;\n\n                  case 10:\n                    _context3.prev = 10;\n                    _context3.t0 = _context3[\"catch\"](1);\n                    _context3.next = 14;\n                    return put(pushCollectionCurationFailure(_context3.t0.message));\n\n                  case 14:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _marked3, null, [[1, 10]]);\n          };\n\n          handleFetchCurationRequest = function _handleFetchCurationR(action) {\n            var collectionId, curation;\n            return _regeneratorRuntime.wrap(function handleFetchCurationRequest$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    collectionId = action.payload.collectionId;\n                    _context2.next = 4;\n                    return call([builder, builder.fetchCuration], collectionId);\n\n                  case 4:\n                    curation = _context2.sent;\n                    _context2.next = 7;\n                    return put(fetchCollectionCurationSuccess(collectionId, curation));\n\n                  case 7:\n                    _context2.next = 13;\n                    break;\n\n                  case 9:\n                    _context2.prev = 9;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    _context2.next = 13;\n                    return put(fetchCollectionCurationFailure(_context2.t0.message));\n\n                  case 13:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _marked2, null, [[0, 9]]);\n          };\n\n          handleFetchCurationsRequest = function _handleFetchCurations() {\n            var curations;\n            return _regeneratorRuntime.wrap(function handleFetchCurationsRequest$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return call([builder, builder.fetchCurations]);\n\n                  case 3:\n                    curations = _context.sent;\n                    _context.next = 6;\n                    return put(fetchCollectionCurationsSuccess(curations));\n\n                  case 6:\n                    _context.next = 12;\n                    break;\n\n                  case 8:\n                    _context.prev = 8;\n                    _context.t0 = _context[\"catch\"](0);\n                    _context.next = 12;\n                    return put(fetchCollectionCurationsFailure(_context.t0.message));\n\n                  case 12:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _marked, null, [[0, 8]]);\n          };\n\n          _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleFetchCurationsRequest), _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleFetchCurationRequest), _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handlePushCurationRequest), _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleApproveCurationRequest), _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleRejectCurationRequest), _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(handleConnectWalletSuccess), _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(handleSetCurationCuratorAssigneeRequest);\n          _context8.next = 10;\n          return takeEvery(FETCH_COLLECTION_CURATIONS_REQUEST, handleFetchCurationsRequest);\n\n        case 10:\n          _context8.next = 12;\n          return takeEvery(PUSH_COLLECTION_CURATION_REQUEST, handlePushCurationRequest);\n\n        case 12:\n          _context8.next = 14;\n          return takeEvery(FETCH_COLLECTION_CURATION_REQUEST, handleFetchCurationRequest);\n\n        case 14:\n          _context8.next = 16;\n          return takeEvery(APPROVE_COLLECTION_CURATION_REQUEST, handleApproveCurationRequest);\n\n        case 16:\n          _context8.next = 18;\n          return takeEvery(REJECT_COLLECTION_CURATION_REQUEST, handleRejectCurationRequest);\n\n        case 18:\n          _context8.next = 20;\n          return takeEvery(CONNECT_WALLET_SUCCESS, handleConnectWalletSuccess);\n\n        case 20:\n          _context8.next = 22;\n          return takeEvery(SET_COLLECTION_CURATION_ASSIGNEE_REQUEST, handleSetCurationCuratorAssigneeRequest);\n\n        case 22:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/curations/collectionCuration/sagas.ts"],"names":["collectionCurationSaga","call","select","takeEvery","ToastType","closeModal","showToast","getAddress","t","CONNECT_WALLET_SUCCESS","getCollection","put","CurationStatus","approveCollectionCurationFailure","approveCollectionCurationSuccess","APPROVE_COLLECTION_CURATION_REQUEST","fetchCollectionCurationFailure","fetchCollectionCurationRequest","fetchCollectionCurationsFailure","fetchCollectionCurationsRequest","fetchCollectionCurationsSuccess","fetchCollectionCurationSuccess","FETCH_COLLECTION_CURATIONS_REQUEST","FETCH_COLLECTION_CURATION_REQUEST","pushCollectionCurationFailure","pushCollectionCurationSuccess","PUSH_COLLECTION_CURATION_REQUEST","rejectCollectionCurationFailure","rejectCollectionCurationSuccess","REJECT_COLLECTION_CURATION_REQUEST","setCollectionCurationAssigneeFailure","setCollectionCurationAssigneeSuccess","SET_COLLECTION_CURATION_ASSIGNEE_REQUEST","getSuccessfulAssignmentToastBody","builder","handleFetchCurationsRequest","handleFetchCurationRequest","handlePushCurationRequest","handleApproveCurationRequest","handleRejectCurationRequest","handleConnectWalletSuccess","handleSetCurationCuratorAssigneeRequest","action","payload","collectionId","assignee","curation","collection","address","pushCuration","updatedCuration","updateCuration","type","INFO","title","body","name","timeout","closable","ERROR","message","REJECTED","APPROVED","fetchCuration","fetchCurations","curations"],"mappings":"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","sourcesContent":["import { call, select, takeEvery } from '@redux-saga/core/effects'\nimport { ToastType } from 'decentraland-ui'\nimport { closeModal } from 'decentraland-dapps/dist/modules/modal/actions'\nimport { showToast } from 'decentraland-dapps/dist/modules/toast/actions'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { CONNECT_WALLET_SUCCESS } from 'decentraland-dapps/dist/modules/wallet/actions'\nimport { BuilderAPI } from 'lib/api/builder'\nimport { getCollection } from 'modules/collection/selectors'\nimport { Collection } from 'modules/collection/types'\nimport { put } from 'redux-saga-test-plan/matchers'\nimport { CurationStatus } from '../types'\nimport {\n  approveCollectionCurationFailure,\n  ApproveCollectionCurationRequestAction,\n  approveCollectionCurationSuccess,\n  APPROVE_COLLECTION_CURATION_REQUEST,\n  fetchCollectionCurationFailure,\n  fetchCollectionCurationRequest,\n  FetchCollectionCurationRequestAction,\n  fetchCollectionCurationsFailure,\n  fetchCollectionCurationsRequest,\n  fetchCollectionCurationsSuccess,\n  fetchCollectionCurationSuccess,\n  FETCH_COLLECTION_CURATIONS_REQUEST,\n  FETCH_COLLECTION_CURATION_REQUEST,\n  pushCollectionCurationFailure,\n  PushCollectionCurationRequestAction,\n  pushCollectionCurationSuccess,\n  PUSH_COLLECTION_CURATION_REQUEST,\n  rejectCollectionCurationFailure,\n  RejectCollectionCurationRequestAction,\n  rejectCollectionCurationSuccess,\n  REJECT_COLLECTION_CURATION_REQUEST,\n  setCollectionCurationAssigneeFailure,\n  SetCollectionCurationAssigneeRequestAction,\n  setCollectionCurationAssigneeSuccess,\n  SET_COLLECTION_CURATION_ASSIGNEE_REQUEST\n} from './actions'\nimport { getSuccessfulAssignmentToastBody } from './toasts'\nimport { CollectionCuration } from './types'\n\nexport function* collectionCurationSaga(builder: BuilderAPI) {\n  yield takeEvery(FETCH_COLLECTION_CURATIONS_REQUEST, handleFetchCurationsRequest)\n  yield takeEvery(PUSH_COLLECTION_CURATION_REQUEST, handlePushCurationRequest)\n  yield takeEvery(FETCH_COLLECTION_CURATION_REQUEST, handleFetchCurationRequest)\n  yield takeEvery(APPROVE_COLLECTION_CURATION_REQUEST, handleApproveCurationRequest)\n  yield takeEvery(REJECT_COLLECTION_CURATION_REQUEST, handleRejectCurationRequest)\n  yield takeEvery(CONNECT_WALLET_SUCCESS, handleConnectWalletSuccess)\n  yield takeEvery(SET_COLLECTION_CURATION_ASSIGNEE_REQUEST, handleSetCurationCuratorAssigneeRequest)\n\n  function* handleFetchCurationsRequest() {\n    try {\n      const curations: CollectionCuration[] = yield call([builder, builder.fetchCurations])\n      yield put(fetchCollectionCurationsSuccess(curations))\n    } catch (error) {\n      yield put(fetchCollectionCurationsFailure(error.message))\n    }\n  }\n\n  function* handleFetchCurationRequest(action: FetchCollectionCurationRequestAction) {\n    try {\n      const { collectionId } = action.payload\n      const curation: CollectionCuration | undefined = yield call([builder, builder.fetchCuration], collectionId)\n      yield put(fetchCollectionCurationSuccess(collectionId, curation))\n    } catch (error) {\n      yield put(fetchCollectionCurationFailure(error.message))\n    }\n  }\n\n  function* handlePushCurationRequest(action: PushCollectionCurationRequestAction) {\n    const { collectionId } = action.payload\n\n    try {\n      yield call([builder, builder.pushCuration], collectionId)\n      yield put(pushCollectionCurationSuccess())\n      yield put(fetchCollectionCurationRequest(collectionId))\n    } catch (error) {\n      yield put(pushCollectionCurationFailure(error.message))\n    }\n  }\n\n  function* handleApproveCurationRequest(action: ApproveCollectionCurationRequestAction) {\n    const { collectionId } = action.payload\n    try {\n      yield call([builder, 'updateCurationStatus'], collectionId, CurationStatus.APPROVED)\n      yield put(approveCollectionCurationSuccess(collectionId))\n    } catch (error) {\n      yield put(approveCollectionCurationFailure(collectionId, error.message))\n    }\n  }\n\n  function* handleRejectCurationRequest(action: RejectCollectionCurationRequestAction) {\n    const { collectionId } = action.payload\n    try {\n      yield call([builder, 'updateCurationStatus'], collectionId, CurationStatus.REJECTED)\n      yield put(rejectCollectionCurationSuccess(collectionId))\n    } catch (error) {\n      yield put(rejectCollectionCurationFailure(collectionId, error.message))\n    }\n  }\n\n  function* handleConnectWalletSuccess() {\n    yield put(fetchCollectionCurationsRequest())\n  }\n\n  function* handleSetCurationCuratorAssigneeRequest(action: SetCollectionCurationAssigneeRequestAction) {\n    const { collectionId, assignee, curation } = action.payload\n    const collection: Collection = yield select(getCollection, collectionId)\n    const address: string | undefined = yield select(getAddress)\n    try {\n      let updatedCuration: CollectionCuration\n      if (!curation) {\n        updatedCuration = yield call([builder, builder.pushCuration], collectionId, assignee)\n      } else {\n        updatedCuration = yield call([builder, builder.updateCuration], collectionId, { assignee })\n      }\n      yield put(setCollectionCurationAssigneeSuccess(collectionId, updatedCuration))\n      yield put(\n        showToast({\n          type: ToastType.INFO,\n          title: assignee ? t('curation_page.assign_success_title') : t('curation_page.unassign_success_title'),\n          body: getSuccessfulAssignmentToastBody(assignee, address, collection.name),\n          timeout: 6000,\n          closable: true\n        })\n      )\n    } catch (error) {\n      yield put(\n        showToast({\n          type: ToastType.ERROR,\n          title: t('curation_page.error_message_title'),\n          body: t('curation_page.error_message_body'),\n          timeout: 6000,\n          closable: true\n        })\n      )\n      yield put(setCollectionCurationAssigneeFailure(collectionId, error.message))\n    } finally {\n      yield put(closeModal('EditCurationAssigneeModal'))\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}