{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Item = exports.ItemSortBy = void 0;\n\nvar validation_1 = require(\"../validation\");\n\nvar chain_id_1 = require(\"./chain-id\");\n\nvar network_1 = require(\"./network\");\n\nvar nft_1 = require(\"./nft\");\n\nvar nft_category_1 = require(\"./nft-category\");\n\nvar ItemSortBy;\n\n(function (ItemSortBy) {\n  ItemSortBy[\"NAME\"] = \"name\";\n  ItemSortBy[\"NEWEST\"] = \"newest\";\n  ItemSortBy[\"RECENTLY_REVIEWED\"] = \"recently_reviewed\";\n  ItemSortBy[\"RECENTLY_SOLD\"] = \"recently_sold\";\n  ItemSortBy[\"CHEAPEST\"] = \"cheapest\";\n})(ItemSortBy = exports.ItemSortBy || (exports.ItemSortBy = {}));\n\nvar Item;\n\n(function (Item) {\n  Item.schema = {\n    type: 'object',\n    properties: {\n      id: {\n        type: 'string'\n      },\n      name: {\n        type: 'string'\n      },\n      thumbnail: {\n        type: 'string'\n      },\n      url: {\n        type: 'string'\n      },\n      category: nft_category_1.NFTCategory.schema,\n      contractAddress: {\n        type: 'string'\n      },\n      itemId: {\n        type: 'string'\n      },\n      rarity: {\n        type: 'string'\n      },\n      price: {\n        type: 'string'\n      },\n      available: {\n        type: 'integer'\n      },\n      isOnSale: {\n        type: 'boolean'\n      },\n      creator: {\n        type: 'string'\n      },\n      beneficiary: {\n        type: 'string',\n        nullable: true\n      },\n      data: nft_1.NFT.schema.properties.data,\n      network: network_1.Network.schema,\n      chainId: chain_id_1.ChainId.schema,\n      createdAt: {\n        type: 'integer'\n      },\n      updatedAt: {\n        type: 'integer'\n      },\n      reviewedAt: {\n        type: 'integer'\n      },\n      soldAt: {\n        type: 'integer'\n      }\n    },\n    required: ['id', 'name', 'thumbnail', 'url', 'category', 'contractAddress', 'itemId', 'rarity', 'price', 'available', 'isOnSale', 'creator', 'data', 'network', 'chainId', 'createdAt', 'updatedAt', 'soldAt']\n  };\n  Item.validate = (0, validation_1.generateValidator)(Item.schema);\n})(Item = exports.Item || (exports.Item = {}));","map":null,"metadata":{},"sourceType":"script"}