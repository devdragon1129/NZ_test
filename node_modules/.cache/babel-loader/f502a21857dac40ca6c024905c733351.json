{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/ApprovalFlowModal/ApprovalFlowModal.tsx\";\nimport * as React from 'react';\nimport { Modal } from 'decentraland-dapps/dist/containers';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { Button, Center, Loader, Message, ModalActions, ModalContent, ModalNavigation, Table } from 'decentraland-ui';\nimport ItemImage from 'components/ItemImage';\nimport { formatBytes } from 'lib/number';\nimport { extractThirdPartyId } from 'lib/urn';\nimport { MAX_ITEMS, MAX_TP_ITEMS } from 'modules/collection/constants';\nimport { getBodyShapes, toBodyShapeType } from 'modules/item/utils';\nimport { ApprovalFlowModalView } from './ApprovalFlowModal.types';\nimport './ApprovalFlowModal.css';\n\nvar ApprovalFlowModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ApprovalFlowModal, _React$PureComponent);\n\n  function ApprovalFlowModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ApprovalFlowModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ApprovalFlowModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      didRescue: false,\n      didApproveConsumeSlots: false\n    };\n\n    _this.handleConfirm = function () {\n      var _this$props = _this.props,\n          metadata = _this$props.metadata,\n          onRescueItems = _this$props.onRescueItems;\n      var _ref = metadata,\n          collection = _ref.collection,\n          items = _ref.items,\n          contentHashes = _ref.contentHashes;\n\n      _this.setState({\n        didRescue: true\n      });\n\n      onRescueItems(collection, items, contentHashes);\n    };\n\n    _this.handleReviewThirdParty = function () {\n      var _this$props2 = _this.props,\n          metadata = _this$props2.metadata,\n          onReviewThirdParty = _this$props2.onReviewThirdParty;\n      var _ref2 = metadata,\n          collection = _ref2.collection,\n          merkleTreeRoot = _ref2.merkleTreeRoot,\n          slots = _ref2.slots;\n\n      _this.setState({\n        didApproveConsumeSlots: true\n      });\n\n      var thirdPartyId = extractThirdPartyId(collection.urn);\n      onReviewThirdParty(thirdPartyId, slots, merkleTreeRoot);\n    };\n\n    return _this;\n  }\n\n  _createClass(ApprovalFlowModal, [{\n    key: \"canCloseModal\",\n    value: function canCloseModal() {\n      var _this$props3 = this.props,\n          isConfirmingRescueTx = _this$props3.isConfirmingRescueTx,\n          isDeployingItems = _this$props3.isDeployingItems,\n          isConfirmingApproveTx = _this$props3.isConfirmingApproveTx,\n          isAwaitingApproveTx = _this$props3.isAwaitingApproveTx;\n      return !isConfirmingRescueTx && !isDeployingItems && !isConfirmingApproveTx && !isAwaitingApproveTx;\n    }\n  }, {\n    key: \"renderHash\",\n    value: function renderHash(hash) {\n      return hash.slice(0, 6) + '...' + hash.slice(-6);\n    }\n  }, {\n    key: \"renderLoadingView\",\n    value: function renderLoadingView() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('approval_flow.loading.title'),\n        subtitle: t('approval_flow.loading.subtitle'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ModalContent, {\n        className: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Center, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        active: true,\n        size: \"huge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }, {\n    key: \"renderRescueView\",\n    value: function renderRescueView() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          onClose = _this$props4.onClose,\n          metadata = _this$props4.metadata,\n          isConfirmingRescueTx = _this$props4.isConfirmingRescueTx;\n      var _ref3 = metadata,\n          items = _ref3.items,\n          contentHashes = _ref3.contentHashes;\n      var didRescue = this.state.didRescue;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('approval_flow.rescue.title'),\n        subtitle: t('approval_flow.rescue.subtitle'),\n        onClose: this.canCloseModal() ? onClose : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }), items.length > MAX_ITEMS ? /*#__PURE__*/React.createElement(Message, {\n        warning: true,\n        size: \"tiny\",\n        visible: true,\n        className: \"warning-rescue-message\",\n        content: t('approval_flow.rescue.items_exceed_limit.content'),\n        header: t('approval_flow.rescue.items_exceed_limit.title'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }) : null, /*#__PURE__*/React.createElement(ModalContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        basic: \"very\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, t('global.name')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, t('global.category')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, t('global.body_shape_plural')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        textAlign: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, t('global.hash')))), /*#__PURE__*/React.createElement(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, items.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(Table.Row, {\n          key: item.id,\n          className: \"item\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Table.Cell, {\n          className: \"name\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(ItemImage, {\n          item: item,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }\n        }), item.name), /*#__PURE__*/React.createElement(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }\n        }, t(\"\".concat(item.type, \".category.\").concat(item.data.category))), /*#__PURE__*/React.createElement(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }\n        }, getBodyShapes(item).map(function (bodyShape) {\n          return t(\"body_shapes.\".concat(toBodyShapeType(bodyShape)));\n        }).join(', ')), /*#__PURE__*/React.createElement(Table.Cell, {\n          textAlign: \"right\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }\n        }, _this2.renderHash(contentHashes[index])));\n      })))), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        disabled: didRescue || isConfirmingRescueTx,\n        loading: didRescue,\n        onClick: this.handleConfirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, t('approval_flow.rescue.confirm')), /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        onClick: onClose,\n        disabled: !this.canCloseModal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, t('global.cancel'))));\n    }\n  }, {\n    key: \"renderConsumeTPSlotsView\",\n    value: function renderConsumeTPSlotsView() {\n      var _this3 = this;\n\n      var _this$props5 = this.props,\n          onClose = _this$props5.onClose,\n          metadata = _this$props5.metadata,\n          isConfirmingReviewThirdPartyTx = _this$props5.isConfirmingReviewThirdPartyTx;\n      var _ref4 = metadata,\n          items = _ref4.items;\n      var didApproveConsumeSlots = this.state.didApproveConsumeSlots;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('approval_flow.consume_slots.title'),\n        subtitle: t('approval_flow.consume_slots.subtitle'),\n        onClose: this.canCloseModal() ? onClose : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ModalContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        basic: \"very\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, t('global.name')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, t('global.category')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, t('global.body_shape_plural')))), /*#__PURE__*/React.createElement(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, items.slice(0, MAX_TP_ITEMS).map(function (item) {\n        return /*#__PURE__*/React.createElement(Table.Row, {\n          key: item.id,\n          className: \"item\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Table.Cell, {\n          className: \"name\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(ItemImage, {\n          item: item,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }\n        }), item.name), /*#__PURE__*/React.createElement(Table.Cell, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }\n        }, t('wearable.category.' + item.data.category)), /*#__PURE__*/React.createElement(Table.Cell, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }\n        }, getBodyShapes(item).map(function (bodyShape) {\n          return t(\"body_shapes.\".concat(toBodyShapeType(bodyShape)));\n        }).join(', ')));\n      }))), items.length > MAX_TP_ITEMS ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, t('approval_flow.consume_slots.more_items', {\n        count: items.length - MAX_TP_ITEMS\n      })) : null), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        disabled: didApproveConsumeSlots || isConfirmingReviewThirdPartyTx,\n        loading: didApproveConsumeSlots,\n        onClick: this.handleReviewThirdParty,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, t('approval_flow.rescue.confirm')), /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        onClick: onClose,\n        disabled: !this.canCloseModal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, t('global.cancel'))));\n    }\n  }, {\n    key: \"renderDeployThirdPartyView\",\n    value: function renderDeployThirdPartyView() {\n      var _this4 = this;\n\n      var _this$props6 = this.props,\n          onClose = _this$props6.onClose,\n          metadata = _this$props6.metadata,\n          onDeployThirdPartyItems = _this$props6.onDeployThirdPartyItems,\n          isDeployingItems = _this$props6.isDeployingItems;\n      var _ref5 = metadata,\n          items = _ref5.items,\n          collection = _ref5.collection,\n          tree = _ref5.tree,\n          hashes = _ref5.hashes;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('approval_flow.upload.title'),\n        subtitle: t('approval_flow.upload.subtitle'),\n        onClose: this.canCloseModal() ? onClose : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ModalContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        basic: \"very\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, t('global.name')))), /*#__PURE__*/React.createElement(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, items.slice(0, MAX_TP_ITEMS).map(function (item) {\n        return /*#__PURE__*/React.createElement(Table.Row, {\n          key: item.id,\n          className: \"item\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Table.Cell, {\n          className: \"name\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(ItemImage, {\n          item: item,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }\n        }), item.name));\n      }))), items.length > MAX_TP_ITEMS ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }, t('approval_flow.consume_slots.more_items', {\n        count: items.length - MAX_TP_ITEMS\n      })) : null), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        disabled: isDeployingItems,\n        loading: isDeployingItems,\n        onClick: function onClick() {\n          return onDeployThirdPartyItems(items, collection, tree, hashes);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, t('approval_flow.upload.confirm')), /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        onClick: onClose,\n        disabled: !this.canCloseModal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }, t('global.cancel'))));\n    }\n  }, {\n    key: \"renderDeployView\",\n    value: function renderDeployView() {\n      var _this5 = this;\n\n      var _this$props7 = this.props,\n          onClose = _this$props7.onClose,\n          metadata = _this$props7.metadata,\n          onDeployItems = _this$props7.onDeployItems,\n          isDeployingItems = _this$props7.isDeployingItems;\n      var _ref6 = metadata,\n          items = _ref6.items,\n          entities = _ref6.entities;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('approval_flow.upload.title'),\n        subtitle: t('approval_flow.upload.subtitle'),\n        onClose: this.canCloseModal() ? onClose : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ModalContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        basic: \"very\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, t('global.name')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        textAlign: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, t('global.size')))), /*#__PURE__*/React.createElement(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, items.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(Table.Row, {\n          key: item.id,\n          className: \"item\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Table.Cell, {\n          className: \"name\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(ItemImage, {\n          item: item,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }\n        }), item.name), /*#__PURE__*/React.createElement(Table.Cell, {\n          textAlign: \"right\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 19\n          }\n        }, formatBytes(Array.from(entities[index].files.values()).reduce(function (size, file) {\n          return size + file.buffer.byteLength;\n        }, 0))));\n      })))), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        disabled: isDeployingItems,\n        loading: isDeployingItems,\n        onClick: function onClick() {\n          return onDeployItems(entities);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }\n      }, t('approval_flow.upload.confirm')), /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        onClick: onClose,\n        disabled: !this.canCloseModal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }\n      }, t('global.cancel'))));\n    }\n  }, {\n    key: \"renderApproveView\",\n    value: function renderApproveView() {\n      var _this$props8 = this.props,\n          onClose = _this$props8.onClose,\n          metadata = _this$props8.metadata,\n          onApproveCollection = _this$props8.onApproveCollection,\n          isConfirmingApproveTx = _this$props8.isConfirmingApproveTx,\n          isAwaitingApproveTx = _this$props8.isAwaitingApproveTx;\n      var _ref7 = metadata,\n          collection = _ref7.collection;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('approval_flow.approve.title'),\n        subtitle: t('approval_flow.approve.subtitle'),\n        onClose: this.canCloseModal() ? onClose : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        disabled: isConfirmingApproveTx || isAwaitingApproveTx,\n        loading: isAwaitingApproveTx,\n        onClick: function onClick() {\n          return onApproveCollection(collection);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }\n      }, t('approval_flow.approve.confirm')), /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        onClick: onClose,\n        disabled: !this.canCloseModal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }\n      }, t('global.cancel'))));\n    }\n  }, {\n    key: \"renderErrorView\",\n    value: function renderErrorView() {\n      var _this$props9 = this.props,\n          onClose = _this$props9.onClose,\n          metadata = _this$props9.metadata;\n      var _ref8 = metadata,\n          error = _ref8.error;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('approval_flow.error.title'),\n        subtitle: t('approval_flow.error.subtitle'),\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ModalContent, {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }\n      }, error), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        onClick: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }\n      }, t('global.close'))));\n    }\n  }, {\n    key: \"renderSuccessView\",\n    value: function renderSuccessView() {\n      var onClose = this.props.onClose;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('approval_flow.success.title'),\n        subtitle: t('approval_flow.success.subtitle'),\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        onClick: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }\n      }, t('global.close'))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props10 = this.props,\n          name = _this$props10.name,\n          onClose = _this$props10.onClose,\n          metadata = _this$props10.metadata;\n      var _ref9 = metadata,\n          view = _ref9.view;\n      var content;\n      var size = 'small';\n\n      switch (view) {\n        case ApprovalFlowModalView.LOADING:\n          content = this.renderLoadingView();\n          size = 'tiny';\n          break;\n\n        case ApprovalFlowModalView.RESCUE:\n          content = this.renderRescueView();\n          break;\n\n        case ApprovalFlowModalView.CONSUME_TP_SLOTS:\n          content = this.renderConsumeTPSlotsView();\n          break;\n\n        case ApprovalFlowModalView.DEPLOY:\n          content = this.renderDeployView();\n          break;\n\n        case ApprovalFlowModalView.DEPLOY_TP:\n          content = this.renderDeployThirdPartyView();\n          break;\n\n        case ApprovalFlowModalView.APPROVE:\n          content = this.renderApproveView();\n          size = 'tiny';\n          break;\n\n        case ApprovalFlowModalView.ERROR:\n          content = this.renderErrorView();\n          break;\n\n        case ApprovalFlowModalView.SUCCESS:\n          content = this.renderSuccessView();\n          size = 'tiny';\n          break;\n      }\n\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: name,\n        onClose: this.canCloseModal() ? onClose : undefined,\n        className: \"ApprovalFlowModal\",\n        size: size,\n        closeOnEscape: this.canCloseModal(),\n        closeOnDimmerClick: this.canCloseModal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 7\n        }\n      }, content);\n    }\n  }]);\n\n  return ApprovalFlowModal;\n}(React.PureComponent);\n\nexport { ApprovalFlowModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/ApprovalFlowModal/ApprovalFlowModal.tsx"],"names":["React","Modal","t","Button","Center","Loader","Message","ModalActions","ModalContent","ModalNavigation","Table","ItemImage","formatBytes","extractThirdPartyId","MAX_ITEMS","MAX_TP_ITEMS","getBodyShapes","toBodyShapeType","ApprovalFlowModalView","ApprovalFlowModal","state","didRescue","didApproveConsumeSlots","handleConfirm","props","metadata","onRescueItems","collection","items","contentHashes","setState","handleReviewThirdParty","onReviewThirdParty","merkleTreeRoot","slots","thirdPartyId","urn","isConfirmingRescueTx","isDeployingItems","isConfirmingApproveTx","isAwaitingApproveTx","hash","slice","onClose","canCloseModal","undefined","length","map","item","index","id","name","type","data","category","bodyShape","join","renderHash","isConfirmingReviewThirdPartyTx","count","onDeployThirdPartyItems","tree","hashes","onDeployItems","entities","Array","from","files","values","reduce","size","file","buffer","byteLength","onApproveCollection","error","view","content","LOADING","renderLoadingView","RESCUE","renderRescueView","CONSUME_TP_SLOTS","renderConsumeTPSlotsView","DEPLOY","renderDeployView","DEPLOY_TP","renderDeployThirdPartyView","APPROVE","renderApproveView","ERROR","renderErrorView","SUCCESS","renderSuccessView","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Modal } from 'decentraland-dapps/dist/containers'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { Button, Center, Loader, Message, ModalActions, ModalContent, ModalNavigation, Table } from 'decentraland-ui'\nimport ItemImage from 'components/ItemImage'\nimport { formatBytes } from 'lib/number'\nimport { extractThirdPartyId } from 'lib/urn'\nimport { MAX_ITEMS, MAX_TP_ITEMS } from 'modules/collection/constants'\nimport { getBodyShapes, toBodyShapeType } from 'modules/item/utils'\nimport { ApprovalFlowModalMetadata, ApprovalFlowModalView, Props, State } from './ApprovalFlowModal.types'\nimport './ApprovalFlowModal.css'\n\nexport default class ApprovalFlowModal extends React.PureComponent<Props> {\n  state: State = {\n    didRescue: false,\n    didApproveConsumeSlots: false\n  }\n\n  canCloseModal() {\n    const { isConfirmingRescueTx, isDeployingItems, isConfirmingApproveTx, isAwaitingApproveTx } = this.props\n    return !isConfirmingRescueTx && !isDeployingItems && !isConfirmingApproveTx && !isAwaitingApproveTx\n  }\n\n  handleConfirm = () => {\n    const { metadata, onRescueItems } = this.props\n    const { collection, items, contentHashes } = metadata as ApprovalFlowModalMetadata<ApprovalFlowModalView.RESCUE>\n    this.setState({ didRescue: true })\n    onRescueItems(collection, items, contentHashes)\n  }\n\n  handleReviewThirdParty = () => {\n    const { metadata, onReviewThirdParty } = this.props\n    const { collection, merkleTreeRoot, slots } = metadata as ApprovalFlowModalMetadata<ApprovalFlowModalView.CONSUME_TP_SLOTS>\n    this.setState({ didApproveConsumeSlots: true })\n    const thirdPartyId = extractThirdPartyId(collection.urn)\n    onReviewThirdParty(thirdPartyId, slots, merkleTreeRoot)\n  }\n\n  renderHash(hash: string) {\n    return hash.slice(0, 6) + '...' + hash.slice(-6)\n  }\n\n  renderLoadingView() {\n    return (\n      <>\n        <ModalNavigation title={t('approval_flow.loading.title')} subtitle={t('approval_flow.loading.subtitle')} />\n        <ModalContent className=\"loading\">\n          <Center>\n            <Loader active size=\"huge\" />\n          </Center>\n        </ModalContent>\n      </>\n    )\n  }\n\n  renderRescueView() {\n    const { onClose, metadata, isConfirmingRescueTx } = this.props\n    const { items, contentHashes } = metadata as ApprovalFlowModalMetadata<ApprovalFlowModalView.RESCUE>\n    const { didRescue } = this.state\n\n    return (\n      <>\n        <ModalNavigation\n          title={t('approval_flow.rescue.title')}\n          subtitle={t('approval_flow.rescue.subtitle')}\n          onClose={this.canCloseModal() ? onClose : undefined}\n        />\n        {items.length > MAX_ITEMS ? (\n          <Message\n            warning\n            size=\"tiny\"\n            visible\n            className=\"warning-rescue-message\"\n            content={t('approval_flow.rescue.items_exceed_limit.content')}\n            header={t('approval_flow.rescue.items_exceed_limit.title')}\n          />\n        ) : null}\n        <ModalContent>\n          <Table basic=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>{t('global.name')}</Table.HeaderCell>\n                <Table.HeaderCell>{t('global.category')}</Table.HeaderCell>\n                <Table.HeaderCell>{t('global.body_shape_plural')}</Table.HeaderCell>\n                <Table.HeaderCell textAlign=\"right\">{t('global.hash')}</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {items.map((item, index) => (\n                <Table.Row key={item.id} className=\"item\">\n                  <Table.Cell className=\"name\">\n                    <ItemImage item={item} />\n                    {item.name}\n                  </Table.Cell>\n                  <Table.Cell>{t(`${item.type}.category.${item.data.category}`)}</Table.Cell>\n                  <Table.Cell>\n                    {getBodyShapes(item)\n                      .map(bodyShape => t(`body_shapes.${toBodyShapeType(bodyShape)}`))\n                      .join(', ')}\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">{this.renderHash(contentHashes[index])}</Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </ModalContent>\n        <ModalActions>\n          <Button primary disabled={didRescue || isConfirmingRescueTx} loading={didRescue} onClick={this.handleConfirm}>\n            {t('approval_flow.rescue.confirm')}\n          </Button>\n          <Button secondary onClick={onClose} disabled={!this.canCloseModal()}>\n            {t('global.cancel')}\n          </Button>\n        </ModalActions>\n      </>\n    )\n  }\n\n  renderConsumeTPSlotsView() {\n    const { onClose, metadata, isConfirmingReviewThirdPartyTx } = this.props\n    const { items } = metadata as ApprovalFlowModalMetadata<ApprovalFlowModalView.CONSUME_TP_SLOTS>\n    const { didApproveConsumeSlots } = this.state\n\n    return (\n      <>\n        <ModalNavigation\n          title={t('approval_flow.consume_slots.title')}\n          subtitle={t('approval_flow.consume_slots.subtitle')}\n          onClose={this.canCloseModal() ? onClose : undefined}\n        />\n        <ModalContent>\n          <Table basic=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>{t('global.name')}</Table.HeaderCell>\n                <Table.HeaderCell>{t('global.category')}</Table.HeaderCell>\n                <Table.HeaderCell>{t('global.body_shape_plural')}</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {items.slice(0, MAX_TP_ITEMS).map(item => (\n                <Table.Row key={item.id} className=\"item\">\n                  <Table.Cell className=\"name\">\n                    <ItemImage item={item} />\n                    {item.name}\n                  </Table.Cell>\n                  <Table.Cell>{t('wearable.category.' + item.data.category)}</Table.Cell>\n                  <Table.Cell>\n                    {getBodyShapes(item)\n                      .map(bodyShape => t(`body_shapes.${toBodyShapeType(bodyShape)}`))\n                      .join(', ')}\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n          {items.length > MAX_TP_ITEMS ? (\n            <span>{t('approval_flow.consume_slots.more_items', { count: items.length - MAX_TP_ITEMS })}</span>\n          ) : null}\n        </ModalContent>\n        <ModalActions>\n          <Button\n            primary\n            disabled={didApproveConsumeSlots || isConfirmingReviewThirdPartyTx}\n            loading={didApproveConsumeSlots}\n            onClick={this.handleReviewThirdParty}\n          >\n            {t('approval_flow.rescue.confirm')}\n          </Button>\n          <Button secondary onClick={onClose} disabled={!this.canCloseModal()}>\n            {t('global.cancel')}\n          </Button>\n        </ModalActions>\n      </>\n    )\n  }\n\n  renderDeployThirdPartyView() {\n    const { onClose, metadata, onDeployThirdPartyItems, isDeployingItems } = this.props\n    const { items, collection, tree, hashes } = metadata as ApprovalFlowModalMetadata<ApprovalFlowModalView.DEPLOY_TP>\n    return (\n      <>\n        <ModalNavigation\n          title={t('approval_flow.upload.title')}\n          subtitle={t('approval_flow.upload.subtitle')}\n          onClose={this.canCloseModal() ? onClose : undefined}\n        />\n        <ModalContent>\n          <Table basic=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>{t('global.name')}</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {items.slice(0, MAX_TP_ITEMS).map(item => (\n                <Table.Row key={item.id} className=\"item\">\n                  <Table.Cell className=\"name\">\n                    <ItemImage item={item} />\n                    {item.name}\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n          {items.length > MAX_TP_ITEMS ? (\n            <span>{t('approval_flow.consume_slots.more_items', { count: items.length - MAX_TP_ITEMS })}</span>\n          ) : null}\n        </ModalContent>\n        <ModalActions>\n          <Button\n            primary\n            disabled={isDeployingItems}\n            loading={isDeployingItems}\n            onClick={() => onDeployThirdPartyItems(items, collection, tree, hashes)}\n          >\n            {t('approval_flow.upload.confirm')}\n          </Button>\n          <Button secondary onClick={onClose} disabled={!this.canCloseModal()}>\n            {t('global.cancel')}\n          </Button>\n        </ModalActions>\n      </>\n    )\n  }\n\n  renderDeployView() {\n    const { onClose, metadata, onDeployItems, isDeployingItems } = this.props\n    const { items, entities } = metadata as ApprovalFlowModalMetadata<ApprovalFlowModalView.DEPLOY>\n    return (\n      <>\n        <ModalNavigation\n          title={t('approval_flow.upload.title')}\n          subtitle={t('approval_flow.upload.subtitle')}\n          onClose={this.canCloseModal() ? onClose : undefined}\n        />\n        <ModalContent>\n          <Table basic=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>{t('global.name')}</Table.HeaderCell>\n                <Table.HeaderCell textAlign=\"right\">{t('global.size')}</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {items.map((item, index) => (\n                <Table.Row key={item.id} className=\"item\">\n                  <Table.Cell className=\"name\">\n                    <ItemImage item={item} />\n                    {item.name}\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"right\">\n                    {formatBytes(\n                      Array.from(entities[index].files.values()).reduce<number>((size, file) => size + file.buffer.byteLength, 0)\n                    )}\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </ModalContent>\n        <ModalActions>\n          <Button primary disabled={isDeployingItems} loading={isDeployingItems} onClick={() => onDeployItems(entities)}>\n            {t('approval_flow.upload.confirm')}\n          </Button>\n          <Button secondary onClick={onClose} disabled={!this.canCloseModal()}>\n            {t('global.cancel')}\n          </Button>\n        </ModalActions>\n      </>\n    )\n  }\n\n  renderApproveView() {\n    const { onClose, metadata, onApproveCollection, isConfirmingApproveTx, isAwaitingApproveTx } = this.props\n    const { collection } = metadata as ApprovalFlowModalMetadata<ApprovalFlowModalView.APPROVE>\n    return (\n      <>\n        <ModalNavigation\n          title={t('approval_flow.approve.title')}\n          subtitle={t('approval_flow.approve.subtitle')}\n          onClose={this.canCloseModal() ? onClose : undefined}\n        />\n        <ModalActions>\n          <Button\n            primary\n            disabled={isConfirmingApproveTx || isAwaitingApproveTx}\n            loading={isAwaitingApproveTx}\n            onClick={() => onApproveCollection(collection)}\n          >\n            {t('approval_flow.approve.confirm')}\n          </Button>\n          <Button secondary onClick={onClose} disabled={!this.canCloseModal()}>\n            {t('global.cancel')}\n          </Button>\n        </ModalActions>\n      </>\n    )\n  }\n\n  renderErrorView() {\n    const { onClose, metadata } = this.props\n    const { error } = metadata as ApprovalFlowModalMetadata<ApprovalFlowModalView.ERROR>\n    return (\n      <>\n        <ModalNavigation title={t('approval_flow.error.title')} subtitle={t('approval_flow.error.subtitle')} onClose={onClose} />\n        <ModalContent className=\"error\">{error}</ModalContent>\n        <ModalActions>\n          <Button secondary onClick={onClose}>\n            {t('global.close')}\n          </Button>\n        </ModalActions>\n      </>\n    )\n  }\n\n  renderSuccessView() {\n    const { onClose } = this.props\n    return (\n      <>\n        <ModalNavigation title={t('approval_flow.success.title')} subtitle={t('approval_flow.success.subtitle')} onClose={onClose} />\n        <ModalActions>\n          <Button secondary onClick={onClose}>\n            {t('global.close')}\n          </Button>\n        </ModalActions>\n      </>\n    )\n  }\n\n  render() {\n    const { name, onClose, metadata } = this.props\n    const { view } = metadata as ApprovalFlowModalMetadata\n    let content: React.ReactNode\n    let size: string = 'small'\n    switch (view) {\n      case ApprovalFlowModalView.LOADING:\n        content = this.renderLoadingView()\n        size = 'tiny'\n        break\n      case ApprovalFlowModalView.RESCUE:\n        content = this.renderRescueView()\n        break\n      case ApprovalFlowModalView.CONSUME_TP_SLOTS:\n        content = this.renderConsumeTPSlotsView()\n        break\n      case ApprovalFlowModalView.DEPLOY:\n        content = this.renderDeployView()\n        break\n      case ApprovalFlowModalView.DEPLOY_TP:\n        content = this.renderDeployThirdPartyView()\n        break\n      case ApprovalFlowModalView.APPROVE:\n        content = this.renderApproveView()\n        size = 'tiny'\n        break\n      case ApprovalFlowModalView.ERROR:\n        content = this.renderErrorView()\n        break\n      case ApprovalFlowModalView.SUCCESS:\n        content = this.renderSuccessView()\n        size = 'tiny'\n        break\n    }\n    return (\n      <Modal\n        name={name}\n        onClose={this.canCloseModal() ? onClose : undefined}\n        className=\"ApprovalFlowModal\"\n        size={size}\n        closeOnEscape={this.canCloseModal()}\n        closeOnDimmerClick={this.canCloseModal()}\n      >\n        {content}\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}