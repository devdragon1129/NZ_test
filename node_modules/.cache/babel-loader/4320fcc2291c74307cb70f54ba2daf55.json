{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/LandSelectENSPage/LandSelectENSPage.tsx\";\nimport * as React from 'react';\nimport LandAction from 'components/LandAction';\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { Link } from 'react-router-dom';\nimport { locations } from 'routing/locations';\nimport LandProviderPage from 'components/LandProviderPage';\nimport LandSelectENSForm from './LandSelectENSForm/LandSelectENSForm';\n\nvar LandSelectENSPage = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(LandSelectENSPage, _React$PureComponent);\n\n  function LandSelectENSPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LandSelectENSPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LandSelectENSPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleUpdateSubdomain = function (land, selectedSubdomain) {\n      var onNavigate = _this.props.onNavigate;\n      onNavigate(locations.landAssignENS(land.id, selectedSubdomain));\n    };\n\n    return _this;\n  }\n\n  _createClass(LandSelectENSPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          ensList = _this$props.ensList,\n          isLoading = _this$props.isLoading,\n          onFetchENS = _this$props.onFetchENS;\n      return /*#__PURE__*/React.createElement(LandProviderPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, function (land) {\n        return /*#__PURE__*/React.createElement(LandAction, {\n          land: land,\n          title: t('land_select_ens_page.title'),\n          subtitle: /*#__PURE__*/React.createElement(T, {\n            id: \"land_select_ens_page.subtitle\",\n            values: {\n              land: /*#__PURE__*/React.createElement(Link, {\n                to: locations.landDetail(land.id),\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 69\n                }\n              }, land.name)\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }\n          }),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(LandSelectENSForm, {\n          land: land,\n          ensList: ensList,\n          isLoading: isLoading,\n          onUpdateSubdomain: function onUpdateSubdomain(subdomain) {\n            return _this2.handleUpdateSubdomain(land, subdomain);\n          },\n          onFetchENS: onFetchENS,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }\n        }));\n      });\n    }\n  }]);\n\n  return LandSelectENSPage;\n}(React.PureComponent);\n\nexport { LandSelectENSPage as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/LandSelectENSPage/LandSelectENSPage.tsx"],"names":["React","LandAction","T","t","Link","locations","LandProviderPage","LandSelectENSForm","LandSelectENSPage","handleUpdateSubdomain","land","selectedSubdomain","onNavigate","props","landAssignENS","id","ensList","isLoading","onFetchENS","landDetail","name","subdomain","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,CAAT,EAAYC,CAAZ,QAAqB,mDAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;;IAGqBC,iB;;;;;;;;;;;;;;;;UACnBC,qB,GAAwB,UAACC,IAAD,EAAaC,iBAAb,EAA2C;AAAA,UACzDC,UADyD,GAC1C,MAAKC,KADqC,CACzDD,UADyD;AAEjEA,MAAAA,UAAU,CAACP,SAAS,CAACS,aAAV,CAAwBJ,IAAI,CAACK,EAA7B,EAAiCJ,iBAAjC,CAAD,CAAV;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACoC,KAAKE,KADzC;AAAA,UACCG,OADD,eACCA,OADD;AAAA,UACUC,SADV,eACUA,SADV;AAAA,UACqBC,UADrB,eACqBA,UADrB;AAGP,0BACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAAAR,IAAI;AAAA,4BACH,oBAAC,UAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAEE,UAAA,KAAK,EAAEP,CAAC,CAAC,4BAAD,CAFV;AAGE,UAAA,QAAQ,eACN,oBAAC,CAAD;AAAG,YAAA,EAAE,EAAC,+BAAN;AAAsC,YAAA,MAAM,EAAE;AAAEO,cAAAA,IAAI,eAAE,oBAAC,IAAD;AAAM,gBAAA,EAAE,EAAEL,SAAS,CAACc,UAAV,CAAqBT,IAAI,CAACK,EAA1B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA0CL,IAAI,CAACU,IAA/C;AAAR,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOE,oBAAC,iBAAD;AACE,UAAA,IAAI,EAAEV,IADR;AAEE,UAAA,OAAO,EAAEM,OAFX;AAGE,UAAA,SAAS,EAAEC,SAHb;AAIE,UAAA,iBAAiB,EAAE,2BAAAI,SAAS;AAAA,mBAAI,MAAI,CAACZ,qBAAL,CAA2BC,IAA3B,EAAiCW,SAAjC,CAAJ;AAAA,WAJ9B;AAKE,UAAA,UAAU,EAAEH,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADG;AAAA,OADP,CADF;AAqBD;;;;EA9B4ClB,KAAK,CAACsB,a;;SAAhCd,iB","sourcesContent":["import * as React from 'react'\nimport LandAction from 'components/LandAction'\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { Link } from 'react-router-dom'\nimport { locations } from 'routing/locations'\nimport { Land } from 'modules/land/types'\nimport LandProviderPage from 'components/LandProviderPage'\nimport LandSelectENSForm from './LandSelectENSForm/LandSelectENSForm'\nimport { Props } from './LandSelectENSPage.types'\n\nexport default class LandSelectENSPage extends React.PureComponent<Props> {\n  handleUpdateSubdomain = (land: Land, selectedSubdomain: string) => {\n    const { onNavigate } = this.props\n    onNavigate(locations.landAssignENS(land.id, selectedSubdomain))\n  }\n\n  render() {\n    const { ensList, isLoading, onFetchENS } = this.props\n\n    return (\n      <LandProviderPage>\n        {land => (\n          <LandAction\n            land={land}\n            title={t('land_select_ens_page.title')}\n            subtitle={\n              <T id=\"land_select_ens_page.subtitle\" values={{ land: <Link to={locations.landDetail(land.id)}>{land.name}</Link> }} />\n            }\n          >\n            <LandSelectENSForm\n              land={land}\n              ensList={ensList}\n              isLoading={isLoading}\n              onUpdateSubdomain={subdomain => this.handleUpdateSubdomain(land, subdomain)}\n              onFetchENS={onFetchENS}\n            />\n          </LandAction>\n        )}\n      </LandProviderPage>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}