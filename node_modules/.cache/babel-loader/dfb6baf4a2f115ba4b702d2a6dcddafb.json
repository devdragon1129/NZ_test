{"ast":null,"code":"import { StringTools } from './stringTools';\nimport { Logger } from './logger';\n\nvar cloneValue = function cloneValue(source, destinationObject) {\n  if (!source) {\n    return null;\n  }\n\n  if (source.getClassName && source.getClassName() === \"Mesh\") {\n    return null;\n  }\n\n  if (source.getClassName && source.getClassName() === \"SubMesh\") {\n    return source.clone(destinationObject);\n  } else if (source.clone) {\n    return source.clone();\n  }\n\n  return null;\n};\n\nfunction getAllPropertyNames(obj) {\n  var props = [];\n\n  do {\n    Object.getOwnPropertyNames(obj).forEach(function (prop) {\n      if (props.indexOf(prop) === -1) {\n        props.push(prop);\n      }\n    });\n  } while (obj = Object.getPrototypeOf(obj));\n\n  return props;\n}\n/**\r\n * Class containing a set of static utilities functions for deep copy.\r\n */\n\n\nvar DeepCopier =\n/** @class */\nfunction () {\n  function DeepCopier() {}\n  /**\r\n   * Tries to copy an object by duplicating every property\r\n   * @param source defines the source object\r\n   * @param destination defines the target object\r\n   * @param doNotCopyList defines a list of properties to avoid\r\n   * @param mustCopyList defines a list of properties to copy (even if they start with _)\r\n   */\n\n\n  DeepCopier.DeepCopy = function (source, destination, doNotCopyList, mustCopyList) {\n    var proerties = getAllPropertyNames(source);\n\n    for (var _i = 0, proerties_1 = proerties; _i < proerties_1.length; _i++) {\n      var prop = proerties_1[_i];\n\n      if (prop[0] === \"_\" && (!mustCopyList || mustCopyList.indexOf(prop) === -1)) {\n        continue;\n      }\n\n      if (StringTools.EndsWith(prop, \"Observable\")) {\n        continue;\n      }\n\n      if (doNotCopyList && doNotCopyList.indexOf(prop) !== -1) {\n        continue;\n      }\n\n      var sourceValue = source[prop];\n      var typeOfSourceValue = typeof sourceValue;\n\n      if (typeOfSourceValue === \"function\") {\n        continue;\n      }\n\n      try {\n        if (typeOfSourceValue === \"object\") {\n          if (sourceValue instanceof Array) {\n            destination[prop] = [];\n\n            if (sourceValue.length > 0) {\n              if (typeof sourceValue[0] == \"object\") {\n                for (var index = 0; index < sourceValue.length; index++) {\n                  var clonedValue = cloneValue(sourceValue[index], destination);\n\n                  if (destination[prop].indexOf(clonedValue) === -1) {\n                    // Test if auto inject was not done\n                    destination[prop].push(clonedValue);\n                  }\n                }\n              } else {\n                destination[prop] = sourceValue.slice(0);\n              }\n            }\n          } else {\n            destination[prop] = cloneValue(sourceValue, destination);\n          }\n        } else {\n          destination[prop] = sourceValue;\n        }\n      } catch (e) {\n        // Log a warning (it could be because of a read-only property)\n        Logger.Warn(e.message);\n      }\n    }\n  };\n\n  return DeepCopier;\n}();\n\nexport { DeepCopier };","map":null,"metadata":{},"sourceType":"module"}