{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util_1 = require(\"./_util\");\n\nfunction getDef(opts) {\n  return {\n    keyword: \"deepProperties\",\n    type: \"object\",\n    schemaType: \"object\",\n    macro: function macro(schema) {\n      var allOf = [];\n\n      for (var pointer in schema) {\n        allOf.push(getSchema(pointer, schema[pointer]));\n      }\n\n      return {\n        allOf: allOf\n      };\n    },\n    metaSchema: {\n      type: \"object\",\n      propertyNames: {\n        type: \"string\",\n        format: \"json-pointer\"\n      },\n      additionalProperties: _util_1.metaSchemaRef(opts)\n    }\n  };\n}\n\nexports.default = getDef;\n\nfunction getSchema(jsonPointer, schema) {\n  var segments = jsonPointer.split(\"/\");\n  var rootSchema = {};\n  var pointerSchema = rootSchema;\n\n  for (var i = 1; i < segments.length; i++) {\n    var segment = segments[i];\n    var isLast = i === segments.length - 1;\n    segment = unescapeJsonPointer(segment);\n    var properties = pointerSchema.properties = {};\n    var items = void 0;\n\n    if (/[0-9]+/.test(segment)) {\n      var count = +segment;\n      items = pointerSchema.items = [];\n      pointerSchema.type = [\"object\", \"array\"];\n\n      while (count--) {\n        items.push({});\n      }\n    } else {\n      pointerSchema.type = \"object\";\n    }\n\n    pointerSchema = isLast ? schema : {};\n    properties[segment] = pointerSchema;\n    if (items) items.push(pointerSchema);\n  }\n\n  return rootSchema;\n}\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\n\nmodule.exports = getDef;","map":null,"metadata":{},"sourceType":"script"}