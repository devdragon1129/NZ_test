{"ast":null,"code":"import { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { getDimensions } from 'lib/layout';\nexport var MAX_AREA = 32;\nexport function getTemplates() {\n  return [{\n    title: t('templates.small'),\n    description: t('templates.description', {\n      dimensions: getDimensions(1, 1),\n      amount: 20\n    }),\n    thumbnail: 'thumb-1x1',\n    rows: 1,\n    cols: 1\n  }, {\n    title: t('templates.medium'),\n    description: t('templates.description', {\n      dimensions: getDimensions(2, 2),\n      amount: 80\n    }),\n    thumbnail: 'thumb-2x2',\n    rows: 2,\n    cols: 2\n  }, {\n    title: t('templates.big'),\n    description: t('templates.description', {\n      dimensions: getDimensions(2, 3),\n      amount: 120\n    }),\n    thumbnail: 'thumb-2x3',\n    rows: 2,\n    cols: 3\n  }, {\n    title: t('templates.custom_layout.title'),\n    description: t('templates.custom_layout.up_to', {\n      max: MAX_AREA\n    }),\n    thumbnail: 'thumb-custombuild',\n    rows: 3,\n    cols: 3,\n    custom: true\n  }];\n}\nexport function fromLayout(rows, cols) {\n  return {\n    title: t('templates.custom_layout.title'),\n    description: getDimensions(rows, cols),\n    thumbnail: \"thumb-\".concat(rows, \"x\").concat(cols),\n    rows: rows,\n    cols: cols,\n    custom: true\n  };\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/template/utils.ts"],"names":["t","getDimensions","MAX_AREA","getTemplates","title","description","dimensions","amount","thumbnail","rows","cols","max","custom","fromLayout"],"mappings":"AAAA,SAASA,CAAT,QAAkB,mDAAlB;AAGA,SAASC,aAAT,QAA8B,YAA9B;AAEA,OAAO,IAAMC,QAAQ,GAAG,EAAjB;AAEP,OAAO,SAASC,YAAT,GAAoC;AACzC,SAAO,CACL;AACEC,IAAAA,KAAK,EAAEJ,CAAC,CAAC,iBAAD,CADV;AAEEK,IAAAA,WAAW,EAAEL,CAAC,CAAC,uBAAD,EAA0B;AAAEM,MAAAA,UAAU,EAAEL,aAAa,CAAC,CAAD,EAAI,CAAJ,CAA3B;AAAmCM,MAAAA,MAAM,EAAE;AAA3C,KAA1B,CAFhB;AAGEC,IAAAA,SAAS,EAAE,WAHb;AAIEC,IAAAA,IAAI,EAAE,CAJR;AAKEC,IAAAA,IAAI,EAAE;AALR,GADK,EAQL;AACEN,IAAAA,KAAK,EAAEJ,CAAC,CAAC,kBAAD,CADV;AAEEK,IAAAA,WAAW,EAAEL,CAAC,CAAC,uBAAD,EAA0B;AAAEM,MAAAA,UAAU,EAAEL,aAAa,CAAC,CAAD,EAAI,CAAJ,CAA3B;AAAmCM,MAAAA,MAAM,EAAE;AAA3C,KAA1B,CAFhB;AAGEC,IAAAA,SAAS,EAAE,WAHb;AAIEC,IAAAA,IAAI,EAAE,CAJR;AAKEC,IAAAA,IAAI,EAAE;AALR,GARK,EAeL;AACEN,IAAAA,KAAK,EAAEJ,CAAC,CAAC,eAAD,CADV;AAEEK,IAAAA,WAAW,EAAEL,CAAC,CAAC,uBAAD,EAA0B;AAAEM,MAAAA,UAAU,EAAEL,aAAa,CAAC,CAAD,EAAI,CAAJ,CAA3B;AAAmCM,MAAAA,MAAM,EAAE;AAA3C,KAA1B,CAFhB;AAGEC,IAAAA,SAAS,EAAE,WAHb;AAIEC,IAAAA,IAAI,EAAE,CAJR;AAKEC,IAAAA,IAAI,EAAE;AALR,GAfK,EAsBL;AACEN,IAAAA,KAAK,EAAEJ,CAAC,CAAC,+BAAD,CADV;AAEEK,IAAAA,WAAW,EAAEL,CAAC,CAAC,+BAAD,EAAkC;AAAEW,MAAAA,GAAG,EAAET;AAAP,KAAlC,CAFhB;AAGEM,IAAAA,SAAS,EAAE,mBAHb;AAIEC,IAAAA,IAAI,EAAE,CAJR;AAKEC,IAAAA,IAAI,EAAE,CALR;AAMEE,IAAAA,MAAM,EAAE;AANV,GAtBK,CAAP;AA+BD;AAED,OAAO,SAASC,UAAT,CAAoBJ,IAApB,EAAkCC,IAAlC,EAA0D;AAC/D,SAAO;AACLN,IAAAA,KAAK,EAAEJ,CAAC,CAAC,+BAAD,CADH;AAELK,IAAAA,WAAW,EAAEJ,aAAa,CAACQ,IAAD,EAAOC,IAAP,CAFrB;AAGLF,IAAAA,SAAS,kBAAWC,IAAX,cAAmBC,IAAnB,CAHJ;AAILD,IAAAA,IAAI,EAAJA,IAJK;AAKLC,IAAAA,IAAI,EAAJA,IALK;AAMLE,IAAAA,MAAM,EAAE;AANH,GAAP;AAQD","sourcesContent":["import { t } from 'decentraland-dapps/dist/modules/translation/utils'\n\nimport { Template } from 'modules/template/types'\nimport { getDimensions } from 'lib/layout'\n\nexport const MAX_AREA = 32\n\nexport function getTemplates(): Template[] {\n  return [\n    {\n      title: t('templates.small'),\n      description: t('templates.description', { dimensions: getDimensions(1, 1), amount: 20 }),\n      thumbnail: 'thumb-1x1',\n      rows: 1,\n      cols: 1\n    },\n    {\n      title: t('templates.medium'),\n      description: t('templates.description', { dimensions: getDimensions(2, 2), amount: 80 }),\n      thumbnail: 'thumb-2x2',\n      rows: 2,\n      cols: 2\n    },\n    {\n      title: t('templates.big'),\n      description: t('templates.description', { dimensions: getDimensions(2, 3), amount: 120 }),\n      thumbnail: 'thumb-2x3',\n      rows: 2,\n      cols: 3\n    },\n    {\n      title: t('templates.custom_layout.title'),\n      description: t('templates.custom_layout.up_to', { max: MAX_AREA }),\n      thumbnail: 'thumb-custombuild',\n      rows: 3,\n      cols: 3,\n      custom: true\n    }\n  ]\n}\n\nexport function fromLayout(rows: number, cols: number): Template {\n  return {\n    title: t('templates.custom_layout.title'),\n    description: getDimensions(rows, cols),\n    thumbnail: `thumb-${rows}x${cols}`,\n    rows,\n    cols,\n    custom: true\n  }\n}\n"]},"metadata":{},"sourceType":"module"}