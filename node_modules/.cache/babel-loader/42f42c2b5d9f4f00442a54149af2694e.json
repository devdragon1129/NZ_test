{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { action } from 'typesafe-actions';\nimport { buildTransactionPayload } from 'decentraland-dapps/dist/modules/transaction/utils';\n// Fetch items\nexport var FETCH_ITEMS_REQUEST = '[Request] Fetch Items';\nexport var FETCH_ITEMS_SUCCESS = '[Success] Fetch Items';\nexport var FETCH_ITEMS_FAILURE = '[Failure] Fetch Items';\nexport var fetchItemsRequest = function fetchItemsRequest(address, params) {\n  return action(FETCH_ITEMS_REQUEST, {\n    address: address,\n    params: params\n  });\n};\nexport var fetchItemsSuccess = function fetchItemsSuccess(items, paginationStats, address) {\n  return action(FETCH_ITEMS_SUCCESS, {\n    items: items,\n    paginationStats: paginationStats,\n    paginationIndex: address\n  });\n};\nexport var fetchItemsFailure = function fetchItemsFailure(error) {\n  return action(FETCH_ITEMS_FAILURE, {\n    error: error\n  });\n};\n// Fetch item\nexport var FETCH_ITEM_REQUEST = '[Request] Fetch Item';\nexport var FETCH_ITEM_SUCCESS = '[Success] Fetch Item';\nexport var FETCH_ITEM_FAILURE = '[Failure] Fetch Item';\nexport var fetchItemRequest = function fetchItemRequest(id) {\n  return action(FETCH_ITEM_REQUEST, {\n    id: id\n  });\n};\nexport var fetchItemSuccess = function fetchItemSuccess(id, item) {\n  return action(FETCH_ITEM_SUCCESS, {\n    id: id,\n    item: item\n  });\n};\nexport var fetchItemFailure = function fetchItemFailure(id, error) {\n  return action(FETCH_ITEM_FAILURE, {\n    id: id,\n    error: error\n  });\n};\n// Fetch collection item\nexport var FETCH_COLLECTION_ITEMS_REQUEST = '[Request] Fetch Collection Items';\nexport var FETCH_COLLECTION_ITEMS_SUCCESS = '[Success] Fetch Collection Items';\nexport var FETCH_COLLECTION_ITEMS_FAILURE = '[Failure] Fetch Collection Items';\nexport var fetchCollectionItemsRequest = function fetchCollectionItemsRequest(collectionId) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      page = _ref.page,\n      limit = _ref.limit,\n      status = _ref.status,\n      _ref$overridePaginati = _ref.overridePaginationData,\n      overridePaginationData = _ref$overridePaginati === void 0 ? true : _ref$overridePaginati;\n\n  return action(FETCH_COLLECTION_ITEMS_REQUEST, {\n    collectionId: collectionId,\n    page: page,\n    limit: limit,\n    status: status,\n    overridePaginationData: overridePaginationData\n  });\n};\nexport var fetchCollectionItemsSuccess = function fetchCollectionItemsSuccess(collectionId, items, paginationStats) {\n  return action(FETCH_COLLECTION_ITEMS_SUCCESS, {\n    items: items,\n    paginationIndex: collectionId,\n    paginationStats: paginationStats\n  });\n};\nexport var fetchCollectionItemsFailure = function fetchCollectionItemsFailure(collectionId, error) {\n  return action(FETCH_COLLECTION_ITEMS_FAILURE, {\n    collectionId: collectionId,\n    error: error\n  });\n};\n// Save items\nexport var SAVE_ITEM_REQUEST = '[Request] Save Item';\nexport var SAVE_ITEM_SUCCESS = '[Success] Save Item';\nexport var SAVE_ITEM_FAILURE = '[Failure] Save Item';\nexport var saveItemRequest = function saveItemRequest(item, contents) {\n  return action(SAVE_ITEM_REQUEST, {\n    item: item,\n    contents: contents\n  });\n};\nexport var saveItemSuccess = function saveItemSuccess(item, contents) {\n  return action(SAVE_ITEM_SUCCESS, {\n    item: item,\n    contents: contents\n  });\n};\nexport var saveItemFailure = function saveItemFailure(item, contents, error) {\n  return action(SAVE_ITEM_FAILURE, {\n    item: item,\n    contents: contents,\n    error: error\n  });\n};\n// Save multiple items\nexport var SAVE_MULTIPLE_ITEMS_REQUEST = '[Request] Save Multiple Items';\nexport var SAVE_MULTIPLE_ITEMS_SUCCESS = '[Success] Save Multiple Items';\nexport var SAVE_MULTIPLE_ITEMS_FAILURE = '[Failure] Save Multiple Items';\nexport var SAVE_MULTIPLE_ITEMS_CANCELLED = '[Cancelled] Save Multiple Items';\nexport var CANCEL_SAVE_MULTIPLE_ITEMS = '[Cancel] Save Multiple Items';\nexport var CLEAR_SAVE_MULTIPLE_ITEMS = '[Clear] Save Multiple Items';\nexport var saveMultipleItemsRequest = function saveMultipleItemsRequest(builtFiles) {\n  return action(SAVE_MULTIPLE_ITEMS_REQUEST, {\n    builtFiles: builtFiles\n  });\n};\nexport var saveMultipleItemsSuccess = function saveMultipleItemsSuccess(items, savedFileNames, notSavedFileNames) {\n  return action(SAVE_MULTIPLE_ITEMS_SUCCESS, {\n    items: items,\n    savedFileNames: savedFileNames,\n    notSavedFileNames: notSavedFileNames\n  });\n};\nexport var saveMultipleItemsCancelled = function saveMultipleItemsCancelled(items, savedFileNames, notSavedFileNames, cancelledFileNames) {\n  return action(SAVE_MULTIPLE_ITEMS_CANCELLED, {\n    items: items,\n    savedFileNames: savedFileNames,\n    notSavedFileNames: notSavedFileNames,\n    cancelledFileNames: cancelledFileNames\n  });\n};\nexport var cancelSaveMultipleItems = function cancelSaveMultipleItems() {\n  return action(CANCEL_SAVE_MULTIPLE_ITEMS);\n};\nexport var clearSaveMultipleItems = function clearSaveMultipleItems() {\n  return action(CLEAR_SAVE_MULTIPLE_ITEMS);\n};\n// Edit On Chain Sale Data\nexport var SET_PRICE_AND_BENEFICIARY_REQUEST = '[Request] Set price and beneficiary';\nexport var SET_PRICE_AND_BENEFICIARY_SUCCESS = '[Success] Set price and beneficiary';\nexport var SET_PRICE_AND_BENEFICIARY_FAILURE = '[Failure] Set price and beneficiary';\nexport var setPriceAndBeneficiaryRequest = function setPriceAndBeneficiaryRequest(itemId, price, beneficiary) {\n  return action(SET_PRICE_AND_BENEFICIARY_REQUEST, {\n    itemId: itemId,\n    price: price,\n    beneficiary: beneficiary\n  });\n};\nexport var setPriceAndBeneficiarySuccess = function setPriceAndBeneficiarySuccess(item, chainId, txHash) {\n  return action(SET_PRICE_AND_BENEFICIARY_SUCCESS, _objectSpread({\n    item: item\n  }, buildTransactionPayload(chainId, txHash, {\n    item: item\n  })));\n};\nexport var setPriceAndBeneficiaryFailure = function setPriceAndBeneficiaryFailure(itemId, price, beneficiary, error) {\n  return action(SET_PRICE_AND_BENEFICIARY_FAILURE, {\n    itemId: itemId,\n    price: price,\n    beneficiary: beneficiary,\n    error: error\n  });\n};\n// Delete items\nexport var DELETE_ITEM_REQUEST = '[Request] Delete Item';\nexport var DELETE_ITEM_SUCCESS = '[Success] Delete Item';\nexport var DELETE_ITEM_FAILURE = '[Failure] Delete Item';\nexport var deleteItemRequest = function deleteItemRequest(item) {\n  return action(DELETE_ITEM_REQUEST, {\n    item: item\n  });\n};\nexport var deleteItemSuccess = function deleteItemSuccess(item) {\n  return action(DELETE_ITEM_SUCCESS, {\n    item: item\n  });\n};\nexport var deleteItemFailure = function deleteItemFailure(item, error) {\n  return action(DELETE_ITEM_FAILURE, {\n    item: item,\n    error: error\n  });\n};\n// Set Collection\nexport var SET_COLLECTION = 'Set Collection';\nexport var setCollection = function setCollection(item, collectionId) {\n  return action(SET_COLLECTION, {\n    item: item,\n    collectionId: collectionId\n  });\n};\n// Set Token Ids\nexport var SET_ITEMS_TOKEN_ID_REQUEST = '[Request] Set Items Token Id';\nexport var SET_ITEMS_TOKEN_ID_SUCCESS = '[Success] Set Items Token Id';\nexport var SET_ITEMS_TOKEN_ID_FAILURE = '[Failure] Set Items Token Id';\nexport var setItemsTokenIdRequest = function setItemsTokenIdRequest(collection, items) {\n  return action(SET_ITEMS_TOKEN_ID_REQUEST, {\n    collection: collection,\n    items: items\n  });\n};\nexport var setItemsTokenIdSuccess = function setItemsTokenIdSuccess(items) {\n  return action(SET_ITEMS_TOKEN_ID_SUCCESS, {\n    items: items\n  });\n};\nexport var setItemsTokenIdFailure = function setItemsTokenIdFailure(collection, items, error) {\n  return action(SET_ITEMS_TOKEN_ID_FAILURE, {\n    collection: collection,\n    items: items,\n    error: error\n  });\n};\n// Fetch rarities\nexport var FETCH_RARITIES_REQUEST = '[Request] Fetch Rarities';\nexport var FETCH_RARITIES_SUCCESS = '[Success] Fetch Rarities';\nexport var FETCH_RARITIES_FAILURE = '[Failure] Fetch Rarities';\nexport var fetchRaritiesRequest = function fetchRaritiesRequest() {\n  return action(FETCH_RARITIES_REQUEST);\n};\nexport var fetchRaritiesSuccess = function fetchRaritiesSuccess(rarities) {\n  return action(FETCH_RARITIES_SUCCESS, {\n    rarities: rarities\n  });\n};\nexport var fetchRaritiesFailure = function fetchRaritiesFailure(error) {\n  return action(FETCH_RARITIES_FAILURE, {\n    error: error\n  });\n};\n// Rescue items\nexport var RESCUE_ITEMS_REQUEST = '[Request] Rescue items';\nexport var RESCUE_ITEMS_SUCCESS = '[Success] Rescue items';\nexport var RESCUE_ITEMS_CHUNK_SUCCESS = '[Chunk] Rescue items';\nexport var RESCUE_ITEMS_FAILURE = '[Failure] Rescue items';\nexport var rescueItemsRequest = function rescueItemsRequest(collection, items, contentHashes) {\n  return action(RESCUE_ITEMS_REQUEST, {\n    collection: collection,\n    items: items,\n    contentHashes: contentHashes\n  });\n};\nexport var rescueItemsChunkSuccess = function rescueItemsChunkSuccess(collection, items, contentHashes, chainId, txHash) {\n  return action(RESCUE_ITEMS_CHUNK_SUCCESS, _objectSpread({\n    collection: collection,\n    contentHashes: contentHashes,\n    txHash: txHash,\n    items: items\n  }, buildTransactionPayload(chainId, txHash, {\n    count: items.length,\n    collectionId: collection.id,\n    collectionName: collection.name\n  })));\n};\nexport var rescueItemsSuccess = function rescueItemsSuccess(collection, items, contentHashes, chainId, txHashes) {\n  return action(RESCUE_ITEMS_SUCCESS, {\n    collection: collection,\n    items: items,\n    contentHashes: contentHashes,\n    txHashes: txHashes,\n    chainId: chainId\n  });\n};\nexport var rescueItemsFailure = function rescueItemsFailure(collection, items, contentHashes, error) {\n  return action(RESCUE_ITEMS_FAILURE, {\n    collection: collection,\n    items: items,\n    contentHashes: contentHashes,\n    error: error\n  });\n};\n// Reset Item\nexport var RESET_ITEM_REQUEST = '[Request] Reset item';\nexport var RESET_ITEM_SUCCESS = '[Success] Reset item';\nexport var RESET_ITEM_FAILURE = '[Failure] Reset item';\nexport var resetItemRequest = function resetItemRequest(itemId) {\n  return action(RESET_ITEM_REQUEST, {\n    itemId: itemId\n  });\n};\nexport var resetItemSuccess = function resetItemSuccess(itemId) {\n  return action(RESET_ITEM_SUCCESS, {\n    itemId: itemId\n  });\n};\nexport var resetItemFailure = function resetItemFailure(itemId, error) {\n  return action(RESET_ITEM_FAILURE, {\n    itemId: itemId,\n    error: error\n  });\n};\n// Download Item\nexport var DOWNLOAD_ITEM_REQUEST = '[Request] Download item';\nexport var DOWNLOAD_ITEM_SUCCESS = '[Success] Download item';\nexport var DOWNLOAD_ITEM_FAILURE = '[Failure] Download item';\nexport var downloadItemRequest = function downloadItemRequest(itemId) {\n  return action(DOWNLOAD_ITEM_REQUEST, {\n    itemId: itemId\n  });\n};\nexport var downloadItemSuccess = function downloadItemSuccess(itemId) {\n  return action(DOWNLOAD_ITEM_SUCCESS, {\n    itemId: itemId\n  });\n};\nexport var downloadItemFailure = function downloadItemFailure(itemId, error) {\n  return action(DOWNLOAD_ITEM_FAILURE, {\n    itemId: itemId,\n    error: error\n  });\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/item/actions.ts"],"names":["action","buildTransactionPayload","FETCH_ITEMS_REQUEST","FETCH_ITEMS_SUCCESS","FETCH_ITEMS_FAILURE","fetchItemsRequest","address","params","fetchItemsSuccess","items","paginationStats","paginationIndex","fetchItemsFailure","error","FETCH_ITEM_REQUEST","FETCH_ITEM_SUCCESS","FETCH_ITEM_FAILURE","fetchItemRequest","id","fetchItemSuccess","item","fetchItemFailure","FETCH_COLLECTION_ITEMS_REQUEST","FETCH_COLLECTION_ITEMS_SUCCESS","FETCH_COLLECTION_ITEMS_FAILURE","fetchCollectionItemsRequest","collectionId","page","limit","status","overridePaginationData","fetchCollectionItemsSuccess","fetchCollectionItemsFailure","SAVE_ITEM_REQUEST","SAVE_ITEM_SUCCESS","SAVE_ITEM_FAILURE","saveItemRequest","contents","saveItemSuccess","saveItemFailure","SAVE_MULTIPLE_ITEMS_REQUEST","SAVE_MULTIPLE_ITEMS_SUCCESS","SAVE_MULTIPLE_ITEMS_FAILURE","SAVE_MULTIPLE_ITEMS_CANCELLED","CANCEL_SAVE_MULTIPLE_ITEMS","CLEAR_SAVE_MULTIPLE_ITEMS","saveMultipleItemsRequest","builtFiles","saveMultipleItemsSuccess","savedFileNames","notSavedFileNames","saveMultipleItemsCancelled","cancelledFileNames","cancelSaveMultipleItems","clearSaveMultipleItems","SET_PRICE_AND_BENEFICIARY_REQUEST","SET_PRICE_AND_BENEFICIARY_SUCCESS","SET_PRICE_AND_BENEFICIARY_FAILURE","setPriceAndBeneficiaryRequest","itemId","price","beneficiary","setPriceAndBeneficiarySuccess","chainId","txHash","setPriceAndBeneficiaryFailure","DELETE_ITEM_REQUEST","DELETE_ITEM_SUCCESS","DELETE_ITEM_FAILURE","deleteItemRequest","deleteItemSuccess","deleteItemFailure","SET_COLLECTION","setCollection","SET_ITEMS_TOKEN_ID_REQUEST","SET_ITEMS_TOKEN_ID_SUCCESS","SET_ITEMS_TOKEN_ID_FAILURE","setItemsTokenIdRequest","collection","setItemsTokenIdSuccess","setItemsTokenIdFailure","FETCH_RARITIES_REQUEST","FETCH_RARITIES_SUCCESS","FETCH_RARITIES_FAILURE","fetchRaritiesRequest","fetchRaritiesSuccess","rarities","fetchRaritiesFailure","RESCUE_ITEMS_REQUEST","RESCUE_ITEMS_SUCCESS","RESCUE_ITEMS_CHUNK_SUCCESS","RESCUE_ITEMS_FAILURE","rescueItemsRequest","contentHashes","rescueItemsChunkSuccess","count","length","collectionName","name","rescueItemsSuccess","txHashes","rescueItemsFailure","RESET_ITEM_REQUEST","RESET_ITEM_SUCCESS","RESET_ITEM_FAILURE","resetItemRequest","resetItemSuccess","resetItemFailure","DOWNLOAD_ITEM_REQUEST","DOWNLOAD_ITEM_SUCCESS","DOWNLOAD_ITEM_FAILURE","downloadItemRequest","downloadItemSuccess","downloadItemFailure"],"mappings":"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","sourcesContent":["import { action } from 'typesafe-actions'\nimport { ChainId } from '@dcl/schemas'\nimport { buildTransactionPayload } from 'decentraland-dapps/dist/modules/transaction/utils'\nimport { PaginationStats } from 'lib/api/pagination'\nimport { CurationStatus } from 'modules/curations/types'\nimport { Collection } from 'modules/collection/types'\nimport { BuiltFile, Item, Rarity } from './types'\n\n// Fetch items\n\nexport const FETCH_ITEMS_REQUEST = '[Request] Fetch Items'\nexport const FETCH_ITEMS_SUCCESS = '[Success] Fetch Items'\nexport const FETCH_ITEMS_FAILURE = '[Failure] Fetch Items'\n\nexport const fetchItemsRequest = (address: string, params?: { limit: number; page: number }) =>\n  action(FETCH_ITEMS_REQUEST, { address, params })\nexport const fetchItemsSuccess = (items: Item[], paginationStats: PaginationStats, address: string) =>\n  action(FETCH_ITEMS_SUCCESS, { items, paginationStats, paginationIndex: address })\nexport const fetchItemsFailure = (error: string) => action(FETCH_ITEMS_FAILURE, { error })\n\nexport type FetchItemsRequestAction = ReturnType<typeof fetchItemsRequest>\nexport type FetchItemsSuccessAction = ReturnType<typeof fetchItemsSuccess>\nexport type FetchItemsFailureAction = ReturnType<typeof fetchItemsFailure>\n\n// Fetch item\n\nexport const FETCH_ITEM_REQUEST = '[Request] Fetch Item'\nexport const FETCH_ITEM_SUCCESS = '[Success] Fetch Item'\nexport const FETCH_ITEM_FAILURE = '[Failure] Fetch Item'\n\nexport const fetchItemRequest = (id: string) => action(FETCH_ITEM_REQUEST, { id })\nexport const fetchItemSuccess = (id: string, item: Item) => action(FETCH_ITEM_SUCCESS, { id, item })\nexport const fetchItemFailure = (id: string, error: string) => action(FETCH_ITEM_FAILURE, { id, error })\n\nexport type FetchItemRequestAction = ReturnType<typeof fetchItemRequest>\nexport type FetchItemSuccessAction = ReturnType<typeof fetchItemSuccess>\nexport type FetchItemFailureAction = ReturnType<typeof fetchItemFailure>\n\n// Fetch collection item\n\nexport const FETCH_COLLECTION_ITEMS_REQUEST = '[Request] Fetch Collection Items'\nexport const FETCH_COLLECTION_ITEMS_SUCCESS = '[Success] Fetch Collection Items'\nexport const FETCH_COLLECTION_ITEMS_FAILURE = '[Failure] Fetch Collection Items'\n\nexport const fetchCollectionItemsRequest = (\n  collectionId: string,\n  {\n    page,\n    limit,\n    status,\n    overridePaginationData = true\n  }: {\n    page?: number | number[]\n    limit?: number\n    status?: CurationStatus\n    overridePaginationData?: boolean\n  } = {}\n) => action(FETCH_COLLECTION_ITEMS_REQUEST, { collectionId, page, limit, status, overridePaginationData })\nexport const fetchCollectionItemsSuccess = (collectionId: string, items: Item[], paginationStats?: PaginationStats) =>\n  action(FETCH_COLLECTION_ITEMS_SUCCESS, { items, paginationIndex: collectionId, paginationStats })\nexport const fetchCollectionItemsFailure = (collectionId: string, error: string) =>\n  action(FETCH_COLLECTION_ITEMS_FAILURE, { collectionId, error })\n\nexport type FetchCollectionItemsRequestAction = ReturnType<typeof fetchCollectionItemsRequest>\nexport type FetchCollectionItemsSuccessAction = ReturnType<typeof fetchCollectionItemsSuccess>\nexport type FetchCollectionItemsFailureAction = ReturnType<typeof fetchCollectionItemsFailure>\n\n// Save items\n\nexport const SAVE_ITEM_REQUEST = '[Request] Save Item'\nexport const SAVE_ITEM_SUCCESS = '[Success] Save Item'\nexport const SAVE_ITEM_FAILURE = '[Failure] Save Item'\n\nexport const saveItemRequest = (item: Item, contents: Record<string, Blob>) => action(SAVE_ITEM_REQUEST, { item, contents })\nexport const saveItemSuccess = (item: Item, contents: Record<string, Blob>) => action(SAVE_ITEM_SUCCESS, { item, contents })\nexport const saveItemFailure = (item: Item, contents: Record<string, Blob>, error: string) =>\n  action(SAVE_ITEM_FAILURE, { item, contents, error })\n\nexport type SaveItemRequestAction = ReturnType<typeof saveItemRequest>\nexport type SaveItemSuccessAction = ReturnType<typeof saveItemSuccess>\nexport type SaveItemFailureAction = ReturnType<typeof saveItemFailure>\n\n// Save multiple items\n\nexport const SAVE_MULTIPLE_ITEMS_REQUEST = '[Request] Save Multiple Items'\nexport const SAVE_MULTIPLE_ITEMS_SUCCESS = '[Success] Save Multiple Items'\nexport const SAVE_MULTIPLE_ITEMS_FAILURE = '[Failure] Save Multiple Items'\nexport const SAVE_MULTIPLE_ITEMS_CANCELLED = '[Cancelled] Save Multiple Items'\nexport const CANCEL_SAVE_MULTIPLE_ITEMS = '[Cancel] Save Multiple Items'\nexport const CLEAR_SAVE_MULTIPLE_ITEMS = '[Clear] Save Multiple Items'\n\nexport const saveMultipleItemsRequest = (builtFiles: BuiltFile<Blob>[]) => action(SAVE_MULTIPLE_ITEMS_REQUEST, { builtFiles })\nexport const saveMultipleItemsSuccess = (items: Item[], savedFileNames: string[], notSavedFileNames: string[]) =>\n  action(SAVE_MULTIPLE_ITEMS_SUCCESS, { items, savedFileNames, notSavedFileNames })\nexport const saveMultipleItemsCancelled = (\n  items: Item[],\n  savedFileNames: string[],\n  notSavedFileNames: string[],\n  cancelledFileNames: string[]\n) => action(SAVE_MULTIPLE_ITEMS_CANCELLED, { items, savedFileNames, notSavedFileNames, cancelledFileNames })\n\nexport const cancelSaveMultipleItems = () => action(CANCEL_SAVE_MULTIPLE_ITEMS)\nexport const clearSaveMultipleItems = () => action(CLEAR_SAVE_MULTIPLE_ITEMS)\n\nexport type SaveMultipleItemsRequestAction = ReturnType<typeof saveMultipleItemsRequest>\nexport type SaveMultipleItemsSuccessAction = ReturnType<typeof saveMultipleItemsSuccess>\nexport type SaveMultipleItemsCancelledAction = ReturnType<typeof saveMultipleItemsCancelled>\nexport type CancelSaveMultipleItemsAction = ReturnType<typeof cancelSaveMultipleItems>\nexport type ClearStateSaveMultipleItemsAction = ReturnType<typeof clearSaveMultipleItems>\n\n// Edit On Chain Sale Data\n\nexport const SET_PRICE_AND_BENEFICIARY_REQUEST = '[Request] Set price and beneficiary'\nexport const SET_PRICE_AND_BENEFICIARY_SUCCESS = '[Success] Set price and beneficiary'\nexport const SET_PRICE_AND_BENEFICIARY_FAILURE = '[Failure] Set price and beneficiary'\n\nexport const setPriceAndBeneficiaryRequest = (itemId: string, price: string, beneficiary: string) =>\n  action(SET_PRICE_AND_BENEFICIARY_REQUEST, { itemId, price, beneficiary })\nexport const setPriceAndBeneficiarySuccess = (item: Item, chainId: ChainId, txHash: string) =>\n  action(SET_PRICE_AND_BENEFICIARY_SUCCESS, {\n    item,\n    ...buildTransactionPayload(chainId, txHash, { item })\n  })\nexport const setPriceAndBeneficiaryFailure = (itemId: string, price: string, beneficiary: string, error: string) =>\n  action(SET_PRICE_AND_BENEFICIARY_FAILURE, { itemId, price, beneficiary, error })\n\nexport type SetPriceAndBeneficiaryRequestAction = ReturnType<typeof setPriceAndBeneficiaryRequest>\nexport type SetPriceAndBeneficiarySuccessAction = ReturnType<typeof setPriceAndBeneficiarySuccess>\nexport type SetPriceAndBeneficiaryFailureAction = ReturnType<typeof setPriceAndBeneficiaryFailure>\n\n// Delete items\n\nexport const DELETE_ITEM_REQUEST = '[Request] Delete Item'\nexport const DELETE_ITEM_SUCCESS = '[Success] Delete Item'\nexport const DELETE_ITEM_FAILURE = '[Failure] Delete Item'\n\nexport const deleteItemRequest = (item: Item) => action(DELETE_ITEM_REQUEST, { item })\nexport const deleteItemSuccess = (item: Item) => action(DELETE_ITEM_SUCCESS, { item })\nexport const deleteItemFailure = (item: Item, error: string) => action(DELETE_ITEM_FAILURE, { item, error })\n\nexport type DeleteItemRequestAction = ReturnType<typeof deleteItemRequest>\nexport type DeleteItemSuccessAction = ReturnType<typeof deleteItemSuccess>\nexport type DeleteItemFailureAction = ReturnType<typeof deleteItemFailure>\n\n// Set Collection\n\nexport const SET_COLLECTION = 'Set Collection'\nexport const setCollection = (item: Item, collectionId: string | null) => action(SET_COLLECTION, { item, collectionId })\nexport type SetCollectionAction = ReturnType<typeof setCollection>\n\n// Set Token Ids\n\nexport const SET_ITEMS_TOKEN_ID_REQUEST = '[Request] Set Items Token Id'\nexport const SET_ITEMS_TOKEN_ID_SUCCESS = '[Success] Set Items Token Id'\nexport const SET_ITEMS_TOKEN_ID_FAILURE = '[Failure] Set Items Token Id'\n\nexport const setItemsTokenIdRequest = (collection: Collection, items: Item[]) => action(SET_ITEMS_TOKEN_ID_REQUEST, { collection, items })\nexport const setItemsTokenIdSuccess = (items: Item[]) => action(SET_ITEMS_TOKEN_ID_SUCCESS, { items })\nexport const setItemsTokenIdFailure = (collection: Collection, items: Item[], error: string) =>\n  action(SET_ITEMS_TOKEN_ID_FAILURE, { collection, items, error })\n\nexport type SetItemsTokenIdRequestAction = ReturnType<typeof setItemsTokenIdRequest>\nexport type SetItemsTokenIdSuccessAction = ReturnType<typeof setItemsTokenIdSuccess>\nexport type SetItemsTokenIdFailureAction = ReturnType<typeof setItemsTokenIdFailure>\n\n// Fetch rarities\n\nexport const FETCH_RARITIES_REQUEST = '[Request] Fetch Rarities'\nexport const FETCH_RARITIES_SUCCESS = '[Success] Fetch Rarities'\nexport const FETCH_RARITIES_FAILURE = '[Failure] Fetch Rarities'\n\nexport const fetchRaritiesRequest = () => action(FETCH_RARITIES_REQUEST)\nexport const fetchRaritiesSuccess = (rarities: Rarity[]) => action(FETCH_RARITIES_SUCCESS, { rarities })\nexport const fetchRaritiesFailure = (error: string) => action(FETCH_RARITIES_FAILURE, { error })\n\nexport type FetchRaritiesRequestAction = ReturnType<typeof fetchRaritiesRequest>\nexport type FetchRaritiesSuccessAction = ReturnType<typeof fetchRaritiesSuccess>\nexport type FetchRaritiesFailureAction = ReturnType<typeof fetchRaritiesFailure>\n\n// Rescue items\n\nexport const RESCUE_ITEMS_REQUEST = '[Request] Rescue items'\nexport const RESCUE_ITEMS_SUCCESS = '[Success] Rescue items'\nexport const RESCUE_ITEMS_CHUNK_SUCCESS = '[Chunk] Rescue items'\nexport const RESCUE_ITEMS_FAILURE = '[Failure] Rescue items'\n\nexport const rescueItemsRequest = (collection: Collection, items: Item[], contentHashes: string[]) =>\n  action(RESCUE_ITEMS_REQUEST, { collection, items, contentHashes })\nexport const rescueItemsChunkSuccess = (collection: Collection, items: Item[], contentHashes: string[], chainId: ChainId, txHash: string) =>\n  action(RESCUE_ITEMS_CHUNK_SUCCESS, {\n    collection,\n    contentHashes,\n    txHash,\n    items,\n    ...buildTransactionPayload(chainId, txHash, {\n      count: items.length,\n      collectionId: collection.id,\n      collectionName: collection.name\n    })\n  })\nexport const rescueItemsSuccess = (collection: Collection, items: Item[], contentHashes: string[], chainId: ChainId, txHashes: string[]) =>\n  action(RESCUE_ITEMS_SUCCESS, {\n    collection,\n    items,\n    contentHashes,\n    txHashes,\n    chainId\n  })\nexport const rescueItemsFailure = (collection: Collection, items: Item[], contentHashes: string[], error: string) =>\n  action(RESCUE_ITEMS_FAILURE, { collection, items, contentHashes, error })\n\nexport type RescueItemsRequestAction = ReturnType<typeof rescueItemsRequest>\nexport type RescueItemsSuccessAction = ReturnType<typeof rescueItemsSuccess>\nexport type RescueItemsChunkSuccessAction = ReturnType<typeof rescueItemsChunkSuccess>\nexport type RescueItemsFailureAction = ReturnType<typeof rescueItemsFailure>\n\n// Reset Item\n\nexport const RESET_ITEM_REQUEST = '[Request] Reset item'\nexport const RESET_ITEM_SUCCESS = '[Success] Reset item'\nexport const RESET_ITEM_FAILURE = '[Failure] Reset item'\n\nexport const resetItemRequest = (itemId: string) => action(RESET_ITEM_REQUEST, { itemId })\nexport const resetItemSuccess = (itemId: string) => action(RESET_ITEM_SUCCESS, { itemId })\nexport const resetItemFailure = (itemId: string, error: string) => action(RESET_ITEM_FAILURE, { itemId, error })\n\nexport type ResetItemRequestAction = ReturnType<typeof resetItemRequest>\nexport type ResetItemSuccessAction = ReturnType<typeof resetItemSuccess>\nexport type ResetItemFailureAction = ReturnType<typeof resetItemFailure>\n\n// Download Item\n\nexport const DOWNLOAD_ITEM_REQUEST = '[Request] Download item'\nexport const DOWNLOAD_ITEM_SUCCESS = '[Success] Download item'\nexport const DOWNLOAD_ITEM_FAILURE = '[Failure] Download item'\n\nexport const downloadItemRequest = (itemId: string) => action(DOWNLOAD_ITEM_REQUEST, { itemId })\nexport const downloadItemSuccess = (itemId: string) => action(DOWNLOAD_ITEM_SUCCESS, { itemId })\nexport const downloadItemFailure = (itemId: string, error: string) => action(DOWNLOAD_ITEM_FAILURE, { itemId, error })\n\nexport type DownloadItemRequestAction = ReturnType<typeof downloadItemRequest>\nexport type DownloadItemSuccessAction = ReturnType<typeof downloadItemSuccess>\nexport type DownloadItemFailureAction = ReturnType<typeof downloadItemFailure>\n"]},"metadata":{},"sourceType":"module"}