{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.migrateStorage = exports.getDefaultState = exports.getLocalStorage = exports.hasLocalStorage = void 0;\n\nfunction hasLocalStorage() {\n  try {\n    // https://gist.github.com/paulirish/5558557\n    var localStorage = window.localStorage;\n    var val = 'val';\n    localStorage.setItem(val, val);\n    localStorage.removeItem(val);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexports.hasLocalStorage = hasLocalStorage;\n\nfunction getLocalStorage() {\n  return hasLocalStorage() ? window.localStorage : {\n    getItem: function getItem() {\n      return null;\n    },\n    setItem: function setItem() {\n      return null;\n    },\n    removeItem: function removeItem() {\n      return null;\n    }\n  };\n}\n\nexports.getLocalStorage = getLocalStorage;\n\nfunction getDefaultState(migrations) {\n  var keys = Object.keys(migrations);\n  var version = keys.length === 0 ? 1 : Object.keys(migrations).map(Number).filter(function (num) {\n    return !isNaN(num);\n  }).sort(function (a, b) {\n    return b - a;\n  })[0];\n  return {\n    storage: {\n      version: version\n    }\n  };\n}\n\nexports.getDefaultState = getDefaultState;\n\nfunction migrateStorage(key, migrations) {\n  var version = 1;\n  var localStorage = getLocalStorage();\n  var dataString = localStorage.getItem(key);\n\n  if (dataString) {\n    var data = JSON.parse(dataString);\n\n    if (data.storage && data.storage.version) {\n      version = parseInt(data.storage.version, 10);\n    }\n\n    var nextVersion = version + 1;\n\n    while (migrations[nextVersion]) {\n      data = migrations[nextVersion](data);\n\n      if (!data.storage) {\n        data.storage = {};\n      }\n\n      data.storage.version = nextVersion;\n      nextVersion++;\n    }\n\n    return data;\n  }\n\n  return getDefaultState(migrations);\n}\n\nexports.migrateStorage = migrateStorage;","map":null,"metadata":{},"sourceType":"script"}