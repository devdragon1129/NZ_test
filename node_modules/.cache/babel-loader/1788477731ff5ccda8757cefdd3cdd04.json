{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIsFeatureEnabled = exports.getError = exports.getLoading = exports.getData = exports.getState = void 0;\n\nvar getState = function getState(state) {\n  return state.features;\n};\n\nexports.getState = getState;\n\nvar getData = function getData(state) {\n  return exports.getState(state).data;\n};\n\nexports.getData = getData;\n\nvar getLoading = function getLoading(state) {\n  return exports.getState(state).loading;\n};\n\nexports.getLoading = getLoading;\n\nvar getError = function getError(state) {\n  return exports.getState(state).error;\n};\n\nexports.getError = getError;\n/**\n * Helper to get whether a feature flag is enabled or disabled.\n * It will first look into your env file for the feature flag, if it is not defined there,\n * it will look it in the requested and stored features data.\n * The env key will be determined from the application and the flag. For example, if the\n * application is \"explorer\" and the flag is \"some-crazy-feature\", it will look\n * for it as REACT_APP_FF_EXPLORER_SOME_CRAZY_FEATURE.\n *\n * @param state Redux state of the application.\n * @param app Appplication name.\n * @param feature Feature key without the application name prefix. For example for the \"builder-feature\".\n * You need to provide only \"feature\"\n *\n * @returns Whether the feature is enabled or not.\n */\n\nvar getIsFeatureEnabled = function getIsFeatureEnabled(state, app, feature) {\n  var envValue = getFromEnv(app, feature);\n\n  if (envValue !== null) {\n    return envValue;\n  }\n\n  var features = exports.getData(state);\n  var appFeatures = features[app];\n\n  if (!appFeatures) {\n    throw new Error(\"Application \\\"\".concat(app, \"\\\" not found\"));\n  }\n\n  return !!appFeatures.flags[\"\".concat(app, \"-\").concat(feature)];\n};\n\nexports.getIsFeatureEnabled = getIsFeatureEnabled;\n\nvar getFromEnv = function getFromEnv(application, flag) {\n  var envify = function envify(word) {\n    return word.toUpperCase().replace(/-/g, '_');\n  };\n\n  var key = \"REACT_APP_FF_\".concat(envify(application), \"_\").concat(envify(flag));\n  var value = process.env[key];\n  return !value || value === '' ? null : value === '1' ? true : false;\n};","map":null,"metadata":{},"sourceType":"script"}