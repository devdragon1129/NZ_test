{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = getSelectedIndex;\n\nvar _includes2 = _interopRequireDefault(require(\"lodash/includes\"));\n\nvar _find2 = _interopRequireDefault(require(\"lodash/find\"));\n\nvar _findIndex2 = _interopRequireDefault(require(\"lodash/findIndex\"));\n\nvar _reduce2 = _interopRequireDefault(require(\"lodash/reduce\"));\n\nvar _getMenuOptions = _interopRequireDefault(require(\"./getMenuOptions\"));\n\nfunction getSelectedIndex(config) {\n  var additionLabel = config.additionLabel,\n      additionPosition = config.additionPosition,\n      allowAdditions = config.allowAdditions,\n      deburr = config.deburr,\n      multiple = config.multiple,\n      options = config.options,\n      search = config.search,\n      searchQuery = config.searchQuery,\n      selectedIndex = config.selectedIndex,\n      value = config.value;\n  var menuOptions = (0, _getMenuOptions.default)({\n    value: value,\n    options: options,\n    searchQuery: searchQuery,\n    additionLabel: additionLabel,\n    additionPosition: additionPosition,\n    allowAdditions: allowAdditions,\n    deburr: deburr,\n    multiple: multiple,\n    search: search\n  });\n  var enabledIndexes = (0, _reduce2.default)(menuOptions, function (memo, item, index) {\n    if (!item.disabled) memo.push(index);\n    return memo;\n  }, []);\n  var newSelectedIndex; // update the selected index\n\n  if (!selectedIndex || selectedIndex < 0) {\n    var firstIndex = enabledIndexes[0]; // Select the currently active item, if none, use the first item.\n    // Multiple selects remove active items from the list,\n    // their initial selected index should be 0.\n\n    newSelectedIndex = multiple ? firstIndex : (0, _findIndex2.default)(menuOptions, ['value', value]) || enabledIndexes[0];\n  } else if (multiple) {\n    newSelectedIndex = (0, _find2.default)(enabledIndexes, function (index) {\n      return index >= selectedIndex;\n    }); // multiple selects remove options from the menu as they are made active\n    // keep the selected index within range of the remaining items\n\n    if (selectedIndex >= menuOptions.length - 1) {\n      newSelectedIndex = enabledIndexes[enabledIndexes.length - 1];\n    }\n  } else {\n    var activeIndex = (0, _findIndex2.default)(menuOptions, ['value', value]); // regular selects can only have one active item\n    // set the selected index to the currently active item\n\n    newSelectedIndex = (0, _includes2.default)(enabledIndexes, activeIndex) ? activeIndex : undefined;\n  }\n\n  if (!newSelectedIndex || newSelectedIndex < 0) {\n    newSelectedIndex = enabledIndexes[0];\n  }\n\n  return newSelectedIndex;\n}","map":null,"metadata":{},"sourceType":"script"}