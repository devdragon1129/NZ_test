{"ast":null,"code":"export var Gizmo;\n\n(function (Gizmo) {\n  Gizmo[\"MOVE\"] = \"MOVE\";\n  Gizmo[\"ROTATE\"] = \"ROTATE\";\n  Gizmo[\"SCALE\"] = \"SCALE\";\n  Gizmo[\"NONE\"] = \"NONE\";\n})(Gizmo || (Gizmo = {}));\n\nexport var PreviewType;\n\n(function (PreviewType) {\n  PreviewType[\"PROJECT\"] = \"project\";\n  PreviewType[\"PUBLIC\"] = \"public\";\n  PreviewType[\"POOL\"] = \"pool\";\n})(PreviewType || (PreviewType = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/editor/types.ts"],"names":["Gizmo","PreviewType"],"mappings":"AAGA,WAAYA,KAAZ;;WAAYA,K;AAAAA,EAAAA,K;AAAAA,EAAAA,K;AAAAA,EAAAA,K;AAAAA,EAAAA,K;GAAAA,K,KAAAA,K;;AA8BZ,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W","sourcesContent":["import { WearableBodyShape, WearableCategory } from '@dcl/schemas'\nimport { BodyShapeRespresentation, Wearable } from 'decentraland-ecs'\n\nexport enum Gizmo {\n  MOVE = 'MOVE',\n  ROTATE = 'ROTATE',\n  SCALE = 'SCALE',\n  NONE = 'NONE'\n}\n\nexport type EditorScene = {\n  baseUrl: string\n  display: {\n    title: string\n  }\n  owner: string\n  contact: {\n    name: string\n    email: string\n  }\n  scene: {\n    parcels: string[]\n    base: string\n  }\n  source: {\n    origin: 'builder'\n  }\n  main: string\n  _mappings: Record<string, string>\n}\n\nexport type UnityKeyboardEvent = 'DownArrow' | 'UpArrow' | 'LeftArrow' | 'RightArrow'\n\nexport enum PreviewType {\n  PROJECT = 'project',\n  PUBLIC = 'public',\n  POOL = 'pool'\n}\n\nexport type OpenEditorOptions = {\n  isReadOnly: boolean\n  type: PreviewType\n}\n\nexport type SelectedBaseWearablesByBodyShape = Record<WearableBodyShape, Record<string, Wearable | null>>\n\nexport type CatalystWearable = {\n  id: string\n  description: string\n  thumbnail: string\n  rarity: ''\n  data: {\n    tags: string[]\n    category: WearableCategory\n    replaces?: WearableCategory[]\n    hides?: WearableCategory[]\n    representations: {\n      bodyShapes: WearableBodyShape[]\n      mainFile: string\n      overrideReplaces: []\n      overrideHides: []\n      contents: {\n        key: string\n        url: string\n      }[]\n    }[]\n  }\n  i18n: { code: string; text: string }[]\n  createdAt: number\n  updatedAt: number\n}\n\nexport type PatchedWearable = Wearable & {\n  hides: string[]\n  representations: BodyShapeRespresentation & { overrideReplaces: string[]; overrideHides: string[] }[]\n}\n"]},"metadata":{},"sourceType":"module"}