{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { DEPLOY_BATCHED_THIRD_PARTY_ITEMS_REQUEST, FETCH_THIRD_PARTY_AVAILABLE_SLOTS_REQUEST } from './actions';\nimport { getThirdPartyForCollection, getThirdPartyForItem, isUserManagerOfThirdParty } from './utils';\nexport var getState = function getState(state) {\n  return state.thirdParty;\n};\nexport var getData = function getData(state) {\n  return getState(state).data;\n};\nexport var getItemSlotPrice = function getItemSlotPrice(state) {\n  return getState(state).itemSlotPrice;\n};\nexport var getLoading = function getLoading(state) {\n  return getState(state).loading;\n};\nexport var getError = function getError(state) {\n  return getState(state).error;\n};\nexport var isThirdPartyManager = createSelector(getData, getAddress, function (thirdParties) {\n  var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return Object.values(thirdParties).some(function (thirdParty) {\n    return isUserManagerOfThirdParty(address, thirdParty);\n  });\n});\nexport var getWalletThirdParties = createSelector(getData, getAddress, function (thirdParties) {\n  var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return Object.values(thirdParties).filter(function (thirdParty) {\n    return thirdParty.managers.includes(address);\n  });\n});\nexport var getCollectionThirdParty = function getCollectionThirdParty(state, collection) {\n  var _getThirdPartyForColl;\n\n  return (_getThirdPartyForColl = getThirdPartyForCollection(getData(state), collection)) !== null && _getThirdPartyForColl !== void 0 ? _getThirdPartyForColl : null;\n};\nexport var getItemThirdParty = function getItemThirdParty(state, item) {\n  var _getThirdPartyForItem;\n\n  return (_getThirdPartyForItem = getThirdPartyForItem(getData(state), item)) !== null && _getThirdPartyForItem !== void 0 ? _getThirdPartyForItem : null;\n};\nexport var isFetchingAvailableSlots = function isFetchingAvailableSlots(state) {\n  return isLoadingType(getLoading(state), FETCH_THIRD_PARTY_AVAILABLE_SLOTS_REQUEST);\n};\nexport var isDeployingBatchedThirdPartyItems = function isDeployingBatchedThirdPartyItems(state) {\n  return isLoadingType(getLoading(state), DEPLOY_BATCHED_THIRD_PARTY_ITEMS_REQUEST);\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/thirdParty/selectors.ts"],"names":["createSelector","getAddress","isLoadingType","DEPLOY_BATCHED_THIRD_PARTY_ITEMS_REQUEST","FETCH_THIRD_PARTY_AVAILABLE_SLOTS_REQUEST","getThirdPartyForCollection","getThirdPartyForItem","isUserManagerOfThirdParty","getState","state","thirdParty","getData","data","getItemSlotPrice","itemSlotPrice","getLoading","loading","getError","error","isThirdPartyManager","thirdParties","address","Object","values","some","getWalletThirdParties","filter","managers","includes","getCollectionThirdParty","collection","getItemThirdParty","item","isFetchingAvailableSlots","isDeployingBatchedThirdPartyItems"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,UAAT,QAA2B,kDAA3B;AACA,SAASC,aAAT,QAA8B,mDAA9B;AAMA,SAASC,wCAAT,EAAmDC,yCAAnD,QAAoG,WAApG;AACA,SAASC,0BAAT,EAAqCC,oBAArC,EAA2DC,yBAA3D,QAA4F,SAA5F;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsBA,KAAK,CAACC,UAA5B;AAAA,CAAjB;AACP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACF,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBG,IAAtC;AAAA,CAAhB;AACP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBK,aAAtC;AAAA,CAAzB;AACP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACN,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBO,OAAtC;AAAA,CAAnB;AACP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACR,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBS,KAAtC;AAAA,CAAjB;AAEP,OAAO,IAAMC,mBAAmB,GAAGnB,cAAc,CAC/CW,OAD+C,EAE/CV,UAF+C,EAG/C,UAACmB,YAAD;AAAA,MAAeC,OAAf,uEAAyB,EAAzB;AAAA,SAAgCC,MAAM,CAACC,MAAP,CAAcH,YAAd,EAA4BI,IAA5B,CAAiC,UAAAd,UAAU;AAAA,WAAIH,yBAAyB,CAACc,OAAD,EAAUX,UAAV,CAA7B;AAAA,GAA3C,CAAhC;AAAA,CAH+C,CAA1C;AAMP,OAAO,IAAMe,qBAAqB,GAAGzB,cAAc,CACjDW,OADiD,EAEjDV,UAFiD,EAGjD,UAACmB,YAAD;AAAA,MAAeC,OAAf,uEAAyB,EAAzB;AAAA,SAAgCC,MAAM,CAACC,MAAP,CAAcH,YAAd,EAA4BM,MAA5B,CAAmC,UAAAhB,UAAU;AAAA,WAAIA,UAAU,CAACiB,QAAX,CAAoBC,QAApB,CAA6BP,OAA7B,CAAJ;AAAA,GAA7C,CAAhC;AAAA,CAHiD,CAA5C;AAMP,OAAO,IAAMQ,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACpB,KAAD,EAAmBqB,UAAnB;AAAA;;AAAA,kCACrCzB,0BAA0B,CAACM,OAAO,CAACF,KAAD,CAAR,EAAiBqB,UAAjB,CADW,yEACqB,IADrB;AAAA,CAAhC;AAGP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACtB,KAAD,EAAmBuB,IAAnB;AAAA;;AAAA,kCAAqD1B,oBAAoB,CAACK,OAAO,CAACF,KAAD,CAAR,EAAiBuB,IAAjB,CAAzE,yEAAmG,IAAnG;AAAA,CAA1B;AAEP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACxB,KAAD;AAAA,SACtCP,aAAa,CAACa,UAAU,CAACN,KAAD,CAAX,EAAoBL,yCAApB,CADyB;AAAA,CAAjC;AAGP,OAAO,IAAM8B,iCAAiC,GAAG,SAApCA,iCAAoC,CAACzB,KAAD;AAAA,SAC/CP,aAAa,CAACa,UAAU,CAACN,KAAD,CAAX,EAAoBN,wCAApB,CADkC;AAAA,CAA1C","sourcesContent":["import { createSelector } from 'reselect'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { RootState } from 'modules/common/types'\nimport { Collection } from 'modules/collection/types'\nimport { Item } from 'modules/item/types'\nimport { ThirdPartyState } from './reducer'\nimport { ThirdParty } from './types'\nimport { DEPLOY_BATCHED_THIRD_PARTY_ITEMS_REQUEST, FETCH_THIRD_PARTY_AVAILABLE_SLOTS_REQUEST } from './actions'\nimport { getThirdPartyForCollection, getThirdPartyForItem, isUserManagerOfThirdParty } from './utils'\n\nexport const getState = (state: RootState) => state.thirdParty\nexport const getData = (state: RootState) => getState(state).data\nexport const getItemSlotPrice = (state: RootState) => getState(state).itemSlotPrice\nexport const getLoading = (state: RootState) => getState(state).loading\nexport const getError = (state: RootState) => getState(state).error\n\nexport const isThirdPartyManager = createSelector<RootState, ThirdPartyState['data'], string | undefined, boolean>(\n  getData,\n  getAddress,\n  (thirdParties, address = '') => Object.values(thirdParties).some(thirdParty => isUserManagerOfThirdParty(address, thirdParty))\n)\n\nexport const getWalletThirdParties = createSelector<RootState, ThirdPartyState['data'], string | undefined, ThirdParty[]>(\n  getData,\n  getAddress,\n  (thirdParties, address = '') => Object.values(thirdParties).filter(thirdParty => thirdParty.managers.includes(address))\n)\n\nexport const getCollectionThirdParty = (state: RootState, collection: Collection): ThirdParty | null =>\n  getThirdPartyForCollection(getData(state), collection) ?? null\n\nexport const getItemThirdParty = (state: RootState, item: Item): ThirdParty | null => getThirdPartyForItem(getData(state), item) ?? null\n\nexport const isFetchingAvailableSlots = (state: RootState): boolean =>\n  isLoadingType(getLoading(state), FETCH_THIRD_PARTY_AVAILABLE_SLOTS_REQUEST)\n\nexport const isDeployingBatchedThirdPartyItems = (state: RootState): boolean =>\n  isLoadingType(getLoading(state), DEPLOY_BATCHED_THIRD_PARTY_ITEMS_REQUEST)\n"]},"metadata":{},"sourceType":"module"}