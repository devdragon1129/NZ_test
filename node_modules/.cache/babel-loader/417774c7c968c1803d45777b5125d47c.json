{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _INITIAL_PAGE_STATE,\n    _jsxFileName = \"/opt/work/NZ_test/src/components/ItemEditorPage/LeftPanel/Items/Items.tsx\";\n\nimport * as React from 'react';\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { isThirdParty } from 'lib/urn';\nimport { Section, Loader, Tabs, Button, Icon, Pagination, Header, Modal, Checkbox, Popup } from 'decentraland-ui';\nimport { hasBodyShape } from 'modules/item/utils';\nimport { TP_TRESHOLD_TO_REVIEW } from 'modules/collection/constants';\nimport { LEFT_PANEL_PAGE_SIZE } from '../../constants';\nimport SidebarItem from './SidebarItem';\nimport { ItemPanelTabs } from './Items.types';\nimport './Items.css';\nvar INITIAL_PAGE_STATE = (_INITIAL_PAGE_STATE = {}, _defineProperty(_INITIAL_PAGE_STATE, ItemPanelTabs.TO_REVIEW, 1), _defineProperty(_INITIAL_PAGE_STATE, ItemPanelTabs.REVIEWED, 1), _defineProperty(_INITIAL_PAGE_STATE, ItemPanelTabs.ALL_ITEMS, 1), _INITIAL_PAGE_STATE);\n\nvar Items = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Items, _React$PureComponent);\n\n  function Items() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Items);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Items)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      items: _this.props.items,\n      reviewed: [],\n      currentTab: ItemPanelTabs.TO_REVIEW,\n      currentPages: INITIAL_PAGE_STATE,\n      reviewedTabPage: 1,\n      showGetMoreSamplesModal: false,\n      doNotShowSamplesModalAgain: false\n    };\n\n    _this.isVisible = function (item) {\n      var visibleItems = _this.props.visibleItems;\n      return visibleItems.some(function (_item) {\n        return _item.id === item.id;\n      });\n    };\n\n    _this.handleClick = function (item) {\n      var _this$props = _this.props,\n          visibleItems = _this$props.visibleItems,\n          onSetItems = _this$props.onSetItems,\n          bodyShape = _this$props.bodyShape;\n      if (!hasBodyShape(item, bodyShape)) return;\n      var newVisibleItemIds = visibleItems.filter(function (_item) {\n        return _item.id !== item.id;\n      });\n\n      if (!_this.isVisible(item)) {\n        newVisibleItemIds.push(item);\n      }\n\n      onSetItems(newVisibleItemIds);\n    };\n\n    _this.handleTabChange = function (targetTab) {\n      var onLoadPage = _this.props.onLoadPage;\n      var currentPages = _this.state.currentPages;\n\n      if (targetTab === ItemPanelTabs.ALL_ITEMS) {\n        onLoadPage(currentPages[ItemPanelTabs.ALL_ITEMS]);\n      }\n\n      _this.setState({\n        currentTab: targetTab\n      });\n    };\n\n    _this.handleGetRandomSampleClick = function () {\n      var _this$state = _this.state,\n          doNotShowSamplesModalAgain = _this$state.doNotShowSamplesModalAgain,\n          items = _this$state.items;\n\n      if (doNotShowSamplesModalAgain) {\n        var onLoadRandomPage = _this.props.onLoadRandomPage;\n\n        _this.setState(function (prevState) {\n          return {\n            reviewed: [].concat(_toConsumableArray(prevState.reviewed), _toConsumableArray(items))\n          };\n        }, onLoadRandomPage);\n      } else {\n        _this.setState({\n          showGetMoreSamplesModal: true\n        });\n      }\n    };\n\n    _this.handleReviewedPageChange = function (_event, props) {\n      _this.setState({\n        reviewedTabPage: +props.activePage\n      });\n    };\n\n    _this.handlePageChange = function (_event, props) {\n      var currentTab = _this.state.currentTab;\n      var onLoadPage = _this.props.onLoadPage;\n\n      _this.setState(function (prevState) {\n        return {\n          currentPages: _objectSpread({}, prevState.currentPages, _defineProperty({}, currentTab, +props.activePage))\n        };\n      });\n\n      onLoadPage(+props.activePage);\n    };\n\n    _this.getIsReviewingTPItems = function () {\n      var _this$props2 = _this.props,\n          items = _this$props2.items,\n          isReviewing = _this$props2.isReviewing;\n      return items[0] ? isThirdParty(items[0].urn) && isReviewing : false;\n    };\n\n    _this.renderSidebarItem = function (item) {\n      var _this$props3 = _this.props,\n          selectedCollectionId = _this$props3.selectedCollectionId,\n          selectedItemId = _this$props3.selectedItemId,\n          bodyShape = _this$props3.bodyShape;\n      return /*#__PURE__*/React.createElement(SidebarItem, {\n        key: item.id,\n        item: item,\n        isSelected: selectedItemId === item.id,\n        isVisible: _this.isVisible(item),\n        selectedCollectionId: selectedCollectionId,\n        bodyShape: bodyShape,\n        onClick: _this.handleClick,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.renderTabPagination = function (total) {\n      var _this$state2 = _this.state,\n          currentTab = _this$state2.currentTab,\n          currentPages = _this$state2.currentPages;\n      var currentPage = currentPages[currentTab];\n      var totalPages = Math.ceil(total / LEFT_PANEL_PAGE_SIZE);\n      return totalPages > 1 ? /*#__PURE__*/React.createElement(Pagination, {\n        siblingRange: 0,\n        firstItem: null,\n        lastItem: null,\n        totalPages: totalPages,\n        activePage: currentPage,\n        onPageChange: _this.handlePageChange,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }) : null;\n    };\n\n    _this.renderPaginationStats = function (total) {\n      var _this$state3 = _this.state,\n          currentPages = _this$state3.currentPages,\n          currentTab = _this$state3.currentTab;\n      var currentPage = currentPages[currentTab];\n      var pageStart = (currentPage - 1) * LEFT_PANEL_PAGE_SIZE;\n      var pageEnd = currentPage * LEFT_PANEL_PAGE_SIZE;\n      return /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }, t('item_editor.left_panel.reviewed_tab.page_counter', {\n        pageStart: pageStart,\n        pageEnd: pageEnd > total ? total : pageEnd,\n        total: total\n      }));\n    };\n\n    _this.renderTabContent = function () {\n      var _this$props4 = _this.props,\n          propItems = _this$props4.items,\n          isLoading = _this$props4.isLoading,\n          totalItems = _this$props4.totalItems;\n      var _this$state4 = _this.state,\n          stateItems = _this$state4.items,\n          reviewed = _this$state4.reviewed,\n          currentTab = _this$state4.currentTab,\n          currentPages = _this$state4.currentPages;\n\n      var areTPItems = _this.getIsReviewingTPItems();\n\n      var currentPage = currentPages[currentTab];\n\n      switch (currentTab) {\n        case ItemPanelTabs.TO_REVIEW:\n          return isLoading ? /*#__PURE__*/React.createElement(Loader, {\n            size: \"large\",\n            active: true,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 11\n            }\n          }) : /*#__PURE__*/React.createElement(React.Fragment, null, (areTPItems ? stateItems : propItems).map(_this.renderSidebarItem), !areTPItems && totalItems ? _this.renderTabPagination(totalItems) : null);\n\n        case ItemPanelTabs.REVIEWED:\n          {\n            var paginatedItems = reviewed.slice((currentPage - 1) * LEFT_PANEL_PAGE_SIZE, currentPage * LEFT_PANEL_PAGE_SIZE);\n            return /*#__PURE__*/React.createElement(React.Fragment, null, reviewed.length ? _this.renderPaginationStats(reviewed.length) : null, paginatedItems.map(_this.renderSidebarItem), reviewed.length ? _this.renderTabPagination(reviewed.length) : null);\n          }\n\n        case ItemPanelTabs.ALL_ITEMS:\n          {\n            return isLoading ? /*#__PURE__*/React.createElement(Loader, {\n              size: \"large\",\n              active: true,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 11\n              }\n            }) : /*#__PURE__*/React.createElement(React.Fragment, null, propItems.length && totalItems ? _this.renderPaginationStats(totalItems) : null, propItems.map(_this.renderSidebarItem), propItems.length && totalItems ? _this.renderTabPagination(totalItems) : null);\n          }\n\n        default:\n          return null;\n      }\n    };\n\n    _this.getThresholdToReview = function () {\n      var totalItems = _this.props.totalItems;\n      return Math.floor(totalItems * TP_TRESHOLD_TO_REVIEW);\n    };\n\n    _this.renderTabHeader = function () {\n      var _this$props5 = _this.props,\n          isLoading = _this$props5.isLoading,\n          totalItems = _this$props5.totalItems;\n      var _this$state5 = _this.state,\n          currentTab = _this$state5.currentTab,\n          reviewed = _this$state5.reviewed;\n      var headerInnerContent;\n      var notEnoughItemsToAskMore = !!totalItems && (totalItems < LEFT_PANEL_PAGE_SIZE || reviewed.length === totalItems);\n\n      switch (currentTab) {\n        case ItemPanelTabs.TO_REVIEW:\n          headerInnerContent = /*#__PURE__*/React.createElement(Popup, {\n            content: t('item_editor.top_panel.not_enough_items_to_curate_more'),\n            disabled: !notEnoughItemsToAskMore,\n            position: \"bottom center\",\n            trigger: /*#__PURE__*/React.createElement(\"div\", {\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              disabled: isLoading || notEnoughItemsToAskMore,\n              primary: true,\n              className: \"random-sample-button\",\n              onClick: _this.handleGetRandomSampleClick,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(Icon, {\n              name: \"random\",\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }\n            }), t('item_editor.left_panel.get_random_sample'))),\n            hideOnScroll: true,\n            on: \"hover\",\n            inverted: true,\n            flowing: true,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 11\n            }\n          });\n          break;\n\n        case ItemPanelTabs.REVIEWED:\n          headerInnerContent = /*#__PURE__*/React.createElement(T, {\n            id: \"item_editor.left_panel.reviewed_samples\",\n            values: {\n              reviewed_samples_bold: /*#__PURE__*/React.createElement(\"b\", {\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 38\n                }\n              }, t('item_editor.left_panel.reviewed_samples_bold', {\n                count: reviewed.length\n              })),\n              total: _this.getThresholdToReview()\n            },\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 11\n            }\n          });\n          break;\n\n        default:\n          return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-header\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 12\n        }\n      }, \" \", headerInnerContent, \" \");\n    };\n\n    _this.renderModal = function () {\n      var onLoadRandomPage = _this.props.onLoadRandomPage;\n      var _this$state6 = _this.state,\n          showGetMoreSamplesModal = _this$state6.showGetMoreSamplesModal,\n          doNotShowSamplesModalAgain = _this$state6.doNotShowSamplesModalAgain,\n          items = _this$state6.items;\n      return /*#__PURE__*/React.createElement(Modal, {\n        open: showGetMoreSamplesModal,\n        size: \"small\",\n        className: \"ConfirmNewSampleModal\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, t('item_editor.left_panel.get_more_samples_modal.title')), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(T, {\n        id: \"item_editor.left_panel.get_more_samples_modal.content\",\n        values: {\n          count: 10,\n          tabName: /*#__PURE__*/React.createElement(\"b\", {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 24\n            }\n          }, ItemPanelTabs.REVIEWED)\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkbox-container\",\n        onClick: function onClick() {\n          return _this.setState(function (prevState) {\n            return {\n              doNotShowSamplesModalAgain: !prevState.doNotShowSamplesModalAgain\n            };\n          });\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: doNotShowSamplesModalAgain,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }), t('item_editor.left_panel.get_more_samples_modal.dont_show_again'))), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          return _this.setState({\n            showGetMoreSamplesModal: false\n          });\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }\n      }, t('global.cancel')), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        onClick: function onClick() {\n          return _this.setState(function (prevState) {\n            return {\n              showGetMoreSamplesModal: false,\n              reviewed: [].concat(_toConsumableArray(prevState.reviewed), _toConsumableArray(items))\n            };\n          }, onLoadRandomPage);\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }\n      }, t('item_editor.left_panel.get_more_samples_modal.understood'))));\n    };\n\n    _this.renderTabs = function () {\n      var currentTab = _this.state.currentTab;\n      return /*#__PURE__*/React.createElement(Tabs, {\n        isFullscreen: true,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Tabs.Tab, {\n        active: currentTab === ItemPanelTabs.TO_REVIEW,\n        onClick: function onClick() {\n          return _this.handleTabChange(ItemPanelTabs.TO_REVIEW);\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }\n      }, t('item_editor.left_panel.to_review')), /*#__PURE__*/React.createElement(Tabs.Tab, {\n        active: currentTab === ItemPanelTabs.REVIEWED,\n        onClick: function onClick() {\n          return _this.handleTabChange(ItemPanelTabs.REVIEWED);\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }\n      }, t('item_editor.left_panel.reviewed')), /*#__PURE__*/React.createElement(Tabs.Tab, {\n        active: currentTab === ItemPanelTabs.ALL_ITEMS,\n        onClick: function onClick() {\n          return _this.handleTabChange(ItemPanelTabs.ALL_ITEMS);\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 9\n        }\n      }, t('item_editor.left_panel.all_items')));\n    };\n\n    return _this;\n  }\n\n  _createClass(Items, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props6 = this.props,\n          items = _this$props6.items,\n          onSetReviewedItems = _this$props6.onSetReviewedItems;\n      onSetReviewedItems(items);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props7 = this.props,\n          items = _this$props7.items,\n          selectedCollectionId = _this$props7.selectedCollectionId;\n      var currentTab = this.state.currentTab;\n      var prevItemIds = prevProps.items.map(function (prevItem) {\n        return prevItem.id;\n      });\n\n      if (currentTab === ItemPanelTabs.TO_REVIEW && items.some(function (item) {\n        return !prevItemIds.includes(item.id);\n      })) {\n        this.setState({\n          items: items\n        });\n      } // if selectedCollectionId changes, lets clear the items in the state\n\n\n      if (selectedCollectionId !== prevProps.selectedCollectionId) {\n        this.setState({\n          items: items\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var items = this.state.items;\n      var _this$props8 = this.props,\n          totalItems = _this$props8.totalItems,\n          isLoading = _this$props8.isLoading;\n      if ((items.length === 0 || !totalItems) && isLoading) return /*#__PURE__*/React.createElement(Loader, {\n        active: true,\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 66\n        }\n      });\n      return /*#__PURE__*/React.createElement(Section, {\n        className: \"Items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 7\n        }\n      }, this.getIsReviewingTPItems() ? /*#__PURE__*/React.createElement(React.Fragment, null, this.renderTabs(), this.renderTabHeader()) : null, this.renderTabContent(), this.renderModal());\n    }\n  }]);\n\n  return Items;\n}(React.PureComponent);\n\nexport { Items as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ItemEditorPage/LeftPanel/Items/Items.tsx"],"names":["React","T","t","isThirdParty","Section","Loader","Tabs","Button","Icon","Pagination","Header","Modal","Checkbox","Popup","hasBodyShape","TP_TRESHOLD_TO_REVIEW","LEFT_PANEL_PAGE_SIZE","SidebarItem","ItemPanelTabs","INITIAL_PAGE_STATE","TO_REVIEW","REVIEWED","ALL_ITEMS","Items","state","items","props","reviewed","currentTab","currentPages","reviewedTabPage","showGetMoreSamplesModal","doNotShowSamplesModalAgain","isVisible","item","visibleItems","some","_item","id","handleClick","onSetItems","bodyShape","newVisibleItemIds","filter","push","handleTabChange","targetTab","onLoadPage","setState","handleGetRandomSampleClick","onLoadRandomPage","prevState","handleReviewedPageChange","_event","activePage","handlePageChange","getIsReviewingTPItems","isReviewing","urn","renderSidebarItem","selectedCollectionId","selectedItemId","renderTabPagination","total","currentPage","totalPages","Math","ceil","renderPaginationStats","pageStart","pageEnd","renderTabContent","propItems","isLoading","totalItems","stateItems","areTPItems","map","paginatedItems","slice","length","getThresholdToReview","floor","renderTabHeader","headerInnerContent","notEnoughItemsToAskMore","reviewed_samples_bold","count","renderModal","tabName","renderTabs","onSetReviewedItems","prevProps","prevItemIds","prevItem","includes","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { isThirdParty } from 'lib/urn'\nimport { Section, Loader, Tabs, Button, Icon, Pagination, PaginationProps, Header, Modal, Checkbox, Popup } from 'decentraland-ui'\nimport { Item } from 'modules/item/types'\nimport { hasBodyShape } from 'modules/item/utils'\nimport { TP_TRESHOLD_TO_REVIEW } from 'modules/collection/constants'\nimport { LEFT_PANEL_PAGE_SIZE } from '../../constants'\nimport SidebarItem from './SidebarItem'\nimport { Props, State, ItemPanelTabs } from './Items.types'\nimport './Items.css'\n\nconst INITIAL_PAGE_STATE = {\n  [ItemPanelTabs.TO_REVIEW]: 1,\n  [ItemPanelTabs.REVIEWED]: 1,\n  [ItemPanelTabs.ALL_ITEMS]: 1\n}\n\nexport default class Items extends React.PureComponent<Props, State> {\n  state: State = {\n    items: this.props.items,\n    reviewed: [],\n    currentTab: ItemPanelTabs.TO_REVIEW,\n    currentPages: INITIAL_PAGE_STATE,\n    reviewedTabPage: 1,\n    showGetMoreSamplesModal: false,\n    doNotShowSamplesModalAgain: false\n  }\n\n  componentDidMount() {\n    const { items, onSetReviewedItems } = this.props\n    onSetReviewedItems(items)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { items, selectedCollectionId } = this.props\n    const { currentTab } = this.state\n    const prevItemIds = prevProps.items.map(prevItem => prevItem.id)\n    if (currentTab === ItemPanelTabs.TO_REVIEW && items.some(item => !prevItemIds.includes(item.id))) {\n      this.setState({ items })\n    }\n    // if selectedCollectionId changes, lets clear the items in the state\n    if (selectedCollectionId !== prevProps.selectedCollectionId) {\n      this.setState({ items })\n    }\n  }\n\n  isVisible = (item: Item) => {\n    const { visibleItems } = this.props\n    return visibleItems.some(_item => _item.id === item.id)\n  }\n\n  handleClick = (item: Item) => {\n    const { visibleItems, onSetItems, bodyShape } = this.props\n    if (!hasBodyShape(item, bodyShape)) return\n\n    const newVisibleItemIds = visibleItems.filter(_item => _item.id !== item.id)\n    if (!this.isVisible(item)) {\n      newVisibleItemIds.push(item)\n    }\n    onSetItems(newVisibleItemIds)\n  }\n\n  handleTabChange = (targetTab: ItemPanelTabs) => {\n    const { onLoadPage } = this.props\n    const { currentPages } = this.state\n    if (targetTab === ItemPanelTabs.ALL_ITEMS) {\n      onLoadPage(currentPages[ItemPanelTabs.ALL_ITEMS])\n    }\n    this.setState({ currentTab: targetTab })\n  }\n\n  handleGetRandomSampleClick = () => {\n    const { doNotShowSamplesModalAgain, items } = this.state\n    if (doNotShowSamplesModalAgain) {\n      const { onLoadRandomPage } = this.props\n      this.setState(prevState => ({ reviewed: [...prevState.reviewed, ...items] }), onLoadRandomPage)\n    } else {\n      this.setState({ showGetMoreSamplesModal: true })\n    }\n  }\n\n  handleReviewedPageChange = (_event: React.MouseEvent<HTMLAnchorElement, MouseEvent>, props: PaginationProps) => {\n    this.setState({ reviewedTabPage: +props.activePage! })\n  }\n\n  handlePageChange = (_event: React.MouseEvent<HTMLAnchorElement, MouseEvent>, props: PaginationProps) => {\n    const { currentTab } = this.state\n    const { onLoadPage } = this.props\n    this.setState(prevState => ({ currentPages: { ...prevState.currentPages, [currentTab]: +props.activePage! } }))\n    onLoadPage(+props.activePage!)\n  }\n\n  getIsReviewingTPItems = () => {\n    const { items, isReviewing } = this.props\n    return items[0] ? isThirdParty(items[0].urn) && isReviewing : false\n  }\n\n  renderSidebarItem = (item: Item) => {\n    const { selectedCollectionId, selectedItemId, bodyShape } = this.props\n    return (\n      <SidebarItem\n        key={item.id}\n        item={item}\n        isSelected={selectedItemId === item.id}\n        isVisible={this.isVisible(item)}\n        selectedCollectionId={selectedCollectionId}\n        bodyShape={bodyShape}\n        onClick={this.handleClick}\n      />\n    )\n  }\n\n  renderTabPagination = (total: number) => {\n    const { currentTab, currentPages } = this.state\n    const currentPage = currentPages[currentTab]\n    const totalPages = Math.ceil(total / LEFT_PANEL_PAGE_SIZE)\n    return totalPages > 1 ? (\n      <Pagination\n        siblingRange={0}\n        firstItem={null}\n        lastItem={null}\n        totalPages={totalPages}\n        activePage={currentPage}\n        onPageChange={this.handlePageChange}\n      />\n    ) : null\n  }\n\n  renderPaginationStats = (total: number) => {\n    const { currentPages, currentTab } = this.state\n    const currentPage = currentPages[currentTab]\n    const pageStart = (currentPage - 1) * LEFT_PANEL_PAGE_SIZE\n    const pageEnd = currentPage * LEFT_PANEL_PAGE_SIZE\n    return (\n      <Header sub>\n        {t('item_editor.left_panel.reviewed_tab.page_counter', {\n          pageStart,\n          pageEnd: pageEnd > total ? total : pageEnd,\n          total: total\n        })}\n      </Header>\n    )\n  }\n\n  renderTabContent = () => {\n    const { items: propItems, isLoading, totalItems } = this.props\n    const { items: stateItems, reviewed, currentTab, currentPages } = this.state\n    const areTPItems = this.getIsReviewingTPItems()\n    const currentPage = currentPages[currentTab]\n    switch (currentTab) {\n      case ItemPanelTabs.TO_REVIEW:\n        return isLoading ? (\n          <Loader size=\"large\" active />\n        ) : (\n          <>\n            {(areTPItems ? stateItems : propItems).map(this.renderSidebarItem)}\n            {!areTPItems && totalItems ? this.renderTabPagination(totalItems) : null}\n          </>\n        )\n      case ItemPanelTabs.REVIEWED: {\n        const paginatedItems = reviewed.slice((currentPage - 1) * LEFT_PANEL_PAGE_SIZE, currentPage * LEFT_PANEL_PAGE_SIZE)\n        return (\n          <>\n            {reviewed.length ? this.renderPaginationStats(reviewed.length) : null}\n            {paginatedItems.map(this.renderSidebarItem)}\n            {reviewed.length ? this.renderTabPagination(reviewed.length) : null}\n          </>\n        )\n      }\n      case ItemPanelTabs.ALL_ITEMS: {\n        return isLoading ? (\n          <Loader size=\"large\" active />\n        ) : (\n          <>\n            {propItems.length && totalItems ? this.renderPaginationStats(totalItems) : null}\n            {propItems.map(this.renderSidebarItem)}\n            {propItems.length && totalItems ? this.renderTabPagination(totalItems) : null}\n          </>\n        )\n      }\n      default:\n        return null\n    }\n  }\n\n  getThresholdToReview = () => {\n    const { totalItems } = this.props\n    return Math.floor(totalItems! * TP_TRESHOLD_TO_REVIEW)\n  }\n\n  renderTabHeader = () => {\n    const { isLoading, totalItems } = this.props\n    const { currentTab, reviewed } = this.state\n    let headerInnerContent\n    const notEnoughItemsToAskMore = !!totalItems && (totalItems < LEFT_PANEL_PAGE_SIZE || reviewed.length === totalItems)\n    switch (currentTab) {\n      case ItemPanelTabs.TO_REVIEW:\n        headerInnerContent = (\n          <Popup\n            content={t('item_editor.top_panel.not_enough_items_to_curate_more')}\n            disabled={!notEnoughItemsToAskMore}\n            position=\"bottom center\"\n            trigger={\n              <div>\n                <Button\n                  disabled={isLoading || notEnoughItemsToAskMore}\n                  primary\n                  className=\"random-sample-button\"\n                  onClick={this.handleGetRandomSampleClick}\n                >\n                  <Icon name=\"random\" />\n                  {t('item_editor.left_panel.get_random_sample')}\n                </Button>\n              </div>\n            }\n            hideOnScroll={true}\n            on=\"hover\"\n            inverted\n            flowing\n          />\n        )\n        break\n      case ItemPanelTabs.REVIEWED:\n        headerInnerContent = (\n          <T\n            id=\"item_editor.left_panel.reviewed_samples\"\n            values={{\n              reviewed_samples_bold: <b>{t('item_editor.left_panel.reviewed_samples_bold', { count: reviewed.length })}</b>,\n              total: this.getThresholdToReview()\n            }}\n          />\n        )\n        break\n      default:\n        return null\n    }\n    return <div className=\"tab-header\"> {headerInnerContent} </div>\n  }\n\n  renderModal = () => {\n    const { onLoadRandomPage } = this.props\n    const { showGetMoreSamplesModal, doNotShowSamplesModalAgain, items } = this.state\n    return (\n      <Modal open={showGetMoreSamplesModal} size=\"small\" className=\"ConfirmNewSampleModal\">\n        <Modal.Header>{t('item_editor.left_panel.get_more_samples_modal.title')}</Modal.Header>\n        <Modal.Content>\n          <T\n            id=\"item_editor.left_panel.get_more_samples_modal.content\"\n            values={{\n              count: 10,\n              tabName: <b>{ItemPanelTabs.REVIEWED}</b>\n            }}\n          />\n          <div\n            className=\"checkbox-container\"\n            onClick={() => this.setState(prevState => ({ doNotShowSamplesModalAgain: !prevState.doNotShowSamplesModalAgain }))}\n          >\n            <Checkbox checked={doNotShowSamplesModalAgain} />\n            {t('item_editor.left_panel.get_more_samples_modal.dont_show_again')}\n          </div>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={() => this.setState({ showGetMoreSamplesModal: false })}>{t('global.cancel')}</Button>\n          <Button\n            primary\n            onClick={() =>\n              this.setState(\n                prevState => ({ showGetMoreSamplesModal: false, reviewed: [...prevState.reviewed, ...items] }),\n                onLoadRandomPage\n              )\n            }\n          >\n            {t('item_editor.left_panel.get_more_samples_modal.understood')}\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n\n  // the tabs will be just rendered for the TP items being reviewed\n  renderTabs = () => {\n    const { currentTab } = this.state\n    return (\n      <Tabs isFullscreen>\n        <Tabs.Tab active={currentTab === ItemPanelTabs.TO_REVIEW} onClick={() => this.handleTabChange(ItemPanelTabs.TO_REVIEW)}>\n          {t('item_editor.left_panel.to_review')}\n        </Tabs.Tab>\n        <Tabs.Tab active={currentTab === ItemPanelTabs.REVIEWED} onClick={() => this.handleTabChange(ItemPanelTabs.REVIEWED)}>\n          {t('item_editor.left_panel.reviewed')}\n        </Tabs.Tab>\n        <Tabs.Tab active={currentTab === ItemPanelTabs.ALL_ITEMS} onClick={() => this.handleTabChange(ItemPanelTabs.ALL_ITEMS)}>\n          {t('item_editor.left_panel.all_items')}\n        </Tabs.Tab>\n      </Tabs>\n    )\n  }\n\n  render() {\n    const { items } = this.state\n    const { totalItems, isLoading } = this.props\n    if ((items.length === 0 || !totalItems) && isLoading) return <Loader active size=\"large\" />\n\n    return (\n      <Section className=\"Items\">\n        {this.getIsReviewingTPItems() ? (\n          <>\n            {this.renderTabs()}\n            {this.renderTabHeader()}\n          </>\n        ) : null}\n        {this.renderTabContent()}\n        {this.renderModal()}\n      </Section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}