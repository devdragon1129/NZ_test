{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createTranslationSaga = void 0;\n\nvar effects_1 = require(\"redux-saga/effects\");\n\nvar flat_1 = __importDefault(require(\"flat\"));\n\nvar actions_1 = require(\"./actions\");\n\nvar utils_1 = require(\"./utils\");\n\nvar defaultTranslations = __importStar(require(\"./defaults\"));\n\nfunction createTranslationSaga(_ref) {\n  var _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleFetchTranslationsRequest);\n\n  var getTranslation = _ref.getTranslation,\n      translations = _ref.translations;\n\n  function handleFetchTranslationsRequest(action) {\n    var locale, result, allTransalations;\n    return _regeneratorRuntime.wrap(function handleFetchTranslationsRequest$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            locale = action.payload.locale;\n\n            if (!getTranslation) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 5;\n            return effects_1.call(function () {\n              return getTranslation(locale);\n            });\n\n          case 5:\n            result = _context.sent;\n            _context.next = 13;\n            break;\n\n          case 8:\n            if (!translations) {\n              _context.next = 12;\n              break;\n            }\n\n            result = translations[locale];\n            _context.next = 13;\n            break;\n\n          case 12:\n            throw new Error('You must provide `translations` or `getTranslations`');\n\n          case 13:\n            // merge translations and defaults\n            allTransalations = utils_1.mergeTranslations(flat_1.default(defaultTranslations[locale]), flat_1.default(result));\n            utils_1.setCurrentLocale(locale, allTransalations);\n            _context.next = 17;\n            return effects_1.put(actions_1.fetchTranslationsSuccess(locale, allTransalations));\n\n          case 17:\n            _context.next = 23;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            _context.next = 23;\n            return effects_1.put(actions_1.fetchTranslationsFailure(_context.t0.message));\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked, null, [[0, 19]]);\n  }\n\n  return /*#__PURE__*/_regeneratorRuntime.mark(function translationSaga() {\n    return _regeneratorRuntime.wrap(function translationSaga$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return effects_1.takeEvery(actions_1.FETCH_TRANSLATIONS_REQUEST, handleFetchTranslationsRequest);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, translationSaga);\n  });\n}\n\nexports.createTranslationSaga = createTranslationSaga;","map":null,"metadata":{},"sourceType":"script"}