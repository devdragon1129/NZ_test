{"ast":null,"code":"/**\r\n * Wrapper class for promise with external resolve and reject.\r\n */\nvar Deferred =\n/** @class */\nfunction () {\n  /**\r\n   * Constructor for this deferred object.\r\n   */\n  function Deferred() {\n    var _this = this;\n\n    this.promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n    });\n  }\n\n  Object.defineProperty(Deferred.prototype, \"resolve\", {\n    /**\r\n     * The resolve method of the promise associated with this deferred object.\r\n     */\n    get: function get() {\n      return this._resolve;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Deferred.prototype, \"reject\", {\n    /**\r\n     * The reject method of the promise associated with this deferred object.\r\n     */\n    get: function get() {\n      return this._reject;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Deferred;\n}();\n\nexport { Deferred };","map":null,"metadata":{},"sourceType":"module"}