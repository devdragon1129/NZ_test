{"ast":null,"code":"export var ShareModalType;\n\n(function (ShareModalType) {\n  ShareModalType[\"PROJECT\"] = \"project\";\n  ShareModalType[\"POOL\"] = \"pool\";\n})(ShareModalType || (ShareModalType = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/ShareModal/ShareModal.types.ts"],"names":["ShareModalType"],"mappings":"AA4BA,WAAYA,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c","sourcesContent":["import { ModalProps } from 'decentraland-dapps/dist/providers/ModalProvider/ModalProvider.types'\nimport { Project } from 'modules/project/types'\nimport { shareProject } from 'modules/project/actions'\nimport { shareScene } from 'modules/ui/share/actions'\nimport { loginRequest } from 'modules/identity/actions'\n\nexport type Props = ModalProps & {\n  metadata: ShareModalMetadata\n  project: Project\n  isLoading: boolean\n  isLoggedIn: boolean\n  isScreenshotReady: boolean\n  onUpdate: typeof shareProject\n  onLogin: typeof loginRequest\n  onShare: typeof shareScene\n}\n\nexport type State = {\n  copied: boolean\n  copiedTimer: ReturnType<typeof setTimeout> | undefined\n  type: ShareModalType\n  id: string | null\n}\n\nexport type OwnProps = Pick<Props, 'metadata'>\nexport type MapStateProps = Pick<Props, 'project' | 'isLoading' | 'isLoggedIn' | 'isScreenshotReady'>\nexport type MapDispatchProps = Pick<Props, 'onUpdate' | 'onLogin' | 'onShare'>\n\nexport enum ShareModalType {\n  PROJECT = 'project',\n  POOL = 'pool'\n}\n\nexport type ShareModalMetadata = {\n  type: ShareModalType\n  id: string\n}\n"]},"metadata":{},"sourceType":"module"}