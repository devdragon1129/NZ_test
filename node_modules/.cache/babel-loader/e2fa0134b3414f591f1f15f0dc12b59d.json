{"ast":null,"code":"export var ItemPanelTabs;\n\n(function (ItemPanelTabs) {\n  ItemPanelTabs[\"TO_REVIEW\"] = \"to-review\";\n  ItemPanelTabs[\"REVIEWED\"] = \"reviewed\";\n  ItemPanelTabs[\"ALL_ITEMS\"] = \"all-items\";\n})(ItemPanelTabs || (ItemPanelTabs = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ItemEditorPage/LeftPanel/Items/Items.types.ts"],"names":["ItemPanelTabs"],"mappings":"AAIA,WAAYA,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a","sourcesContent":["import { WearableBodyShape } from '@dcl/schemas'\nimport { setItems } from 'modules/editor/actions'\nimport { Item } from 'modules/item/types'\n\nexport enum ItemPanelTabs {\n  TO_REVIEW = 'to-review',\n  REVIEWED = 'reviewed',\n  ALL_ITEMS = 'all-items'\n}\n\nexport type State = {\n  items: Item[]\n  reviewed: Item[]\n  currentTab: ItemPanelTabs\n  currentPages: Record<ItemPanelTabs, number>\n  reviewedTabPage: number\n  showGetMoreSamplesModal: boolean\n  doNotShowSamplesModalAgain: boolean\n}\n\nexport type Props = {\n  items: Item[]\n  isLoading: boolean\n  totalItems: number | null\n  selectedItemId: string | null\n  selectedCollectionId: string | null\n  isReviewing: boolean\n  visibleItems: Item[]\n  hasHeader: boolean\n  bodyShape: WearableBodyShape\n  onSetItems: typeof setItems\n  onLoadRandomPage: () => void\n  onLoadPage: (page: number) => void\n  onSetReviewedItems: (itemIds: Item[]) => void\n}\n"]},"metadata":{},"sourceType":"module"}