{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getCurrentProject } from 'modules/project/selectors';\nimport { closeEditor, zoomIn, zoomOut, resetCamera } from 'modules/editor/actions';\nimport { isSidebarOpen, isPreviewing, isReady, isFetching } from 'modules/editor/selectors';\nimport { openModal } from 'modules/modal/actions';\nimport { numItems } from 'modules/scene/selectors';\nimport EditorPage from './EditorPage';\nimport { isLoggedIn } from 'modules/identity/selectors';\n\nvar mapState = function mapState(state) {\n  return {\n    isPreviewing: isPreviewing(state),\n    isSidebarOpen: isSidebarOpen(state),\n    isLoading: !isReady(state),\n    isFetching: isFetching(state),\n    isLoggedIn: isLoggedIn(state),\n    currentProject: getCurrentProject(state),\n    numItems: numItems(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onOpenModal: function onOpenModal(name) {\n      return dispatch(openModal(name));\n    },\n    onCloseEditor: function onCloseEditor() {\n      return dispatch(closeEditor());\n    },\n    onZoomIn: function onZoomIn() {\n      return dispatch(zoomIn());\n    },\n    onZoomOut: function onZoomOut() {\n      return dispatch(zoomOut());\n    },\n    onResetCamera: function onResetCamera() {\n      return dispatch(resetCamera());\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditorPage);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/EditorPage/EditorPage.container.ts"],"names":["connect","getCurrentProject","closeEditor","zoomIn","zoomOut","resetCamera","isSidebarOpen","isPreviewing","isReady","isFetching","openModal","numItems","EditorPage","isLoggedIn","mapState","state","isLoading","currentProject","mapDispatch","dispatch","onOpenModal","name","onCloseEditor","onZoomIn","onZoomOut","onResetCamera"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,2BAAlC;AAEA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,OAA9B,EAAuCC,WAAvC,QAA0D,wBAA1D;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,OAAtC,EAA+CC,UAA/C,QAAiE,0BAAjE;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,4BAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDR,IAAAA,YAAY,EAAEA,YAAY,CAACQ,KAAD,CAD2B;AAErDT,IAAAA,aAAa,EAAEA,aAAa,CAACS,KAAD,CAFyB;AAGrDC,IAAAA,SAAS,EAAE,CAACR,OAAO,CAACO,KAAD,CAHkC;AAIrDN,IAAAA,UAAU,EAAEA,UAAU,CAACM,KAAD,CAJ+B;AAKrDF,IAAAA,UAAU,EAAEA,UAAU,CAACE,KAAD,CAL+B;AAMrDE,IAAAA,cAAc,EAAEhB,iBAAiB,CAACc,KAAD,CANoB;AAOrDJ,IAAAA,QAAQ,EAAEA,QAAQ,CAACI,KAAD;AAPmC,GAAtC;AAAA,CAAjB;;AAUA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,WAAW,EAAE,qBAAAC,IAAI;AAAA,aAAIF,QAAQ,CAACT,SAAS,CAACW,IAAD,CAAV,CAAZ;AAAA,KAD+C;AAEhEC,IAAAA,aAAa,EAAE;AAAA,aAAMH,QAAQ,CAACjB,WAAW,EAAZ,CAAd;AAAA,KAFiD;AAGhEqB,IAAAA,QAAQ,EAAE;AAAA,aAAMJ,QAAQ,CAAChB,MAAM,EAAP,CAAd;AAAA,KAHsD;AAIhEqB,IAAAA,SAAS,EAAE;AAAA,aAAML,QAAQ,CAACf,OAAO,EAAR,CAAd;AAAA,KAJqD;AAKhEqB,IAAAA,aAAa,EAAE;AAAA,aAAMN,QAAQ,CAACd,WAAW,EAAZ,CAAd;AAAA;AALiD,GAA9C;AAAA,CAApB;;AAQA,eAAeL,OAAO,CAACc,QAAD,EAAWI,WAAX,CAAP,CAA+BN,UAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\n\nimport { getCurrentProject } from 'modules/project/selectors'\nimport { RootState } from 'modules/common/types'\nimport { closeEditor, zoomIn, zoomOut, resetCamera } from 'modules/editor/actions'\nimport { isSidebarOpen, isPreviewing, isReady, isFetching } from 'modules/editor/selectors'\nimport { openModal } from 'modules/modal/actions'\nimport { numItems } from 'modules/scene/selectors'\nimport { MapStateProps, MapDispatch, MapDispatchProps } from './EditorPage.types'\nimport EditorPage from './EditorPage'\nimport { isLoggedIn } from 'modules/identity/selectors'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  isPreviewing: isPreviewing(state),\n  isSidebarOpen: isSidebarOpen(state),\n  isLoading: !isReady(state),\n  isFetching: isFetching(state),\n  isLoggedIn: isLoggedIn(state),\n  currentProject: getCurrentProject(state),\n  numItems: numItems(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onOpenModal: name => dispatch(openModal(name)),\n  onCloseEditor: () => dispatch(closeEditor()),\n  onZoomIn: () => dispatch(zoomIn()),\n  onZoomOut: () => dispatch(zoomOut()),\n  onResetCamera: () => dispatch(resetCamera())\n})\n\nexport default connect(mapState, mapDispatch)(EditorPage)\n"]},"metadata":{},"sourceType":"module"}