{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.modalReducer = void 0;\n\nvar actions_1 = require(\"./actions\");\n\nvar INITIAL_STATE = {};\n\nfunction modalReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions_1.OPEN_MODAL:\n      {\n        var _action$payload = action.payload,\n            name = _action$payload.name,\n            metadata = _action$payload.metadata;\n        return Object.assign(Object.assign({}, state), _defineProperty({}, name, {\n          open: true,\n          name: name,\n          metadata: metadata\n        }));\n      }\n\n    case actions_1.CLOSE_MODAL:\n      {\n        var _name = action.payload.name;\n\n        if (state[_name]) {\n          return Object.assign(Object.assign({}, state), _defineProperty({}, _name, Object.assign(Object.assign({}, state[_name]), {\n            open: false\n          })));\n        } else {\n          // Invalid modal name\n          return state;\n        }\n      }\n\n    case actions_1.TOGGLE_MODAL:\n      {\n        var _name2 = action.payload.name;\n        var modal = state[_name2] || {\n          open: false\n        };\n        return Object.assign(Object.assign({}, state), _defineProperty({}, _name2, Object.assign(Object.assign({}, modal), {\n          open: !modal.open\n        })));\n      }\n\n    case actions_1.CLOSE_ALL_MODALS:\n      {\n        var newState = {};\n\n        for (var _name3 in state) {\n          newState[_name3] = Object.assign(Object.assign({}, state[_name3]), {\n            open: false\n          });\n        }\n\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}\n\nexports.modalReducer = modalReducer;","map":null,"metadata":{},"sourceType":"script"}