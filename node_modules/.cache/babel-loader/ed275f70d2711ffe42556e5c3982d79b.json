{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { SceneLoader } from \"../../Loading/sceneLoader\";\nimport { WebVRController } from \"./webVRController\";\nimport { PoseEnabledControllerHelper } from \"./poseEnabledController\";\n/**\r\n * Generic Controller\r\n */\n\nvar GenericController =\n/** @class */\nfunction (_super) {\n  __extends(GenericController, _super);\n  /**\r\n   * Creates a new GenericController from a gamepad\r\n   * @param vrGamepad the gamepad that the controller should be created from\r\n   */\n\n\n  function GenericController(vrGamepad) {\n    return _super.call(this, vrGamepad) || this;\n  }\n  /**\r\n   * Implements abstract method on WebVRController class, loading controller meshes and calling this.attachToMesh if successful.\r\n   * @param scene scene in which to add meshes\r\n   * @param meshLoaded optional callback function that will be called if the mesh loads successfully.\r\n   */\n\n\n  GenericController.prototype.initControllerMesh = function (scene, meshLoaded) {\n    var _this = this;\n\n    SceneLoader.ImportMesh(\"\", GenericController.MODEL_BASE_URL, GenericController.MODEL_FILENAME, scene, function (newMeshes) {\n      _this._defaultModel = newMeshes[1];\n\n      _this.attachToMesh(_this._defaultModel);\n\n      if (meshLoaded) {\n        meshLoaded(_this._defaultModel);\n      }\n    });\n  };\n  /**\r\n   * Called once for each button that changed state since the last frame\r\n   * @param buttonIdx Which button index changed\r\n   * @param state New state of the button\r\n   * @param changes Which properties on the state changed since last frame\r\n   */\n\n\n  GenericController.prototype._handleButtonChange = function (buttonIdx, state, changes) {\n    console.log(\"Button id: \" + buttonIdx + \"state: \");\n    console.dir(state);\n  };\n  /**\r\n   * Base Url for the controller model.\r\n   */\n\n\n  GenericController.MODEL_BASE_URL = 'https://controllers.babylonjs.com/generic/';\n  /**\r\n   * File name for the controller model.\r\n   */\n\n  GenericController.MODEL_FILENAME = 'generic.babylon';\n  return GenericController;\n}(WebVRController);\n\nexport { GenericController };\n\nPoseEnabledControllerHelper._DefaultControllerFactory = function (gamepadInfo) {\n  return new GenericController(gamepadInfo);\n};","map":null,"metadata":{},"sourceType":"module"}