{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar selectors_1 = require(\"../../modules/wallet/selectors\");\n\nvar chainConfiguration_1 = require(\"../../lib/chainConfiguration\");\n\nvar eth_1 = require(\"../../lib/eth\");\n\nvar ChainProvider_1 = __importDefault(require(\"./ChainProvider\"));\n\nvar mapState = function mapState(state) {\n  var chainId = selectors_1.getChainId(state) || null;\n  var network = chainId && chainConfiguration_1.getChainConfiguration(chainId).network;\n  var expectedChainId = eth_1.getConnectedProviderChainId();\n  var config = expectedChainId && chainConfiguration_1.getChainConfiguration(expectedChainId);\n  var isConnected = !!chainId && !!config;\n  var isSupported = isConnected && chainId === expectedChainId;\n  var isPartiallySupported = isConnected && !isSupported && Object.values(config.networkMapping).some(function (mappedChainId) {\n    return mappedChainId === chainId;\n  });\n  var isUnsupported = isConnected && !isSupported && !isPartiallySupported;\n  return {\n    chainId: chainId,\n    network: network,\n    isConnected: isConnected,\n    isSupported: isSupported,\n    isPartiallySupported: isPartiallySupported,\n    isUnsupported: isUnsupported\n  };\n};\n\nvar mapDispatch = function mapDispatch(_dispatch) {\n  return {};\n};\n\nexports.default = react_redux_1.connect(mapState, mapDispatch)(ChainProvider_1.default);","map":null,"metadata":{},"sourceType":"script"}