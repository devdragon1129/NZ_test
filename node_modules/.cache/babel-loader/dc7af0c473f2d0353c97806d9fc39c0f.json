{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/LandPage/LandPage.tsx\";\nimport * as React from 'react';\nimport { Table, Row, Radio, Column, Header, Pagination, Section, Container, Popup } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Chip from 'components/Chip';\nimport { Atlas } from 'components/Atlas';\nimport { NavigationTab } from 'components/Navigation/Navigation.types';\nimport LoggedInDetailPage from 'components/LoggedInDetailPage';\nimport { RoleType } from 'modules/land/types';\nimport { LandPageView } from 'modules/ui/land/types';\nimport { getCoords } from 'modules/land/utils';\nimport TableRow from './TableRow';\nimport './LandPage.css';\nvar PAGE_SIZE = 20;\n\nvar LandPage = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(LandPage, _React$PureComponent);\n\n  function LandPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LandPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LandPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showOwner: true,\n      showOperator: true,\n      page: 1,\n      selectedLand: 0\n    };\n\n    _this.handleNext = function () {\n      var selectedLand = _this.state.selectedLand;\n\n      var lands = _this.getFilteredLands();\n\n      if (selectedLand === lands.length - 1) {\n        _this.setState({\n          selectedLand: 0\n        });\n      } else {\n        _this.setState({\n          selectedLand: selectedLand + 1\n        });\n      }\n    };\n\n    _this.handlePrev = function () {\n      var selectedLand = _this.state.selectedLand;\n\n      if (selectedLand === 0) {\n        var lands = _this.getFilteredLands();\n\n        _this.setState({\n          selectedLand: lands.length - 1\n        });\n      } else {\n        _this.setState({\n          selectedLand: selectedLand - 1\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(LandPage, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.lands !== this.props.lands) {\n        this.setState({\n          page: 1\n        });\n      }\n    }\n  }, {\n    key: \"renderLand\",\n    value: function renderLand() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          view = _this$props.view,\n          onSetView = _this$props.onSetView;\n      var _this$state = this.state,\n          page = _this$state.page,\n          showOwner = _this$state.showOwner,\n          showOperator = _this$state.showOperator,\n          selectedLand = _this$state.selectedLand;\n      var filteredLands = this.getFilteredLands();\n      var totalPages = Math.ceil(filteredLands.length / PAGE_SIZE);\n      var selectedX;\n      var selectedY;\n\n      if (filteredLands.length > 1 && selectedLand < filteredLands.length) {\n        var _getCoords = getCoords(filteredLands[selectedLand]),\n            x = _getCoords.x,\n            y = _getCoords.y;\n\n        selectedX = x;\n        selectedY = y;\n      } else if (filteredLands.length === 1) {\n        var _getCoords2 = getCoords(filteredLands[0]),\n            _x = _getCoords2.x,\n            _y = _getCoords2.y;\n\n        selectedX = _x;\n        selectedY = _y;\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        height: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, t('land_page.results', {\n        count: filteredLands.length.toLocaleString()\n      })), view === LandPageView.ATLAS && filteredLands.length > 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow prev\",\n        onClick: this.handlePrev,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow next\",\n        onClick: this.handleNext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }\n      })) : null)), /*#__PURE__*/React.createElement(Column, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        trigger: /*#__PURE__*/React.createElement(Radio, {\n          className: \"owner-checkbox\",\n          value: \"owner\",\n          checked: showOwner,\n          onClick: function onClick() {\n            return _this2.setState({\n              showOwner: !showOwner\n            });\n          },\n          label: t('land_page.owner'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 23\n          }\n        }),\n        content: \"These are lands you own.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Popup, {\n        trigger: /*#__PURE__*/React.createElement(Radio, {\n          className: \"operator-checkbox\",\n          value: \"operator\",\n          checked: showOperator,\n          onClick: function onClick() {\n            return _this2.setState({\n              showOperator: !showOperator\n            });\n          },\n          label: t('land_page.operator'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }\n        }),\n        className: \"operator-popup\",\n        content: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 30\n          }\n        }, t('land_page.owner_permission')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Chip, {\n        className: \"grid\",\n        icon: \"table\",\n        isActive: view === LandPageView.GRID,\n        onClick: function onClick() {\n          return onSetView(LandPageView.GRID);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Chip, {\n        className: \"atlas\",\n        icon: \"pin\",\n        isActive: view === LandPageView.ATLAS,\n        onClick: function onClick() {\n          return onSetView(LandPageView.ATLAS);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      })))))), view === LandPageView.GRID ? /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Section, {\n        className: \"table-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, filteredLands.length > 0 ? /*#__PURE__*/React.createElement(Table, {\n        basic: \"very\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        width: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 23\n        }\n      }, t('land_page.name')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        width: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 23\n        }\n      }, t('land_page.coords')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        width: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }\n      }, t('land_page.owner')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        width: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 23\n        }\n      }, t('land_page.operators')), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        width: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }\n      }, t('land_page.online_scenes')))), /*#__PURE__*/React.createElement(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, filteredLands.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE).map(function (land) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          land: land,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 23\n          }\n        });\n      }))) : null), totalPages > 1 ? /*#__PURE__*/React.createElement(Section, {\n        className: \"pagination-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Pagination, {\n        firstItem: null,\n        lastItem: null,\n        activePage: page,\n        onPageChange: function onPageChange(_event, props) {\n          return _this2.setState({\n            page: +props.activePage\n          });\n        },\n        totalPages: totalPages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      })) : null) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"atlas-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Atlas, {\n        className: \"main\",\n        x: selectedX,\n        y: selectedY,\n        showOperator: showOperator,\n        showOwner: showOwner,\n        hasPopup: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      })));\n    }\n  }, {\n    key: \"getFilteredLands\",\n    value: function getFilteredLands() {\n      var lands = this.props.lands;\n      var _this$state2 = this.state,\n          showOwner = _this$state2.showOwner,\n          showOperator = _this$state2.showOperator;\n      var filteredLands = lands.filter(function (land) {\n        if (showOwner && land.role === RoleType.OWNER) {\n          return true;\n        }\n\n        if (showOperator && land.role === RoleType.OPERATOR) {\n          return true;\n        }\n\n        return false;\n      });\n      return filteredLands;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          isLoading = _this$props2.isLoading,\n          view = _this$props2.view;\n      return /*#__PURE__*/React.createElement(LoggedInDetailPage, {\n        className: \"LandPage \".concat(view, \"-view\"),\n        activeTab: NavigationTab.LAND,\n        isLoading: isLoading,\n        isPageFullscreen: true,\n        isFooterFullscreen: view === LandPageView.ATLAS,\n        isNavigationFullscreen: view === LandPageView.ATLAS,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }\n      }, this.renderLand());\n    }\n  }]);\n\n  return LandPage;\n}(React.PureComponent);\n\nexport { LandPage as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/LandPage/LandPage.tsx"],"names":["React","Table","Row","Radio","Column","Header","Pagination","Section","Container","Popup","t","Chip","Atlas","NavigationTab","LoggedInDetailPage","RoleType","LandPageView","getCoords","TableRow","PAGE_SIZE","LandPage","state","showOwner","showOperator","page","selectedLand","handleNext","lands","getFilteredLands","length","setState","handlePrev","nextProps","props","view","onSetView","filteredLands","totalPages","Math","ceil","selectedX","selectedY","x","y","count","toLocaleString","ATLAS","GRID","slice","map","land","_event","activePage","filter","role","OWNER","OPERATOR","isLoading","LAND","renderLand","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Table, Row, Radio, Column, Header, Pagination, Section, Container, Popup } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport Chip from 'components/Chip'\nimport { Atlas } from 'components/Atlas'\nimport { NavigationTab } from 'components/Navigation/Navigation.types'\nimport LoggedInDetailPage from 'components/LoggedInDetailPage'\nimport { RoleType } from 'modules/land/types'\nimport { LandPageView } from 'modules/ui/land/types'\nimport { getCoords } from 'modules/land/utils'\nimport TableRow from './TableRow'\nimport { Props, State } from './LandPage.types'\nimport './LandPage.css'\n\nconst PAGE_SIZE = 20\n\nexport default class LandPage extends React.PureComponent<Props, State> {\n  state: State = {\n    showOwner: true,\n    showOperator: true,\n    page: 1,\n    selectedLand: 0\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.lands !== this.props.lands) {\n      this.setState({ page: 1 })\n    }\n  }\n\n  renderLand() {\n    const { view, onSetView } = this.props\n    const { page, showOwner, showOperator, selectedLand } = this.state\n\n    const filteredLands = this.getFilteredLands()\n\n    const totalPages = Math.ceil(filteredLands.length / PAGE_SIZE)\n\n    let selectedX\n    let selectedY\n    if (filteredLands.length > 1 && selectedLand < filteredLands.length) {\n      const { x, y } = getCoords(filteredLands[selectedLand])\n      selectedX = x\n      selectedY = y\n    } else if (filteredLands.length === 1) {\n      const { x, y } = getCoords(filteredLands[0])\n      selectedX = x\n      selectedY = y\n    }\n    return (\n      <>\n        <div className=\"filters\">\n          <Container>\n            <Row height={30}>\n              <Column>\n                <Row>\n                  <Header sub>{t('land_page.results', { count: filteredLands.length.toLocaleString() })}</Header>\n                  {view === LandPageView.ATLAS && filteredLands.length > 1 ? (\n                    <>\n                      <div className=\"arrow prev\" onClick={this.handlePrev}></div>\n                      <div className=\"arrow next\" onClick={this.handleNext}></div>\n                    </>\n                  ) : null}\n                </Row>\n              </Column>\n              <Column align=\"right\">\n                <Row>\n                  <Popup\n                    trigger={\n                      <Radio\n                        className=\"owner-checkbox\"\n                        value=\"owner\"\n                        checked={showOwner}\n                        onClick={() => this.setState({ showOwner: !showOwner })}\n                        label={t('land_page.owner')}\n                      />\n                    }\n                    content=\"These are lands you own.\"\n                  />\n                  <Popup\n                    trigger={\n                      <Radio\n                        className=\"operator-checkbox\"\n                        value=\"operator\"\n                        checked={showOperator}\n                        onClick={() => this.setState({ showOperator: !showOperator })}\n                        label={t('land_page.operator')}\n                      />\n                    }\n                    className=\"operator-popup\"\n                    content={<div>{t('land_page.owner_permission')}</div>}\n                  />\n                  <Chip className=\"grid\" icon=\"table\" isActive={view === LandPageView.GRID} onClick={() => onSetView(LandPageView.GRID)} />\n                  <Chip className=\"atlas\" icon=\"pin\" isActive={view === LandPageView.ATLAS} onClick={() => onSetView(LandPageView.ATLAS)} />\n                </Row>\n              </Column>\n            </Row>\n          </Container>\n        </div>\n        {view === LandPageView.GRID ? (\n          <Container>\n            <Section className=\"table-section\">\n              {filteredLands.length > 0 ? (\n                <Table basic=\"very\">\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell width=\"4\">{t('land_page.name')}</Table.HeaderCell>\n                      <Table.HeaderCell width=\"2\">{t('land_page.coords')}</Table.HeaderCell>\n                      <Table.HeaderCell width=\"2\">{t('land_page.owner')}</Table.HeaderCell>\n                      <Table.HeaderCell width=\"4\">{t('land_page.operators')}</Table.HeaderCell>\n                      <Table.HeaderCell width=\"4\">{t('land_page.online_scenes')}</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n\n                  <Table.Body>\n                    {filteredLands.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE).map(land => (\n                      <TableRow land={land} />\n                    ))}\n                  </Table.Body>\n                </Table>\n              ) : null}\n            </Section>\n            {totalPages > 1 ? (\n              <Section className=\"pagination-section\">\n                <Pagination\n                  firstItem={null}\n                  lastItem={null}\n                  activePage={page}\n                  onPageChange={(_event, props) => this.setState({ page: +props.activePage! })}\n                  totalPages={totalPages}\n                ></Pagination>\n              </Section>\n            ) : null}\n          </Container>\n        ) : (\n          <div className=\"atlas-wrapper\">\n            <Atlas className=\"main\" x={selectedX} y={selectedY} showOperator={showOperator} showOwner={showOwner} hasPopup />\n          </div>\n        )}\n      </>\n    )\n  }\n\n  getFilteredLands() {\n    const { lands } = this.props\n    const { showOwner, showOperator } = this.state\n\n    const filteredLands = lands.filter(land => {\n      if (showOwner && land.role === RoleType.OWNER) {\n        return true\n      }\n      if (showOperator && land.role === RoleType.OPERATOR) {\n        return true\n      }\n      return false\n    })\n\n    return filteredLands\n  }\n\n  handleNext = () => {\n    const { selectedLand } = this.state\n    const lands = this.getFilteredLands()\n    if (selectedLand === lands.length - 1) {\n      this.setState({ selectedLand: 0 })\n    } else {\n      this.setState({ selectedLand: selectedLand + 1 })\n    }\n  }\n\n  handlePrev = () => {\n    const { selectedLand } = this.state\n    if (selectedLand === 0) {\n      const lands = this.getFilteredLands()\n      this.setState({ selectedLand: lands.length - 1 })\n    } else {\n      this.setState({ selectedLand: selectedLand - 1 })\n    }\n  }\n\n  render() {\n    const { isLoading, view } = this.props\n    return (\n      <LoggedInDetailPage\n        className={`LandPage ${view}-view`}\n        activeTab={NavigationTab.LAND}\n        isLoading={isLoading}\n        isPageFullscreen={true}\n        isFooterFullscreen={view === LandPageView.ATLAS}\n        isNavigationFullscreen={view === LandPageView.ATLAS}\n      >\n        {this.renderLand()}\n      </LoggedInDetailPage>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}