{"ast":null,"code":"/**\r\n * \"Static Class\" containing a few commonly used helper while dealing with material for rendering purpose.\r\n *\r\n * It is complementary with MaterialHelper but provides completely independent functions (for tree shaking sake)\r\n *\r\n * This works by convention in BabylonJS but is meant to be use only with shader following the in place naming rules and conventions.\r\n */\nvar ThinMaterialHelper =\n/** @class */\nfunction () {\n  function ThinMaterialHelper() {}\n  /**\r\n   * Binds the clip plane information from the holder to the effect.\r\n   * @param effect The effect we are binding the data to\r\n   * @param holder The entity containing the clip plane information\r\n   */\n\n\n  ThinMaterialHelper.BindClipPlane = function (effect, holder) {\n    if (holder.clipPlane) {\n      var clipPlane = holder.clipPlane;\n      effect.setFloat4(\"vClipPlane\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n\n    if (holder.clipPlane2) {\n      var clipPlane = holder.clipPlane2;\n      effect.setFloat4(\"vClipPlane2\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n\n    if (holder.clipPlane3) {\n      var clipPlane = holder.clipPlane3;\n      effect.setFloat4(\"vClipPlane3\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n\n    if (holder.clipPlane4) {\n      var clipPlane = holder.clipPlane4;\n      effect.setFloat4(\"vClipPlane4\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n\n    if (holder.clipPlane5) {\n      var clipPlane = holder.clipPlane5;\n      effect.setFloat4(\"vClipPlane5\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n\n    if (holder.clipPlane6) {\n      var clipPlane = holder.clipPlane6;\n      effect.setFloat4(\"vClipPlane6\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n  };\n\n  return ThinMaterialHelper;\n}();\n\nexport { ThinMaterialHelper };","map":null,"metadata":{},"sourceType":"module"}