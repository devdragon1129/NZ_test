{"ast":null,"code":"import { CollectionType } from 'modules/collection/types';\nimport { injectPagination, injectParams } from './utils';\nexport var locations = {\n  root: function root() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return injectPagination('/', options);\n  },\n  sceneEditor: function sceneEditor() {\n    var projectId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':projectId';\n    return \"/scene-editor/\".concat(projectId);\n  },\n  poolSearch: function poolSearch(options) {\n    return injectParams(injectPagination('/pools', options), {\n      group: 'group',\n      ethAddress: 'eth_address'\n    }, options);\n  },\n  poolView: function poolView() {\n    var projectId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':projectId';\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ':type(pool)';\n    return \"/view/\".concat(type, \"/\").concat(projectId);\n  },\n  sceneView: function sceneView() {\n    var projectId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':projectId';\n    return \"/view/\".concat(projectId);\n  },\n  signIn: function signIn() {\n    return '/sign-in';\n  },\n  mobile: function mobile() {\n    return '/mobile';\n  },\n  notFound: function notFound() {\n    return '/404';\n  },\n  callback: function callback() {\n    return '/callback';\n  },\n  land: function land() {\n    return '/land';\n  },\n  landDetail: function landDetail() {\n    var landId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':landId';\n    return \"/land/\".concat(landId);\n  },\n  landTransfer: function landTransfer() {\n    var landId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':landId';\n    return \"/land/\".concat(landId, \"/transfer\");\n  },\n  landEdit: function landEdit() {\n    var landId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':landId';\n    return \"/land/\".concat(landId, \"/edit\");\n  },\n  landSelectENS: function landSelectENS() {\n    var landId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':landId';\n    return \"/land/\".concat(landId, \"/select-name\");\n  },\n  landAssignENS: function landAssignENS() {\n    var landId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':landId';\n    var subdomain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ':subdomain';\n    return \"/land/\".concat(landId, \"/name/\").concat(subdomain, \"/assign\");\n  },\n  ensSelectLand: function ensSelectLand() {\n    var subdomain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':subdomain';\n    return \"/name/\".concat(subdomain, \"/set-land\");\n  },\n  claimENS: function claimENS() {\n    return '/claim-name';\n  },\n  landOperator: function landOperator() {\n    var landId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':landId';\n    return \"/land/\".concat(landId, \"/operator\");\n  },\n  activity: function activity() {\n    return \"/activity\";\n  },\n  settings: function settings() {\n    return \"/settings\";\n  },\n  sceneDetail: function sceneDetail() {\n    var projectId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':projectId';\n    return \"/scenes/\".concat(projectId);\n  },\n  collections: function collections() {\n    return '/collections';\n  },\n  itemDetail: function itemDetail() {\n    var itemId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':itemId';\n    return \"/items/\".concat(itemId);\n  },\n  collectionDetail: function collectionDetail() {\n    var collectionId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':collectionId';\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CollectionType.DECENTRALAND;\n\n    switch (type) {\n      case CollectionType.DECENTRALAND:\n        return \"/collections/\".concat(collectionId);\n\n      case CollectionType.THIRD_PARTY:\n        return locations.thirdPartyCollectionDetail(collectionId);\n\n      default:\n        throw new Error(\"Invalid collection type \".concat(type));\n    }\n  },\n  thirdPartyCollectionDetail: function thirdPartyCollectionDetail() {\n    var collectionId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':collectionId';\n    var options = arguments.length > 1 ? arguments[1] : undefined;\n    return injectPagination(\"/thirdPartyCollections/\".concat(collectionId), options);\n  },\n  itemEditor: function itemEditor(options) {\n    return injectParams(\"/item-editor\", {\n      itemId: 'item',\n      collectionId: 'collection',\n      isReviewing: 'reviewing'\n    }, options);\n  },\n  ens: function ens() {\n    return '/names';\n  },\n  curation: function curation() {\n    return '/curation';\n  }\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/routing/locations.ts"],"names":["CollectionType","injectPagination","injectParams","locations","root","options","sceneEditor","projectId","poolSearch","group","ethAddress","poolView","type","sceneView","signIn","mobile","notFound","callback","land","landDetail","landId","landTransfer","landEdit","landSelectENS","landAssignENS","subdomain","ensSelectLand","claimENS","landOperator","activity","settings","sceneDetail","collections","itemDetail","itemId","collectionDetail","collectionId","DECENTRALAND","THIRD_PARTY","thirdPartyCollectionDetail","Error","itemEditor","isReviewing","ens","curation"],"mappings":"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","sourcesContent":["import { CollectionType } from 'modules/collection/types'\nimport { PaginationOptions, injectPagination, injectParams } from './utils'\n\ntype ItemEditorParams = { itemId?: string; collectionId?: string; isReviewing?: string }\n\nexport const locations = {\n  root: (options: PaginationOptions = {}) => injectPagination('/', options),\n  sceneEditor: (projectId = ':projectId') => `/scene-editor/${projectId}`,\n  poolSearch: (options?: PaginationOptions) =>\n    injectParams(injectPagination('/pools', options), { group: 'group', ethAddress: 'eth_address' }, options),\n  poolView: (projectId = ':projectId', type = ':type(pool)') => `/view/${type}/${projectId}`,\n  sceneView: (projectId = ':projectId') => `/view/${projectId}`,\n  signIn: () => '/sign-in',\n  mobile: () => '/mobile',\n  notFound: () => '/404',\n  callback: () => '/callback',\n  land: () => '/land',\n  landDetail: (landId = ':landId') => `/land/${landId}`,\n  landTransfer: (landId = ':landId') => `/land/${landId}/transfer`,\n  landEdit: (landId = ':landId') => `/land/${landId}/edit`,\n  landSelectENS: (landId = ':landId') => `/land/${landId}/select-name`,\n  landAssignENS: (landId = ':landId', subdomain = ':subdomain') => `/land/${landId}/name/${subdomain}/assign`,\n  ensSelectLand: (subdomain = ':subdomain') => `/name/${subdomain}/set-land`,\n  claimENS: () => '/claim-name',\n  landOperator: (landId = ':landId') => `/land/${landId}/operator`,\n  activity: () => `/activity`,\n  settings: () => `/settings`,\n  sceneDetail: (projectId = ':projectId') => `/scenes/${projectId}`,\n  collections: () => '/collections',\n  itemDetail: (itemId = ':itemId') => `/items/${itemId}`,\n  collectionDetail: (collectionId = ':collectionId', type: CollectionType = CollectionType.DECENTRALAND) => {\n    switch (type) {\n      case CollectionType.DECENTRALAND:\n        return `/collections/${collectionId}`\n      case CollectionType.THIRD_PARTY:\n        return locations.thirdPartyCollectionDetail(collectionId)\n      default:\n        throw new Error(`Invalid collection type ${type}`)\n    }\n  },\n  thirdPartyCollectionDetail: (collectionId = ':collectionId', options?: PaginationOptions) =>\n    injectPagination(`/thirdPartyCollections/${collectionId}`, options),\n  itemEditor: (options?: ItemEditorParams) =>\n    injectParams(`/item-editor`, { itemId: 'item', collectionId: 'collection', isReviewing: 'reviewing' }, options),\n  ens: () => '/names',\n  curation: () => '/curation'\n}\n"]},"metadata":{},"sourceType":"module"}