{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/LandSelectENSPage/LandSelectENSForm/LandSelectENSForm.tsx\";\nimport * as React from 'react';\nimport { Form, Row, Button, Section, Header, Dropdown } from 'decentraland-ui';\nimport { Network } from '@dcl/schemas';\nimport { NetworkButton } from 'decentraland-dapps/dist/containers';\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { Link } from 'react-router-dom';\nimport { locations } from 'routing/locations';\nimport { isEqualContent } from 'modules/ens/utils';\nimport './LandSelectENSForm.css';\n\nvar LandSelectENSForm = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(LandSelectENSForm, _React$PureComponent);\n\n  function LandSelectENSForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LandSelectENSForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LandSelectENSForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedName: ''\n    };\n\n    _this.handleChange = function (_, data) {\n      var _this$props = _this.props,\n          onFetchENS = _this$props.onFetchENS,\n          land = _this$props.land;\n      var selectedName = data.value;\n      onFetchENS(selectedName, land);\n\n      _this.setState({\n        selectedName: selectedName\n      });\n    };\n\n    _this.handleContinue = function () {\n      var selectedName = _this.state.selectedName;\n      var _this$props2 = _this.props,\n          onUpdateSubdomain = _this$props2.onUpdateSubdomain,\n          ensList = _this$props2.ensList;\n      var selectedENS = ensList.find(function (ens) {\n        return ens.name === selectedName;\n      });\n      onUpdateSubdomain(selectedENS.subdomain);\n    };\n\n    return _this;\n  }\n\n  _createClass(LandSelectENSForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          land = _this$props3.land,\n          ensList = _this$props3.ensList,\n          isLoading = _this$props3.isLoading;\n      var selectedName = this.state.selectedName;\n      var selectOptions = ensList.map(function (_ref) {\n        var name = _ref.name,\n            subdomain = _ref.subdomain;\n        return {\n          value: name,\n          text: subdomain\n        };\n      });\n      var selectedENS = ensList.find(function (ens) {\n        return ens.name === selectedName;\n      });\n      var isButtonDisabled = !selectedENS || isEqualContent(selectedENS, land);\n      return /*#__PURE__*/React.createElement(Form, {\n        className: \"LandSelectENSForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, !isLoading && selectOptions.length === 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Section, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, t('land_select_ens_page.empty_options_message')), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"cancel\",\n        to: locations.landDetail(land.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, t('global.cancel'))), /*#__PURE__*/React.createElement(Link, {\n        to: locations.claimENS(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, t('land_select_ens_page.claim_new_name'))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Section, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"select-names\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, t('land_select_ens_page.select_name_title')), /*#__PURE__*/React.createElement(Dropdown, {\n        value: selectedName,\n        options: selectOptions,\n        placeholder: t('land_select_ens_page.select_name_placeholder'),\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"select-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, selectedENS && isEqualContent(selectedENS, land) ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"danger-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }, t('land_select_ens_page.name_assigned')) : /*#__PURE__*/React.createElement(T, {\n        id: \"land_select_ens_page.click_to_claim_new_name\",\n        values: {\n          click_here: /*#__PURE__*/React.createElement(Link, {\n            to: locations.claimENS(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 35\n            }\n          }, t('global.click_here'))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"cancel\",\n        to: locations.landDetail(land.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, t('global.cancel'))), /*#__PURE__*/React.createElement(NetworkButton, {\n        type: \"submit\",\n        disabled: isButtonDisabled || isLoading,\n        primary: true,\n        onClick: this.handleContinue,\n        loading: isLoading,\n        network: Network.ETHEREUM,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, t('global.continue')))));\n    }\n  }]);\n\n  return LandSelectENSForm;\n}(React.PureComponent);\n\nexport { LandSelectENSForm as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/LandSelectENSPage/LandSelectENSForm/LandSelectENSForm.tsx"],"names":["React","Form","Row","Button","Section","Header","Dropdown","Network","NetworkButton","t","T","Link","locations","isEqualContent","LandSelectENSForm","state","selectedName","handleChange","_","data","props","onFetchENS","land","value","setState","handleContinue","onUpdateSubdomain","ensList","selectedENS","find","ens","name","subdomain","isLoading","selectOptions","map","text","isButtonDisabled","length","landDetail","id","claimENS","click_here","ETHEREUM","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Form, Row, Button, Section, Header, Dropdown, DropdownProps } from 'decentraland-ui'\nimport { Network } from '@dcl/schemas'\nimport { NetworkButton } from 'decentraland-dapps/dist/containers'\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { Link } from 'react-router-dom'\nimport { locations } from 'routing/locations'\nimport { isEqualContent } from 'modules/ens/utils'\nimport { Props, State } from './LandSelectENSForm.types'\nimport './LandSelectENSForm.css'\n\nexport default class LandSelectENSForm extends React.PureComponent<Props, State> {\n  state: State = {\n    selectedName: ''\n  }\n\n  handleChange = (_: React.SyntheticEvent, data: DropdownProps) => {\n    const { onFetchENS, land } = this.props\n    const selectedName = data.value as string\n    onFetchENS(selectedName, land)\n    this.setState({ selectedName })\n  }\n\n  handleContinue = () => {\n    const { selectedName } = this.state\n    const { onUpdateSubdomain, ensList } = this.props\n    const selectedENS = ensList.find(ens => ens.name === selectedName)!\n    onUpdateSubdomain(selectedENS.subdomain)\n  }\n\n  render() {\n    const { land, ensList, isLoading } = this.props\n    const { selectedName } = this.state\n\n    const selectOptions = ensList.map(({ name, subdomain }) => ({ value: name, text: subdomain }))\n    const selectedENS = ensList.find(ens => ens.name === selectedName)\n\n    const isButtonDisabled: boolean = !selectedENS || isEqualContent(selectedENS, land)\n\n    return (\n      <Form className=\"LandSelectENSForm\">\n        {!isLoading && selectOptions.length === 0 ? (\n          <>\n            <Section size=\"large\">{t('land_select_ens_page.empty_options_message')}</Section>\n            <Row>\n              <Link className=\"cancel\" to={locations.landDetail(land.id)}>\n                <Button>{t('global.cancel')}</Button>\n              </Link>\n              <Link to={locations.claimENS()}>\n                <Button primary>{t('land_select_ens_page.claim_new_name')}</Button>\n              </Link>\n            </Row>\n          </>\n        ) : (\n          <>\n            <Section size=\"large\">\n              <div className=\"select-names\">\n                <Header sub className=\"name\">\n                  {t('land_select_ens_page.select_name_title')}\n                </Header>\n                <Dropdown\n                  value={selectedName}\n                  options={selectOptions}\n                  placeholder={t('land_select_ens_page.select_name_placeholder')}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div className=\"select-message\">\n                {selectedENS && isEqualContent(selectedENS, land) ? (\n                  <span className=\"danger-text\">{t('land_select_ens_page.name_assigned')}</span>\n                ) : (\n                  <T\n                    id=\"land_select_ens_page.click_to_claim_new_name\"\n                    values={{\n                      click_here: <Link to={locations.claimENS()}>{t('global.click_here')}</Link>\n                    }}\n                  />\n                )}\n              </div>\n            </Section>\n            <Row>\n              <Link className=\"cancel\" to={locations.landDetail(land.id)}>\n                <Button>{t('global.cancel')}</Button>\n              </Link>\n              <NetworkButton\n                type=\"submit\"\n                disabled={isButtonDisabled || isLoading}\n                primary\n                onClick={this.handleContinue}\n                loading={isLoading}\n                network={Network.ETHEREUM}\n              >\n                {t('global.continue')}\n              </NetworkButton>\n            </Row>\n          </>\n        )}\n      </Form>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}