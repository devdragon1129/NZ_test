{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/PublishThirdPartyCollectionModal/PublishThirdPartyCollectionModal.tsx\";\nimport * as React from 'react';\nimport { ModalNavigation, Button } from 'decentraland-ui';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { getItemsToPublish, getItemsWithChanges } from 'modules/item/utils';\nimport { PublishButtonAction } from 'components/ThirdPartyCollectionDetailPage/CollectionPublishButton/CollectionPublishButton.types';\nimport { getTPButtonActionLabel } from 'components/ThirdPartyCollectionDetailPage/CollectionPublishButton/CollectionPublishButton';\n\nvar PublishThirdPartyCollectionModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(PublishThirdPartyCollectionModal, _React$PureComponent);\n\n  function PublishThirdPartyCollectionModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PublishThirdPartyCollectionModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PublishThirdPartyCollectionModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function () {\n      var _this$props = _this.props,\n          items = _this$props.items,\n          itemsStatus = _this$props.itemsStatus,\n          itemCurations = _this$props.itemCurations,\n          thirdParty = _this$props.thirdParty,\n          onPublish = _this$props.onPublish,\n          onPushChanges = _this$props.onPushChanges,\n          onPublishAndPushChanges = _this$props.onPublishAndPushChanges,\n          action = _this$props.metadata.action;\n      if (!thirdParty) return;\n\n      switch (action) {\n        case PublishButtonAction.PUSH_CHANGES:\n          onPushChanges(items);\n          break;\n\n        case PublishButtonAction.PUBLISH_AND_PUSH_CHANGES:\n          onPublishAndPushChanges(thirdParty, getItemsToPublish(items, itemsStatus), getItemsWithChanges(items, itemsStatus, itemCurations));\n          break;\n\n        default:\n          onPublish(thirdParty, items);\n          break;\n      }\n    };\n\n    _this.getModalDescriptionText = function () {\n      var _this$props2 = _this.props,\n          items = _this$props2.items,\n          itemsStatus = _this$props2.itemsStatus,\n          itemCurations = _this$props2.itemCurations,\n          thirdParty = _this$props2.thirdParty,\n          collection = _this$props2.collection;\n      var itemsToPublishLength = getItemsToPublish(items, itemsStatus).length;\n      var itemsToPushChangesLength = getItemsWithChanges(items, itemsStatus, itemCurations).length;\n      var isPublishingAndPushingChanges = itemsToPushChangesLength > 0 && itemsToPublishLength > 0;\n      var isJustPushingChanges = itemsToPushChangesLength > 0 && !itemsToPublishLength;\n\n      if (isPublishingAndPushingChanges) {\n        return t('publish_third_party_collection_modal.publish_and_push_changes_description', {\n          slotsToUse: itemsToPublishLength,\n          itemsWithChanges: itemsToPushChangesLength,\n          availableSlots: thirdParty === null || thirdParty === void 0 ? void 0 : thirdParty.availableSlots,\n          collectionName: collection.name\n        });\n      } else if (isJustPushingChanges) {\n        return t('publish_third_party_collection_modal.push_changes_description', {\n          itemsWithChanges: itemsToPushChangesLength,\n          collectionName: collection.name\n        });\n      }\n\n      return t('publish_third_party_collection_modal.publish_description', {\n        slotsToUse: items.length,\n        availableSlots: thirdParty === null || thirdParty === void 0 ? void 0 : thirdParty.availableSlots,\n        collectionName: collection.name\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PublishThirdPartyCollectionModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          isPublishLoading = _this$props3.isPublishLoading,\n          onClose = _this$props3.onClose,\n          action = _this$props3.metadata.action;\n      return /*#__PURE__*/React.createElement(Modal, {\n        className: \"PublishThirdPartyCollectionModal\",\n        size: \"tiny\",\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('publish_third_party_collection_modal.title'),\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, this.getModalDescriptionText()), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        fluid: true,\n        loading: isPublishLoading,\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, getTPButtonActionLabel(action)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        fluid: true,\n        onClick: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, t('global.cancel'))));\n    }\n  }]);\n\n  return PublishThirdPartyCollectionModal;\n}(React.PureComponent);\n\nexport { PublishThirdPartyCollectionModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/PublishThirdPartyCollectionModal/PublishThirdPartyCollectionModal.tsx"],"names":["React","ModalNavigation","Button","Modal","t","getItemsToPublish","getItemsWithChanges","PublishButtonAction","getTPButtonActionLabel","PublishThirdPartyCollectionModal","handleSubmit","props","items","itemsStatus","itemCurations","thirdParty","onPublish","onPushChanges","onPublishAndPushChanges","action","metadata","PUSH_CHANGES","PUBLISH_AND_PUSH_CHANGES","getModalDescriptionText","collection","itemsToPublishLength","length","itemsToPushChangesLength","isPublishingAndPushingChanges","isJustPushingChanges","slotsToUse","itemsWithChanges","availableSlots","collectionName","name","isPublishLoading","onClose","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { ModalNavigation, Button } from 'decentraland-ui'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { getItemsToPublish, getItemsWithChanges } from 'modules/item/utils'\nimport { PublishButtonAction } from 'components/ThirdPartyCollectionDetailPage/CollectionPublishButton/CollectionPublishButton.types'\nimport { getTPButtonActionLabel } from 'components/ThirdPartyCollectionDetailPage/CollectionPublishButton/CollectionPublishButton'\nimport { Props } from './PublishThirdPartyCollectionModal.types'\n\nexport default class PublishThirdPartyCollectionModal extends React.PureComponent<Props> {\n  handleSubmit = () => {\n    const {\n      items,\n      itemsStatus,\n      itemCurations,\n      thirdParty,\n      onPublish,\n      onPushChanges,\n      onPublishAndPushChanges,\n      metadata: { action }\n    } = this.props\n\n    if (!thirdParty) return\n\n    switch (action) {\n      case PublishButtonAction.PUSH_CHANGES:\n        onPushChanges(items)\n        break\n      case PublishButtonAction.PUBLISH_AND_PUSH_CHANGES:\n        onPublishAndPushChanges(thirdParty, getItemsToPublish(items, itemsStatus), getItemsWithChanges(items, itemsStatus, itemCurations))\n        break\n      default:\n        onPublish(thirdParty, items)\n        break\n    }\n  }\n\n  getModalDescriptionText = () => {\n    const { items, itemsStatus, itemCurations, thirdParty, collection } = this.props\n\n    const itemsToPublishLength = getItemsToPublish(items, itemsStatus).length\n    const itemsToPushChangesLength = getItemsWithChanges(items, itemsStatus, itemCurations).length\n\n    const isPublishingAndPushingChanges = itemsToPushChangesLength > 0 && itemsToPublishLength > 0\n    const isJustPushingChanges = itemsToPushChangesLength > 0 && !itemsToPublishLength\n\n    if (isPublishingAndPushingChanges) {\n      return t('publish_third_party_collection_modal.publish_and_push_changes_description', {\n        slotsToUse: itemsToPublishLength,\n        itemsWithChanges: itemsToPushChangesLength,\n        availableSlots: thirdParty?.availableSlots,\n        collectionName: collection!.name\n      })\n    } else if (isJustPushingChanges) {\n      return t('publish_third_party_collection_modal.push_changes_description', {\n        itemsWithChanges: itemsToPushChangesLength,\n        collectionName: collection!.name\n      })\n    }\n\n    return t('publish_third_party_collection_modal.publish_description', {\n      slotsToUse: items.length,\n      availableSlots: thirdParty?.availableSlots,\n      collectionName: collection!.name\n    })\n  }\n\n  render() {\n    const {\n      isPublishLoading,\n      onClose,\n      metadata: { action }\n    } = this.props\n\n    return (\n      <Modal className=\"PublishThirdPartyCollectionModal\" size=\"tiny\" onClose={onClose}>\n        <ModalNavigation title={t('publish_third_party_collection_modal.title')} onClose={onClose} />\n        <Modal.Content>\n          <div>{this.getModalDescriptionText()}</div>\n          <br />\n          <Button primary fluid loading={isPublishLoading} onClick={this.handleSubmit}>\n            {getTPButtonActionLabel(action)}\n          </Button>\n          <br />\n          <Button secondary fluid onClick={onClose}>\n            {t('global.cancel')}\n          </Button>\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}