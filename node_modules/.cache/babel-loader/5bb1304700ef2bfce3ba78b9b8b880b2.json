{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/ItemEditorPage/RightPanel/Collapsable/Collapsable.tsx\";\nimport * as React from 'react';\nimport './Collapsable.css';\n\nvar Collapsable = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Collapsable, _React$PureComponent);\n\n  function Collapsable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Collapsable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Collapsable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isCollapsed: false\n    };\n\n    _this.handleToggle = function () {\n      _this.setState({\n        isCollapsed: !_this.state.isCollapsed\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Collapsable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          label = _this$props.label,\n          children = _this$props.children;\n      var isCollapsed = this.state.isCollapsed;\n      var isOpen = item !== null && !isCollapsed;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Collapsable \".concat(isOpen ? 'is-open' : '').trim(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        onClick: this.handleToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, label), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"handle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, isOpen ? children(item) : null));\n    }\n  }]);\n\n  return Collapsable;\n}(React.PureComponent);\n\nexport { Collapsable as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ItemEditorPage/RightPanel/Collapsable/Collapsable.tsx"],"names":["React","Collapsable","state","isCollapsed","handleToggle","setState","props","item","label","children","isOpen","trim","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,mBAAP;;IAEqBC,W;;;;;;;;;;;;;;;UACnBC,K,GAAe;AACbC,MAAAA,WAAW,EAAE;AADA,K;;UAIfC,Y,GAAe,YAAM;AACnB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAA3B,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,wBAC2B,KAAKG,KADhC;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;AAAA,UACcC,QADd,eACcA,QADd;AAAA,UAECN,WAFD,GAEiB,KAAKD,KAFtB,CAECC,WAFD;AAIP,UAAMO,MAAM,GAAGH,IAAI,KAAK,IAAT,IAAiB,CAACJ,WAAjC;AAEA,0BACE;AAAK,QAAA,SAAS,EAAE,sBAAeO,MAAM,GAAG,SAAH,GAAe,EAApC,EAAyCC,IAAzC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAE,KAAKP,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBI,KAAxB,CADF,eAEE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAKE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BE,MAAM,GAAGD,QAAQ,CAACF,IAAD,CAAX,GAAqB,IAArD,CALF,CADF;AASD;;;;EAxBsCP,KAAK,CAACY,a;;SAA1BX,W","sourcesContent":["import * as React from 'react'\nimport { Props, State } from './Collapsable.types'\nimport './Collapsable.css'\n\nexport default class Collapsable extends React.PureComponent<Props, State> {\n  state: State = {\n    isCollapsed: false\n  }\n\n  handleToggle = () => {\n    this.setState({ isCollapsed: !this.state.isCollapsed })\n  }\n\n  render() {\n    const { item, label, children } = this.props\n    const { isCollapsed } = this.state\n\n    const isOpen = item !== null && !isCollapsed\n\n    return (\n      <div className={`Collapsable ${isOpen ? 'is-open' : ''}`.trim()}>\n        <div className=\"header\" onClick={this.handleToggle}>\n          <div className=\"label\">{label}</div>\n          <div className=\"handle\" />\n        </div>\n        <div className=\"content\">{isOpen ? children(item!) : null}</div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}