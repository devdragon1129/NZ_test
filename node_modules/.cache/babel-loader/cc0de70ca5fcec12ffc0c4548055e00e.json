{"ast":null,"code":"import { ComponentType } from 'modules/scene/types';\nimport mappings from './mappings.json';\nexport function addMappings(scene) {\n  if (scene) {\n    for (var _i = 0, _Object$values = Object.values(scene.components); _i < _Object$values.length; _i++) {\n      var component = _Object$values[_i];\n\n      if (component.type === ComponentType.GLTFShape) {\n        var gltfShape = component;\n        var hasMappings = ('mappings' in gltfShape.data);\n        var hasSource = ('src' in gltfShape.data);\n\n        if (!hasMappings && hasSource) {\n          var data = gltfShape.data;\n          data.mappings = mappings[gltfShape.data.src];\n        }\n      }\n    }\n  }\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/migrations/ISSUE-485/index.ts"],"names":["ComponentType","mappings","addMappings","scene","Object","values","components","component","type","GLTFShape","gltfShape","hasMappings","data","hasSource","src"],"mappings":"AAAA,SAAgBA,aAAhB,QAA0D,qBAA1D;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA0C;AAC/C,MAAIA,KAAJ,EAAW;AACT,sCAAwBC,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,UAApB,CAAxB,oCAAyD;AAApD,UAAMC,SAAS,qBAAf;;AACH,UAAIA,SAAS,CAACC,IAAV,KAAmBR,aAAa,CAACS,SAArC,EAAgD;AAC9C,YAAMC,SAAS,GAAGH,SAAlB;AACA,YAAMI,WAAW,IAAG,cAAcD,SAAS,CAACE,IAA3B,CAAjB;AACA,YAAMC,SAAS,IAAG,SAASH,SAAS,CAACE,IAAtB,CAAf;;AACA,YAAI,CAACD,WAAD,IAAgBE,SAApB,EAA+B;AAC7B,cAAMD,IAAI,GAAGF,SAAS,CAACE,IAAvB;AACAA,UAAAA,IAAI,CAACX,QAAL,GAAiBA,QAAD,CAAsDS,SAAS,CAACE,IAAX,CAAwBE,GAA7E,CAAhB;AACD;AACF;AACF;AACF;AACF","sourcesContent":["import { Scene, ComponentType, ComponentDefinition } from 'modules/scene/types'\nimport mappings from './mappings.json'\n\nexport function addMappings(scene: Scene | null) {\n  if (scene) {\n    for (const component of Object.values(scene.components)) {\n      if (component.type === ComponentType.GLTFShape) {\n        const gltfShape = component as ComponentDefinition<ComponentType.GLTFShape>\n        const hasMappings = 'mappings' in gltfShape.data\n        const hasSource = 'src' in gltfShape.data\n        if (!hasMappings && hasSource) {\n          const data = gltfShape.data as any\n          data.mappings = (mappings as Record<string, Record<string, string>>)[(gltfShape.data as any).src]\n        }\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}