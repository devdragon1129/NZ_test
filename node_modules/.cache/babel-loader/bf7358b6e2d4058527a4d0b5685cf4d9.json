{"ast":null,"code":"import _toConsumableArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { createSelector } from 'reselect';\nimport { isConnected, getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { isEqual } from 'lib/address';\nimport { SidebarView } from 'modules/ui/sidebar/types';\nimport { getData as getAssets, isLoading as isLoadingAssets, getDisabledAssets } from 'modules/asset/selectors';\nimport { getData as getAssetPacks } from 'modules/assetPack/selectors';\nimport { SIDEBAR_CATEGORIES, COLLECTIBLE_ASSET_PACK_ID, sortByOrder } from './utils';\nimport { sortByCreatedAt } from 'lib/sort';\nexport var getState = function getState(state) {\n  return state.ui.sidebar;\n};\nexport var getSearch = function getSearch(state) {\n  return getState(state).search;\n};\nexport var getSelectedCategory = function getSelectedCategory(state) {\n  return getState(state).selectedCategory;\n};\nexport var getSelectedAssetPackId = function getSelectedAssetPackId(state) {\n  return getState(state).selectedAssetPackId;\n};\nexport var getSidebarView = function getSidebarView(state) {\n  return getState(state).view;\n};\nexport var showOnlyAssetsWithScripts = function showOnlyAssetsWithScripts(state) {\n  return getState(state).scripts;\n};\n\nvar isSearchResult = function isSearchResult(asset, search) {\n  // search by name\n  if (asset.name.toLowerCase().includes(search)) {\n    return true;\n  } // search by category\n\n\n  if (asset.category.toLowerCase().includes(search)) {\n    return true;\n  } // search by tags\n\n\n  if (asset.tags.some(function (tag) {\n    return tag.toLowerCase().includes(search);\n  })) {\n    return true;\n  } // not in search results\n\n\n  return false;\n};\n\nexport var isList = function isList(state) {\n  return getSidebarView(state) === SidebarView.LIST;\n};\nexport var getSelectedAssetPack = createSelector(getSelectedAssetPackId, getAssetPacks, function (selectedAssetPackId, assetPacks) {\n  return selectedAssetPackId ? assetPacks[selectedAssetPackId] : null;\n});\nexport var getSideBarCategories = createSelector(getSelectedAssetPack, getSearch, getSelectedCategory, getSidebarView, getDisabledAssets, getAssets, showOnlyAssetsWithScripts, function (selectedAssetPack, search, selectedCategory, view, disabledAssets, assets, onlyAssetsWithScripts) {\n  var categories = {};\n  var results = Object.values(assets); // filter by search\n\n  if (search) {\n    results = results.filter(function (asset) {\n      return isSearchResult(asset, search);\n    });\n  } else if (view !== SidebarView.LIST && selectedAssetPack) {\n    // filter by asset pack if one is selected (and not in list view)\n    results = results.filter(function (asset) {\n      return selectedAssetPack.id === asset.assetPackId;\n    }); // filter by category if one is selected\n\n    if (selectedCategory) {\n      results = results.filter(function (asset) {\n        return asset.category === selectedCategory;\n      });\n    }\n  } // filter assets with scripts\n\n\n  if (onlyAssetsWithScripts) {\n    results = results.filter(function (asset) {\n      return !!asset.script;\n    });\n  } // build categories\n\n\n  var _iterator = _createForOfIteratorHelper(results),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var asset = _step.value;\n\n      if (!(asset.category in categories)) {\n        categories[asset.category] = {\n          name: asset.category,\n          assets: [],\n          thumbnail: ''\n        };\n      }\n\n      if (disabledAssets.includes(asset.id)) {\n        var newAsset = _objectSpread({}, asset);\n\n        newAsset.isDisabled = true;\n        categories[asset.category].assets.push(newAsset);\n      } else {\n        categories[asset.category].assets.push(asset);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var categoryArray = Object.values(categories).map(function (_ref) {\n    var name = _ref.name;\n    var category = categories[name];\n    var thumbnail = category.assets[0].thumbnail;\n    return _objectSpread({}, categories[name], {\n      thumbnail: thumbnail\n    });\n  }); // sort category array using the order of keys of SIDEBAR_CATEGORIES\n\n  var order = Object.keys(SIDEBAR_CATEGORIES);\n  categoryArray.sort(function (a, b) {\n    return order.indexOf(a.name) > order.indexOf(b.name) ? 1 : -1;\n  }); // move selected category up\n\n  if (selectedCategory) {\n    categoryArray = [].concat(_toConsumableArray(categoryArray.filter(function (c) {\n      return c.name === selectedCategory;\n    })), _toConsumableArray(categoryArray.filter(function (c) {\n      return c.name !== selectedCategory;\n    })));\n  } // move selected asset pack up\n\n\n  var _iterator2 = _createForOfIteratorHelper(categoryArray),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var category = _step2.value;\n      category.assets.sort(function (a, b) {\n        if (a.script && !b.script) {\n          return -1;\n        } else if (!a.script && b.script) {\n          return 1;\n        }\n\n        return a.name > b.name ? 1 : -1;\n      });\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return categoryArray;\n});\nexport var getSidebarAssetPacks = createSelector(getAssetPacks, getAddress, function (assetPacks) {\n  var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var defaultAssetPacks = [];\n  var userAssetPacks = [];\n  var collectibles = [];\n\n  for (var _i = 0, _Object$values = Object.values(assetPacks); _i < _Object$values.length; _i++) {\n    var assetPack = _Object$values[_i];\n\n    if (isEqual(assetPack.ethAddress || '', address)) {\n      userAssetPacks.push(assetPack);\n    } else if (assetPack.id === COLLECTIBLE_ASSET_PACK_ID) {\n      collectibles.push(assetPack);\n    } else {\n      defaultAssetPacks.push(assetPack);\n    }\n  }\n\n  return [].concat(_toConsumableArray(defaultAssetPacks.sort(sortByOrder)), _toConsumableArray(userAssetPacks.sort(sortByCreatedAt)), collectibles);\n});\nexport var isSearchDisabled = createSelector(getSelectedAssetPackId, isLoadingAssets, getSearch, getSideBarCategories, isConnected, function (selectedAssetPackId, isLoading, search, categories, connected) {\n  // disable search when crypto-collectibles are loading or when the wallet is connected and it's empty\n  var isLoadingCollectibles = selectedAssetPackId === COLLECTIBLE_ASSET_PACK_ID && isLoading;\n  var isEmptyWallet = selectedAssetPackId === COLLECTIBLE_ASSET_PACK_ID && connected && !search && categories.length === 0;\n  return isLoadingCollectibles || isEmptyWallet;\n});","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/ui/sidebar/selectors.ts"],"names":["createSelector","isConnected","getAddress","isEqual","SidebarView","getData","getAssets","isLoading","isLoadingAssets","getDisabledAssets","getAssetPacks","SIDEBAR_CATEGORIES","COLLECTIBLE_ASSET_PACK_ID","sortByOrder","sortByCreatedAt","getState","state","ui","sidebar","getSearch","search","getSelectedCategory","selectedCategory","getSelectedAssetPackId","selectedAssetPackId","getSidebarView","view","showOnlyAssetsWithScripts","scripts","isSearchResult","asset","name","toLowerCase","includes","category","tags","some","tag","isList","LIST","getSelectedAssetPack","assetPacks","getSideBarCategories","selectedAssetPack","disabledAssets","assets","onlyAssetsWithScripts","categories","results","Object","values","filter","id","assetPackId","script","thumbnail","newAsset","isDisabled","push","categoryArray","map","order","keys","sort","a","b","indexOf","c","getSidebarAssetPacks","address","defaultAssetPacks","userAssetPacks","collectibles","assetPack","ethAddress","isSearchDisabled","connected","isLoadingCollectibles","isEmptyWallet","length"],"mappings":"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","sourcesContent":["import { createSelector } from 'reselect'\nimport { isConnected, getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\n\nimport { isEqual } from 'lib/address'\nimport { RootState } from 'modules/common/types'\nimport { SidebarState } from 'modules/ui/sidebar/reducer'\nimport { Category, SidebarView } from 'modules/ui/sidebar/types'\nimport { getData as getAssets, isLoading as isLoadingAssets, getDisabledAssets } from 'modules/asset/selectors'\nimport { AssetState } from 'modules/asset/reducer'\nimport { Asset } from 'modules/asset/types'\nimport { AssetPackState } from 'modules/assetPack/reducer'\nimport { getData as getAssetPacks } from 'modules/assetPack/selectors'\nimport { AssetPack } from 'modules/assetPack/types'\nimport { SIDEBAR_CATEGORIES, COLLECTIBLE_ASSET_PACK_ID, sortByOrder } from './utils'\nimport { sortByCreatedAt } from 'lib/sort'\n\nexport const getState: (state: RootState) => SidebarState = state => state.ui.sidebar\n\nexport const getSearch = (state: RootState) => getState(state).search\n\nexport const getSelectedCategory = (state: RootState) => getState(state).selectedCategory\n\nexport const getSelectedAssetPackId = (state: RootState) => getState(state).selectedAssetPackId\n\nexport const getSidebarView = (state: RootState) => getState(state).view\n\nexport const showOnlyAssetsWithScripts = (state: RootState) => getState(state).scripts\n\nconst isSearchResult = (asset: Asset, search: string) => {\n  // search by name\n  if (asset.name.toLowerCase().includes(search)) {\n    return true\n  }\n  // search by category\n  if (asset.category.toLowerCase().includes(search)) {\n    return true\n  }\n  // search by tags\n  if (asset.tags.some(tag => tag.toLowerCase().includes(search))) {\n    return true\n  }\n  // not in search results\n  return false\n}\n\nexport const isList = (state: RootState) => getSidebarView(state) === SidebarView.LIST\n\nexport const getSelectedAssetPack = createSelector<RootState, string | null, AssetPackState['data'], AssetPack | null>(\n  getSelectedAssetPackId,\n  getAssetPacks,\n  (selectedAssetPackId, assetPacks) => {\n    return selectedAssetPackId ? assetPacks[selectedAssetPackId] : null\n  }\n)\n\nexport const getSideBarCategories = createSelector<\n  RootState,\n  AssetPack | null,\n  string,\n  string | null,\n  SidebarView,\n  string[],\n  AssetState['data'],\n  boolean,\n  Category[]\n>(\n  getSelectedAssetPack,\n  getSearch,\n  getSelectedCategory,\n  getSidebarView,\n  getDisabledAssets,\n  getAssets,\n  showOnlyAssetsWithScripts,\n  (selectedAssetPack, search, selectedCategory, view, disabledAssets, assets, onlyAssetsWithScripts) => {\n    const categories: { [categoryName: string]: Category } = {}\n\n    let results = Object.values(assets)\n\n    // filter by search\n    if (search) {\n      results = results.filter(asset => isSearchResult(asset, search))\n    } else if (view !== SidebarView.LIST && selectedAssetPack) {\n      // filter by asset pack if one is selected (and not in list view)\n      results = results.filter(asset => selectedAssetPack.id === asset.assetPackId)\n      // filter by category if one is selected\n      if (selectedCategory) {\n        results = results.filter(asset => asset.category === selectedCategory)\n      }\n    }\n\n    // filter assets with scripts\n    if (onlyAssetsWithScripts) {\n      results = results.filter(asset => !!asset.script)\n    }\n\n    // build categories\n    for (const asset of results) {\n      if (!(asset.category in categories)) {\n        categories[asset.category] = {\n          name: asset.category,\n          assets: [],\n          thumbnail: ''\n        }\n      }\n\n      if (disabledAssets.includes(asset.id)) {\n        let newAsset = { ...asset }\n        newAsset.isDisabled = true\n        categories[asset.category].assets.push(newAsset)\n      } else {\n        categories[asset.category].assets.push(asset)\n      }\n    }\n\n    let categoryArray = Object.values(categories).map<Category>(({ name }) => {\n      const category = categories[name]\n      const thumbnail = category.assets[0].thumbnail\n      return {\n        ...categories[name],\n        thumbnail\n      }\n    })\n\n    // sort category array using the order of keys of SIDEBAR_CATEGORIES\n    const order = Object.keys(SIDEBAR_CATEGORIES)\n    categoryArray.sort((a, b) => (order.indexOf(a.name) > order.indexOf(b.name) ? 1 : -1))\n\n    // move selected category up\n    if (selectedCategory) {\n      categoryArray = [...categoryArray.filter(c => c.name === selectedCategory), ...categoryArray.filter(c => c.name !== selectedCategory)]\n    }\n\n    // move selected asset pack up\n    for (const category of categoryArray) {\n      category.assets.sort((a, b) => {\n        if (a.script && !b.script) {\n          return -1\n        } else if (!a.script && b.script) {\n          return 1\n        }\n        return a.name > b.name ? 1 : -1\n      })\n    }\n\n    return categoryArray\n  }\n)\n\nexport const getSidebarAssetPacks = createSelector<RootState, AssetPackState['data'], string | undefined, AssetPack[]>(\n  getAssetPacks,\n  getAddress,\n  (assetPacks, address = '') => {\n    const defaultAssetPacks: AssetPack[] = []\n    const userAssetPacks: AssetPack[] = []\n    const collectibles: AssetPack[] = []\n\n    for (const assetPack of Object.values(assetPacks)) {\n      if (isEqual(assetPack.ethAddress || '', address)) {\n        userAssetPacks.push(assetPack)\n      } else if (assetPack.id === COLLECTIBLE_ASSET_PACK_ID) {\n        collectibles.push(assetPack)\n      } else {\n        defaultAssetPacks.push(assetPack)\n      }\n    }\n\n    return [...defaultAssetPacks.sort(sortByOrder), ...userAssetPacks.sort(sortByCreatedAt), ...collectibles]\n  }\n)\n\nexport const isSearchDisabled = createSelector<RootState, string | null, boolean, string, Category[], boolean, boolean>(\n  getSelectedAssetPackId,\n  isLoadingAssets,\n  getSearch,\n  getSideBarCategories,\n  isConnected,\n  (selectedAssetPackId, isLoading, search, categories, connected) => {\n    // disable search when crypto-collectibles are loading or when the wallet is connected and it's empty\n    const isLoadingCollectibles = selectedAssetPackId === COLLECTIBLE_ASSET_PACK_ID && isLoading\n    const isEmptyWallet = selectedAssetPackId === COLLECTIBLE_ASSET_PACK_ID && connected && !search && categories.length === 0\n\n    return isLoadingCollectibles || isEmptyWallet\n  }\n)\n"]},"metadata":{},"sourceType":"module"}