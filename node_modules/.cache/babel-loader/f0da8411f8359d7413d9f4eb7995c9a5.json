{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../Misc/typeStore';\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator\";\n/**\r\n * Block used to clamp a float\r\n */\n\nvar ClampBlock =\n/** @class */\nfunction (_super) {\n  __extends(ClampBlock, _super);\n  /**\r\n   * Creates a new ClampBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function ClampBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n    /** Gets or sets the minimum range */\n\n\n    _this.minimum = 0.0;\n    /** Gets or sets the maximum range */\n\n    _this.maximum = 1.0;\n\n    _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  ClampBlock.prototype.getClassName = function () {\n    return \"ClampBlock\";\n  };\n\n  Object.defineProperty(ClampBlock.prototype, \"value\", {\n    /**\r\n     * Gets the value input component\r\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ClampBlock.prototype, \"output\", {\n    /**\r\n     * Gets the output component\r\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ClampBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    state.compilationString += this._declareOutput(output, state) + (\" = clamp(\" + this.value.associatedVariableName + \", \" + this._writeFloat(this.minimum) + \", \" + this._writeFloat(this.maximum) + \");\\r\\n\");\n    return this;\n  };\n\n  ClampBlock.prototype._dumpPropertiesCode = function () {\n    var codeString = this._codeVariableName + \".minimum = \" + this.minimum + \";\\r\\n\";\n    codeString += this._codeVariableName + \".maximum = \" + this.maximum + \";\\r\\n\";\n    return codeString;\n  };\n\n  ClampBlock.prototype.serialize = function () {\n    var serializationObject = _super.prototype.serialize.call(this);\n\n    serializationObject.minimum = this.minimum;\n    serializationObject.maximum = this.maximum;\n    return serializationObject;\n  };\n\n  ClampBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n    _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n\n    this.minimum = serializationObject.minimum;\n    this.maximum = serializationObject.maximum;\n  };\n\n  __decorate([editableInPropertyPage(\"Minimum\", PropertyTypeForEdition.Float)], ClampBlock.prototype, \"minimum\", void 0);\n\n  __decorate([editableInPropertyPage(\"Maximum\", PropertyTypeForEdition.Float)], ClampBlock.prototype, \"maximum\", void 0);\n\n  return ClampBlock;\n}(NodeMaterialBlock);\n\nexport { ClampBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.ClampBlock\"] = ClampBlock;","map":null,"metadata":{},"sourceType":"module"}