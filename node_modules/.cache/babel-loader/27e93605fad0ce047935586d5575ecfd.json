{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/CustomLayoutModal/CustomLayoutModal.tsx\";\nimport * as React from 'react';\nimport { Button, ModalNavigation, Field } from 'decentraland-ui';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport ProjectLayoutPicker from 'components/ProjectLayoutPicker';\nimport { fromLayout } from 'modules/template/utils';\n\nvar CustomLayoutModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CustomLayoutModal, _React$PureComponent);\n\n  function CustomLayoutModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomLayoutModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomLayoutModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rows: 2,\n      cols: 2,\n      setSize: false,\n      hasError: false,\n      name: t('global.new_scene'),\n      description: ''\n    };\n\n    _this.handleLayoutChange = function (projectLayout) {\n      _this.setState(_objectSpread({}, projectLayout));\n    };\n\n    _this.handleCreate = function () {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          description = _this$state.description,\n          rows = _this$state.rows,\n          cols = _this$state.cols;\n      var _this$props = _this.props,\n          onCreateProject = _this$props.onCreateProject,\n          onClose = _this$props.onClose;\n      onCreateProject(name, description, fromLayout(rows, cols));\n      onClose();\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomLayoutModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          modalName = _this$props2.name,\n          onCloseModal = _this$props2.onClose;\n      var _this$state2 = this.state,\n          rows = _this$state2.rows,\n          cols = _this$state2.cols,\n          name = _this$state2.name,\n          description = _this$state2.description,\n          setSize = _this$state2.setSize,\n          hasError = _this$state2.hasError;\n      var onClose;\n      var onBack;\n      var onCancel;\n      var onSubmit;\n\n      if (setSize) {\n        onCancel = onBack = function onBack() {\n          return _this2.setState({\n            setSize: false\n          });\n        };\n\n        onSubmit = this.handleCreate;\n      } else {\n        onCancel = onClose = onCloseModal;\n\n        onSubmit = function onSubmit() {\n          return _this2.setState({\n            setSize: true\n          });\n        };\n      }\n\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: modalName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('create_modal.title'),\n        subtitle: setSize ? t('create_modal.size_subtitle') : t('create_modal.name_subtitle'),\n        onBack: onBack,\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, setSize ? /*#__PURE__*/React.createElement(ProjectLayoutPicker, {\n        rows: rows,\n        cols: cols,\n        onChange: this.handleLayoutChange,\n        showGrid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Field, {\n        label: t('create_modal.name_label'),\n        placeholder: t('global.new_scene'),\n        value: name,\n        onChange: function onChange(_event, props) {\n          return _this2.setState({\n            name: props.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Field, {\n        label: t('create_modal.description_label'),\n        placeholder: t('create_modal.description_placeholder'),\n        value: description,\n        onChange: function onChange(_event, props) {\n          return _this2.setState({\n            description: props.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        onClick: onCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, setSize ? t('global.back') : t('global.cancel')), /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        disabled: hasError || !name,\n        onClick: onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, setSize ? t('global.create') : t('global.next'))));\n    }\n  }]);\n\n  return CustomLayoutModal;\n}(React.PureComponent);\n\nexport { CustomLayoutModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CustomLayoutModal/CustomLayoutModal.tsx"],"names":["React","Button","ModalNavigation","Field","Modal","t","ProjectLayoutPicker","fromLayout","CustomLayoutModal","state","rows","cols","setSize","hasError","name","description","handleLayoutChange","projectLayout","setState","handleCreate","props","onCreateProject","onClose","modalName","onCloseModal","onBack","onCancel","onSubmit","_event","value","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Button, ModalNavigation, Field } from 'decentraland-ui'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\n\nimport ProjectLayoutPicker from 'components/ProjectLayoutPicker'\nimport { fromLayout } from 'modules/template/utils'\nimport { ProjectLayout } from 'modules/project/types'\nimport { Props, State } from './CustomLayoutModal.types'\n\nexport default class CustomLayoutModal extends React.PureComponent<Props, State> {\n  state = {\n    rows: 2,\n    cols: 2,\n    setSize: false,\n    hasError: false,\n    name: t('global.new_scene'),\n    description: ''\n  }\n\n  handleLayoutChange = (projectLayout: ProjectLayout) => {\n    this.setState({ ...projectLayout })\n  }\n\n  handleCreate = () => {\n    const { name, description, rows, cols } = this.state\n    const { onCreateProject, onClose } = this.props\n    onCreateProject(name, description, fromLayout(rows, cols))\n    onClose()\n  }\n\n  render() {\n    const { name: modalName, onClose: onCloseModal } = this.props\n    const { rows, cols, name, description, setSize, hasError } = this.state\n\n    let onClose\n    let onBack\n    let onCancel\n    let onSubmit\n    if (setSize) {\n      onCancel = onBack = () => this.setState({ setSize: false })\n      onSubmit = this.handleCreate\n    } else {\n      onCancel = onClose = onCloseModal\n      onSubmit = () => this.setState({ setSize: true })\n    }\n\n    return (\n      <Modal name={modalName}>\n        <ModalNavigation\n          title={t('create_modal.title')}\n          subtitle={setSize ? t('create_modal.size_subtitle') : t('create_modal.name_subtitle')}\n          onBack={onBack}\n          onClose={onClose}\n        />\n        <Modal.Content>\n          {setSize ? (\n            <ProjectLayoutPicker rows={rows} cols={cols} onChange={this.handleLayoutChange} showGrid />\n          ) : (\n            <>\n              <Field\n                label={t('create_modal.name_label')}\n                placeholder={t('global.new_scene')}\n                value={name}\n                onChange={(_event, props) => this.setState({ name: props.value })}\n              />\n              <Field\n                label={t('create_modal.description_label')}\n                placeholder={t('create_modal.description_placeholder')}\n                value={description}\n                onChange={(_event, props) => this.setState({ description: props.value })}\n              />\n            </>\n          )}\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={onCancel}>\n            {setSize ? t('global.back') : t('global.cancel')}\n          </Button>\n          <Button primary disabled={hasError || !name} onClick={onSubmit}>\n            {setSize ? t('global.create') : t('global.next')}\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}