{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/ShareModal/ShareModal.tsx\";\nimport * as React from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { Loader, ModalNavigation } from 'decentraland-ui';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { config } from 'config';\nimport Icon from 'components/Icon';\nimport { ShareTarget } from 'modules/ui/share/types';\nimport WalletLoginModal from '../WalletLoginModal';\nimport { ShareModalType } from './ShareModal.types';\nimport './ShareModal.css';\nvar SHARE_SCENE_URL = config.get('SHARE_SCENE_URL', '');\n\nvar ShareModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ShareModal, _React$PureComponent);\n\n  function ShareModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShareModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShareModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      copied: false,\n      copiedTimer: undefined,\n      type: ShareModalType.PROJECT,\n      id: null\n    };\n    _this.input = React.createRef();\n\n    _this.handleClose = function () {\n      return _this.props.onClose();\n    };\n\n    _this.handleFocusLink = function () {\n      if (_this.input.current) {\n        _this.input.current.select();\n      }\n    };\n\n    _this.handleCopyLink = function () {\n      var copiedTimer = _this.state.copiedTimer;\n\n      if (copiedTimer !== undefined) {\n        clearTimeout(copiedTimer);\n      }\n\n      var newCopiedTimer = setTimeout(function () {\n        return _this.setState({\n          copied: false,\n          copiedTimer: undefined\n        });\n      }, 2000);\n\n      _this.setState({\n        copied: true,\n        copiedTimer: newCopiedTimer\n      });\n    };\n\n    _this.handleShare = function (e, target) {\n      e.preventDefault();\n      var width = 600;\n      var height = 250;\n      var top = Math.ceil(window.outerHeight / 2 - height / 2);\n      var left = Math.ceil(window.outerWidth / 2 - width / 2);\n      window.open(e.currentTarget.href, 'targetWindow', \"toolbar=no,location=0,status=no,menubar=no,scrollbars=yes,resizable=yes,width=\".concat(width, \",height=\").concat(height, \",top=\").concat(top, \",left=\").concat(left));\n\n      _this.props.onShare(target);\n    };\n\n    _this.handleShareWithFacebook = function (e) {\n      return _this.handleShare(e, ShareTarget.FACEBOOK);\n    };\n\n    _this.handleShareWithTwitter = function (e) {\n      return _this.handleShare(e, ShareTarget.TWITTER);\n    };\n\n    _this.handleLogin = function (providerType) {\n      _this.props.onLogin(providerType);\n    };\n\n    _this.getFacebookLink = function () {\n      var project = _this.props.project;\n\n      var url = _this.getShareLink();\n\n      return encodeURI(t('share_modal.uri.facebook', _objectSpread({}, project, {\n        url: url\n      })));\n    };\n\n    _this.getTwitterLink = function () {\n      var project = _this.props.project;\n\n      var url = _this.getShareLink();\n\n      return encodeURI(t('share_modal.uri.twitter', _objectSpread({}, project, {\n        url: url\n      })));\n    };\n\n    _this.getShareLink = function () {\n      var project = _this.props.project;\n      var type = _this.state.type;\n\n      switch (type) {\n        case ShareModalType.PROJECT:\n          return SHARE_SCENE_URL + \"/scene/\".concat(project.id);\n\n        default:\n          return SHARE_SCENE_URL + \"/\".concat(type, \"/\").concat(project.id);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ShareModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          metadata = _this$props.metadata,\n          onUpdate = _this$props.onUpdate,\n          isLoggedIn = _this$props.isLoggedIn;\n\n      if (metadata) {\n        this.setState({\n          type: metadata.type,\n          id: metadata.id\n        });\n\n        if (isLoggedIn) {\n          onUpdate(metadata.id);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var copiedTimer = this.state.copiedTimer;\n\n      if (copiedTimer !== undefined) {\n        clearTimeout(copiedTimer);\n      }\n    }\n  }, {\n    key: \"renderLogin\",\n    value: function renderLogin() {\n      var name = this.props.name;\n      return /*#__PURE__*/React.createElement(WalletLoginModal, {\n        name: name,\n        onClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      var name = this.props.name;\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: name,\n        onClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          project = _this$props2.project,\n          isLoading = _this$props2.isLoading,\n          isLoggedIn = _this$props2.isLoggedIn,\n          isScreenshotReady = _this$props2.isScreenshotReady;\n      var copied = this.state.copied;\n\n      if (!isLoggedIn) {\n        return this.renderLogin();\n      }\n\n      if (isLoading || !project.isPublic) {\n        return this.renderLoading();\n      }\n\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: name,\n        onClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('share_modal.title'),\n        subtitle: t('share_modal.description'),\n        onClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"share-modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thumbnail\",\n        style: {\n          backgroundImage: isScreenshotReady ? \"url(\\\"\".concat(project.thumbnail, \"\\\")\") : '',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, !isScreenshotReady && /*#__PURE__*/React.createElement(Loader, {\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 36\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"button facebook\",\n        onClick: this.handleShareWithFacebook,\n        href: this.getFacebookLink(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"facebook\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }), \" \", t(\"global.share\")), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"button twitter\",\n        onClick: this.handleShareWithTwitter,\n        href: this.getTwitterLink(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"twitter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }), \" \", t(\"global.share\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"copy-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        ref: this.input,\n        className: \"copy-input\",\n        readOnly: true,\n        value: this.getShareLink(),\n        onFocus: this.handleFocusLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(CopyToClipboard, {\n        text: this.getShareLink(),\n        onCopy: this.handleCopyLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"copy-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }, copied ? t(\"share_modal.copied\") : t(\"share_modal.copy\"))))));\n    }\n  }]);\n\n  return ShareModal;\n}(React.PureComponent);\n\nexport { ShareModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/ShareModal/ShareModal.tsx"],"names":["React","CopyToClipboard","Loader","ModalNavigation","Modal","t","config","Icon","ShareTarget","WalletLoginModal","ShareModalType","SHARE_SCENE_URL","get","ShareModal","state","copied","copiedTimer","undefined","type","PROJECT","id","input","createRef","handleClose","props","onClose","handleFocusLink","current","select","handleCopyLink","clearTimeout","newCopiedTimer","setTimeout","setState","handleShare","e","target","preventDefault","width","height","top","Math","ceil","window","outerHeight","left","outerWidth","open","currentTarget","href","onShare","handleShareWithFacebook","FACEBOOK","handleShareWithTwitter","TWITTER","handleLogin","providerType","onLogin","getFacebookLink","project","url","getShareLink","encodeURI","getTwitterLink","metadata","onUpdate","isLoggedIn","name","isLoading","isScreenshotReady","renderLogin","isPublic","renderLoading","backgroundImage","thumbnail","backgroundSize","backgroundPosition","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport { ProviderType } from '@dcl/schemas'\nimport { Loader, ModalNavigation } from 'decentraland-ui'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { config } from 'config'\nimport Icon from 'components/Icon'\nimport { ShareTarget } from 'modules/ui/share/types'\nimport WalletLoginModal from '../WalletLoginModal'\nimport { Props, ShareModalType, State } from './ShareModal.types'\n\nimport './ShareModal.css'\n\nconst SHARE_SCENE_URL = config.get('SHARE_SCENE_URL', '')\n\nexport default class ShareModal extends React.PureComponent<Props, State> {\n  state: State = {\n    copied: false,\n    copiedTimer: undefined,\n    type: ShareModalType.PROJECT,\n    id: null\n  }\n\n  input = React.createRef<HTMLInputElement>()\n\n  componentDidMount() {\n    const { metadata, onUpdate, isLoggedIn } = this.props\n    if (metadata) {\n      this.setState({\n        type: metadata.type,\n        id: metadata.id\n      })\n\n      if (isLoggedIn) {\n        onUpdate(metadata.id)\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { copiedTimer } = this.state\n    if (copiedTimer !== undefined) {\n      clearTimeout(copiedTimer)\n    }\n  }\n\n  handleClose = () => {\n    return this.props.onClose()\n  }\n\n  handleFocusLink = () => {\n    if (this.input.current) {\n      this.input.current.select()\n    }\n  }\n\n  handleCopyLink = () => {\n    const { copiedTimer } = this.state\n    if (copiedTimer !== undefined) {\n      clearTimeout(copiedTimer)\n    }\n\n    const newCopiedTimer = setTimeout(() => this.setState({ copied: false, copiedTimer: undefined }), 2000)\n    this.setState({ copied: true, copiedTimer: newCopiedTimer })\n  }\n\n  handleShare = (e: React.MouseEvent<HTMLAnchorElement>, target: ShareTarget) => {\n    e.preventDefault()\n    const width = 600\n    const height = 250\n    const top = Math.ceil(window.outerHeight / 2 - height / 2)\n    const left = Math.ceil(window.outerWidth / 2 - width / 2)\n    window.open(\n      e.currentTarget.href,\n      'targetWindow',\n      `toolbar=no,location=0,status=no,menubar=no,scrollbars=yes,resizable=yes,width=${width},height=${height},top=${top},left=${left}`\n    )\n    this.props.onShare(target)\n  }\n\n  handleShareWithFacebook = (e: React.MouseEvent<HTMLAnchorElement>) => this.handleShare(e, ShareTarget.FACEBOOK)\n  handleShareWithTwitter = (e: React.MouseEvent<HTMLAnchorElement>) => this.handleShare(e, ShareTarget.TWITTER)\n\n  handleLogin = (providerType: ProviderType) => {\n    this.props.onLogin(providerType)\n  }\n\n  getFacebookLink = () => {\n    const { project } = this.props\n    const url = this.getShareLink()\n    return encodeURI(t('share_modal.uri.facebook', { ...project, url }))\n  }\n\n  getTwitterLink = () => {\n    const { project } = this.props\n    const url = this.getShareLink()\n    return encodeURI(t('share_modal.uri.twitter', { ...project, url }))\n  }\n\n  getShareLink = () => {\n    const { project } = this.props\n    const { type } = this.state\n\n    switch (type) {\n      case ShareModalType.PROJECT:\n        return SHARE_SCENE_URL + `/scene/${project.id}`\n\n      default:\n        return SHARE_SCENE_URL + `/${type}/${project.id}`\n    }\n  }\n\n  renderLogin() {\n    const { name } = this.props\n    return <WalletLoginModal name={name} onClose={this.handleClose} />\n  }\n\n  renderLoading() {\n    const { name } = this.props\n    return (\n      <Modal name={name} onClose={this.handleClose}>\n        <Loader size=\"large\" />\n      </Modal>\n    )\n  }\n\n  render() {\n    const { name, project, isLoading, isLoggedIn, isScreenshotReady } = this.props\n    const { copied } = this.state\n\n    if (!isLoggedIn) {\n      return this.renderLogin()\n    }\n\n    if (isLoading || !project.isPublic) {\n      return this.renderLoading()\n    }\n\n    return (\n      <Modal name={name} onClose={this.handleClose}>\n        <ModalNavigation title={t('share_modal.title')} subtitle={t('share_modal.description')} onClose={this.handleClose} />\n        <div className=\"share-modal\">\n          <div\n            className=\"thumbnail\"\n            style={{\n              backgroundImage: isScreenshotReady ? `url(\"${project.thumbnail}\")` : '',\n              backgroundSize: 'cover',\n              backgroundPosition: 'center'\n            }}\n          >\n            {!isScreenshotReady && <Loader size=\"small\" />}\n          </div>\n          <div className=\"button-group\">\n            <a className=\"button facebook\" onClick={this.handleShareWithFacebook} href={this.getFacebookLink()}>\n              <Icon name=\"facebook\" /> {t(`global.share`)}\n            </a>\n            <a className=\"button twitter\" onClick={this.handleShareWithTwitter} href={this.getTwitterLink()}>\n              <Icon name=\"twitter\" /> {t(`global.share`)}\n            </a>\n          </div>\n          <div className=\"copy-group\">\n            <input ref={this.input} className=\"copy-input\" readOnly={true} value={this.getShareLink()} onFocus={this.handleFocusLink} />\n            <CopyToClipboard text={this.getShareLink()} onCopy={this.handleCopyLink}>\n              <span className=\"copy-button\">{copied ? t(`share_modal.copied`) : t(`share_modal.copy`)}</span>\n            </CopyToClipboard>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}