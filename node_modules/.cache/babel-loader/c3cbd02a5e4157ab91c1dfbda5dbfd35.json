{"ast":null,"code":"/**\r\n * Enum defining the type of properties that can be edited in the property pages in the NME\r\n */\nexport var PropertyTypeForEdition;\n\n(function (PropertyTypeForEdition) {\n  /** property is a boolean */\n  PropertyTypeForEdition[PropertyTypeForEdition[\"Boolean\"] = 0] = \"Boolean\";\n  /** property is a float */\n\n  PropertyTypeForEdition[PropertyTypeForEdition[\"Float\"] = 1] = \"Float\";\n  /** property is a Vector2 */\n\n  PropertyTypeForEdition[PropertyTypeForEdition[\"Vector2\"] = 2] = \"Vector2\";\n  /** property is a list of values */\n\n  PropertyTypeForEdition[PropertyTypeForEdition[\"List\"] = 3] = \"List\";\n})(PropertyTypeForEdition || (PropertyTypeForEdition = {}));\n/**\r\n * Decorator that flags a property in a node material block as being editable\r\n */\n\n\nexport function editableInPropertyPage(displayName, propertyType, groupName, options) {\n  if (propertyType === void 0) {\n    propertyType = PropertyTypeForEdition.Boolean;\n  }\n\n  if (groupName === void 0) {\n    groupName = \"PROPERTIES\";\n  }\n\n  return function (target, propertyKey) {\n    var propStore = target._propStore;\n\n    if (!propStore) {\n      propStore = [];\n      target._propStore = propStore;\n    }\n\n    propStore.push({\n      \"propertyName\": propertyKey,\n      \"displayName\": displayName,\n      \"type\": propertyType,\n      \"groupName\": groupName,\n      \"options\": options !== null && options !== void 0 ? options : {}\n    });\n  };\n}","map":null,"metadata":{},"sourceType":"module"}