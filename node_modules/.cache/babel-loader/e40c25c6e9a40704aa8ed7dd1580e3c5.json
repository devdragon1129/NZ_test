{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNetwork = exports.getNetworkMapping = exports.getURNProtocol = exports.getChainName = exports.ChainId = void 0;\n\nvar validation_1 = require(\"../validation\");\n\nvar chain_name_1 = require(\"./chain-name\");\n\nvar network_1 = require(\"./network\");\n/**\n * Different supported chain ids\n * @alpha\n */\n\n\nvar ChainId;\n\n(function (ChainId) {\n  ChainId[ChainId[\"ETHEREUM_MAINNET\"] = 1] = \"ETHEREUM_MAINNET\";\n  ChainId[ChainId[\"ETHEREUM_ROPSTEN\"] = 3] = \"ETHEREUM_ROPSTEN\";\n  ChainId[ChainId[\"ETHEREUM_RINKEBY\"] = 4] = \"ETHEREUM_RINKEBY\";\n  ChainId[ChainId[\"ETHEREUM_GOERLI\"] = 5] = \"ETHEREUM_GOERLI\";\n  ChainId[ChainId[\"ETHEREUM_KOVAN\"] = 42] = \"ETHEREUM_KOVAN\";\n  ChainId[ChainId[\"MATIC_MAINNET\"] = 137] = \"MATIC_MAINNET\";\n  ChainId[ChainId[\"MATIC_MUMBAI\"] = 80001] = \"MATIC_MUMBAI\";\n})(ChainId = exports.ChainId || (exports.ChainId = {}));\n/**\n * Get the chain name by chain id\n * @alpha\n */\n\n\nfunction getChainName(chainId) {\n  switch (chainId) {\n    case ChainId.ETHEREUM_MAINNET:\n      return chain_name_1.ChainName.ETHEREUM_MAINNET;\n\n    case ChainId.ETHEREUM_ROPSTEN:\n      return chain_name_1.ChainName.ETHEREUM_ROPSTEN;\n\n    case ChainId.ETHEREUM_RINKEBY:\n      return chain_name_1.ChainName.ETHEREUM_RINKEBY;\n\n    case ChainId.ETHEREUM_GOERLI:\n      return chain_name_1.ChainName.ETHEREUM_GOERLI;\n\n    case ChainId.ETHEREUM_KOVAN:\n      return chain_name_1.ChainName.ETHEREUM_KOVAN;\n\n    case ChainId.MATIC_MAINNET:\n      return chain_name_1.ChainName.MATIC_MAINNET;\n\n    case ChainId.MATIC_MUMBAI:\n      return chain_name_1.ChainName.MATIC_MUMBAI;\n\n    default:\n      return null;\n  }\n}\n\nexports.getChainName = getChainName;\n/**\n * Get the chain name by chain id\n * @alpha\n */\n\nfunction getURNProtocol(chainId) {\n  switch (chainId) {\n    case ChainId.ETHEREUM_MAINNET:\n      return 'mainnet';\n\n    case ChainId.ETHEREUM_ROPSTEN:\n      return 'ropsten';\n\n    case ChainId.ETHEREUM_RINKEBY:\n      return 'rinkeby';\n\n    case ChainId.ETHEREUM_GOERLI:\n      return 'goerli';\n\n    case ChainId.ETHEREUM_KOVAN:\n      return 'kovan';\n\n    case ChainId.MATIC_MAINNET:\n      return 'matic';\n\n    case ChainId.MATIC_MUMBAI:\n      return 'mumbai';\n  }\n}\n\nexports.getURNProtocol = getURNProtocol;\n/**\n * Using a base chain id, it'll map the corresponding chain id for the ethereum and matic networks.\n * For example, if trying to determine which chain id is used to map Ropsten in Matic you'd do:\n *    getNetworkMapping(ChainId.ETHEREUM_ROPSTEN)[Network.MATIC]\n * @alpha\n */\n\nfunction getNetworkMapping(chainId) {\n  var _ref, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;\n\n  switch (chainId) {\n    case ChainId.ETHEREUM_MAINNET:\n      return _ref = {}, _defineProperty(_ref, network_1.Network.ETHEREUM, ChainId.ETHEREUM_MAINNET), _defineProperty(_ref, network_1.Network.MATIC, ChainId.MATIC_MAINNET), _ref;\n\n    case ChainId.ETHEREUM_ROPSTEN:\n      return _ref2 = {}, _defineProperty(_ref2, network_1.Network.ETHEREUM, ChainId.ETHEREUM_ROPSTEN), _defineProperty(_ref2, network_1.Network.MATIC, ChainId.MATIC_MUMBAI), _ref2;\n\n    case ChainId.ETHEREUM_RINKEBY:\n      return _ref3 = {}, _defineProperty(_ref3, network_1.Network.ETHEREUM, ChainId.ETHEREUM_RINKEBY), _defineProperty(_ref3, network_1.Network.MATIC, ChainId.MATIC_MUMBAI), _ref3;\n\n    case ChainId.ETHEREUM_GOERLI:\n      return _ref4 = {}, _defineProperty(_ref4, network_1.Network.ETHEREUM, ChainId.ETHEREUM_GOERLI), _defineProperty(_ref4, network_1.Network.MATIC, ChainId.MATIC_MUMBAI), _ref4;\n\n    case ChainId.ETHEREUM_KOVAN:\n      return _ref5 = {}, _defineProperty(_ref5, network_1.Network.ETHEREUM, ChainId.ETHEREUM_KOVAN), _defineProperty(_ref5, network_1.Network.MATIC, ChainId.MATIC_MUMBAI), _ref5;\n\n    case ChainId.MATIC_MAINNET:\n      return _ref6 = {}, _defineProperty(_ref6, network_1.Network.ETHEREUM, ChainId.MATIC_MAINNET), _defineProperty(_ref6, network_1.Network.MATIC, ChainId.MATIC_MAINNET), _ref6;\n\n    case ChainId.MATIC_MUMBAI:\n      return _ref7 = {}, _defineProperty(_ref7, network_1.Network.ETHEREUM, ChainId.MATIC_MUMBAI), _defineProperty(_ref7, network_1.Network.MATIC, ChainId.MATIC_MUMBAI), _ref7;\n  }\n}\n\nexports.getNetworkMapping = getNetworkMapping;\n/**\n * Get's the network for a specific chain id\n * @alpha\n */\n\nfunction getNetwork(chainId) {\n  switch (chainId) {\n    case ChainId.ETHEREUM_MAINNET:\n    case ChainId.ETHEREUM_ROPSTEN:\n    case ChainId.ETHEREUM_GOERLI:\n    case ChainId.ETHEREUM_KOVAN:\n    case ChainId.ETHEREUM_RINKEBY:\n      return network_1.Network.ETHEREUM;\n\n    case ChainId.MATIC_MAINNET:\n    case ChainId.MATIC_MUMBAI:\n      return network_1.Network.MATIC;\n  }\n}\n\nexports.getNetwork = getNetwork;\n/**\n * @alpha\n */\n\n(function (ChainId) {\n  ChainId.schema = {\n    type: 'number',\n    enum: Object.values(ChainId)\n  };\n  ChainId.validate = (0, validation_1.generateValidator)(ChainId.schema);\n})(ChainId = exports.ChainId || (exports.ChainId = {}));","map":null,"metadata":{},"sourceType":"script"}