{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { SpriteManager } from \"./spriteManager\";\nimport { Texture } from \"../Materials/Textures/texture\";\n/**\r\n * Class used to manage multiple sprites of different sizes on the same spritesheet\r\n * @see https://doc.babylonjs.com/babylon101/sprites\r\n */\n\nvar SpritePackedManager =\n/** @class */\nfunction (_super) {\n  __extends(SpritePackedManager, _super);\n  /**\r\n   * Creates a new sprite manager from a packed sprite sheet\r\n   * @param name defines the manager's name\r\n   * @param imgUrl defines the sprite sheet url\r\n   * @param capacity defines the maximum allowed number of sprites\r\n   * @param scene defines the hosting scene\r\n   * @param spriteJSON null otherwise a JSON object defining sprite sheet data\r\n   * @param epsilon defines the epsilon value to align texture (0.01 by default)\r\n   * @param samplingMode defines the smapling mode to use with spritesheet\r\n   * @param fromPacked set to true; do not alter\r\n   */\n\n\n  function SpritePackedManager(\n  /** defines the packed manager's name */\n  name, imgUrl, capacity, scene, spriteJSON, epsilon, samplingMode) {\n    if (spriteJSON === void 0) {\n      spriteJSON = null;\n    }\n\n    if (epsilon === void 0) {\n      epsilon = 0.01;\n    }\n\n    if (samplingMode === void 0) {\n      samplingMode = Texture.TRILINEAR_SAMPLINGMODE;\n    }\n\n    var _this = //the cellSize parameter is not used when built from JSON which provides individual cell data, defaults to 64 if JSON load fails\n    _super.call(this, name, imgUrl, capacity, 64, scene, epsilon, samplingMode, true, spriteJSON) || this;\n\n    _this.name = name;\n    return _this;\n  }\n\n  return SpritePackedManager;\n}(SpriteManager);\n\nexport { SpritePackedManager };","map":null,"metadata":{},"sourceType":"module"}