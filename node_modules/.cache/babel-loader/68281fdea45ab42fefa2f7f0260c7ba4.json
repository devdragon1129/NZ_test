{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { getData as getProfiles, getLoading as getProfilesLoading } from 'decentraland-dapps/dist/modules/profile/selectors';\nimport { LOAD_PROFILE_REQUEST } from 'decentraland-dapps/dist/modules/profile/actions';\nimport { getCommitteeMembers } from 'modules/committee/selectors';\nimport { setCollectionCurationAssigneeRequest, SET_COLLECTION_CURATION_ASSIGNEE_REQUEST } from 'modules/curations/collectionCuration/actions';\nimport { getCurationsByCollectionId, getLoading } from 'modules/curations/collectionCuration/selectors';\nimport { getCollection } from 'modules/collection/selectors';\nimport EditCurationAssigneeModal from './EditCurationAssigneeModal';\n\nvar mapState = function mapState(state, ownProps) {\n  return {\n    profiles: getProfiles(state),\n    collection: getCollection(state, ownProps.metadata.collectionId),\n    curation: getCurationsByCollectionId(state)[ownProps.metadata.collectionId],\n    committeeMembers: getCommitteeMembers(state),\n    isLoading: isLoadingType(getLoading(state), SET_COLLECTION_CURATION_ASSIGNEE_REQUEST) || isLoadingType(getProfilesLoading(state), LOAD_PROFILE_REQUEST),\n    address: getAddress(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSetAssignee: function onSetAssignee(collectionId, assignee, curation) {\n      return dispatch(setCollectionCurationAssigneeRequest(collectionId, assignee, curation));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditCurationAssigneeModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/EditCurationAssigneeModal/EditCurationAssigneeModal.container.ts"],"names":["connect","getAddress","isLoadingType","getData","getProfiles","getLoading","getProfilesLoading","LOAD_PROFILE_REQUEST","getCommitteeMembers","setCollectionCurationAssigneeRequest","SET_COLLECTION_CURATION_ASSIGNEE_REQUEST","getCurationsByCollectionId","getCollection","EditCurationAssigneeModal","mapState","state","ownProps","profiles","collection","metadata","collectionId","curation","committeeMembers","isLoading","address","mapDispatch","dispatch","onSetAssignee","assignee"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kDAA3B;AACA,SAASC,aAAT,QAA8B,mDAA9B;AACA,SAASC,OAAO,IAAIC,WAApB,EAAiCC,UAAU,IAAIC,kBAA/C,QAAyE,mDAAzE;AACA,SAASC,oBAAT,QAAqC,iDAArC;AAEA,SAASC,mBAAT,QAAoC,6BAApC;AACA,SACEC,oCADF,EAEEC,wCAFF,QAGO,8CAHP;AAIA,SAASC,0BAAT,EAAqCN,UAArC,QAAuD,gDAAvD;AACA,SAASO,aAAT,QAA8B,8BAA9B;AAEA,OAAOC,yBAAP,MAAsC,6BAAtC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB;AAAA,SAAqD;AACpEC,IAAAA,QAAQ,EAAEb,WAAW,CAACW,KAAD,CAD+C;AAEpEG,IAAAA,UAAU,EAAEN,aAAa,CAACG,KAAD,EAAQC,QAAQ,CAACG,QAAT,CAAkBC,YAA1B,CAF2C;AAGpEC,IAAAA,QAAQ,EAAEV,0BAA0B,CAACI,KAAD,CAA1B,CAAkCC,QAAQ,CAACG,QAAT,CAAkBC,YAApD,CAH0D;AAIpEE,IAAAA,gBAAgB,EAAEd,mBAAmB,CAACO,KAAD,CAJ+B;AAKpEQ,IAAAA,SAAS,EACPrB,aAAa,CAACG,UAAU,CAACU,KAAD,CAAX,EAAoBL,wCAApB,CAAb,IACAR,aAAa,CAACI,kBAAkB,CAACS,KAAD,CAAnB,EAA4BR,oBAA5B,CAPqD;AAQpEiB,IAAAA,OAAO,EAAEvB,UAAU,CAACc,KAAD;AARiD,GAArD;AAAA,CAAjB;;AAWA,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,aAAa,EAAE,uBAACP,YAAD,EAAeQ,QAAf,EAAyBP,QAAzB;AAAA,aAAsCK,QAAQ,CAACjB,oCAAoC,CAACW,YAAD,EAAeQ,QAAf,EAAyBP,QAAzB,CAArC,CAA9C;AAAA;AADiD,GAA9C;AAAA,CAApB;;AAIA,eAAerB,OAAO,CAACc,QAAD,EAAWW,WAAX,CAAP,CAA+BZ,yBAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { getData as getProfiles, getLoading as getProfilesLoading } from 'decentraland-dapps/dist/modules/profile/selectors'\nimport { LOAD_PROFILE_REQUEST } from 'decentraland-dapps/dist/modules/profile/actions'\nimport { RootState } from 'modules/common/types'\nimport { getCommitteeMembers } from 'modules/committee/selectors'\nimport {\n  setCollectionCurationAssigneeRequest,\n  SET_COLLECTION_CURATION_ASSIGNEE_REQUEST\n} from 'modules/curations/collectionCuration/actions'\nimport { getCurationsByCollectionId, getLoading } from 'modules/curations/collectionCuration/selectors'\nimport { getCollection } from 'modules/collection/selectors'\nimport { MapDispatch, MapDispatchProps, OwnProps, MapState } from './EditCurationAssigneeModal.types'\nimport EditCurationAssigneeModal from './EditCurationAssigneeModal'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapState => ({\n  profiles: getProfiles(state),\n  collection: getCollection(state, ownProps.metadata.collectionId),\n  curation: getCurationsByCollectionId(state)[ownProps.metadata.collectionId],\n  committeeMembers: getCommitteeMembers(state),\n  isLoading:\n    isLoadingType(getLoading(state), SET_COLLECTION_CURATION_ASSIGNEE_REQUEST) ||\n    isLoadingType(getProfilesLoading(state), LOAD_PROFILE_REQUEST),\n  address: getAddress(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSetAssignee: (collectionId, assignee, curation) => dispatch(setCollectionCurationAssigneeRequest(collectionId, assignee, curation))\n})\n\nexport default connect(mapState, mapDispatch)(EditCurationAssigneeModal)\n"]},"metadata":{},"sourceType":"module"}