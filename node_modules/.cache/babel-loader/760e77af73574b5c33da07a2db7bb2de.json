{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { connect } from 'react-redux';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { buildThirdPartyURN } from 'lib/urn';\nimport { getLoading as getCollectionLoading, getError } from 'modules/collection/selectors';\nimport { saveCollectionRequest, SAVE_COLLECTION_REQUEST } from 'modules/collection/actions';\nimport EditURNModal from '../EditURNModal';\n\nvar mapState = function mapState(state, ownProps) {\n  var collection = ownProps.metadata.collection;\n  return {\n    elementName: collection.name,\n    urn: collection.urn,\n    error: getError(state),\n    isLoading: isLoadingType(getCollectionLoading(state), SAVE_COLLECTION_REQUEST)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch, ownProps) {\n  return {\n    onSave: function onSave(urn) {\n      return dispatch(saveCollectionRequest(_objectSpread({}, ownProps.metadata.collection, {\n        urn: urn\n      })));\n    },\n    onBuildURN: function onBuildURN(decodedURN, collectionId) {\n      return buildThirdPartyURN(decodedURN.thirdPartyName, collectionId);\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditURNModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/EditURNModals/EditCollectionURNModal/EditCollectionURNModal.container.ts"],"names":["connect","isLoadingType","buildThirdPartyURN","getLoading","getCollectionLoading","getError","saveCollectionRequest","SAVE_COLLECTION_REQUEST","EditURNModal","mapState","state","ownProps","collection","metadata","elementName","name","urn","error","isLoading","mapDispatch","dispatch","onSave","onBuildURN","decodedURN","collectionId","thirdPartyName"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,aAAT,QAA8B,mDAA9B;AACA,SAASC,kBAAT,QAAwD,SAAxD;AACA,SAASC,UAAU,IAAIC,oBAAvB,EAA6CC,QAA7C,QAA6D,8BAA7D;AACA,SAASC,qBAAT,EAAgCC,uBAAhC,QAA+D,4BAA/D;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB,EAAyD;AAAA,MAChEC,UADgE,GACjDD,QAAQ,CAACE,QADwC,CAChED,UADgE;AAExE,SAAO;AACLE,IAAAA,WAAW,EAAEF,UAAU,CAACG,IADnB;AAELC,IAAAA,GAAG,EAAEJ,UAAU,CAACI,GAFX;AAGLC,IAAAA,KAAK,EAAEZ,QAAQ,CAACK,KAAD,CAHV;AAILQ,IAAAA,SAAS,EAAEjB,aAAa,CAACG,oBAAoB,CAACM,KAAD,CAArB,EAA8BH,uBAA9B;AAJnB,GAAP;AAMD,CARD;;AAUA,IAAMY,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAwBT,QAAxB;AAAA,SAAkE;AACpFU,IAAAA,MAAM,EAAE,gBAAAL,GAAG;AAAA,aAAII,QAAQ,CAACd,qBAAqB,mBAAMK,QAAQ,CAACE,QAAT,CAAkBD,UAAxB;AAAoCI,QAAAA,GAAG,EAAHA;AAApC,SAAtB,CAAZ;AAAA,KADyE;AAEpFM,IAAAA,UAAU,EAAE,oBAACC,UAAD,EAAyDC,YAAzD;AAAA,aACVtB,kBAAkB,CAACqB,UAAU,CAACE,cAAZ,EAA4BD,YAA5B,CADR;AAAA;AAFwE,GAAlE;AAAA,CAApB;;AAMA,eAAexB,OAAO,CAACS,QAAD,EAAWU,WAAX,CAAP,CAA+BX,YAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { RootState } from 'modules/common/types'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { buildThirdPartyURN, DecodedURN, URNType } from 'lib/urn'\nimport { getLoading as getCollectionLoading, getError } from 'modules/collection/selectors'\nimport { saveCollectionRequest, SAVE_COLLECTION_REQUEST } from 'modules/collection/actions'\nimport { MapStateProps, MapDispatchProps, MapDispatch, OwnProps } from './EditCollectionURNModal.types'\nimport EditURNModal from '../EditURNModal'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapStateProps => {\n  const { collection } = ownProps.metadata\n  return {\n    elementName: collection.name,\n    urn: collection.urn,\n    error: getError(state),\n    isLoading: isLoadingType(getCollectionLoading(state), SAVE_COLLECTION_REQUEST)\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch, ownProps: OwnProps): MapDispatchProps => ({\n  onSave: urn => dispatch(saveCollectionRequest({ ...ownProps.metadata.collection, urn })),\n  onBuildURN: (decodedURN: DecodedURN<URNType.COLLECTIONS_THIRDPARTY>, collectionId: string) =>\n    buildThirdPartyURN(decodedURN.thirdPartyName, collectionId)\n})\n\nexport default connect(mapState, mapDispatch)(EditURNModal)\n"]},"metadata":{},"sourceType":"module"}