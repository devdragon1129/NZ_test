{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/LandAssignENSPage/LandAssignENSPage.tsx\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Loader } from 'decentraland-ui';\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { locations } from 'routing/locations';\nimport LandProviderPage from 'components/LandProviderPage';\nimport LandAssignENSForm from './LandAssignENSForm/LandAssignENSForm';\nimport LandAction from 'components/LandAction';\n\nvar LandAssignENSPage = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(LandAssignENSPage, _React$PureComponent);\n\n  function LandAssignENSPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LandAssignENSPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LandAssignENSPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleGoBack = function () {\n      _this.props.onBack();\n    };\n\n    return _this;\n  }\n\n  _createClass(LandAssignENSPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          ens = _this$props.ens,\n          isLoading = _this$props.isLoading,\n          error = _this$props.error,\n          isWaitingTxSetContent = _this$props.isWaitingTxSetContent,\n          isWaitingTxSetResolver = _this$props.isWaitingTxSetResolver,\n          onSetENSResolver = _this$props.onSetENSResolver,\n          onSetENSContent = _this$props.onSetENSContent,\n          onNavigate = _this$props.onNavigate;\n      return /*#__PURE__*/React.createElement(LandProviderPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, function (land) {\n        return !ens ? /*#__PURE__*/React.createElement(Loader, {\n          active: true,\n          size: \"large\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }\n        }) : /*#__PURE__*/React.createElement(LandAction, {\n          land: land,\n          title: t('land_assign_ens_page.title', {\n            name: ens.subdomain\n          }),\n          subtitle: /*#__PURE__*/React.createElement(T, {\n            id: \"land_assign_ens_page.subtitle\",\n            values: {\n              land: /*#__PURE__*/React.createElement(Link, {\n                to: locations.landDetail(land.id),\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 71\n                }\n              }, land.name)\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }\n          }),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(LandAssignENSForm, {\n          land: land,\n          ens: ens,\n          error: error,\n          isLoading: isLoading,\n          isWaitingTxSetResolver: isWaitingTxSetResolver,\n          isWaitingTxSetContent: isWaitingTxSetContent,\n          onSetENSContent: onSetENSContent,\n          onSetENSResolver: onSetENSResolver,\n          onBack: _this2.handleGoBack,\n          onNavigate: onNavigate,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }\n        }));\n      });\n    }\n  }]);\n\n  return LandAssignENSPage;\n}(React.PureComponent);\n\nexport { LandAssignENSPage as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/LandAssignENSPage/LandAssignENSPage.tsx"],"names":["React","Link","Loader","T","t","locations","LandProviderPage","LandAssignENSForm","LandAction","LandAssignENSPage","handleGoBack","props","onBack","ens","isLoading","error","isWaitingTxSetContent","isWaitingTxSetResolver","onSetENSResolver","onSetENSContent","onNavigate","land","name","subdomain","landDetail","id","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,CAAT,EAAYC,CAAZ,QAAqB,mDAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;IAGqBC,iB;;;;;;;;;;;;;;;;UACnBC,Y,GAAe,YAAM;AACnB,YAAKC,KAAL,CAAWC,MAAX;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBAUH,KAAKD,KAVF;AAAA,UAELE,GAFK,eAELA,GAFK;AAAA,UAGLC,SAHK,eAGLA,SAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLC,qBALK,eAKLA,qBALK;AAAA,UAMLC,sBANK,eAMLA,sBANK;AAAA,UAOLC,gBAPK,eAOLA,gBAPK;AAAA,UAQLC,eARK,eAQLA,eARK;AAAA,UASLC,UATK,eASLA,UATK;AAYP,0BACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAAAC,IAAI;AAAA,eACH,CAACR,GAAD,gBACE,oBAAC,MAAD;AAAQ,UAAA,MAAM,MAAd;AAAe,UAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,gBAGE,oBAAC,UAAD;AACE,UAAA,IAAI,EAAEQ,IADR;AAEE,UAAA,KAAK,EAAEjB,CAAC,CAAC,4BAAD,EAA+B;AAAEkB,YAAAA,IAAI,EAAET,GAAG,CAACU;AAAZ,WAA/B,CAFV;AAGE,UAAA,QAAQ,eACN,oBAAC,CAAD;AAAG,YAAA,EAAE,EAAC,+BAAN;AAAsC,YAAA,MAAM,EAAE;AAAEF,cAAAA,IAAI,eAAE,oBAAC,IAAD;AAAM,gBAAA,EAAE,EAAEhB,SAAS,CAACmB,UAAV,CAAqBH,IAAI,CAACI,EAA1B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA0CJ,IAAI,CAACC,IAA/C;AAAR,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOE,oBAAC,iBAAD;AACE,UAAA,IAAI,EAAED,IADR;AAEE,UAAA,GAAG,EAAER,GAFP;AAGE,UAAA,KAAK,EAAEE,KAHT;AAIE,UAAA,SAAS,EAAED,SAJb;AAKE,UAAA,sBAAsB,EAAEG,sBAL1B;AAME,UAAA,qBAAqB,EAAED,qBANzB;AAOE,UAAA,eAAe,EAAEG,eAPnB;AAQE,UAAA,gBAAgB,EAAED,gBARpB;AASE,UAAA,MAAM,EAAE,MAAI,CAACR,YATf;AAUE,UAAA,UAAU,EAAEU,UAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CAJC;AAAA,OADP,CADF;AA8BD;;;;EA/C4CpB,KAAK,CAAC0B,a;;SAAhCjB,iB","sourcesContent":["import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Loader } from 'decentraland-ui'\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { locations } from 'routing/locations'\nimport LandProviderPage from 'components/LandProviderPage'\nimport LandAssignENSForm from './LandAssignENSForm/LandAssignENSForm'\nimport LandAction from 'components/LandAction'\nimport { Props } from './LandAssignENSPage.types'\n\nexport default class LandAssignENSPage extends React.PureComponent<Props> {\n  handleGoBack = () => {\n    this.props.onBack()\n  }\n\n  render() {\n    const {\n      ens,\n      isLoading,\n      error,\n      isWaitingTxSetContent,\n      isWaitingTxSetResolver,\n      onSetENSResolver,\n      onSetENSContent,\n      onNavigate\n    } = this.props\n\n    return (\n      <LandProviderPage>\n        {land =>\n          !ens ? (\n            <Loader active size=\"large\" />\n          ) : (\n            <LandAction\n              land={land}\n              title={t('land_assign_ens_page.title', { name: ens.subdomain })}\n              subtitle={\n                <T id=\"land_assign_ens_page.subtitle\" values={{ land: <Link to={locations.landDetail(land.id)}>{land.name}</Link> }} />\n              }\n            >\n              <LandAssignENSForm\n                land={land}\n                ens={ens}\n                error={error}\n                isLoading={isLoading}\n                isWaitingTxSetResolver={isWaitingTxSetResolver}\n                isWaitingTxSetContent={isWaitingTxSetContent}\n                onSetENSContent={onSetENSContent}\n                onSetENSResolver={onSetENSResolver}\n                onBack={this.handleGoBack}\n                onNavigate={onNavigate}\n              />\n            </LandAction>\n          )\n        }\n      </LandProviderPage>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}