{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/SceneListPage/PoolCard/PoolCard.tsx\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { locations } from 'routing/locations';\nimport DeploymentStatus from 'components/DeploymentStatus';\nimport Icon from 'components/Icon';\nimport { DeployModalView } from 'components/Modals/DeployModal/DeployModal.types';\nimport './PoolCard.css';\n\nvar PoolCard = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(PoolCard, _React$PureComponent);\n\n  function PoolCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PoolCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PoolCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isDeleting: false\n    };\n\n    _this.handleOnClick = function () {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          pool = _this$props.pool;\n\n      if (onClick) {\n        onClick(pool);\n      }\n    };\n\n    _this.handleConfirmDeleteProject = function () {\n      _this.setState({\n        isDeleting: true\n      });\n    };\n\n    _this.handleCancelDeleteProject = function () {\n      _this.setState({\n        isDeleting: false\n      });\n    };\n\n    _this.handleClearDeployment = function () {\n      var _this$props2 = _this.props,\n          pool = _this$props2.pool,\n          onOpenModal = _this$props2.onOpenModal;\n      onOpenModal('DeployModal', {\n        view: DeployModalView.CLEAR_DEPLOYMENT,\n        projectId: pool.id\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PoolCard, [{\n    key: \"render\",\n    value: function render() {\n      var pool = this.props.pool;\n      var parcels = pool.statistics ? pool.statistics.parcels : pool.layout.cols * pool.layout.rows;\n      return /*#__PURE__*/React.createElement(Link, {\n        to: locations.poolView(pool.id, 'pool'),\n        className: \"PoolCard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"thumbnail\",\n        style: {\n          backgroundImage: \"url(\".concat(pool.thumbnail, \")\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(DeploymentStatus, {\n        projectId: pool.id,\n        className: \"deployment-status\",\n        type: \"pool\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"project-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, pool.title)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        title: pool.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"component-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"component\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"scene-parcel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }), \" \", t('public_page.parcel_count', {\n        parcels: parcels\n      })), pool.statistics && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"component\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"scene-object\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }), \" \", t('public_page.item_count', {\n        items: pool.statistics.transforms\n      }))))));\n    }\n  }]);\n\n  return PoolCard;\n}(React.PureComponent);\n\nPoolCard.defaultProps = {\n  items: 0\n};\nexport { PoolCard as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SceneListPage/PoolCard/PoolCard.tsx"],"names":["React","Link","t","locations","DeploymentStatus","Icon","DeployModalView","PoolCard","state","isDeleting","handleOnClick","props","onClick","pool","handleConfirmDeleteProject","setState","handleCancelDeleteProject","handleClearDeployment","onOpenModal","view","CLEAR_DEPLOYMENT","projectId","id","parcels","statistics","layout","cols","rows","poolView","backgroundImage","thumbnail","title","description","items","transforms","PureComponent","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\n\nimport { locations } from 'routing/locations'\nimport DeploymentStatus from 'components/DeploymentStatus'\nimport Icon from 'components/Icon'\nimport { DeployModalView, DeployModalMetadata } from 'components/Modals/DeployModal/DeployModal.types'\nimport { Props, DefaultProps, State } from './PoolCard.types'\nimport './PoolCard.css'\n\nexport default class PoolCard extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    items: 0\n  }\n\n  state = {\n    isDeleting: false\n  }\n\n  handleOnClick = () => {\n    const { onClick, pool } = this.props\n    if (onClick) {\n      onClick(pool)\n    }\n  }\n\n  handleConfirmDeleteProject = () => {\n    this.setState({ isDeleting: true })\n  }\n\n  handleCancelDeleteProject = () => {\n    this.setState({ isDeleting: false })\n  }\n\n  handleClearDeployment = () => {\n    const { pool, onOpenModal } = this.props\n    onOpenModal('DeployModal', { view: DeployModalView.CLEAR_DEPLOYMENT, projectId: pool.id } as DeployModalMetadata)\n  }\n\n  render() {\n    const { pool } = this.props\n    const parcels = pool.statistics ? pool.statistics.parcels : pool.layout.cols * pool.layout.rows\n\n    return (\n      <Link to={locations.poolView(pool.id, 'pool')} className=\"PoolCard\">\n        <div className=\"thumbnail\" style={{ backgroundImage: `url(${pool.thumbnail})` }} />\n        <DeploymentStatus projectId={pool.id} className=\"deployment-status\" type=\"pool\" />\n        <div className=\"project-data\">\n          <div className=\"title-wrapper\">\n            <div className=\"title\">{pool.title}</div>\n          </div>\n          <div className=\"description\" title={pool.description}>\n            <div className=\"component-list\">\n              <div className=\"component\">\n                <Icon name=\"scene-parcel\" /> {t('public_page.parcel_count', { parcels })}\n              </div>\n              {pool.statistics && (\n                <div className=\"component\">\n                  <Icon name=\"scene-object\" /> {t('public_page.item_count', { items: pool.statistics.transforms })}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}