{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController\";\nimport { Mesh } from \"../../Meshes/mesh\";\nimport { Quaternion } from \"../../Maths/math.vector\";\n/**\r\n * A generic trigger-only motion controller for WebXR\r\n */\n\nvar WebXRGenericTriggerMotionController =\n/** @class */\nfunction (_super) {\n  __extends(WebXRGenericTriggerMotionController, _super);\n\n  function WebXRGenericTriggerMotionController(scene, gamepadObject, handedness) {\n    var _this = _super.call(this, scene, GenericTriggerLayout[handedness], gamepadObject, handedness) || this;\n\n    _this.profileId = WebXRGenericTriggerMotionController.ProfileId;\n    return _this;\n  }\n\n  WebXRGenericTriggerMotionController.prototype._getFilenameAndPath = function () {\n    return {\n      filename: \"generic.babylon\",\n      path: \"https://controllers.babylonjs.com/generic/\"\n    };\n  };\n\n  WebXRGenericTriggerMotionController.prototype._getModelLoadingConstraints = function () {\n    return true;\n  };\n\n  WebXRGenericTriggerMotionController.prototype._processLoadedModel = function (meshes) {// nothing to do\n  };\n\n  WebXRGenericTriggerMotionController.prototype._setRootMesh = function (meshes) {\n    var _this = this;\n\n    this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n    meshes.forEach(function (mesh) {\n      mesh.isPickable = false;\n\n      if (!mesh.parent) {\n        mesh.setParent(_this.rootMesh);\n      }\n    });\n    this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n  };\n\n  WebXRGenericTriggerMotionController.prototype._updateModel = function () {// no-op\n  };\n  /**\r\n   * Static version of the profile id of this controller\r\n   */\n\n\n  WebXRGenericTriggerMotionController.ProfileId = \"generic-trigger\";\n  return WebXRGenericTriggerMotionController;\n}(WebXRAbstractMotionController);\n\nexport { WebXRGenericTriggerMotionController }; // https://github.com/immersive-web/webxr-input-profiles/blob/master/packages/registry/profiles/generic/generic-trigger-touchpad-thumbstick.json\n\nvar GenericTriggerLayout = {\n  left: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-trigger-left\",\n    assetPath: \"left.glb\"\n  },\n  right: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-trigger-right\",\n    assetPath: \"right.glb\"\n  },\n  none: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-trigger-none\",\n    assetPath: \"none.glb\"\n  }\n};","map":null,"metadata":{},"sourceType":"module"}