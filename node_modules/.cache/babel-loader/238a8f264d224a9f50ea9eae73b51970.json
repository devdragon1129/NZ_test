{"ast":null,"code":"/**\r\n * Class used to define a retry strategy when error happens while loading assets\r\n */\nvar RetryStrategy =\n/** @class */\nfunction () {\n  function RetryStrategy() {}\n  /**\r\n   * Function used to defines an exponential back off strategy\r\n   * @param maxRetries defines the maximum number of retries (3 by default)\r\n   * @param baseInterval defines the interval between retries\r\n   * @returns the strategy function to use\r\n   */\n\n\n  RetryStrategy.ExponentialBackoff = function (maxRetries, baseInterval) {\n    if (maxRetries === void 0) {\n      maxRetries = 3;\n    }\n\n    if (baseInterval === void 0) {\n      baseInterval = 500;\n    }\n\n    return function (url, request, retryIndex) {\n      if (request.status !== 0 || retryIndex >= maxRetries || url.indexOf(\"file:\") !== -1) {\n        return -1;\n      }\n\n      return Math.pow(2, retryIndex) * baseInterval;\n    };\n  };\n\n  return RetryStrategy;\n}();\n\nexport { RetryStrategy };","map":null,"metadata":{},"sourceType":"module"}