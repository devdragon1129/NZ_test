{"ast":null,"code":"import _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { loadingReducer } from 'decentraland-dapps/dist/modules/loading/reducer';\nimport { ProgressStage } from 'modules/assetPack/types';\nimport { LOAD_ASSET_PACKS_REQUEST, LOAD_ASSET_PACKS_SUCCESS, LOAD_ASSET_PACKS_FAILURE, SAVE_ASSET_PACK_FAILURE, SAVE_ASSET_PACK_REQUEST, SAVE_ASSET_PACK_SUCCESS, DELETE_ASSET_PACK_SUCCESS, SET_PROGRESS, CLEAR_ASSET_PACKS } from 'modules/assetPack/actions';\nvar INITIAL_STATE = {\n  data: {},\n  loading: [],\n  progress: {\n    stage: ProgressStage.NONE,\n    value: 0\n  },\n  error: null\n};\nexport var assetPackReducer = function assetPackReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_ASSET_PACKS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action)\n        });\n      }\n\n    case LOAD_ASSET_PACKS_SUCCESS:\n      {\n        var assetPacks = action.payload.assetPacks;\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: null,\n          data: _objectSpread({}, state.data, assetPacks.reduce(function (accum, assetPack) {\n            return _objectSpread({}, accum, _defineProperty({}, assetPack.id, _objectSpread({}, assetPack, {\n              assets: assetPack.assets.map(function (asset) {\n                return asset.id;\n              })\n            })));\n          }, {}))\n        });\n      }\n\n    case LOAD_ASSET_PACKS_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: action.payload.error\n        });\n      }\n\n    case SAVE_ASSET_PACK_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action)\n        });\n      }\n\n    case SAVE_ASSET_PACK_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action)\n        });\n      }\n\n    case SAVE_ASSET_PACK_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          error: action.payload.error,\n          loading: loadingReducer(state.loading, action)\n        });\n      }\n\n    case DELETE_ASSET_PACK_SUCCESS:\n      {\n        var assetPack = action.payload.assetPack;\n\n        var newState = _objectSpread({}, state, {\n          data: _objectSpread({}, state.data)\n        });\n\n        delete newState.data[assetPack.id];\n        return newState;\n      }\n\n    case SET_PROGRESS:\n      {\n        var _action$payload = action.payload,\n            stage = _action$payload.stage,\n            value = _action$payload.value;\n        return _objectSpread({}, state, {\n          progress: {\n            stage: stage,\n            value: value\n          }\n        });\n      }\n\n    case CLEAR_ASSET_PACKS:\n      {\n        return INITIAL_STATE;\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/assetPack/reducer.ts"],"names":["loadingReducer","ProgressStage","LOAD_ASSET_PACKS_REQUEST","LOAD_ASSET_PACKS_SUCCESS","LOAD_ASSET_PACKS_FAILURE","SAVE_ASSET_PACK_FAILURE","SAVE_ASSET_PACK_REQUEST","SAVE_ASSET_PACK_SUCCESS","DELETE_ASSET_PACK_SUCCESS","SET_PROGRESS","CLEAR_ASSET_PACKS","INITIAL_STATE","data","loading","progress","stage","NONE","value","error","assetPackReducer","state","action","type","assetPacks","payload","reduce","accum","assetPack","id","assets","map","asset","newState"],"mappings":"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","sourcesContent":["import { loadingReducer, LoadingState } from 'decentraland-dapps/dist/modules/loading/reducer'\nimport { ModelById } from 'decentraland-dapps/dist/lib/types'\nimport { AssetPack, ProgressStage } from 'modules/assetPack/types'\nimport {\n  LoadAssetPacksRequestAction,\n  LoadAssetPacksSuccessAction,\n  LoadAssetPacksFailureAction,\n  SaveAssetPackFailureAction,\n  SaveAssetPackRequestAction,\n  SaveAssetPackSuccessAction,\n  DeleteAssetPackSuccessAction,\n  SetProgressAction,\n  LOAD_ASSET_PACKS_REQUEST,\n  LOAD_ASSET_PACKS_SUCCESS,\n  LOAD_ASSET_PACKS_FAILURE,\n  SAVE_ASSET_PACK_FAILURE,\n  SAVE_ASSET_PACK_REQUEST,\n  SAVE_ASSET_PACK_SUCCESS,\n  DELETE_ASSET_PACK_SUCCESS,\n  SET_PROGRESS,\n  ClearAssetPacksAction,\n  CLEAR_ASSET_PACKS\n} from 'modules/assetPack/actions'\n\nexport type AssetPackState = {\n  data: ModelById<AssetPack>\n  progress: {\n    stage: ProgressStage\n    value: number\n  }\n  loading: LoadingState\n  error: string | null\n}\n\nconst INITIAL_STATE: AssetPackState = {\n  data: {},\n  loading: [],\n  progress: {\n    stage: ProgressStage.NONE,\n    value: 0\n  },\n  error: null\n}\n\nexport type AssetPackReducerAction =\n  | LoadAssetPacksRequestAction\n  | LoadAssetPacksSuccessAction\n  | LoadAssetPacksFailureAction\n  | SaveAssetPackFailureAction\n  | DeleteAssetPackSuccessAction\n  | SetProgressAction\n  | SaveAssetPackRequestAction\n  | SaveAssetPackSuccessAction\n  | ClearAssetPacksAction\n\nexport const assetPackReducer = (state = INITIAL_STATE, action: AssetPackReducerAction): AssetPackState => {\n  switch (action.type) {\n    case LOAD_ASSET_PACKS_REQUEST: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action)\n      }\n    }\n    case LOAD_ASSET_PACKS_SUCCESS: {\n      const { assetPacks } = action.payload\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: null,\n        data: {\n          ...state.data,\n          ...assetPacks.reduce(\n            (accum, assetPack) => ({\n              ...accum,\n              [assetPack.id]: {\n                ...assetPack,\n                assets: assetPack.assets.map(asset => asset.id)\n              }\n            }),\n            {}\n          )\n        }\n      }\n    }\n    case LOAD_ASSET_PACKS_FAILURE: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: action.payload.error\n      }\n    }\n    case SAVE_ASSET_PACK_REQUEST: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action)\n      }\n    }\n    case SAVE_ASSET_PACK_SUCCESS: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action)\n      }\n    }\n    case SAVE_ASSET_PACK_FAILURE: {\n      return {\n        ...state,\n        error: action.payload.error,\n        loading: loadingReducer(state.loading, action)\n      }\n    }\n    case DELETE_ASSET_PACK_SUCCESS: {\n      const { assetPack } = action.payload\n      const newState = {\n        ...state,\n        data: {\n          ...state.data\n        }\n      }\n      delete newState.data[assetPack.id]\n      return newState\n    }\n    case SET_PROGRESS: {\n      const { stage, value } = action.payload\n      return {\n        ...state,\n        progress: {\n          stage,\n          value\n        }\n      }\n    }\n    case CLEAR_ASSET_PACKS: {\n      return INITIAL_STATE\n    }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}