{"ast":null,"code":"import _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { loadingReducer } from 'decentraland-dapps/dist/modules/loading/reducer';\nimport { FETCH_WEEKLY_SCENE_STATS_FAILURE, FETCH_WEEKLY_SCENE_STATS_REQUEST, FETCH_WEEKLY_SCENE_STATS_SUCCESS } from './action';\nvar INITIAL_STATE = {\n  data: {\n    weekly: {}\n  },\n  loading: [],\n  error: null\n};\nexport function statsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_WEEKLY_SCENE_STATS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action)\n        });\n      }\n\n    case FETCH_WEEKLY_SCENE_STATS_SUCCESS:\n      {\n        var _action$payload = action.payload,\n            base = _action$payload.base,\n            stats = _action$payload.stats;\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: null,\n          data: _objectSpread({}, state.data, {\n            weekly: _objectSpread({}, state.data.weekly, _defineProperty({}, base, stats))\n          })\n        });\n      }\n\n    case FETCH_WEEKLY_SCENE_STATS_FAILURE:\n      {\n        var error = action.payload.error;\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: error\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/stats/reducer.ts"],"names":["loadingReducer","FETCH_WEEKLY_SCENE_STATS_FAILURE","FETCH_WEEKLY_SCENE_STATS_REQUEST","FETCH_WEEKLY_SCENE_STATS_SUCCESS","INITIAL_STATE","data","weekly","loading","error","statsReducer","state","action","type","payload","base","stats"],"mappings":";;AAAA,SAASA,cAAT,QAA6C,iDAA7C;AACA,SAIEC,gCAJF,EAKEC,gCALF,EAMEC,gCANF,QAOO,UAPP;AAUA,IAAMC,aAAyB,GAAG;AAChCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GAD0B;AAIhCC,EAAAA,OAAO,EAAE,EAJuB;AAKhCC,EAAAA,KAAK,EAAE;AALyB,CAAlC;AAkBA,OAAO,SAASC,YAAT,GAAyE;AAAA,MAAnDC,KAAmD,uEAA3CN,aAA2C;AAAA,MAA5BO,MAA4B;;AAC9E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,gCAAL;AAAuC;AACrC,iCACKQ,KADL;AAEEH,UAAAA,OAAO,EAAEP,cAAc,CAACU,KAAK,CAACH,OAAP,EAAgBI,MAAhB;AAFzB;AAID;;AAED,SAAKR,gCAAL;AAAuC;AAAA,8BACbQ,MAAM,CAACE,OADM;AAAA,YAC7BC,IAD6B,mBAC7BA,IAD6B;AAAA,YACvBC,KADuB,mBACvBA,KADuB;AAErC,iCACKL,KADL;AAEEH,UAAAA,OAAO,EAAEP,cAAc,CAACU,KAAK,CAACH,OAAP,EAAgBI,MAAhB,CAFzB;AAGEH,UAAAA,KAAK,EAAE,IAHT;AAIEH,UAAAA,IAAI,oBACCK,KAAK,CAACL,IADP;AAEFC,YAAAA,MAAM,oBACDI,KAAK,CAACL,IAAN,CAAWC,MADV,sBAEHQ,IAFG,EAEIC,KAFJ;AAFJ;AAJN;AAYD;;AAED,SAAKd,gCAAL;AAAuC;AAAA,YAC7BO,KAD6B,GACnBG,MAAM,CAACE,OADY,CAC7BL,KAD6B;AAErC,iCACKE,KADL;AAEEH,UAAAA,OAAO,EAAEP,cAAc,CAACU,KAAK,CAACH,OAAP,EAAgBI,MAAhB,CAFzB;AAGEH,UAAAA,KAAK,EAALA;AAHF;AAKD;;AAED;AACE,aAAOE,KAAP;AAlCJ;AAoCD","sourcesContent":["import { loadingReducer, LoadingState } from 'decentraland-dapps/dist/modules/loading/reducer'\nimport {\n  FetchWeeklySceneStatsFailureAction,\n  FetchWeeklySceneStatsRequestAction,\n  FetchWeeklySceneStatsSuccessAction,\n  FETCH_WEEKLY_SCENE_STATS_FAILURE,\n  FETCH_WEEKLY_SCENE_STATS_REQUEST,\n  FETCH_WEEKLY_SCENE_STATS_SUCCESS\n} from './action'\nimport { WeeklyStats } from './types'\n\nconst INITIAL_STATE: StatsState = {\n  data: {\n    weekly: {}\n  },\n  loading: [],\n  error: null\n}\n\nexport type StatsState = {\n  data: {\n    weekly: Record<string, WeeklyStats | null>\n  }\n  loading: LoadingState\n  error: string | null\n}\n\ntype StatsReducerAction = FetchWeeklySceneStatsRequestAction | FetchWeeklySceneStatsFailureAction | FetchWeeklySceneStatsSuccessAction\n\nexport function statsReducer(state = INITIAL_STATE, action: StatsReducerAction) {\n  switch (action.type) {\n    case FETCH_WEEKLY_SCENE_STATS_REQUEST: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action)\n      }\n    }\n\n    case FETCH_WEEKLY_SCENE_STATS_SUCCESS: {\n      const { base, stats } = action.payload\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: null,\n        data: {\n          ...state.data,\n          weekly: {\n            ...state.data.weekly,\n            [base]: stats\n          }\n        }\n      }\n    }\n\n    case FETCH_WEEKLY_SCENE_STATS_FAILURE: {\n      const { error } = action.payload\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error\n      }\n    }\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}