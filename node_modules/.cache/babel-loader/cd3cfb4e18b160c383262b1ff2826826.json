{"ast":null,"code":"import { Texture } from \"@babylonjs/core/Materials/Textures/texture\";\nimport { GLTFLoader } from \"../glTFLoader\";\nvar NAME = \"KHR_texture_transform\";\n/**\r\n * [Specification](https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_texture_transform)\r\n */\n\nvar KHR_texture_transform =\n/** @class */\nfunction () {\n  /** @hidden */\n  function KHR_texture_transform(loader) {\n    /**\r\n     * The name of this extension.\r\n     */\n    this.name = NAME;\n    this._loader = loader;\n    this.enabled = this._loader.isExtensionUsed(NAME);\n  }\n  /** @hidden */\n\n\n  KHR_texture_transform.prototype.dispose = function () {\n    this._loader = null;\n  };\n  /** @hidden */\n\n\n  KHR_texture_transform.prototype.loadTextureInfoAsync = function (context, textureInfo, assign) {\n    var _this = this;\n\n    return GLTFLoader.LoadExtensionAsync(context, textureInfo, this.name, function (extensionContext, extension) {\n      return _this._loader.loadTextureInfoAsync(context, textureInfo, function (babylonTexture) {\n        if (!(babylonTexture instanceof Texture)) {\n          throw new Error(extensionContext + \": Texture type not supported\");\n        }\n\n        if (extension.offset) {\n          babylonTexture.uOffset = extension.offset[0];\n          babylonTexture.vOffset = extension.offset[1];\n        } // Always rotate around the origin.\n\n\n        babylonTexture.uRotationCenter = 0;\n        babylonTexture.vRotationCenter = 0;\n\n        if (extension.rotation) {\n          babylonTexture.wAng = -extension.rotation;\n        }\n\n        if (extension.scale) {\n          babylonTexture.uScale = extension.scale[0];\n          babylonTexture.vScale = extension.scale[1];\n        }\n\n        if (extension.texCoord != undefined) {\n          babylonTexture.coordinatesIndex = extension.texCoord;\n        }\n\n        assign(babylonTexture);\n      });\n    });\n  };\n\n  return KHR_texture_transform;\n}();\n\nexport { KHR_texture_transform };\nGLTFLoader.RegisterExtension(NAME, function (loader) {\n  return new KHR_texture_transform(loader);\n});","map":null,"metadata":{},"sourceType":"module"}