{"ast":null,"code":"/**\r\n * @hidden\r\n **/\nvar StencilState =\n/** @class */\nfunction () {\n  function StencilState() {\n    this._isStencilTestDirty = false;\n    this._isStencilMaskDirty = false;\n    this._isStencilFuncDirty = false;\n    this._isStencilOpDirty = false;\n    this.reset();\n  }\n\n  Object.defineProperty(StencilState.prototype, \"isDirty\", {\n    get: function get() {\n      return this._isStencilTestDirty || this._isStencilMaskDirty || this._isStencilFuncDirty || this._isStencilOpDirty;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilFunc\", {\n    get: function get() {\n      return this._stencilFunc;\n    },\n    set: function set(value) {\n      if (this._stencilFunc === value) {\n        return;\n      }\n\n      this._stencilFunc = value;\n      this._isStencilFuncDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilFuncRef\", {\n    get: function get() {\n      return this._stencilFuncRef;\n    },\n    set: function set(value) {\n      if (this._stencilFuncRef === value) {\n        return;\n      }\n\n      this._stencilFuncRef = value;\n      this._isStencilFuncDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilFuncMask\", {\n    get: function get() {\n      return this._stencilFuncMask;\n    },\n    set: function set(value) {\n      if (this._stencilFuncMask === value) {\n        return;\n      }\n\n      this._stencilFuncMask = value;\n      this._isStencilFuncDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilOpStencilFail\", {\n    get: function get() {\n      return this._stencilOpStencilFail;\n    },\n    set: function set(value) {\n      if (this._stencilOpStencilFail === value) {\n        return;\n      }\n\n      this._stencilOpStencilFail = value;\n      this._isStencilOpDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilOpDepthFail\", {\n    get: function get() {\n      return this._stencilOpDepthFail;\n    },\n    set: function set(value) {\n      if (this._stencilOpDepthFail === value) {\n        return;\n      }\n\n      this._stencilOpDepthFail = value;\n      this._isStencilOpDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilOpStencilDepthPass\", {\n    get: function get() {\n      return this._stencilOpStencilDepthPass;\n    },\n    set: function set(value) {\n      if (this._stencilOpStencilDepthPass === value) {\n        return;\n      }\n\n      this._stencilOpStencilDepthPass = value;\n      this._isStencilOpDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilMask\", {\n    get: function get() {\n      return this._stencilMask;\n    },\n    set: function set(value) {\n      if (this._stencilMask === value) {\n        return;\n      }\n\n      this._stencilMask = value;\n      this._isStencilMaskDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StencilState.prototype, \"stencilTest\", {\n    get: function get() {\n      return this._stencilTest;\n    },\n    set: function set(value) {\n      if (this._stencilTest === value) {\n        return;\n      }\n\n      this._stencilTest = value;\n      this._isStencilTestDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StencilState.prototype.reset = function () {\n    this._stencilTest = false;\n    this._stencilMask = 0xFF;\n    this._stencilFunc = StencilState.ALWAYS;\n    this._stencilFuncRef = 1;\n    this._stencilFuncMask = 0xFF;\n    this._stencilOpStencilFail = StencilState.KEEP;\n    this._stencilOpDepthFail = StencilState.KEEP;\n    this._stencilOpStencilDepthPass = StencilState.REPLACE;\n    this._isStencilTestDirty = true;\n    this._isStencilMaskDirty = true;\n    this._isStencilFuncDirty = true;\n    this._isStencilOpDirty = true;\n  };\n\n  StencilState.prototype.apply = function (gl) {\n    if (!this.isDirty) {\n      return;\n    } // Stencil test\n\n\n    if (this._isStencilTestDirty) {\n      if (this.stencilTest) {\n        gl.enable(gl.STENCIL_TEST);\n      } else {\n        gl.disable(gl.STENCIL_TEST);\n      }\n\n      this._isStencilTestDirty = false;\n    } // Stencil mask\n\n\n    if (this._isStencilMaskDirty) {\n      gl.stencilMask(this.stencilMask);\n      this._isStencilMaskDirty = false;\n    } // Stencil func\n\n\n    if (this._isStencilFuncDirty) {\n      gl.stencilFunc(this.stencilFunc, this.stencilFuncRef, this.stencilFuncMask);\n      this._isStencilFuncDirty = false;\n    } // Stencil op\n\n\n    if (this._isStencilOpDirty) {\n      gl.stencilOp(this.stencilOpStencilFail, this.stencilOpDepthFail, this.stencilOpStencilDepthPass);\n      this._isStencilOpDirty = false;\n    }\n  };\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn */\n\n\n  StencilState.ALWAYS = 519;\n  /** Passed to stencilOperation to specify that stencil value must be kept */\n\n  StencilState.KEEP = 7680;\n  /** Passed to stencilOperation to specify that stencil value must be replaced */\n\n  StencilState.REPLACE = 7681;\n  return StencilState;\n}();\n\nexport { StencilState };","map":null,"metadata":{},"sourceType":"module"}