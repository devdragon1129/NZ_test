{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { getLoading } from 'modules/collection/selectors';\nimport { SAVE_COLLECTION_REQUEST, saveCollectionRequest } from 'modules/collection/actions';\nimport { getWalletThirdParties, getError } from 'modules/thirdParty/selectors';\nimport CreateThirdPartyCollectionModal from './CreateThirdPartyCollectionModal';\n\nvar mapState = function mapState(state) {\n  return {\n    address: getAddress(state),\n    thirdParties: getWalletThirdParties(state),\n    error: getError(state),\n    isLoading: isLoadingType(getLoading(state), SAVE_COLLECTION_REQUEST)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSubmit: function onSubmit(collection) {\n      return dispatch(saveCollectionRequest(collection));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CreateThirdPartyCollectionModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CreateThirdPartyCollectionModal/CreateThirdPartyCollectionModal.container.ts"],"names":["connect","getAddress","isLoadingType","getLoading","SAVE_COLLECTION_REQUEST","saveCollectionRequest","getWalletThirdParties","getError","CreateThirdPartyCollectionModal","mapState","state","address","thirdParties","error","isLoading","mapDispatch","dispatch","onSubmit","collection"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kDAA3B;AACA,SAASC,aAAT,QAA8B,mDAA9B;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,uBAAT,EAAkCC,qBAAlC,QAA+D,4BAA/D;AACA,SAASC,qBAAT,EAAgCC,QAAhC,QAAgD,8BAAhD;AAEA,OAAOC,+BAAP,MAA4C,mCAA5C;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,OAAO,EAAEV,UAAU,CAACS,KAAD,CADkC;AAErDE,IAAAA,YAAY,EAAEN,qBAAqB,CAACI,KAAD,CAFkB;AAGrDG,IAAAA,KAAK,EAAEN,QAAQ,CAACG,KAAD,CAHsC;AAIrDI,IAAAA,SAAS,EAAEZ,aAAa,CAACC,UAAU,CAACO,KAAD,CAAX,EAAoBN,uBAApB;AAJ6B,GAAtC;AAAA,CAAjB;;AAOA,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,QAAQ,EAAE,kBAAAC,UAAU;AAAA,aAAIF,QAAQ,CAACX,qBAAqB,CAACa,UAAD,CAAtB,CAAZ;AAAA;AAD4C,GAA9C;AAAA,CAApB;;AAIA,eAAelB,OAAO,CAACS,QAAD,EAAWM,WAAX,CAAP,CAA+BP,+BAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { RootState } from 'modules/common/types'\nimport { getLoading } from 'modules/collection/selectors'\nimport { SAVE_COLLECTION_REQUEST, saveCollectionRequest } from 'modules/collection/actions'\nimport { getWalletThirdParties, getError } from 'modules/thirdParty/selectors'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './CreateThirdPartyCollectionModal.types'\nimport CreateThirdPartyCollectionModal from './CreateThirdPartyCollectionModal'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  address: getAddress(state),\n  thirdParties: getWalletThirdParties(state),\n  error: getError(state),\n  isLoading: isLoadingType(getLoading(state), SAVE_COLLECTION_REQUEST)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSubmit: collection => dispatch(saveCollectionRequest(collection))\n})\n\nexport default connect(mapState, mapDispatch)(CreateThirdPartyCollectionModal)\n"]},"metadata":{},"sourceType":"module"}