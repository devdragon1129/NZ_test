{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(forEach);\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { put } from 'redux-saga/effects';\nimport { debounceByKey, throttle } from 'lib/debounce';\nexport var SAVE_DEBOUNCE = 4000;\nexport var THUMBNAIL_THROTTLE = 30000;\nvar saveProjectDebounce = debounceByKey(function (project, scene, builder) {\n  return builder.saveProject(project, scene);\n}, SAVE_DEBOUNCE);\nexport function saveProject(key, project, scene, builder) {\n  var debounce = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n  if (debounce) {\n    return saveProjectDebounce(key, project, scene, builder);\n  } else {\n    return builder.saveProject(project, scene);\n  }\n}\nexport var saveThumbnail = throttle(function (project, builder) {\n  return builder.saveProjectThumbnail(project);\n}, THUMBNAIL_THROTTLE);\nexport function forEach(ids, data, action) {\n  var _iterator, _step, id, _element;\n\n  return _regeneratorRuntime.wrap(function forEach$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _iterator = _createForOfIteratorHelper(ids);\n          _context.prev = 1;\n\n          _iterator.s();\n\n        case 3:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 11;\n            break;\n          }\n\n          id = _step.value;\n          _element = data[id];\n\n          if (!_element) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 9;\n          return put(action(_element));\n\n        case 9:\n          _context.next = 3;\n          break;\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](1);\n\n          _iterator.e(_context.t0);\n\n        case 16:\n          _context.prev = 16;\n\n          _iterator.f();\n\n          return _context.finish(16);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 13, 16, 19]]);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/sync/utils.ts"],"names":["forEach","put","debounceByKey","throttle","SAVE_DEBOUNCE","THUMBNAIL_THROTTLE","saveProjectDebounce","project","scene","builder","saveProject","key","debounce","saveThumbnail","saveProjectThumbnail","ids","data","action","id","element"],"mappings":";;oDA4BiBA,O;;;;;;;;AA3BjB,SAASC,GAAT,QAAoB,oBAApB;AAKA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AAGA,OAAO,IAAMC,aAAa,GAAG,IAAtB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,KAA3B;AAEP,IAAMC,mBAAmB,GAAGJ,aAAa,CACvC,UAACK,OAAD,EAAmBC,KAAnB,EAAiCC,OAAjC;AAAA,SAAyDA,OAAO,CAACC,WAAR,CAAoBH,OAApB,EAA6BC,KAA7B,CAAzD;AAAA,CADuC,EAEvCJ,aAFuC,CAAzC;AAKA,OAAO,SAASM,WAAT,CAAqBC,GAArB,EAAkCJ,OAAlC,EAAoDC,KAApD,EAAkEC,OAAlE,EAAiH;AAAA,MAA1BG,QAA0B,uEAAN,IAAM;;AACtH,MAAIA,QAAJ,EAAc;AACZ,WAAON,mBAAmB,CAACK,GAAD,EAAMJ,OAAN,EAAeC,KAAf,EAAsBC,OAAtB,CAA1B;AACD,GAFD,MAEO;AACL,WAAOA,OAAO,CAACC,WAAR,CAAoBH,OAApB,EAA6BC,KAA7B,CAAP;AACD;AACF;AAED,OAAO,IAAMK,aAAa,GAAGV,QAAQ,CAAC,UAACI,OAAD,EAAmBE,OAAnB;AAAA,SAA2CA,OAAO,CAACK,oBAAR,CAA6BP,OAA7B,CAA3C;AAAA,CAAD,EAAmFF,kBAAnF,CAA9B;AAEP,OAAO,SAAUL,OAAV,CAAqBe,GAArB,EAAoCC,IAApC,EAAwDC,MAAxD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iDACYF,GADZ;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACMG,UAAAA,EADN;AAEGC,UAAAA,QAFH,GAEaH,IAAI,CAACE,EAAD,CAFjB;;AAAA,eAGCC,QAHD;AAAA;AAAA;AAAA;;AAAA;AAID,iBAAMlB,GAAG,CAACgB,MAAM,CAACE,QAAD,CAAP,CAAT;;AAJC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { PayloadAction } from 'typesafe-actions'\nimport { put } from 'redux-saga/effects'\nimport { DataByKey } from 'decentraland-dapps/dist/lib/types'\nimport { Project } from 'modules/project/types'\nimport { Scene } from 'modules/scene/types'\n\nimport { debounceByKey, throttle } from 'lib/debounce'\nimport { BuilderAPI } from 'lib/api/builder'\n\nexport const SAVE_DEBOUNCE = 4000\n\nexport const THUMBNAIL_THROTTLE = 30000\n\nconst saveProjectDebounce = debounceByKey(\n  (project: Project, scene: Scene, builder: BuilderAPI) => builder.saveProject(project, scene),\n  SAVE_DEBOUNCE\n)\n\nexport function saveProject(key: string, project: Project, scene: Scene, builder: BuilderAPI, debounce: boolean = true) {\n  if (debounce) {\n    return saveProjectDebounce(key, project, scene, builder)\n  } else {\n    return builder.saveProject(project, scene)\n  }\n}\n\nexport const saveThumbnail = throttle((project: Project, builder: BuilderAPI) => builder.saveProjectThumbnail(project), THUMBNAIL_THROTTLE)\n\nexport function* forEach<T>(ids: string[], data: DataByKey<T>, action: (element: T) => PayloadAction<any, any>) {\n  for (const id of ids) {\n    const element = data[id]\n    if (element) {\n      yield put(action(element))\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}