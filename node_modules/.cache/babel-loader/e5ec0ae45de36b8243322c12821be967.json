{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\r\n * @ignore\r\n * Application error to support additional information when loading a file\r\n */\n\nvar BaseError =\n/** @class */\nfunction (_super) {\n  __extends(BaseError, _super);\n\n  function BaseError() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // See https://stackoverflow.com/questions/12915412/how-do-i-extend-a-host-object-e-g-error-in-typescript\n  // and https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n  // Polyfill for Object.setPrototypeOf if necessary.\n\n\n  BaseError._setPrototypeOf = Object.setPrototypeOf || function (o, proto) {\n    o.__proto__ = proto;\n    return o;\n  };\n\n  return BaseError;\n}(Error);\n\nexport { BaseError };","map":null,"metadata":{},"sourceType":"module"}