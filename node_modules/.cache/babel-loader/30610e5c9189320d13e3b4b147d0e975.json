{"ast":null,"code":"import { connect } from 'react-redux';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { getAuthorizedItems, getLoading } from 'modules/item/selectors';\nimport { saveItemRequest, setPriceAndBeneficiaryRequest, FETCH_ITEMS_REQUEST, SAVE_ITEM_REQUEST, SET_PRICE_AND_BENEFICIARY_REQUEST } from 'modules/item/actions';\nimport EditPriceAndBeneficiaryModal from './EditPriceAndBeneficiaryModal';\n\nvar mapState = function mapState(state, ownProps) {\n  var itemId = ownProps.metadata.itemId;\n  var items = getAuthorizedItems(state);\n  var item = items.find(function (item) {\n    return item.id === itemId;\n  });\n  return {\n    item: item,\n    isLoading: isLoadingType(getLoading(state), FETCH_ITEMS_REQUEST) || isLoadingType(getLoading(state), SAVE_ITEM_REQUEST) || isLoadingType(getLoading(state), SET_PRICE_AND_BENEFICIARY_REQUEST)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSave: function onSave(item, contents) {\n      return dispatch(saveItemRequest(item, contents));\n    },\n    onSetPriceAndBeneficiary: function onSetPriceAndBeneficiary(itemId, price, beneficiary) {\n      return dispatch(setPriceAndBeneficiaryRequest(itemId, price, beneficiary));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditPriceAndBeneficiaryModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/EditPriceAndBeneficiaryModal/EditPriceAndBeneficiaryModal.container.ts"],"names":["connect","isLoadingType","getAuthorizedItems","getLoading","saveItemRequest","setPriceAndBeneficiaryRequest","FETCH_ITEMS_REQUEST","SAVE_ITEM_REQUEST","SET_PRICE_AND_BENEFICIARY_REQUEST","EditPriceAndBeneficiaryModal","mapState","state","ownProps","itemId","metadata","items","item","find","id","isLoading","mapDispatch","dispatch","onSave","contents","onSetPriceAndBeneficiary","price","beneficiary"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,mDAA9B;AAGA,SAASC,kBAAT,EAA6BC,UAA7B,QAA+C,wBAA/C;AACA,SACEC,eADF,EAEEC,6BAFF,EAGEC,mBAHF,EAIEC,iBAJF,EAKEC,iCALF,QAMO,sBANP;AAQA,OAAOC,4BAAP,MAAyC,gCAAzC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB,EAAyD;AAAA,MAChEC,MADgE,GACrDD,QAAQ,CAACE,QAD4C,CAChED,MADgE;AAExE,MAAME,KAAK,GAAGb,kBAAkB,CAACS,KAAD,CAAhC;AACA,MAAMK,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAW,UAAAD,IAAI;AAAA,WAAIA,IAAI,CAACE,EAAL,KAAYL,MAAhB;AAAA,GAAf,CAAb;AAEA,SAAO;AACLG,IAAAA,IAAI,EAAJA,IADK;AAELG,IAAAA,SAAS,EACPlB,aAAa,CAACE,UAAU,CAACQ,KAAD,CAAX,EAAoBL,mBAApB,CAAb,IACAL,aAAa,CAACE,UAAU,CAACQ,KAAD,CAAX,EAAoBJ,iBAApB,CADb,IAEAN,aAAa,CAACE,UAAU,CAACQ,KAAD,CAAX,EAAoBH,iCAApB;AALV,GAAP;AAOD,CAZD;;AAcA,IAAMY,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,MAAM,EAAE,gBAACN,IAAD,EAAOO,QAAP;AAAA,aAAoBF,QAAQ,CAACjB,eAAe,CAACY,IAAD,EAAOO,QAAP,CAAhB,CAA5B;AAAA,KADwD;AAEhEC,IAAAA,wBAAwB,EAAE,kCAACX,MAAD,EAASY,KAAT,EAAgBC,WAAhB;AAAA,aAAgCL,QAAQ,CAAChB,6BAA6B,CAACQ,MAAD,EAASY,KAAT,EAAgBC,WAAhB,CAA9B,CAAxC;AAAA;AAFsC,GAA9C;AAAA,CAApB;;AAKA,eAAe1B,OAAO,CAACU,QAAD,EAAWU,WAAX,CAAP,CAA+BX,4BAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\n\nimport { RootState } from 'modules/common/types'\nimport { getAuthorizedItems, getLoading } from 'modules/item/selectors'\nimport {\n  saveItemRequest,\n  setPriceAndBeneficiaryRequest,\n  FETCH_ITEMS_REQUEST,\n  SAVE_ITEM_REQUEST,\n  SET_PRICE_AND_BENEFICIARY_REQUEST\n} from 'modules/item/actions'\nimport { OwnProps, MapStateProps, MapDispatchProps, MapDispatch } from './EditPriceAndBeneficiaryModal.types'\nimport EditPriceAndBeneficiaryModal from './EditPriceAndBeneficiaryModal'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapStateProps => {\n  const { itemId } = ownProps.metadata\n  const items = getAuthorizedItems(state)\n  const item = items.find(item => item.id === itemId)!\n\n  return {\n    item,\n    isLoading:\n      isLoadingType(getLoading(state), FETCH_ITEMS_REQUEST) ||\n      isLoadingType(getLoading(state), SAVE_ITEM_REQUEST) ||\n      isLoadingType(getLoading(state), SET_PRICE_AND_BENEFICIARY_REQUEST)\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSave: (item, contents) => dispatch(saveItemRequest(item, contents)),\n  onSetPriceAndBeneficiary: (itemId, price, beneficiary) => dispatch(setPriceAndBeneficiaryRequest(itemId, price, beneficiary))\n})\n\nexport default connect(mapState, mapDispatch)(EditPriceAndBeneficiaryModal)\n"]},"metadata":{},"sourceType":"module"}