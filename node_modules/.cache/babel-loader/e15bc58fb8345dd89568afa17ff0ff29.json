{"ast":null,"code":"import _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOCATION_CHANGE } from 'connected-react-router';\nimport { FETCH_TRANSACTION_SUCCESS } from 'decentraland-dapps/dist/modules/transaction/actions';\nimport { loadingReducer } from 'decentraland-dapps/dist/modules/loading/reducer';\nimport { PUBLISH_COLLECTION_SUCCESS, MINT_COLLECTION_ITEMS_SUCCESS, APPROVE_COLLECTION_SUCCESS, REJECT_COLLECTION_SUCCESS, SAVE_COLLECTION_SUCCESS } from 'modules/collection/actions';\nimport { FETCH_ITEMS_REQUEST, FETCH_ITEMS_SUCCESS, FETCH_ITEMS_FAILURE, FETCH_ITEM_REQUEST, FETCH_ITEM_SUCCESS, FETCH_ITEM_FAILURE, SAVE_ITEM_REQUEST, SAVE_ITEM_FAILURE, SAVE_ITEM_SUCCESS, DELETE_ITEM_REQUEST, DELETE_ITEM_SUCCESS, DELETE_ITEM_FAILURE, SET_COLLECTION, SET_ITEMS_TOKEN_ID_REQUEST, SET_ITEMS_TOKEN_ID_SUCCESS, SET_ITEMS_TOKEN_ID_FAILURE, FETCH_COLLECTION_ITEMS_SUCCESS, FETCH_COLLECTION_ITEMS_REQUEST, FETCH_COLLECTION_ITEMS_FAILURE, FETCH_RARITIES_REQUEST, FETCH_RARITIES_SUCCESS, FETCH_RARITIES_FAILURE, RESCUE_ITEMS_REQUEST, RESCUE_ITEMS_FAILURE, RESCUE_ITEMS_SUCCESS, RESCUE_ITEMS_CHUNK_SUCCESS, RESET_ITEM_REQUEST, RESET_ITEM_SUCCESS, RESET_ITEM_FAILURE, SET_PRICE_AND_BENEFICIARY_REQUEST, SET_PRICE_AND_BENEFICIARY_FAILURE, SET_PRICE_AND_BENEFICIARY_SUCCESS, DOWNLOAD_ITEM_REQUEST, DOWNLOAD_ITEM_FAILURE, DOWNLOAD_ITEM_SUCCESS, SAVE_MULTIPLE_ITEMS_SUCCESS, CLEAR_SAVE_MULTIPLE_ITEMS, SAVE_MULTIPLE_ITEMS_CANCELLED } from './actions';\nimport { PUBLISH_AND_PUSH_CHANGES_THIRD_PARTY_ITEMS_SUCCESS, PUBLISH_THIRD_PARTY_ITEMS_SUCCESS } from 'modules/thirdParty/actions';\nimport { toItemObject } from './utils';\nimport { buildCatalystItemURN, buildThirdPartyURN, decodeURN, URNType } from 'lib/urn';\nexport var INITIAL_STATE = {\n  data: {},\n  rarities: [],\n  loading: [],\n  error: null,\n  pagination: null\n};\nexport function itemReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      {\n        return _objectSpread({}, state, {\n          error: null\n        });\n      }\n\n    case FETCH_ITEMS_REQUEST:\n    case FETCH_RARITIES_REQUEST:\n    case FETCH_ITEM_REQUEST:\n    case FETCH_COLLECTION_ITEMS_REQUEST:\n    case SET_ITEMS_TOKEN_ID_REQUEST:\n    case SET_PRICE_AND_BENEFICIARY_REQUEST:\n    case SAVE_ITEM_REQUEST:\n    case DELETE_ITEM_REQUEST:\n    case RESET_ITEM_REQUEST:\n    case RESCUE_ITEMS_REQUEST:\n    case DOWNLOAD_ITEM_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action)\n        });\n      }\n\n    case FETCH_ITEMS_SUCCESS:\n    case FETCH_COLLECTION_ITEMS_SUCCESS:\n      {\n        var _action$payload = action.payload,\n            paginationIndex = _action$payload.paginationIndex,\n            items = _action$payload.items,\n            paginationStats = _action$payload.paginationStats;\n        var hasPagination = paginationStats !== undefined;\n        return _objectSpread({}, state, {\n          data: _objectSpread({}, state.data, toItemObject(items)),\n          loading: loadingReducer(state.loading, action),\n          pagination: _objectSpread({}, state.pagination, hasPagination ? _defineProperty({}, paginationIndex, {\n            ids: items.map(function (item) {\n              return item.id;\n            }),\n            total: paginationStats.total,\n            limit: paginationStats.limit,\n            currentPage: paginationStats.page,\n            totalPages: paginationStats.pages\n          }) : {}),\n          error: null\n        });\n      }\n\n    case SET_ITEMS_TOKEN_ID_SUCCESS:\n      {\n        var _items = action.payload.items;\n        return _objectSpread({}, state, {\n          data: _objectSpread({}, state.data, toItemObject(_items)),\n          loading: loadingReducer(state.loading, action),\n          error: null\n        });\n      }\n\n    case RESCUE_ITEMS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: null\n        });\n      }\n\n    case RESCUE_ITEMS_CHUNK_SUCCESS:\n      {\n        var _items2 = action.payload.items;\n        return _objectSpread({}, state, {\n          data: _objectSpread({}, state.data, toItemObject(_items2))\n        });\n      }\n\n    case FETCH_RARITIES_SUCCESS:\n      {\n        var rarities = action.payload.rarities;\n        return _objectSpread({}, state, {\n          rarities: rarities,\n          loading: loadingReducer(state.loading, action),\n          error: null\n        });\n      }\n\n    case FETCH_ITEMS_FAILURE:\n    case FETCH_ITEM_FAILURE:\n    case FETCH_COLLECTION_ITEMS_FAILURE:\n    case SET_ITEMS_TOKEN_ID_FAILURE:\n    case SET_PRICE_AND_BENEFICIARY_FAILURE:\n    case SAVE_ITEM_FAILURE:\n    case FETCH_RARITIES_FAILURE:\n    case DELETE_ITEM_FAILURE:\n    case RESET_ITEM_FAILURE:\n    case RESCUE_ITEMS_FAILURE:\n    case DOWNLOAD_ITEM_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: action.payload.error\n        });\n      }\n\n    case FETCH_ITEM_SUCCESS:\n    case SET_PRICE_AND_BENEFICIARY_SUCCESS:\n    case SAVE_ITEM_SUCCESS:\n      {\n        var item = action.payload.item;\n        return _objectSpread({}, state, {\n          data: _objectSpread({}, state.data, toItemObject([item])),\n          loading: loadingReducer(state.loading, action),\n          error: null\n        });\n      }\n\n    case CLEAR_SAVE_MULTIPLE_ITEMS:\n      {\n        return _objectSpread({}, state, {\n          error: null\n        });\n      }\n\n    case SAVE_MULTIPLE_ITEMS_CANCELLED:\n    case SAVE_MULTIPLE_ITEMS_SUCCESS:\n      {\n        var _items3 = action.payload.items;\n        return _objectSpread({}, state, {\n          data: _objectSpread({}, state.data, toItemObject(_items3))\n        });\n      }\n\n    case RESET_ITEM_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: null\n        });\n      }\n\n    case DELETE_ITEM_SUCCESS:\n      {\n        var _item = action.payload.item;\n\n        var newState = _objectSpread({}, state, {\n          data: _objectSpread({}, state.data),\n          loading: loadingReducer(state.loading, action),\n          error: null\n        });\n\n        delete newState.data[_item.id];\n        return newState;\n      }\n\n    case SET_COLLECTION:\n      {\n        var _action$payload2 = action.payload,\n            _item2 = _action$payload2.item,\n            collectionId = _action$payload2.collectionId;\n\n        var newItem = _objectSpread({}, _item2);\n\n        if (collectionId) {\n          newItem.collectionId = collectionId;\n        } else {\n          delete newItem.collectionId;\n        }\n\n        return _objectSpread({}, state, {\n          data: _objectSpread({}, state.data, _defineProperty({}, newItem.id, newItem))\n        });\n      }\n\n    case DOWNLOAD_ITEM_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: null\n        });\n      }\n\n    case FETCH_TRANSACTION_SUCCESS:\n      {\n        var transaction = action.payload.transaction;\n\n        switch (transaction.actionType) {\n          case APPROVE_COLLECTION_SUCCESS:\n            {\n              var collection = transaction.payload.collection;\n              return _objectSpread({}, state, {\n                data: _objectSpread({}, state.data, Object.values(state.data).reduce(function (accum, item) {\n                  if (item.collectionId === collection.id) {\n                    accum[item.id] = _objectSpread({}, state.data[item.id], item, {\n                      isApproved: true\n                    });\n                  } else {\n                    accum[item.id] = item;\n                  }\n\n                  return accum;\n                }, {}))\n              });\n            }\n\n          case REJECT_COLLECTION_SUCCESS:\n            {\n              var _collection = transaction.payload.collection;\n              return _objectSpread({}, state, {\n                data: _objectSpread({}, state.data, Object.values(state.data).reduce(function (accum, item) {\n                  if (item.collectionId === _collection.id) {\n                    accum[item.id] = _objectSpread({}, state.data[item.id], item, {\n                      isApproved: false\n                    });\n                  } else {\n                    accum[item.id] = item;\n                  }\n\n                  return accum;\n                }, {}))\n              });\n            }\n\n          case PUBLISH_AND_PUSH_CHANGES_THIRD_PARTY_ITEMS_SUCCESS:\n          case PUBLISH_THIRD_PARTY_ITEMS_SUCCESS:\n          case PUBLISH_COLLECTION_SUCCESS:\n            {\n              var _items4 = transaction.payload.items;\n              return _objectSpread({}, state, {\n                data: _objectSpread({}, state.data, _items4.reduce(function (accum, item) {\n                  accum[item.id] = _objectSpread({}, state.data[item.id], item, {\n                    isPublished: true\n                  });\n                  return accum;\n                }, {}))\n              });\n            }\n\n          case MINT_COLLECTION_ITEMS_SUCCESS:\n            {\n              var mints = transaction.payload.mints;\n              return _objectSpread({}, state, {\n                data: _objectSpread({}, state.data, mints.reduce(function (accum, mint) {\n                  var item = state.data[mint.item.id];\n                  var totalSupply = (item.totalSupply || 0) + mint.amount;\n                  accum[item.id] = _objectSpread({}, state.data[item.id], {\n                    totalSupply: totalSupply\n                  });\n                  return accum;\n                }, {}))\n              });\n            }\n\n          default:\n            return state;\n        }\n      }\n\n    case SAVE_COLLECTION_SUCCESS:\n      {\n        var _collection2 = action.payload.collection;\n        var collectionURN = decodeURN(_collection2.urn);\n        return _objectSpread({}, state, {\n          data: Object.keys(state.data).reduce(function (accum, itemId) {\n            var item = state.data[itemId];\n\n            if (item.collectionId === _collection2.id && item.urn) {\n              var newItemURN;\n              var itemURN = decodeURN(item.urn);\n\n              if (collectionURN.type === URNType.COLLECTIONS_THIRDPARTY) {\n                if (itemURN.type !== URNType.COLLECTIONS_THIRDPARTY) {\n                  throw new Error(\"The item \".concat(item.id, \" is not part of a third-party collection but it should be\"));\n                }\n\n                newItemURN = buildThirdPartyURN(collectionURN.thirdPartyName, collectionURN.thirdPartyCollectionId, itemURN.thirdPartyTokenId);\n              } else if (collectionURN.type === URNType.COLLECTIONS_V2) {\n                if (itemURN.type !== URNType.COLLECTIONS_V2) {\n                  throw new Error(\"The item \".concat(item.id, \" is not part of a decentraland collection but it should be\"));\n                }\n\n                newItemURN = buildCatalystItemURN(collectionURN.collectionAddress, itemURN.tokenId);\n              } else {\n                throw new Error(\"The item \".concat(item.id, \" has an incorrect URN type\"));\n              }\n\n              accum[item.id] = _objectSpread({}, state.data[item.id], {\n                urn: newItemURN\n              });\n            } else {\n              accum[item.id] = item;\n            }\n\n            return accum;\n          }, {})\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/item/reducer.ts"],"names":["LOCATION_CHANGE","FETCH_TRANSACTION_SUCCESS","loadingReducer","PUBLISH_COLLECTION_SUCCESS","MINT_COLLECTION_ITEMS_SUCCESS","APPROVE_COLLECTION_SUCCESS","REJECT_COLLECTION_SUCCESS","SAVE_COLLECTION_SUCCESS","FETCH_ITEMS_REQUEST","FETCH_ITEMS_SUCCESS","FETCH_ITEMS_FAILURE","FETCH_ITEM_REQUEST","FETCH_ITEM_SUCCESS","FETCH_ITEM_FAILURE","SAVE_ITEM_REQUEST","SAVE_ITEM_FAILURE","SAVE_ITEM_SUCCESS","DELETE_ITEM_REQUEST","DELETE_ITEM_SUCCESS","DELETE_ITEM_FAILURE","SET_COLLECTION","SET_ITEMS_TOKEN_ID_REQUEST","SET_ITEMS_TOKEN_ID_SUCCESS","SET_ITEMS_TOKEN_ID_FAILURE","FETCH_COLLECTION_ITEMS_SUCCESS","FETCH_COLLECTION_ITEMS_REQUEST","FETCH_COLLECTION_ITEMS_FAILURE","FETCH_RARITIES_REQUEST","FETCH_RARITIES_SUCCESS","FETCH_RARITIES_FAILURE","RESCUE_ITEMS_REQUEST","RESCUE_ITEMS_FAILURE","RESCUE_ITEMS_SUCCESS","RESCUE_ITEMS_CHUNK_SUCCESS","RESET_ITEM_REQUEST","RESET_ITEM_SUCCESS","RESET_ITEM_FAILURE","SET_PRICE_AND_BENEFICIARY_REQUEST","SET_PRICE_AND_BENEFICIARY_FAILURE","SET_PRICE_AND_BENEFICIARY_SUCCESS","DOWNLOAD_ITEM_REQUEST","DOWNLOAD_ITEM_FAILURE","DOWNLOAD_ITEM_SUCCESS","SAVE_MULTIPLE_ITEMS_SUCCESS","CLEAR_SAVE_MULTIPLE_ITEMS","SAVE_MULTIPLE_ITEMS_CANCELLED","PUBLISH_AND_PUSH_CHANGES_THIRD_PARTY_ITEMS_SUCCESS","PUBLISH_THIRD_PARTY_ITEMS_SUCCESS","toItemObject","buildCatalystItemURN","buildThirdPartyURN","decodeURN","URNType","INITIAL_STATE","data","rarities","loading","error","pagination","itemReducer","state","action","type","payload","paginationIndex","items","paginationStats","hasPagination","undefined","ids","map","item","id","total","limit","currentPage","page","totalPages","pages","newState","collectionId","newItem","transaction","actionType","collection","Object","values","reduce","accum","isApproved","isPublished","mints","mint","totalSupply","amount","collectionURN","urn","keys","itemId","newItemURN","itemURN","COLLECTIONS_THIRDPARTY","Error","thirdPartyName","thirdPartyCollectionId","thirdPartyTokenId","COLLECTIONS_V2","collectionAddress","tokenId"],"mappings":"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","sourcesContent":["import { LocationChangeAction, LOCATION_CHANGE } from 'connected-react-router'\nimport { FetchTransactionSuccessAction, FETCH_TRANSACTION_SUCCESS } from 'decentraland-dapps/dist/modules/transaction/actions'\nimport { LoadingState, loadingReducer } from 'decentraland-dapps/dist/modules/loading/reducer'\nimport { Mint } from 'modules/collection/types'\nimport {\n  PUBLISH_COLLECTION_SUCCESS,\n  MINT_COLLECTION_ITEMS_SUCCESS,\n  APPROVE_COLLECTION_SUCCESS,\n  REJECT_COLLECTION_SUCCESS,\n  SAVE_COLLECTION_SUCCESS,\n  SaveCollectionSuccessAction\n} from 'modules/collection/actions'\nimport {\n  FetchItemsRequestAction,\n  FetchItemsSuccessAction,\n  FetchItemsFailureAction,\n  FETCH_ITEMS_REQUEST,\n  FETCH_ITEMS_SUCCESS,\n  FETCH_ITEMS_FAILURE,\n  FetchItemRequestAction,\n  FetchItemSuccessAction,\n  FetchItemFailureAction,\n  FETCH_ITEM_REQUEST,\n  FETCH_ITEM_SUCCESS,\n  FETCH_ITEM_FAILURE,\n  SaveItemRequestAction,\n  SaveItemSuccessAction,\n  SaveItemFailureAction,\n  SAVE_ITEM_REQUEST,\n  SAVE_ITEM_FAILURE,\n  SAVE_ITEM_SUCCESS,\n  DeleteItemRequestAction,\n  DeleteItemSuccessAction,\n  DeleteItemFailureAction,\n  DELETE_ITEM_REQUEST,\n  DELETE_ITEM_SUCCESS,\n  DELETE_ITEM_FAILURE,\n  SetCollectionAction,\n  SET_COLLECTION,\n  SetItemsTokenIdRequestAction,\n  SetItemsTokenIdSuccessAction,\n  SetItemsTokenIdFailureAction,\n  SET_ITEMS_TOKEN_ID_REQUEST,\n  SET_ITEMS_TOKEN_ID_SUCCESS,\n  SET_ITEMS_TOKEN_ID_FAILURE,\n  FetchCollectionItemsRequestAction,\n  FetchCollectionItemsSuccessAction,\n  FetchCollectionItemsFailureAction,\n  FETCH_COLLECTION_ITEMS_SUCCESS,\n  FETCH_COLLECTION_ITEMS_REQUEST,\n  FETCH_COLLECTION_ITEMS_FAILURE,\n  FetchRaritiesRequestAction,\n  FetchRaritiesSuccessAction,\n  FetchRaritiesFailureAction,\n  FETCH_RARITIES_REQUEST,\n  FETCH_RARITIES_SUCCESS,\n  FETCH_RARITIES_FAILURE,\n  RescueItemsRequestAction,\n  RescueItemsFailureAction,\n  RescueItemsSuccessAction,\n  RESCUE_ITEMS_REQUEST,\n  RESCUE_ITEMS_FAILURE,\n  RESCUE_ITEMS_SUCCESS,\n  RESCUE_ITEMS_CHUNK_SUCCESS,\n  ResetItemRequestAction,\n  ResetItemSuccessAction,\n  ResetItemFailureAction,\n  RESET_ITEM_REQUEST,\n  RESET_ITEM_SUCCESS,\n  RESET_ITEM_FAILURE,\n  SetPriceAndBeneficiaryFailureAction,\n  SetPriceAndBeneficiaryRequestAction,\n  SetPriceAndBeneficiarySuccessAction,\n  SET_PRICE_AND_BENEFICIARY_REQUEST,\n  SET_PRICE_AND_BENEFICIARY_FAILURE,\n  SET_PRICE_AND_BENEFICIARY_SUCCESS,\n  DownloadItemRequestAction,\n  DownloadItemSuccessAction,\n  DownloadItemFailureAction,\n  DOWNLOAD_ITEM_REQUEST,\n  DOWNLOAD_ITEM_FAILURE,\n  DOWNLOAD_ITEM_SUCCESS,\n  SaveMultipleItemsSuccessAction,\n  SaveMultipleItemsCancelledAction,\n  ClearStateSaveMultipleItemsAction,\n  SAVE_MULTIPLE_ITEMS_SUCCESS,\n  CLEAR_SAVE_MULTIPLE_ITEMS,\n  SAVE_MULTIPLE_ITEMS_CANCELLED,\n  RescueItemsChunkSuccessAction\n} from './actions'\nimport {\n  PublishThirdPartyItemsSuccessAction,\n  PublishAndPushChangesThirdPartyItemsSuccessAction,\n  PUBLISH_AND_PUSH_CHANGES_THIRD_PARTY_ITEMS_SUCCESS,\n  PUBLISH_THIRD_PARTY_ITEMS_SUCCESS\n} from 'modules/thirdParty/actions'\nimport { toItemObject } from './utils'\nimport { Item, Rarity } from './types'\nimport { buildCatalystItemURN, buildThirdPartyURN, decodeURN, URNType } from 'lib/urn'\n\nexport type ItemPaginationData = {\n  ids: string[]\n  total: number\n  totalPages: number\n  currentPage: number\n  limit: number\n}\n\nexport type ItemState = {\n  data: Record<string, Item>\n  rarities: Rarity[]\n  loading: LoadingState\n  error: string | null\n  pagination: Record<string, ItemPaginationData> | null\n}\n\nexport const INITIAL_STATE: ItemState = {\n  data: {},\n  rarities: [],\n  loading: [],\n  error: null,\n  pagination: null\n}\n\ntype ItemReducerAction =\n  | LocationChangeAction\n  | FetchItemsRequestAction\n  | FetchItemsSuccessAction\n  | FetchItemsFailureAction\n  | FetchItemRequestAction\n  | FetchItemSuccessAction\n  | FetchItemFailureAction\n  | SaveItemRequestAction\n  | SaveItemSuccessAction\n  | SaveItemFailureAction\n  | SetPriceAndBeneficiaryRequestAction\n  | SetPriceAndBeneficiarySuccessAction\n  | SetPriceAndBeneficiaryFailureAction\n  | DeleteItemRequestAction\n  | DeleteItemSuccessAction\n  | DeleteItemFailureAction\n  | SetCollectionAction\n  | FetchTransactionSuccessAction\n  | SetItemsTokenIdRequestAction\n  | SetItemsTokenIdSuccessAction\n  | SetItemsTokenIdFailureAction\n  | FetchCollectionItemsRequestAction\n  | FetchCollectionItemsSuccessAction\n  | FetchCollectionItemsFailureAction\n  | FetchRaritiesRequestAction\n  | FetchRaritiesSuccessAction\n  | FetchRaritiesFailureAction\n  | PublishThirdPartyItemsSuccessAction\n  | PublishAndPushChangesThirdPartyItemsSuccessAction\n  | RescueItemsRequestAction\n  | RescueItemsSuccessAction\n  | RescueItemsChunkSuccessAction\n  | RescueItemsFailureAction\n  | ResetItemRequestAction\n  | ResetItemSuccessAction\n  | ResetItemFailureAction\n  | SaveCollectionSuccessAction\n  | DownloadItemRequestAction\n  | DownloadItemSuccessAction\n  | DownloadItemFailureAction\n  | SaveMultipleItemsSuccessAction\n  | SaveMultipleItemsCancelledAction\n  | ClearStateSaveMultipleItemsAction\n\nexport function itemReducer(state: ItemState = INITIAL_STATE, action: ItemReducerAction): ItemState {\n  switch (action.type) {\n    case LOCATION_CHANGE: {\n      return {\n        ...state,\n        error: null\n      }\n    }\n    case FETCH_ITEMS_REQUEST:\n    case FETCH_RARITIES_REQUEST:\n    case FETCH_ITEM_REQUEST:\n    case FETCH_COLLECTION_ITEMS_REQUEST:\n    case SET_ITEMS_TOKEN_ID_REQUEST:\n    case SET_PRICE_AND_BENEFICIARY_REQUEST:\n    case SAVE_ITEM_REQUEST:\n    case DELETE_ITEM_REQUEST:\n    case RESET_ITEM_REQUEST:\n    case RESCUE_ITEMS_REQUEST:\n    case DOWNLOAD_ITEM_REQUEST: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action)\n      }\n    }\n    case FETCH_ITEMS_SUCCESS:\n    case FETCH_COLLECTION_ITEMS_SUCCESS: {\n      const { paginationIndex, items, paginationStats } = action.payload\n      const hasPagination = paginationStats !== undefined\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...toItemObject(items)\n        },\n        loading: loadingReducer(state.loading, action),\n        pagination: {\n          ...state.pagination,\n          ...(hasPagination\n            ? {\n                [paginationIndex]: {\n                  ids: items.map(item => item.id),\n                  total: paginationStats.total,\n                  limit: paginationStats.limit,\n                  currentPage: paginationStats.page,\n                  totalPages: paginationStats.pages\n                }\n              }\n            : {})\n        },\n        error: null\n      }\n    }\n    case SET_ITEMS_TOKEN_ID_SUCCESS: {\n      const { items } = action.payload\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...toItemObject(items)\n        },\n        loading: loadingReducer(state.loading, action),\n        error: null\n      }\n    }\n    case RESCUE_ITEMS_SUCCESS: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: null\n      }\n    }\n    case RESCUE_ITEMS_CHUNK_SUCCESS: {\n      const { items } = action.payload\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...toItemObject(items)\n        }\n      }\n    }\n    case FETCH_RARITIES_SUCCESS: {\n      const { rarities } = action.payload\n      return {\n        ...state,\n        rarities,\n        loading: loadingReducer(state.loading, action),\n        error: null\n      }\n    }\n    case FETCH_ITEMS_FAILURE:\n    case FETCH_ITEM_FAILURE:\n    case FETCH_COLLECTION_ITEMS_FAILURE:\n    case SET_ITEMS_TOKEN_ID_FAILURE:\n    case SET_PRICE_AND_BENEFICIARY_FAILURE:\n    case SAVE_ITEM_FAILURE:\n    case FETCH_RARITIES_FAILURE:\n    case DELETE_ITEM_FAILURE:\n    case RESET_ITEM_FAILURE:\n    case RESCUE_ITEMS_FAILURE:\n    case DOWNLOAD_ITEM_FAILURE: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: action.payload.error\n      }\n    }\n    case FETCH_ITEM_SUCCESS:\n    case SET_PRICE_AND_BENEFICIARY_SUCCESS:\n    case SAVE_ITEM_SUCCESS: {\n      const { item } = action.payload\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...toItemObject([item])\n        },\n        loading: loadingReducer(state.loading, action),\n        error: null\n      }\n    }\n    case CLEAR_SAVE_MULTIPLE_ITEMS: {\n      return {\n        ...state,\n        error: null\n      }\n    }\n    case SAVE_MULTIPLE_ITEMS_CANCELLED:\n    case SAVE_MULTIPLE_ITEMS_SUCCESS: {\n      const { items } = action.payload\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...toItemObject(items)\n        }\n      }\n    }\n    case RESET_ITEM_SUCCESS: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: null\n      }\n    }\n    case DELETE_ITEM_SUCCESS: {\n      const { item } = action.payload\n      const newState = {\n        ...state,\n        data: {\n          ...state.data\n        },\n        loading: loadingReducer(state.loading, action),\n        error: null\n      }\n      delete newState.data[item.id]\n      return newState\n    }\n    case SET_COLLECTION: {\n      const { item, collectionId } = action.payload\n      const newItem: Item = { ...item }\n      if (collectionId) {\n        newItem.collectionId = collectionId\n      } else {\n        delete newItem.collectionId\n      }\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [newItem.id]: newItem\n        }\n      }\n    }\n\n    case DOWNLOAD_ITEM_SUCCESS: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: null\n      }\n    }\n\n    case FETCH_TRANSACTION_SUCCESS: {\n      const transaction = action.payload.transaction\n\n      switch (transaction.actionType) {\n        case APPROVE_COLLECTION_SUCCESS: {\n          const { collection } = transaction.payload\n          return {\n            ...state,\n            data: {\n              ...state.data,\n              ...Object.values(state.data).reduce((accum, item) => {\n                if (item.collectionId === collection.id) {\n                  accum[item.id] = { ...state.data[item.id], ...item, isApproved: true }\n                } else {\n                  accum[item.id] = item\n                }\n                return accum\n              }, {} as ItemState['data'])\n            }\n          }\n        }\n        case REJECT_COLLECTION_SUCCESS: {\n          const { collection } = transaction.payload\n          return {\n            ...state,\n            data: {\n              ...state.data,\n              ...Object.values(state.data).reduce((accum, item) => {\n                if (item.collectionId === collection.id) {\n                  accum[item.id] = { ...state.data[item.id], ...item, isApproved: false }\n                } else {\n                  accum[item.id] = item\n                }\n                return accum\n              }, {} as ItemState['data'])\n            }\n          }\n        }\n        case PUBLISH_AND_PUSH_CHANGES_THIRD_PARTY_ITEMS_SUCCESS:\n        case PUBLISH_THIRD_PARTY_ITEMS_SUCCESS:\n        case PUBLISH_COLLECTION_SUCCESS: {\n          const items: Item[] = transaction.payload.items\n          return {\n            ...state,\n            data: {\n              ...state.data,\n              ...items.reduce((accum, item) => {\n                accum[item.id] = { ...state.data[item.id], ...item, isPublished: true }\n                return accum\n              }, {} as ItemState['data'])\n            }\n          }\n        }\n        case MINT_COLLECTION_ITEMS_SUCCESS: {\n          const mints: Mint[] = transaction.payload.mints\n\n          return {\n            ...state,\n            data: {\n              ...state.data,\n              ...mints.reduce((accum, mint) => {\n                const item = state.data[mint.item.id]\n                const totalSupply = (item.totalSupply || 0) + mint.amount\n                accum[item.id] = { ...state.data[item.id], totalSupply }\n                return accum\n              }, {} as ItemState['data'])\n            }\n          }\n        }\n        default:\n          return state\n      }\n    }\n    case SAVE_COLLECTION_SUCCESS: {\n      const { collection } = action.payload\n      const collectionURN = decodeURN(collection.urn)\n\n      return {\n        ...state,\n        data: Object.keys(state.data).reduce((accum, itemId) => {\n          const item = state.data[itemId]\n          if (item.collectionId === collection.id && item.urn) {\n            let newItemURN: string\n            const itemURN = decodeURN(item.urn)\n            if (collectionURN.type === URNType.COLLECTIONS_THIRDPARTY) {\n              if (itemURN.type !== URNType.COLLECTIONS_THIRDPARTY) {\n                throw new Error(`The item ${item.id} is not part of a third-party collection but it should be`)\n              }\n              newItemURN = buildThirdPartyURN(\n                collectionURN.thirdPartyName,\n                collectionURN.thirdPartyCollectionId!,\n                itemURN.thirdPartyTokenId\n              )\n            } else if (collectionURN.type === URNType.COLLECTIONS_V2) {\n              if (itemURN.type !== URNType.COLLECTIONS_V2) {\n                throw new Error(`The item ${item.id} is not part of a decentraland collection but it should be`)\n              }\n              newItemURN = buildCatalystItemURN(collectionURN.collectionAddress, itemURN.tokenId!)\n            } else {\n              throw new Error(`The item ${item.id} has an incorrect URN type`)\n            }\n            accum[item.id] = { ...state.data[item.id], urn: newItemURN }\n          } else {\n            accum[item.id] = item\n          }\n          return accum\n        }, {} as ItemState['data'])\n      }\n    }\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}