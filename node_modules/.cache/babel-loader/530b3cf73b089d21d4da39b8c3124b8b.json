{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _asyncToGenerator = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadFile = void 0;\n\nvar jszip_1 = __importDefault(require(\"jszip\"));\n\nvar path_1 = require(\"path\");\n\nvar ajv_1 = __importDefault(require(\"ajv\"));\n\nvar ajv_formats_1 = __importDefault(require(\"ajv-formats\"));\n\nvar constants_1 = require(\"../item/constants\");\n\nvar util_1 = require(\"util\");\n\nvar constants_2 = require(\"./constants\");\n\nvar schemas_1 = require(\"./schemas\");\n\nvar files_errors_1 = require(\"./files.errors\");\n\nvar ajv = new ajv_1.default();\n(0, ajv_formats_1.default)(ajv);\nvar validator = ajv.addSchema(schemas_1.WearableConfigSchema, 'WearableConfig').addSchema(schemas_1.BuilderConfigSchema, 'BuilderConfig');\n\nfunction loadFile(_x, _x2) {\n  return _loadFile.apply(this, arguments);\n}\n\nfunction _loadFile() {\n  _loadFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fileName, file) {\n    var extension;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            extension = getExtension(fileName);\n\n            if (!(extension === '.zip')) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", handleZippedModelFiles(file));\n\n          case 5:\n            if (!isModelPath(fileName)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", handleFileModel(fileName, file));\n\n          case 9:\n            throw new files_errors_1.WrongExtensionError(fileName);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadFile.apply(this, arguments);\n}\n\nexports.loadFile = loadFile;\n\nfunction getExtension(fileName) {\n  var matches = fileName.match(/\\.[0-9a-z]+$/i);\n  var extension = matches ? matches[0] : null;\n  return extension;\n}\n\nfunction isImageFile(fileName) {\n  return fileName.toLowerCase().endsWith('.png');\n}\n\nfunction isModelFile(fileName) {\n  fileName = fileName.toLowerCase();\n  return fileName.endsWith('.gltf') || fileName.endsWith('.glb');\n}\n\nfunction isModelPath(fileName) {\n  fileName = fileName.toLowerCase(); // we ignore PNG files that end with \"_mask\", since those are auxiliary\n\n  var isMask = fileName.includes('_mask');\n  return isModelFile(fileName) || fileName.indexOf(constants_1.THUMBNAIL_PATH) === -1 && !isMask && isImageFile(fileName);\n}\n/**\n * Unzips files and build the content record and asset config.\n * One of the models will be taken into consideration if multiple models are uploaded.\n *\n * @param zipFile - The ZIP file.\n */\n\n\nfunction handleZippedModelFiles(_x3) {\n  return _handleZippedModelFiles.apply(this, arguments);\n}\n\nfunction _handleZippedModelFiles() {\n  _handleZippedModelFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(zipFile) {\n    var zip, fileNames, promiseOfFileContents, fileFormat, fileContents, content, wearable, builder, wearableZipFile, builderZipFile, wearableFileContents, builderZipFileContents, result, mainModelFile;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return jszip_1.default.loadAsync(zipFile);\n\n          case 2:\n            zip = _context2.sent;\n            fileNames = [];\n            promiseOfFileContents = [];\n\n            if (globalThis.Blob && zipFile instanceof globalThis.Blob) {\n              fileFormat = 'blob';\n            } else if (Buffer.isBuffer(zipFile)) {\n              fileFormat = 'nodebuffer';\n            } else if (zipFile instanceof Uint8Array) {\n              fileFormat = 'uint8array';\n            } else if (zipFile instanceof ArrayBuffer) {\n              fileFormat = 'arraybuffer';\n            }\n\n            zip.forEach(function (filePath, file) {\n              if (!(0, path_1.basename)(filePath).startsWith('.') && (0, path_1.basename)(filePath) !== constants_2.WEARABLE_MANIFEST && (0, path_1.basename)(filePath) !== constants_2.BUILDER_MANIFEST) {\n                fileNames.push(filePath);\n                promiseOfFileContents.push(file.async(fileFormat));\n              }\n            });\n            _context2.next = 9;\n            return Promise.all(promiseOfFileContents);\n\n          case 9:\n            fileContents = _context2.sent;\n            content = fileNames.reduce(function (acc, fileName, index) {\n              var size;\n\n              if (globalThis.Blob && fileContents[index] instanceof globalThis.Blob) {\n                size = fileContents[index].size;\n              } else {\n                size = fileContents[index].length;\n              }\n\n              if (size > constants_2.MAX_FILE_SIZE) {\n                throw new files_errors_1.FileTooBigError(fileName, size);\n              }\n\n              acc[fileName] = fileContents[index];\n              return acc;\n            }, {});\n            wearable = undefined;\n            builder = undefined;\n            wearableZipFile = zip.file(constants_2.WEARABLE_MANIFEST);\n            builderZipFile = zip.file(constants_2.BUILDER_MANIFEST);\n\n            if (!wearableZipFile) {\n              _context2.next = 23;\n              break;\n            }\n\n            _context2.next = 18;\n            return wearableZipFile.async('uint8array');\n\n          case 18:\n            wearableFileContents = _context2.sent;\n            _context2.next = 21;\n            return loadWearableConfig(wearableFileContents);\n\n          case 21:\n            wearable = _context2.sent;\n            wearable.data.representations.forEach(function (representation) {\n              if (!representation.contents.includes(representation.mainFile)) {\n                throw new files_errors_1.ModelInRepresentationNotFoundError(representation.mainFile);\n              }\n\n              representation.contents.forEach(function (content) {\n                if (!zip.file(representation.mainFile)) {\n                  throw new files_errors_1.FileNotFoundError(content);\n                }\n              });\n            });\n\n          case 23:\n            if (!builderZipFile) {\n              _context2.next = 30;\n              break;\n            }\n\n            _context2.next = 26;\n            return builderZipFile.async('uint8array');\n\n          case 26:\n            builderZipFileContents = _context2.sent;\n            _context2.next = 29;\n            return loadBuilderConfig(builderZipFileContents);\n\n          case 29:\n            builder = _context2.sent;\n\n          case 30:\n            result = {\n              content: content\n            };\n\n            if (builder) {\n              result = _objectSpread({}, result, {\n                builder: builder\n              });\n            }\n\n            if (!wearable) {\n              _context2.next = 36;\n              break;\n            }\n\n            result = _objectSpread({}, result, {\n              wearable: wearable\n            });\n            _context2.next = 40;\n            break;\n\n          case 36:\n            mainModelFile = fileNames.find(isModelPath);\n\n            if (mainModelFile) {\n              _context2.next = 39;\n              break;\n            }\n\n            throw new files_errors_1.ModelFileNotFoundError();\n\n          case 39:\n            result = _objectSpread({}, result, {\n              mainModel: mainModelFile\n            });\n\n          case 40:\n            return _context2.abrupt(\"return\", result);\n\n          case 41:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _handleZippedModelFiles.apply(this, arguments);\n}\n\nfunction handleFileModel(fileName, file) {\n  return {\n    content: _defineProperty({}, fileName, file),\n    mainModel: fileName\n  };\n}\n\nfunction readContent(_x4) {\n  return _readContent.apply(this, arguments);\n}\n\nfunction _readContent() {\n  _readContent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(file) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(globalThis.Blob && file instanceof globalThis.Blob)) {\n              _context3.next = 4;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", file.text());\n\n          case 4:\n            if (!globalThis.TextDecoder) {\n              _context3.next = 6;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", new TextDecoder('utf-8').decode(file));\n\n          case 6:\n            return _context3.abrupt(\"return\", new util_1.TextDecoder('utf-8').decode(file));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _readContent.apply(this, arguments);\n}\n\nfunction loadBuilderConfig(_x5) {\n  return _loadBuilderConfig.apply(this, arguments);\n}\n\nfunction _loadBuilderConfig() {\n  _loadBuilderConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(file) {\n    var content, parsedContent;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return readContent(file);\n\n          case 2:\n            content = _context4.sent;\n            parsedContent = JSON.parse(content);\n\n            if (validator.validate('BuilderConfig', parsedContent)) {\n              _context4.next = 6;\n              break;\n            }\n\n            throw new files_errors_1.InvalidBuilderConfigFileError(validator.errors);\n\n          case 6:\n            return _context4.abrupt(\"return\", parsedContent);\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _loadBuilderConfig.apply(this, arguments);\n}\n\nfunction loadWearableConfig(_x6) {\n  return _loadWearableConfig.apply(this, arguments);\n}\n\nfunction _loadWearableConfig() {\n  _loadWearableConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(file) {\n    var content, parsedContent;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return readContent(file);\n\n          case 2:\n            content = _context5.sent;\n            parsedContent = JSON.parse(content);\n\n            if (validator.validate('WearableConfig', parsedContent)) {\n              _context5.next = 6;\n              break;\n            }\n\n            throw new files_errors_1.InvalidWearableConfigFileError(validator.errors);\n\n          case 6:\n            return _context5.abrupt(\"return\", parsedContent);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _loadWearableConfig.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"script"}