{"ast":null,"code":"import { Effect } from \"../Materials/effect\";\nvar name = 'glowMapGenerationPixelShader';\nvar shader = \"#ifdef DIFFUSE\\nvarying vec2 vUVDiffuse;\\nuniform sampler2D diffuseSampler;\\n#endif\\n#ifdef OPACITY\\nvarying vec2 vUVOpacity;\\nuniform sampler2D opacitySampler;\\nuniform float opacityIntensity;\\n#endif\\n#ifdef EMISSIVE\\nvarying vec2 vUVEmissive;\\nuniform sampler2D emissiveSampler;\\n#endif\\n#ifdef VERTEXALPHA\\nvarying vec4 vColor;\\n#endif\\nuniform vec4 glowColor;\\nvoid main(void)\\n{\\nvec4 finalColor=glowColor;\\n\\n#ifdef DIFFUSE\\nvec4 albedoTexture=texture2D(diffuseSampler,vUVDiffuse);\\n#ifdef GLOW\\n\\nfinalColor.a*=albedoTexture.a;\\n#endif\\n#ifdef HIGHLIGHT\\n\\nfinalColor.a=albedoTexture.a;\\n#endif\\n#endif\\n#ifdef OPACITY\\nvec4 opacityMap=texture2D(opacitySampler,vUVOpacity);\\n#ifdef OPACITYRGB\\nfinalColor.a*=getLuminance(opacityMap.rgb);\\n#else\\nfinalColor.a*=opacityMap.a;\\n#endif\\nfinalColor.a*=opacityIntensity;\\n#endif\\n#ifdef VERTEXALPHA\\nfinalColor.a*=vColor.a;\\n#endif\\n#ifdef ALPHATEST\\nif (finalColor.a<ALPHATESTVALUE)\\ndiscard;\\n#endif\\n#ifdef EMISSIVE\\ngl_FragColor=texture2D(emissiveSampler,vUVEmissive)*finalColor;\\n#else\\ngl_FragColor=finalColor;\\n#endif\\n#ifdef HIGHLIGHT\\n\\ngl_FragColor.a=glowColor.a;\\n#endif\\n}\";\nEffect.ShadersStore[name] = shader;\n/** @hidden */\n\nexport var glowMapGenerationPixelShader = {\n  name: name,\n  shader: shader\n};","map":null,"metadata":{},"sourceType":"module"}