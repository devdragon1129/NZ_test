{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { getAuthorizedCollections } from 'modules/collection/selectors';\nimport { fetchCollectionsRequest } from 'modules/collection/actions';\nimport ItemDropdown from './CollectionDropdown';\n\nvar mapState = function mapState(state) {\n  return {\n    address: getAddress(state),\n    collections: getAuthorizedCollections(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onFetchCollections: function onFetchCollections(address, params) {\n      return dispatch(fetchCollectionsRequest(address, params));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(ItemDropdown);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/CollectionDropdown/CollectionDropdown.container.ts"],"names":["connect","getAddress","getAuthorizedCollections","fetchCollectionsRequest","ItemDropdown","mapState","state","address","collections","mapDispatch","dispatch","onFetchCollections","params"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kDAA3B;AAEA,SAASC,wBAAT,QAAyC,8BAAzC;AACA,SAASC,uBAAT,QAAwC,4BAAxC;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,OAAO,EAAEN,UAAU,CAACK,KAAD,CADkC;AAErDE,IAAAA,WAAW,EAAEN,wBAAwB,CAACI,KAAD;AAFgB,GAAtC;AAAA,CAAjB;;AAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,kBAAkB,EAAE,4BAACJ,OAAD,EAAUK,MAAV;AAAA,aAAqBF,QAAQ,CAACP,uBAAuB,CAACI,OAAD,EAAUK,MAAV,CAAxB,CAA7B;AAAA;AAD4C,GAA9C;AAAA,CAApB;;AAIA,eAAeZ,OAAO,CAACK,QAAD,EAAWI,WAAX,CAAP,CAA+BL,YAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { RootState } from 'modules/common/types'\nimport { getAuthorizedCollections } from 'modules/collection/selectors'\nimport { fetchCollectionsRequest } from 'modules/collection/actions'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './CollectionDropdown.types'\nimport ItemDropdown from './CollectionDropdown'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  address: getAddress(state),\n  collections: getAuthorizedCollections(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onFetchCollections: (address, params) => dispatch(fetchCollectionsRequest(address, params))\n})\n\nexport default connect(mapState, mapDispatch)(ItemDropdown)\n"]},"metadata":{},"sourceType":"module"}