{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/AssetThumbnail/AssetThumbnail.tsx\";\nimport * as React from 'react';\nimport { Popup } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { CategoryName } from 'modules/ui/sidebar/utils';\nimport Icon from 'components/Icon';\nimport './AssetThumbnail.css';\n\nvar AssetThumbnail = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AssetThumbnail, _React$PureComponent);\n\n  function AssetThumbnail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AssetThumbnail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AssetThumbnail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleRemove = function () {\n      var asset = _this.props.asset;\n\n      _this.props.onRemove(asset.id);\n    };\n\n    _this.handleClick = function () {\n      var _this$props = _this.props,\n          asset = _this$props.asset,\n          onClick = _this$props.onClick;\n\n      if (onClick) {\n        onClick(asset);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AssetThumbnail, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          asset = _this$props2.asset,\n          error = _this$props2.error,\n          errorLabel = _this$props2.errorLabel,\n          hideLabel = _this$props2.hideLabel,\n          onClick = _this$props2.onClick;\n      var classes = 'AssetThumbnail';\n\n      if (error) {\n        classes += ' error';\n      }\n\n      if (onClick) {\n        classes += ' clickable';\n      }\n\n      if (asset && asset.category === CategoryName.GROUND_CATEGORY) {\n        classes += ' ground';\n      }\n\n      if (asset && asset.script) {\n        classes += ' smart';\n      }\n\n      return /*#__PURE__*/React.createElement(Popup, {\n        className: \"modal-tooltip\",\n        content: error,\n        disabled: !error,\n        position: \"top center\",\n        trigger: /*#__PURE__*/React.createElement(\"div\", {\n          className: classes,\n          key: asset.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"close-button\",\n          onClick: this.handleRemove,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          name: \"close\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrapper\",\n          onClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }\n        }, !asset || !asset.thumbnail ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"error-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 45\n          }\n        }) : /*#__PURE__*/React.createElement(\"img\", {\n          src: asset.thumbnail,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 78\n          }\n        }), !hideLabel && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"title\",\n          title: asset.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        }, asset.name), error && !hideLabel && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 39\n          }\n        }, errorLabel || t('asset_pack.import.errors.invalid')))),\n        hideOnScroll: true,\n        on: \"hover\",\n        inverted: true,\n        basic: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return AssetThumbnail;\n}(React.PureComponent);\n\nexport { AssetThumbnail as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/AssetThumbnail/AssetThumbnail.tsx"],"names":["React","Popup","t","CategoryName","Icon","AssetThumbnail","handleRemove","asset","props","onRemove","id","handleClick","onClick","error","errorLabel","hideLabel","classes","category","GROUND_CATEGORY","script","thumbnail","name","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Popup } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { CategoryName } from 'modules/ui/sidebar/utils'\nimport Icon from 'components/Icon'\n\nimport { Props } from './AssetThumbnail.types'\nimport './AssetThumbnail.css'\n\nexport default class AssetThumbnail extends React.PureComponent<Props> {\n  handleRemove = () => {\n    const { asset } = this.props\n    this.props.onRemove(asset.id)\n  }\n\n  handleClick = () => {\n    const { asset, onClick } = this.props\n    if (onClick) {\n      onClick(asset)\n    }\n  }\n\n  render() {\n    const { asset, error, errorLabel, hideLabel, onClick } = this.props\n    let classes = 'AssetThumbnail'\n\n    if (error) {\n      classes += ' error'\n    }\n\n    if (onClick) {\n      classes += ' clickable'\n    }\n\n    if (asset && asset.category === CategoryName.GROUND_CATEGORY) {\n      classes += ' ground'\n    }\n\n    if (asset && asset.script) {\n      classes += ' smart'\n    }\n\n    return (\n      <Popup\n        className=\"modal-tooltip\"\n        content={error}\n        disabled={!error}\n        position=\"top center\"\n        trigger={\n          <div className={classes} key={asset.id}>\n            <div className=\"close-button\" onClick={this.handleRemove}>\n              <Icon name=\"close\" />\n            </div>\n            <div className=\"wrapper\" onClick={this.handleClick}>\n              {!asset || !asset.thumbnail ? <div className=\"error-icon\" /> : <img src={asset.thumbnail} />}\n              {!hideLabel && (\n                <span className=\"title\" title={asset.name}>\n                  {asset.name}\n                </span>\n              )}\n              {error && !hideLabel && <span className=\"error\">{errorLabel || t('asset_pack.import.errors.invalid')}</span>}\n            </div>\n          </div>\n        }\n        hideOnScroll={true}\n        on=\"hover\"\n        inverted\n        basic\n      />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}