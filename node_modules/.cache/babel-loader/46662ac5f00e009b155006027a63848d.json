{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Contract } from 'web3x/contract';\nimport abi from './EstateRegistryAbi';\nexport var EstateRegistry = /*#__PURE__*/function (_Contract) {\n  _inherits(EstateRegistry, _Contract);\n\n  function EstateRegistry(eth, address, options) {\n    _classCallCheck(this, EstateRegistry);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EstateRegistry).call(this, eth, abi, address, options));\n  }\n\n  return EstateRegistry;\n}(Contract);\nexport var EstateRegistryAbi = abi;","map":{"version":3,"sources":["/opt/work/NZ_test/src/contracts/EstateRegistry.ts"],"names":["Contract","abi","EstateRegistry","eth","address","options","EstateRegistryAbi"],"mappings":";;;;AAGA,SAASA,QAAT,QAAoF,gBAApF;AAEA,OAAOC,GAAP,MAAgB,qBAAhB;AAqMA,WAAaC,cAAb;AAAA;;AACE,0BAAYC,GAAZ,EAAsBC,OAAtB,EAAyCC,OAAzC,EAAoE;AAAA;;AAAA,uFAC5DF,GAD4D,EACvDF,GADuD,EAClDG,OADkD,EACzCC,OADyC;AAEnE;;AAHH;AAAA,EAAoCL,QAApC;AAKA,OAAO,IAAIM,iBAAiB,GAAGL,GAAxB","sourcesContent":["import BN from 'bn.js'\nimport { Address } from 'web3x/address'\nimport { EventLog, TransactionReceipt } from 'web3x/formatters'\nimport { Contract, ContractOptions, TxCall, TxSend, EventSubscriptionFactory } from 'web3x/contract'\nimport { Eth } from 'web3x/eth'\nimport abi from './EstateRegistryAbi'\nexport type OwnershipTransferredEvent = {\n  previousOwner: Address\n  newOwner: Address\n}\nexport type TransferEvent = {\n  _from: Address\n  _to: Address\n  _tokenId: string\n}\nexport type ApprovalEvent = {\n  _owner: Address\n  _approved: Address\n  _tokenId: string\n}\nexport type ApprovalForAllEvent = {\n  _owner: Address\n  _operator: Address\n  _approved: boolean\n}\nexport type CreateEstateEvent = {\n  _owner: Address\n  _estateId: string\n  _data: string\n}\nexport type AddLandEvent = {\n  _estateId: string\n  _landId: string\n}\nexport type RemoveLandEvent = {\n  _estateId: string\n  _landId: string\n  _destinatary: Address\n}\nexport type UpdateEvent = {\n  _assetId: string\n  _holder: Address\n  _operator: Address\n  _data: string\n}\nexport type UpdateOperatorEvent = {\n  _estateId: string\n  _operator: Address\n}\nexport type UpdateManagerEvent = {\n  _owner: Address\n  _operator: Address\n  _caller: Address\n  _approved: boolean\n}\nexport type SetLANDRegistryEvent = {\n  _registry: Address\n}\nexport type MigratedEvent = {\n  contractName: string\n  migrationId: string\n}\nexport interface OwnershipTransferredEventLog extends EventLog<OwnershipTransferredEvent, 'OwnershipTransferred'> {}\nexport interface TransferEventLog extends EventLog<TransferEvent, 'Transfer'> {}\nexport interface ApprovalEventLog extends EventLog<ApprovalEvent, 'Approval'> {}\nexport interface ApprovalForAllEventLog extends EventLog<ApprovalForAllEvent, 'ApprovalForAll'> {}\nexport interface CreateEstateEventLog extends EventLog<CreateEstateEvent, 'CreateEstate'> {}\nexport interface AddLandEventLog extends EventLog<AddLandEvent, 'AddLand'> {}\nexport interface RemoveLandEventLog extends EventLog<RemoveLandEvent, 'RemoveLand'> {}\nexport interface UpdateEventLog extends EventLog<UpdateEvent, 'Update'> {}\nexport interface UpdateOperatorEventLog extends EventLog<UpdateOperatorEvent, 'UpdateOperator'> {}\nexport interface UpdateManagerEventLog extends EventLog<UpdateManagerEvent, 'UpdateManager'> {}\nexport interface SetLANDRegistryEventLog extends EventLog<SetLANDRegistryEvent, 'SetLANDRegistry'> {}\nexport interface MigratedEventLog extends EventLog<MigratedEvent, 'Migrated'> {}\ninterface EstateRegistryEvents {\n  OwnershipTransferred: EventSubscriptionFactory<OwnershipTransferredEventLog>\n  Transfer: EventSubscriptionFactory<TransferEventLog>\n  Approval: EventSubscriptionFactory<ApprovalEventLog>\n  ApprovalForAll: EventSubscriptionFactory<ApprovalForAllEventLog>\n  CreateEstate: EventSubscriptionFactory<CreateEstateEventLog>\n  AddLand: EventSubscriptionFactory<AddLandEventLog>\n  RemoveLand: EventSubscriptionFactory<RemoveLandEventLog>\n  Update: EventSubscriptionFactory<UpdateEventLog>\n  UpdateOperator: EventSubscriptionFactory<UpdateOperatorEventLog>\n  UpdateManager: EventSubscriptionFactory<UpdateManagerEventLog>\n  SetLANDRegistry: EventSubscriptionFactory<SetLANDRegistryEventLog>\n  Migrated: EventSubscriptionFactory<MigratedEventLog>\n}\ninterface EstateRegistryEventLogs {\n  OwnershipTransferred: OwnershipTransferredEventLog\n  Transfer: TransferEventLog\n  Approval: ApprovalEventLog\n  ApprovalForAll: ApprovalForAllEventLog\n  CreateEstate: CreateEstateEventLog\n  AddLand: AddLandEventLog\n  RemoveLand: RemoveLandEventLog\n  Update: UpdateEventLog\n  UpdateOperator: UpdateOperatorEventLog\n  UpdateManager: UpdateManagerEventLog\n  SetLANDRegistry: SetLANDRegistryEventLog\n  Migrated: MigratedEventLog\n}\ninterface EstateRegistryTxEventLogs {\n  OwnershipTransferred: OwnershipTransferredEventLog[]\n  Transfer: TransferEventLog[]\n  Approval: ApprovalEventLog[]\n  ApprovalForAll: ApprovalForAllEventLog[]\n  CreateEstate: CreateEstateEventLog[]\n  AddLand: AddLandEventLog[]\n  RemoveLand: RemoveLandEventLog[]\n  Update: UpdateEventLog[]\n  UpdateOperator: UpdateOperatorEventLog[]\n  UpdateManager: UpdateManagerEventLog[]\n  SetLANDRegistry: SetLANDRegistryEventLog[]\n  Migrated: MigratedEventLog[]\n}\nexport interface EstateRegistryTransactionReceipt extends TransactionReceipt<EstateRegistryTxEventLogs> {}\ninterface EstateRegistryMethods {\n  supportsInterface(_interfaceId: string): TxCall<boolean>\n  name(): TxCall<string>\n  initialize(_name: string, _symbol: string, _registry: Address): TxSend<EstateRegistryTransactionReceipt>\n  updateManager(a0: Address, a1: Address): TxCall<boolean>\n  getApproved(_tokenId: number | string | BN): TxCall<Address>\n  approve(_to: Address, _tokenId: number | string | BN): TxSend<EstateRegistryTransactionReceipt>\n  landIdEstate(a0: number | string | BN): TxCall<string>\n  onERC721Received(\n    _operator: Address,\n    _from: Address,\n    _tokenId: number | string | BN,\n    _data: string\n  ): TxSend<EstateRegistryTransactionReceipt>\n  getFingerprint(estateId: number | string | BN): TxCall<string>\n  totalSupply(): TxCall<string>\n  setLandUpdateOperator(\n    estateId: number | string | BN,\n    landId: number | string | BN,\n    operator: Address\n  ): TxSend<EstateRegistryTransactionReceipt>\n  transferFrom(_from: Address, _to: Address, _tokenId: number | string | BN): TxSend<EstateRegistryTransactionReceipt>\n  updateLandData(estateId: number | string | BN, landId: number | string | BN, data: string): TxSend<EstateRegistryTransactionReceipt>\n  tokenOfOwnerByIndex(_owner: Address, _index: number | string | BN): TxCall<string>\n  estateLandIds(a0: number | string | BN, a1: number | string | BN): TxCall<string>\n  setManyLandUpdateOperator(\n    _estateId: number | string | BN,\n    _landIds: (number | string | BN)[],\n    _operator: Address\n  ): TxSend<EstateRegistryTransactionReceipt>\n  transferManyLands(\n    estateId: number | string | BN,\n    landIds: (number | string | BN)[],\n    destinatary: Address\n  ): TxSend<EstateRegistryTransactionReceipt>\n  updateManyLandData(\n    estateId: number | string | BN,\n    landIds: (number | string | BN)[],\n    data: string\n  ): TxSend<EstateRegistryTransactionReceipt>\n  safeTransferFrom(_from: Address, _to: Address, _tokenId: number | string | BN): TxSend<EstateRegistryTransactionReceipt>\n  initialize(_name: string, _symbol: string): TxSend<EstateRegistryTransactionReceipt>\n  exists(_tokenId: number | string | BN): TxCall<boolean>\n  tokenByIndex(_index: number | string | BN): TxCall<string>\n  setLANDRegistry(_registry: Address): TxSend<EstateRegistryTransactionReceipt>\n  updateMetadata(estateId: number | string | BN, metadata: string): TxSend<EstateRegistryTransactionReceipt>\n  ping(): TxSend<EstateRegistryTransactionReceipt>\n  ownerOf(_tokenId: number | string | BN): TxCall<Address>\n  isUpdateAuthorized(operator: Address, estateId: number | string | BN): TxCall<boolean>\n  balanceOf(_owner: Address): TxCall<string>\n  setManyUpdateOperator(_estateIds: (number | string | BN)[], _operator: Address): TxSend<EstateRegistryTransactionReceipt>\n  safeTransferManyFrom(from: Address, to: Address, estateIds: (number | string | BN)[]): TxSend<EstateRegistryTransactionReceipt>\n  registry(): TxCall<Address>\n  initialize(): TxSend<EstateRegistryTransactionReceipt>\n  owner(): TxCall<Address>\n  verifyFingerprint(estateId: number | string | BN, fingerprint: string): TxCall<boolean>\n  symbol(): TxCall<string>\n  updateOperator(a0: number | string | BN): TxCall<Address>\n  estateLandIndex(a0: number | string | BN, a1: number | string | BN): TxCall<string>\n  setApprovalForAll(_to: Address, _approved: boolean): TxSend<EstateRegistryTransactionReceipt>\n  transferLand(estateId: number | string | BN, landId: number | string | BN, destinatary: Address): TxSend<EstateRegistryTransactionReceipt>\n  getMetadata(estateId: number | string | BN): TxCall<string>\n  setUpdateOperator(estateId: number | string | BN, operator: Address): TxSend<EstateRegistryTransactionReceipt>\n  safeTransferFrom(_from: Address, _to: Address, _tokenId: number | string | BN, _data: string): TxSend<EstateRegistryTransactionReceipt>\n  getLandEstateId(landId: number | string | BN): TxCall<string>\n  isMigrated(contractName: string, migrationId: string): TxCall<boolean>\n  initialize(_sender: Address): TxSend<EstateRegistryTransactionReceipt>\n  tokenURI(_tokenId: number | string | BN): TxCall<string>\n  mint(to: Address, metadata: string): TxSend<EstateRegistryTransactionReceipt>\n  safeTransferManyFrom(\n    from: Address,\n    to: Address,\n    estateIds: (number | string | BN)[],\n    data: string\n  ): TxSend<EstateRegistryTransactionReceipt>\n  isApprovedForAll(_owner: Address, _operator: Address): TxCall<boolean>\n  setUpdateManager(_owner: Address, _operator: Address, _approved: boolean): TxSend<EstateRegistryTransactionReceipt>\n  transferOwnership(newOwner: Address): TxSend<EstateRegistryTransactionReceipt>\n  getEstateSize(estateId: number | string | BN): TxCall<string>\n}\nexport interface EstateRegistryDefinition {\n  methods: EstateRegistryMethods\n  events: EstateRegistryEvents\n  eventLogs: EstateRegistryEventLogs\n}\nexport class EstateRegistry extends Contract<EstateRegistryDefinition> {\n  constructor(eth: Eth, address?: Address, options?: ContractOptions) {\n    super(eth, abi, address, options)\n  }\n}\nexport var EstateRegistryAbi = abi\n"]},"metadata":{},"sourceType":"module"}