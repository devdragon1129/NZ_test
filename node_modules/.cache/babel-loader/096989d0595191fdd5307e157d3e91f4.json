{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { serialize, SerializationHelper, serializeAsColor3, expandToProperty, serializeAsTexture } from \"../../Misc/decorators\";\nimport { PBRBaseSimpleMaterial } from \"./pbrBaseSimpleMaterial\";\nimport { _TypeStore } from '../../Misc/typeStore';\n/**\r\n * The PBR material of BJS following the metal roughness convention.\r\n *\r\n * This fits to the PBR convention in the GLTF definition:\r\n * https://github.com/KhronosGroup/glTF/tree/2.0/specification/2.0\r\n */\n\nvar PBRMetallicRoughnessMaterial =\n/** @class */\nfunction (_super) {\n  __extends(PBRMetallicRoughnessMaterial, _super);\n  /**\r\n   * Instantiates a new PBRMetalRoughnessMaterial instance.\r\n   *\r\n   * @param name The material name\r\n   * @param scene The scene the material will be use in.\r\n   */\n\n\n  function PBRMetallicRoughnessMaterial(name, scene) {\n    var _this = _super.call(this, name, scene) || this;\n\n    _this._useRoughnessFromMetallicTextureAlpha = false;\n    _this._useRoughnessFromMetallicTextureGreen = true;\n    _this._useMetallnessFromMetallicTextureBlue = true;\n    _this.metallic = 1.0;\n    _this.roughness = 1.0;\n    return _this;\n  }\n  /**\r\n   * Return the currrent class name of the material.\r\n   */\n\n\n  PBRMetallicRoughnessMaterial.prototype.getClassName = function () {\n    return \"PBRMetallicRoughnessMaterial\";\n  };\n  /**\r\n   * Makes a duplicate of the current material.\r\n   * @param name - name to use for the new material.\r\n   */\n\n\n  PBRMetallicRoughnessMaterial.prototype.clone = function (name) {\n    var _this = this;\n\n    var clone = SerializationHelper.Clone(function () {\n      return new PBRMetallicRoughnessMaterial(name, _this.getScene());\n    }, this);\n    clone.id = name;\n    clone.name = name;\n    this.clearCoat.copyTo(clone.clearCoat);\n    this.anisotropy.copyTo(clone.anisotropy);\n    this.brdf.copyTo(clone.brdf);\n    this.sheen.copyTo(clone.sheen);\n    this.subSurface.copyTo(clone.subSurface);\n    return clone;\n  };\n  /**\r\n   * Serialize the material to a parsable JSON object.\r\n   */\n\n\n  PBRMetallicRoughnessMaterial.prototype.serialize = function () {\n    var serializationObject = SerializationHelper.Serialize(this);\n    serializationObject.customType = \"BABYLON.PBRMetallicRoughnessMaterial\";\n    serializationObject.clearCoat = this.clearCoat.serialize();\n    serializationObject.anisotropy = this.anisotropy.serialize();\n    serializationObject.brdf = this.brdf.serialize();\n    serializationObject.sheen = this.sheen.serialize();\n    serializationObject.subSurface = this.subSurface.serialize();\n    return serializationObject;\n  };\n  /**\r\n   * Parses a JSON object correponding to the serialize function.\r\n   */\n\n\n  PBRMetallicRoughnessMaterial.Parse = function (source, scene, rootUrl) {\n    var material = SerializationHelper.Parse(function () {\n      return new PBRMetallicRoughnessMaterial(source.name, scene);\n    }, source, scene, rootUrl);\n\n    if (source.clearCoat) {\n      material.clearCoat.parse(source.clearCoat, scene, rootUrl);\n    }\n\n    if (source.anisotropy) {\n      material.anisotropy.parse(source.anisotropy, scene, rootUrl);\n    }\n\n    if (source.brdf) {\n      material.brdf.parse(source.brdf, scene, rootUrl);\n    }\n\n    if (source.sheen) {\n      material.sheen.parse(source.sheen, scene, rootUrl);\n    }\n\n    if (source.subSurface) {\n      material.subSurface.parse(source.subSurface, scene, rootUrl);\n    }\n\n    return material;\n  };\n\n  __decorate([serializeAsColor3(), expandToProperty(\"_markAllSubMeshesAsTexturesDirty\", \"_albedoColor\")], PBRMetallicRoughnessMaterial.prototype, \"baseColor\", void 0);\n\n  __decorate([serializeAsTexture(), expandToProperty(\"_markAllSubMeshesAsTexturesDirty\", \"_albedoTexture\")], PBRMetallicRoughnessMaterial.prototype, \"baseTexture\", void 0);\n\n  __decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")], PBRMetallicRoughnessMaterial.prototype, \"metallic\", void 0);\n\n  __decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")], PBRMetallicRoughnessMaterial.prototype, \"roughness\", void 0);\n\n  __decorate([serializeAsTexture(), expandToProperty(\"_markAllSubMeshesAsTexturesDirty\", \"_metallicTexture\")], PBRMetallicRoughnessMaterial.prototype, \"metallicRoughnessTexture\", void 0);\n\n  return PBRMetallicRoughnessMaterial;\n}(PBRBaseSimpleMaterial);\n\nexport { PBRMetallicRoughnessMaterial };\n_TypeStore.RegisteredTypes[\"BABYLON.PBRMetallicRoughnessMaterial\"] = PBRMetallicRoughnessMaterial;","map":null,"metadata":{},"sourceType":"module"}