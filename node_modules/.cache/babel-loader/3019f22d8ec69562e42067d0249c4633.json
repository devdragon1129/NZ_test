{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/ItemEditorPage/LeftPanel/Items/SidebarItem/SidebarItem.tsx\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { DragSource } from 'react-dnd';\nimport { Popup } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport ItemImage from 'components/ItemImage';\nimport ItemStatus from 'components/ItemStatus';\nimport { getMissingBodyShapeType, hasBodyShape } from 'modules/item/utils';\nimport { locations } from 'routing/locations';\nimport { collect, sidebarItemSource, SIDEBAR_ITEM_SOURCE } from './SidebarItem.dnd';\nimport './SidebarItem.css';\n\nvar SidebarItem = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(SidebarItem, _React$PureComponent);\n\n  function SidebarItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SidebarItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SidebarItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function () {\n      var _this$props = _this.props,\n          item = _this$props.item,\n          onClick = _this$props.onClick;\n      onClick(item);\n    };\n\n    return _this;\n  }\n\n  _createClass(SidebarItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          item = _this$props2.item,\n          isSelected = _this$props2.isSelected,\n          isVisible = _this$props2.isVisible,\n          selectedCollectionId = _this$props2.selectedCollectionId,\n          bodyShape = _this$props2.bodyShape,\n          connectDragSource = _this$props2.connectDragSource,\n          isDragging = _this$props2.isDragging;\n      return connectDragSource( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SidebarItem \".concat(isSelected ? 'is-selected' : '', \" \").concat(isDragging ? 'is-dragging' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: locations.itemEditor({\n          itemId: item.id,\n          collectionId: selectedCollectionId || undefined\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ItemImage, {\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ItemStatus, {\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }), item.name), /*#__PURE__*/React.createElement(Popup, {\n        content: t('item_editor.left_panel.invalid_representation_tooltip', {\n          bodyShape: /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 26\n            }\n          }, t(\"body_shapes.\".concat(getMissingBodyShapeType(item))).toLowerCase())\n        }),\n        disabled: hasBodyShape(item, bodyShape),\n        position: \"top center\",\n        trigger: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"toggle \".concat(isVisible ? 'is-visible' : 'is-hidden'),\n          onClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 22\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return SidebarItem;\n}(React.PureComponent);\n\nexport default DragSource(SIDEBAR_ITEM_SOURCE, sidebarItemSource, collect)(SidebarItem);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ItemEditorPage/LeftPanel/Items/SidebarItem/SidebarItem.tsx"],"names":["React","Link","DragSource","Popup","t","ItemImage","ItemStatus","getMissingBodyShapeType","hasBodyShape","locations","collect","sidebarItemSource","SIDEBAR_ITEM_SOURCE","SidebarItem","handleClick","props","item","onClick","isSelected","isVisible","selectedCollectionId","bodyShape","connectDragSource","isDragging","itemEditor","itemId","id","collectionId","undefined","name","toLowerCase","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,CAAT,QAAkB,mDAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,uBAAT,EAAkCC,YAAlC,QAAsD,oBAAtD;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,OAAT,EAAkCC,iBAAlC,EAAqDC,mBAArD,QAAgF,mBAAhF;AAEA,OAAO,mBAAP;;IAEMC,W;;;;;;;;;;;;;;;;UACJC,W,GAAc,YAAM;AAAA,wBACQ,MAAKC,KADb;AAAA,UACVC,IADU,eACVA,IADU;AAAA,UACJC,OADI,eACJA,OADI;AAElBA,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,K;;;;;;;6BAEQ;AAAA,yBACiG,KAAKD,KADtG;AAAA,UACCC,IADD,gBACCA,IADD;AAAA,UACOE,UADP,gBACOA,UADP;AAAA,UACmBC,SADnB,gBACmBA,SADnB;AAAA,UAC8BC,oBAD9B,gBAC8BA,oBAD9B;AAAA,UACoDC,SADpD,gBACoDA,SADpD;AAAA,UAC+DC,iBAD/D,gBAC+DA,iBAD/D;AAAA,UACkFC,UADlF,gBACkFA,UADlF;AAEP,aAAOD,iBAAiB,eACtB;AAAK,QAAA,SAAS,wBAAiBJ,UAAU,GAAG,aAAH,GAAmB,EAA9C,cAAoDK,UAAU,GAAG,aAAH,GAAmB,EAAjF,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEd,SAAS,CAACe,UAAV,CAAqB;AAAEC,UAAAA,MAAM,EAAET,IAAI,CAACU,EAAf;AAAmBC,UAAAA,YAAY,EAAEP,oBAAoB,IAAIQ;AAAzD,SAArB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEZ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGA,IAAI,CAACa,IAFR,CAFF,eAME,oBAAC,KAAD;AACE,QAAA,OAAO,EAAEzB,CAAC,CAAC,uDAAD,EAA0D;AAClEiB,UAAAA,SAAS,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIjB,CAAC,uBAAgBG,uBAAuB,CAACS,IAAD,CAAvC,EAAD,CAAkDc,WAAlD,EAAJ;AADuD,SAA1D,CADZ;AAIE,QAAA,QAAQ,EAAEtB,YAAY,CAACQ,IAAD,EAAOK,SAAP,CAJxB;AAKE,QAAA,QAAQ,EAAC,YALX;AAME,QAAA,OAAO,eAAE;AAAK,UAAA,SAAS,mBAAYF,SAAS,GAAG,YAAH,GAAkB,WAAvC,CAAd;AAAoE,UAAA,OAAO,EAAE,KAAKL,WAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CADsB,CAAxB;AAmBD;;;;EA3BuBd,KAAK,CAAC+B,a;;AA8BhC,eAAe7B,UAAU,CAAwBU,mBAAxB,EAA6CD,iBAA7C,EAAgED,OAAhE,CAAV,CAAmFG,WAAnF,CAAf","sourcesContent":["import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { DragSource } from 'react-dnd'\nimport { Popup } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport ItemImage from 'components/ItemImage'\nimport ItemStatus from 'components/ItemStatus'\nimport { getMissingBodyShapeType, hasBodyShape } from 'modules/item/utils'\nimport { locations } from 'routing/locations'\nimport { collect, CollectedProps, sidebarItemSource, SIDEBAR_ITEM_SOURCE } from './SidebarItem.dnd'\nimport { Props } from './SidebarItem.types'\nimport './SidebarItem.css'\n\nclass SidebarItem extends React.PureComponent<Props & CollectedProps> {\n  handleClick = () => {\n    const { item, onClick } = this.props\n    onClick(item)\n  }\n\n  render() {\n    const { item, isSelected, isVisible, selectedCollectionId, bodyShape, connectDragSource, isDragging } = this.props\n    return connectDragSource(\n      <div className={`SidebarItem ${isSelected ? 'is-selected' : ''} ${isDragging ? 'is-dragging' : ''}`}>\n        <Link to={locations.itemEditor({ itemId: item.id, collectionId: selectedCollectionId || undefined })}>\n          <ItemImage item={item} />\n          <div className=\"name\">\n            <ItemStatus item={item} />\n            {item.name}\n          </div>\n          <Popup\n            content={t('item_editor.left_panel.invalid_representation_tooltip', {\n              bodyShape: <b>{t(`body_shapes.${getMissingBodyShapeType(item)}`).toLowerCase()}</b>\n            })}\n            disabled={hasBodyShape(item, bodyShape)}\n            position=\"top center\"\n            trigger={<div className={`toggle ${isVisible ? 'is-visible' : 'is-hidden'}`} onClick={this.handleClick}></div>}\n          />\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default DragSource<Props, CollectedProps>(SIDEBAR_ITEM_SOURCE, sidebarItemSource, collect)(SidebarItem)\n"]},"metadata":{},"sourceType":"module"}