{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/EditorPage/Tools/Tools.tsx\";\nimport * as React from 'react';\nimport { Popup, Row, Close } from 'decentraland-ui';\nimport { getLocalStorage } from 'decentraland-dapps/dist/lib/localStorage';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Icon from 'components/Icon';\nimport ShortcutTooltip from 'components/ShortcutTooltip';\nimport { debounce } from 'lib/debounce';\nimport { Shortcut } from 'modules/keyboard/types';\nexport var LOCALSTORAGE_SHORTCUT_POPUP_KEY = 'builder-shortcut-popup';\nvar localStorage = getLocalStorage();\n\nvar Tools = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Tools, _React$PureComponent);\n\n  function Tools() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tools);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tools)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isShortcutPopupOpen: _this.isShortcutPopupDismissed()\n    };\n    _this._isMounted = false;\n    _this.updatePopupPositionDebounced = debounce(function () {\n      return _this.updatePopupPosition();\n    }, 200);\n\n    _this.handleCloseShortcutPopup = function () {\n      _this.closeShortcutPopup();\n\n      localStorage.setItem(LOCALSTORAGE_SHORTCUT_POPUP_KEY, '1');\n    };\n\n    _this.handleResize = function () {\n      if (_this.state.isShortcutPopupOpen) {\n        _this.closeShortcutPopup();\n      }\n\n      _this.updatePopupPositionDebounced();\n    };\n\n    _this.handleShorcutIconClick = function () {\n      _this.handleCloseShortcutPopup();\n\n      _this.props.onClick('shortcuts');\n    };\n\n    _this.openShortcutPopup = function () {\n      if (_this.isShortcutPopupDismissed()) {\n        _this.setState({\n          isShortcutPopupOpen: true\n        });\n      }\n    };\n\n    _this.closeShortcutPopup = function () {\n      _this.setState({\n        isShortcutPopupOpen: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Tools, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      window.addEventListener('resize', this.handleResize);\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.state.isShortcutPopupOpen && this.props.isSidebarOpen !== nextProps.isSidebarOpen) {\n        this.updatePopupPosition();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.handleResize);\n      this._isMounted = false;\n    }\n  }, {\n    key: \"updatePopupPosition\",\n    value: function updatePopupPosition() {\n      if (!this._isMounted) return; // We need to force a Popup re-render to give semantic a chance to re-compute the styles\n      // Sadly the implementation doesn't allow for a way to do this cleanly\n\n      this.closeShortcutPopup();\n      setTimeout(this.openShortcutPopup);\n    }\n  }, {\n    key: \"isShortcutPopupDismissed\",\n    value: function isShortcutPopupDismissed() {\n      return !localStorage.getItem(LOCALSTORAGE_SHORTCUT_POPUP_KEY);\n    }\n  }, {\n    key: \"renderShortcutIcon\",\n    value: function renderShortcutIcon() {\n      return /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: Shortcut.SHORTCUTS,\n        className: \"tool\",\n        position: \"top center\",\n        onOpen: this.closeShortcutPopup,\n        onClose: this.openShortcutPopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"shortcuts\",\n        onClick: this.handleShorcutIconClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon(iconName, shortcut) {\n      return /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: shortcut,\n        className: \"tool\",\n        position: \"top center\",\n        onOpen: this.closeShortcutPopup,\n        onClose: this.openShortcutPopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: iconName,\n        onClick: this.getClickHandler(iconName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"getClickHandler\",\n    value: function getClickHandler(toolName) {\n      var _this2 = this;\n\n      return function () {\n        return _this2.props.onClick(toolName);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isShortcutPopupOpen = this.state.isShortcutPopupOpen;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Tools\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, this.renderIcon('reset-camera', Shortcut.RESET_CAMERA), this.renderIcon('zoom-in', Shortcut.ZOOM_IN), this.renderIcon('zoom-out', Shortcut.ZOOM_OUT), /*#__PURE__*/React.createElement(Popup, {\n        open: isShortcutPopupOpen && this.isShortcutPopupDismissed(),\n        className: \"shortcut-popup\",\n        content: /*#__PURE__*/React.createElement(Row, {\n          center: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        }, t('popups.shortcuts_help'), /*#__PURE__*/React.createElement(Close, {\n          small: true,\n          onClick: this.handleCloseShortcutPopup,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }\n        })),\n        position: \"top right\",\n        verticalOffset: 3,\n        trigger: this.renderShortcutIcon(),\n        on: \"hover\",\n        inverted: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Tools;\n}(React.PureComponent);\n\nTools.defaultProps = {\n  onClick: function onClick(_) {\n    /* noop */\n  }\n};\nexport { Tools as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/EditorPage/Tools/Tools.tsx"],"names":["React","Popup","Row","Close","getLocalStorage","t","Icon","ShortcutTooltip","debounce","Shortcut","LOCALSTORAGE_SHORTCUT_POPUP_KEY","localStorage","Tools","state","isShortcutPopupOpen","isShortcutPopupDismissed","_isMounted","updatePopupPositionDebounced","updatePopupPosition","handleCloseShortcutPopup","closeShortcutPopup","setItem","handleResize","handleShorcutIconClick","props","onClick","openShortcutPopup","setState","window","addEventListener","nextProps","isSidebarOpen","removeEventListener","setTimeout","getItem","SHORTCUTS","iconName","shortcut","getClickHandler","toolName","renderIcon","RESET_CAMERA","ZOOM_IN","ZOOM_OUT","renderShortcutIcon","PureComponent","defaultProps","_"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Popup, Row, Close } from 'decentraland-ui'\nimport { getLocalStorage } from 'decentraland-dapps/dist/lib/localStorage'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\n\nimport Icon from 'components/Icon'\nimport ShortcutTooltip from 'components/ShortcutTooltip'\nimport { IconName } from 'components/Icon/Icon.types'\nimport { debounce } from 'lib/debounce'\nimport { Shortcut } from 'modules/keyboard/types'\nimport { ToolName, Props, DefaultProps, State } from './Tools.types'\n\nexport const LOCALSTORAGE_SHORTCUT_POPUP_KEY = 'builder-shortcut-popup'\nconst localStorage = getLocalStorage()\n\nexport default class Tools extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    onClick: (_: ToolName) => {\n      /* noop */\n    }\n  }\n\n  state = {\n    isShortcutPopupOpen: this.isShortcutPopupDismissed()\n  }\n\n  _isMounted: boolean = false\n\n  updatePopupPositionDebounced = debounce(() => this.updatePopupPosition(), 200)\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleResize)\n    this._isMounted = true\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (this.state.isShortcutPopupOpen && this.props.isSidebarOpen !== nextProps.isSidebarOpen) {\n      this.updatePopupPosition()\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n    this._isMounted = false\n  }\n\n  handleCloseShortcutPopup = () => {\n    this.closeShortcutPopup()\n    localStorage.setItem(LOCALSTORAGE_SHORTCUT_POPUP_KEY, '1')\n  }\n\n  handleResize = () => {\n    if (this.state.isShortcutPopupOpen) {\n      this.closeShortcutPopup()\n    }\n    this.updatePopupPositionDebounced()\n  }\n\n  handleShorcutIconClick = () => {\n    this.handleCloseShortcutPopup()\n    this.props.onClick('shortcuts')\n  }\n\n  updatePopupPosition() {\n    if (!this._isMounted) return\n\n    // We need to force a Popup re-render to give semantic a chance to re-compute the styles\n    // Sadly the implementation doesn't allow for a way to do this cleanly\n    this.closeShortcutPopup()\n    setTimeout(this.openShortcutPopup)\n  }\n\n  openShortcutPopup = () => {\n    if (this.isShortcutPopupDismissed()) {\n      this.setState({ isShortcutPopupOpen: true })\n    }\n  }\n\n  closeShortcutPopup = () => {\n    this.setState({ isShortcutPopupOpen: false })\n  }\n\n  isShortcutPopupDismissed() {\n    return !localStorage.getItem(LOCALSTORAGE_SHORTCUT_POPUP_KEY)\n  }\n\n  renderShortcutIcon() {\n    return (\n      <ShortcutTooltip\n        shortcut={Shortcut.SHORTCUTS}\n        className=\"tool\"\n        position=\"top center\"\n        onOpen={this.closeShortcutPopup}\n        onClose={this.openShortcutPopup}\n      >\n        <Icon name=\"shortcuts\" onClick={this.handleShorcutIconClick} />\n      </ShortcutTooltip>\n    )\n  }\n\n  renderIcon(iconName: ToolName, shortcut: Shortcut) {\n    return (\n      <ShortcutTooltip\n        shortcut={shortcut}\n        className=\"tool\"\n        position=\"top center\"\n        onOpen={this.closeShortcutPopup}\n        onClose={this.openShortcutPopup}\n      >\n        <Icon name={iconName as IconName} onClick={this.getClickHandler(iconName)} />\n      </ShortcutTooltip>\n    )\n  }\n\n  getClickHandler(toolName: ToolName) {\n    return () => this.props.onClick(toolName)\n  }\n\n  render() {\n    const { isShortcutPopupOpen } = this.state\n\n    return (\n      <div className=\"Tools\">\n        {this.renderIcon('reset-camera', Shortcut.RESET_CAMERA)}\n        {this.renderIcon('zoom-in', Shortcut.ZOOM_IN)}\n        {this.renderIcon('zoom-out', Shortcut.ZOOM_OUT)}\n\n        <Popup\n          open={isShortcutPopupOpen && this.isShortcutPopupDismissed()}\n          className=\"shortcut-popup\"\n          content={\n            <Row center>\n              {t('popups.shortcuts_help')}\n              <Close small onClick={this.handleCloseShortcutPopup} />\n            </Row>\n          }\n          position=\"top right\"\n          verticalOffset={3}\n          trigger={this.renderShortcutIcon()}\n          on=\"hover\"\n          inverted\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}