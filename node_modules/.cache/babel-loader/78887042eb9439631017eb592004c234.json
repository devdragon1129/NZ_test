{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { getData } from 'decentraland-dapps/dist/modules/transaction/selectors';\nimport { isPending } from 'decentraland-dapps/dist/modules/transaction/utils';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { isEqual } from 'lib/address';\nexport * from 'decentraland-dapps/dist/modules/transaction/selectors';\nexport var getTransactions = createSelector(getData, getAddress, function (transactions, address) {\n  return transactions.filter(function (transaction) {\n    return !!address && isEqual(transaction.from, address);\n  });\n});\nexport var getPendingTransactions = createSelector(getTransactions, function (transactions) {\n  return transactions.filter(function (transaction) {\n    return isPending(transaction.status);\n  });\n});","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/transaction/selectors.ts"],"names":["createSelector","getData","isPending","getAddress","isEqual","getTransactions","transactions","address","filter","transaction","from","getPendingTransactions","status"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,OAAT,QAAwB,uDAAxB;AACA,SAASC,SAAT,QAA0B,mDAA1B;AAEA,SAASC,UAAT,QAA2B,kDAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,cAAc,uDAAd;AAEA,OAAO,IAAMC,eAAe,GAAGL,cAAc,CAC3CC,OAD2C,EAE3CE,UAF2C,EAG3C,UAACG,YAAD,EAAeC,OAAf;AAAA,SAA2BD,YAAY,CAACE,MAAb,CAAoB,UAAAC,WAAW;AAAA,WAAI,CAAC,CAACF,OAAF,IAAaH,OAAO,CAACK,WAAW,CAACC,IAAb,EAAmBH,OAAnB,CAAxB;AAAA,GAA/B,CAA3B;AAAA,CAH2C,CAAtC;AAMP,OAAO,IAAMI,sBAAsB,GAAGX,cAAc,CAA0CK,eAA1C,EAA2D,UAAAC,YAAY;AAAA,SACzHA,YAAY,CAACE,MAAb,CAAoB,UAAAC,WAAW;AAAA,WAAIP,SAAS,CAACO,WAAW,CAACG,MAAb,CAAb;AAAA,GAA/B,CADyH;AAAA,CAAvE,CAA7C","sourcesContent":["import { createSelector } from 'reselect'\nimport { getData } from 'decentraland-dapps/dist/modules/transaction/selectors'\nimport { isPending } from 'decentraland-dapps/dist/modules/transaction/utils'\nimport { Transaction } from 'decentraland-dapps/dist/modules/transaction/types'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { RootState } from 'modules/common/types'\nimport { isEqual } from 'lib/address'\n\nexport * from 'decentraland-dapps/dist/modules/transaction/selectors'\n\nexport const getTransactions = createSelector<RootState, Transaction[], string | undefined, Transaction[]>(\n  getData,\n  getAddress,\n  (transactions, address) => transactions.filter(transaction => !!address && isEqual(transaction.from, address))\n)\n\nexport const getPendingTransactions = createSelector<RootState, Transaction[], Transaction[]>(getTransactions, transactions =>\n  transactions.filter(transaction => isPending(transaction.status))\n)\n"]},"metadata":{},"sourceType":"module"}