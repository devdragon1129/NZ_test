{"ast":null,"code":"import { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { getLoading, isWaitingTxClaimName } from 'modules/ens/selectors';\nimport { claimNameRequest, CLAIM_NAME_REQUEST } from 'modules/ens/actions';\nimport ClaimNameFatFingerModal from './ClaimNameFatFingerModal';\n\nvar mapState = function mapState(state) {\n  return {\n    isLoading: isLoadingType(getLoading(state), CLAIM_NAME_REQUEST) || isWaitingTxClaimName(state),\n    address: getAddress(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onNavigate: function onNavigate(path) {\n      return dispatch(push(path));\n    },\n    onClaim: function onClaim(name) {\n      return dispatch(claimNameRequest(name));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(ClaimNameFatFingerModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/ClaimNameFatFingerModal/ClaimNameFatFingerModal.container.ts"],"names":["connect","push","getAddress","isLoadingType","getLoading","isWaitingTxClaimName","claimNameRequest","CLAIM_NAME_REQUEST","ClaimNameFatFingerModal","mapState","state","isLoading","address","mapDispatch","dispatch","onNavigate","path","onClaim","name"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,kDAA3B;AACA,SAASC,aAAT,QAA8B,mDAA9B;AAEA,SAASC,UAAT,EAAqBC,oBAArB,QAAiD,uBAAjD;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,qBAArD;AAEA,OAAOC,uBAAP,MAAoC,2BAApC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAuB;AACtCC,IAAAA,SAAS,EAAER,aAAa,CAACC,UAAU,CAACM,KAAD,CAAX,EAAoBH,kBAApB,CAAb,IAAwDF,oBAAoB,CAACK,KAAD,CADjD;AAEtCE,IAAAA,OAAO,EAAEV,UAAU,CAACQ,KAAD;AAFmB,GAAvB;AAAA,CAAjB;;AAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,UAAU,EAAE,oBAAAC,IAAI;AAAA,aAAIF,QAAQ,CAACb,IAAI,CAACe,IAAD,CAAL,CAAZ;AAAA,KADgD;AAEhEC,IAAAA,OAAO,EAAE,iBAAAC,IAAI;AAAA,aAAIJ,QAAQ,CAACR,gBAAgB,CAACY,IAAD,CAAjB,CAAZ;AAAA;AAFmD,GAA9C;AAAA,CAApB;;AAKA,eAAelB,OAAO,CAACS,QAAD,EAAWI,WAAX,CAAP,CAA+BL,uBAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { RootState } from 'modules/common/types'\nimport { getLoading, isWaitingTxClaimName } from 'modules/ens/selectors'\nimport { claimNameRequest, CLAIM_NAME_REQUEST } from 'modules/ens/actions'\nimport { MapDispatch, MapDispatchProps } from './ClaimNameFatFingerModal.types'\nimport ClaimNameFatFingerModal from './ClaimNameFatFingerModal'\n\nconst mapState = (state: RootState) => ({\n  isLoading: isLoadingType(getLoading(state), CLAIM_NAME_REQUEST) || isWaitingTxClaimName(state),\n  address: getAddress(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onNavigate: path => dispatch(push(path)),\n  onClaim: name => dispatch(claimNameRequest(name))\n})\n\nexport default connect(mapState, mapDispatch)(ClaimNameFatFingerModal)\n"]},"metadata":{},"sourceType":"module"}