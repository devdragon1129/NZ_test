{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authorizationReducer = void 0;\n\nvar reducer_1 = require(\"../loading/reducer\");\n\nvar actions_1 = require(\"../transaction/actions\");\n\nvar actions_2 = require(\"./actions\");\n\nvar utils_1 = require(\"./utils\");\n\nvar INITIAL_STATE = {\n  data: [],\n  loading: [],\n  error: null\n};\n\nfunction authorizationReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions_2.GRANT_TOKEN_REQUEST:\n    case actions_2.REVOKE_TOKEN_REQUEST:\n    case actions_2.GRANT_TOKEN_SUCCESS:\n    case actions_2.REVOKE_TOKEN_SUCCESS:\n    case actions_2.FETCH_AUTHORIZATIONS_REQUEST:\n      {\n        return Object.assign(Object.assign({}, state), {\n          loading: reducer_1.loadingReducer(state.loading, action)\n        });\n      }\n\n    case actions_2.FETCH_AUTHORIZATIONS_SUCCESS:\n      {\n        var authorizations = action.payload.authorizations;\n        return {\n          loading: reducer_1.loadingReducer(state.loading, action),\n          error: null,\n          data: [].concat(_toConsumableArray(state.data), _toConsumableArray(authorizations))\n        };\n      }\n\n    case actions_2.GRANT_TOKEN_FAILURE:\n    case actions_2.REVOKE_TOKEN_FAILURE:\n    case actions_2.FETCH_AUTHORIZATIONS_FAILURE:\n      {\n        return Object.assign(Object.assign({}, state), {\n          loading: reducer_1.loadingReducer(state.loading, action),\n          error: action.payload.error\n        });\n      }\n\n    case actions_1.FETCH_TRANSACTION_SUCCESS:\n      {\n        var transaction = action.payload.transaction;\n\n        switch (transaction.actionType) {\n          case actions_2.GRANT_TOKEN_SUCCESS:\n            {\n              var authorization = transaction.payload.authorization;\n              return Object.assign(Object.assign({}, state), {\n                data: [].concat(_toConsumableArray(state.data), [Object.assign({}, authorization)])\n              });\n            }\n\n          case actions_2.REVOKE_TOKEN_SUCCESS:\n            {\n              var _authorization = transaction.payload.authorization;\n              return Object.assign(Object.assign({}, state), {\n                data: _toConsumableArray(state.data.filter(function (stateAuthorization) {\n                  return !utils_1.areEqual(stateAuthorization, _authorization);\n                }))\n              });\n            }\n\n          default:\n            return state;\n        }\n      }\n\n    default:\n      return state;\n  }\n}\n\nexports.authorizationReducer = authorizationReducer;","map":null,"metadata":{},"sourceType":"script"}