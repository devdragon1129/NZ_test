{"ast":null,"code":"import _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/SideBar/EntityEditor/EntityParameters/EntityParameters.tsx\";\nimport * as React from 'react';\nimport { AssetParameterType } from 'modules/asset/types';\nimport TextField from '../TextField';\nimport NumberField from '../NumberField';\nimport BooleanField from '../BooleanField';\nimport EntityField from '../EntityField';\nimport ActionField from '../ActionField';\nimport OptionsField from '../OptionsField';\nimport TextAreaField from '../TextAreaField';\nimport SliderField from '../SliderField';\n\nvar EntityParameters = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(EntityParameters, _React$PureComponent);\n\n  function EntityParameters() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EntityParameters);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EntityParameters)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleFieldChange = function (id, value) {\n      var debounce = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var values = _objectSpread({}, _this.props.values, _defineProperty({}, id, value));\n\n      _this.props.onChange(values, debounce);\n    };\n\n    _this.renderField = function (param) {\n      var _this$props = _this.props,\n          id = _this$props.id,\n          values = _this$props.values;\n      var _this$props2 = _this.props,\n          entityNames = _this$props2.entityNames,\n          entityName = _this$props2.entityName,\n          _this$props2$classNam = _this$props2.className,\n          className = _this$props2$classNam === void 0 ? '' : _this$props2$classNam;\n      var parameterId = \"\".concat(id, \"-\").concat(entityName, \"-\").concat(param.id);\n\n      switch (param.type) {\n        case AssetParameterType.ACTIONS:\n          {\n            var actions = values[param.id];\n\n            if (actions) {\n              // Hide actions that correspond to inexistent entity references\n              actions = actions.filter(function (action) {\n                return entityNames.includes(action.entityName);\n              });\n            }\n\n            return /*#__PURE__*/React.createElement(ActionField, {\n              id: parameterId,\n              key: parameterId,\n              label: param.label,\n              parameter: param,\n              entityName: entityName,\n              value: actions,\n              onChange: function onChange(val, debounce) {\n                return _this.handleFieldChange(param.id, val, debounce);\n              },\n              className: className,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 11\n              }\n            });\n          }\n\n        case AssetParameterType.ENTITY:\n          {\n            var _entityName = values[param.id];\n            return /*#__PURE__*/React.createElement(EntityField, {\n              id: parameterId,\n              key: parameterId,\n              label: param.label,\n              value: _entityName,\n              onChange: function onChange(val) {\n                return _this.handleFieldChange(param.id, val);\n              },\n              className: className,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 11\n              }\n            });\n          }\n\n        case AssetParameterType.TEXT:\n          {\n            return /*#__PURE__*/React.createElement(TextField, {\n              id: parameterId,\n              key: parameterId,\n              label: param.label,\n              value: values[param.id],\n              onChange: function onChange(val) {\n                return _this.handleFieldChange(param.id, val, true);\n              },\n              className: className,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 11\n              }\n            });\n          }\n\n        case AssetParameterType.BOOLEAN:\n          {\n            return /*#__PURE__*/React.createElement(BooleanField, {\n              id: parameterId,\n              key: parameterId,\n              label: param.label,\n              value: values[param.id],\n              onChange: function onChange(val) {\n                return _this.handleFieldChange(param.id, val);\n              },\n              className: className,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 11\n              }\n            });\n          }\n\n        case AssetParameterType.INTEGER:\n          {\n            return /*#__PURE__*/React.createElement(NumberField, {\n              id: parameterId,\n              key: parameterId,\n              label: param.label,\n              value: values[param.id],\n              onChange: function onChange(val) {\n                return _this.handleFieldChange(param.id, val, true);\n              },\n              className: className,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 11\n              }\n            });\n          }\n\n        case AssetParameterType.OPTIONS:\n          {\n            return /*#__PURE__*/React.createElement(OptionsField, {\n              id: parameterId,\n              key: parameterId,\n              label: param.label,\n              value: values[param.id],\n              options: param.options,\n              onChange: function onChange(val) {\n                return _this.handleFieldChange(param.id, val);\n              },\n              className: className,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 11\n              }\n            });\n          }\n\n        case AssetParameterType.FLOAT:\n          {\n            return /*#__PURE__*/React.createElement(NumberField, {\n              id: parameterId,\n              key: parameterId,\n              label: param.label,\n              value: values[param.id],\n              onChange: function onChange(val) {\n                return _this.handleFieldChange(param.id, val, true);\n              },\n              className: className,\n              allowFloat: true,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 11\n              }\n            });\n          }\n\n        case AssetParameterType.TEXTAREA:\n          {\n            return /*#__PURE__*/React.createElement(TextAreaField, {\n              id: parameterId,\n              key: parameterId,\n              label: param.label,\n              value: values[param.id],\n              onChange: function onChange(val) {\n                return _this.handleFieldChange(param.id, val, true);\n              },\n              className: className,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 11\n              }\n            });\n          }\n\n        case AssetParameterType.SLIDER:\n          {\n            return /*#__PURE__*/React.createElement(SliderField, {\n              id: parameterId,\n              key: parameterId,\n              label: param.label,\n              min: param.min,\n              max: param.max,\n              step: param.step,\n              value: values[param.id],\n              onChange: function onChange(val) {\n                return _this.handleFieldChange(param.id, val, true);\n              },\n              className: className,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 11\n              }\n            });\n          }\n\n        default:\n          return null;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(EntityParameters, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var parameters = this.props.parameters;\n      return parameters.map(function (param) {\n        return _this2.renderField(param);\n      });\n    }\n  }]);\n\n  return EntityParameters;\n}(React.PureComponent);\n\nexport { EntityParameters as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SideBar/EntityEditor/EntityParameters/EntityParameters.tsx"],"names":["React","AssetParameterType","TextField","NumberField","BooleanField","EntityField","ActionField","OptionsField","TextAreaField","SliderField","EntityParameters","handleFieldChange","id","value","debounce","values","props","onChange","renderField","param","entityNames","entityName","className","parameterId","type","ACTIONS","actions","filter","action","includes","label","val","ENTITY","TEXT","BOOLEAN","INTEGER","OPTIONS","options","FLOAT","TEXTAREA","SLIDER","min","max","step","parameters","map","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { AssetParameterType, AssetParameter, AssetActionValue } from 'modules/asset/types'\nimport TextField from '../TextField'\nimport NumberField from '../NumberField'\nimport BooleanField from '../BooleanField'\nimport EntityField from '../EntityField'\nimport ActionField from '../ActionField'\nimport OptionsField from '../OptionsField'\nimport TextAreaField from '../TextAreaField'\nimport SliderField from '../SliderField'\n\nimport { Props } from './EntityParameters.types'\n\nexport default class EntityParameters extends React.PureComponent<Props> {\n  handleFieldChange = (id: string, value: any, debounce: boolean = false) => {\n    const values = { ...this.props.values, [id]: value }\n    this.props.onChange(values, debounce)\n  }\n\n  renderField = (param: AssetParameter) => {\n    const { id, values } = this.props\n    const { entityNames, entityName, className = '' } = this.props\n    const parameterId = `${id}-${entityName}-${param.id}`\n\n    switch (param.type) {\n      case AssetParameterType.ACTIONS: {\n        let actions = values[param.id] as AssetActionValue[]\n\n        if (actions) {\n          // Hide actions that correspond to inexistent entity references\n          actions = actions.filter(action => entityNames.includes(action.entityName))\n        }\n\n        return (\n          <ActionField\n            id={parameterId}\n            key={parameterId}\n            label={param.label}\n            parameter={param}\n            entityName={entityName}\n            value={actions}\n            onChange={(val, debounce) => this.handleFieldChange(param.id, val, debounce)}\n            className={className}\n          />\n        )\n      }\n      case AssetParameterType.ENTITY: {\n        let entityName = values[param.id] as string\n        return (\n          <EntityField\n            id={parameterId}\n            key={parameterId}\n            label={param.label}\n            value={entityName}\n            onChange={val => this.handleFieldChange(param.id, val)}\n            className={className}\n          />\n        )\n      }\n      case AssetParameterType.TEXT: {\n        return (\n          <TextField\n            id={parameterId}\n            key={parameterId}\n            label={param.label}\n            value={values[param.id] as string}\n            onChange={val => this.handleFieldChange(param.id, val, true)}\n            className={className}\n          />\n        )\n      }\n      case AssetParameterType.BOOLEAN: {\n        return (\n          <BooleanField\n            id={parameterId}\n            key={parameterId}\n            label={param.label}\n            value={values[param.id] as boolean}\n            onChange={val => this.handleFieldChange(param.id, val)}\n            className={className}\n          />\n        )\n      }\n      case AssetParameterType.INTEGER: {\n        return (\n          <NumberField\n            id={parameterId}\n            key={parameterId}\n            label={param.label}\n            value={values[param.id] as number}\n            onChange={val => this.handleFieldChange(param.id, val, true)}\n            className={className}\n          />\n        )\n      }\n      case AssetParameterType.OPTIONS: {\n        return (\n          <OptionsField\n            id={parameterId}\n            key={parameterId}\n            label={param.label}\n            value={values[param.id] as string}\n            options={param.options!}\n            onChange={val => this.handleFieldChange(param.id, val)}\n            className={className}\n          />\n        )\n      }\n      case AssetParameterType.FLOAT: {\n        return (\n          <NumberField\n            id={parameterId}\n            key={parameterId}\n            label={param.label}\n            value={values[param.id] as number}\n            onChange={val => this.handleFieldChange(param.id, val, true)}\n            className={className}\n            allowFloat\n          />\n        )\n      }\n      case AssetParameterType.TEXTAREA: {\n        return (\n          <TextAreaField\n            id={parameterId}\n            key={parameterId}\n            label={param.label}\n            value={values[param.id] as string}\n            onChange={val => this.handleFieldChange(param.id, val, true)}\n            className={className}\n          />\n        )\n      }\n      case AssetParameterType.SLIDER: {\n        return (\n          <SliderField\n            id={parameterId}\n            key={parameterId}\n            label={param.label}\n            min={param.min as number}\n            max={param.max as number}\n            step={param.step as number}\n            value={values[param.id] as number}\n            onChange={val => this.handleFieldChange(param.id, val, true)}\n            className={className}\n          />\n        )\n      }\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const { parameters } = this.props\n    return parameters.map(param => this.renderField(param))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}