{"ast":null,"code":"export var PublishButtonAction;\n\n(function (PublishButtonAction) {\n  PublishButtonAction[PublishButtonAction[\"NONE\"] = 0] = \"NONE\";\n  PublishButtonAction[PublishButtonAction[\"PUBLISH\"] = 1] = \"PUBLISH\";\n  PublishButtonAction[PublishButtonAction[\"PUSH_CHANGES\"] = 2] = \"PUSH_CHANGES\";\n  PublishButtonAction[PublishButtonAction[\"PUBLISH_AND_PUSH_CHANGES\"] = 3] = \"PUBLISH_AND_PUSH_CHANGES\";\n})(PublishButtonAction || (PublishButtonAction = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ThirdPartyCollectionDetailPage/CollectionPublishButton/CollectionPublishButton.types.ts"],"names":["PublishButtonAction"],"mappings":"AAMA,WAAYA,mBAAZ;;WAAYA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;GAAAA,mB,KAAAA,mB","sourcesContent":["import { Dispatch } from 'redux'\nimport { OpenModalAction } from 'modules/modal/actions'\nimport { ItemCuration } from 'modules/curations/itemCuration/types'\nimport { Collection } from 'modules/collection/types'\nimport { Item, SyncStatus } from 'modules/item/types'\n\nexport enum PublishButtonAction {\n  NONE,\n  PUBLISH,\n  PUSH_CHANGES,\n  PUBLISH_AND_PUSH_CHANGES\n}\n\nexport type Props = {\n  collection: Collection\n  items: Item[]\n  itemCurations: ItemCuration[]\n  isLoadingItemCurations: boolean\n  itemsStatus: Record<string, SyncStatus>\n  slots: number\n  onClick: (collectionId: string, itemIds: string[], action: PublishButtonAction) => void\n}\n\nexport type OwnProps = Pick<Props, 'items' | 'collection'>\nexport type MapStateProps = Pick<Props, 'itemCurations' | 'itemsStatus' | 'isLoadingItemCurations'>\nexport type MapDispatchProps = Pick<Props, 'onClick'>\nexport type MapDispatch = Dispatch<OpenModalAction>\n"]},"metadata":{},"sourceType":"module"}