{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clearTransaction = exports.CLEAR_TRANSACTION = exports.clearTransactions = exports.CLEAR_TRANSACTIONS = exports.replaceTransactionFailure = exports.replaceTransactionSuccess = exports.replaceTransactionRequest = exports.REPLACE_TRANSACTION_FAILURE = exports.REPLACE_TRANSACTION_SUCCESS = exports.REPLACE_TRANSACTION_REQUEST = exports.fixRevertedTransaction = exports.FIX_REVERTED_TRANSACTION = exports.watchRevertedTransaction = exports.WATCH_REVERTED_TRANSACTION = exports.watchDroppedTransactions = exports.WATCH_DROPPED_TRANSACTIONS = exports.updateTransactionNonce = exports.UPDATE_TRANSACTION_NONCE = exports.updateTransactionStatus = exports.UPDATE_TRANSACTION_STATUS = exports.watchPendingTransactions = exports.WATCH_PENDING_TRANSACTIONS = exports.fetchTransactionFailure = exports.fetchTransactionSuccess = exports.fetchTransactionRequest = exports.FETCH_TRANSACTION_FAILURE = exports.FETCH_TRANSACTION_SUCCESS = exports.FETCH_TRANSACTION_REQUEST = void 0;\n\nvar typesafe_actions_1 = require(\"typesafe-actions\"); // Fetch transaction\n\n\nexports.FETCH_TRANSACTION_REQUEST = '[Request] Fetch Transaction';\nexports.FETCH_TRANSACTION_SUCCESS = '[Success] Fetch Transaction';\nexports.FETCH_TRANSACTION_FAILURE = '[Failure] Fetch Transaction';\n\nvar fetchTransactionRequest = function fetchTransactionRequest(address, hash, actionObject) {\n  return typesafe_actions_1.action(exports.FETCH_TRANSACTION_REQUEST, {\n    address: address,\n    hash: hash,\n    action: actionObject\n  });\n};\n\nexports.fetchTransactionRequest = fetchTransactionRequest;\n\nvar fetchTransactionSuccess = function fetchTransactionSuccess(transaction) {\n  return typesafe_actions_1.action(exports.FETCH_TRANSACTION_SUCCESS, {\n    transaction: transaction\n  });\n};\n\nexports.fetchTransactionSuccess = fetchTransactionSuccess;\n\nvar fetchTransactionFailure = function fetchTransactionFailure(hash, status, message, transaction) {\n  return typesafe_actions_1.action(exports.FETCH_TRANSACTION_FAILURE, {\n    hash: hash,\n    status: status,\n    message: message,\n    transaction: transaction\n  });\n};\n\nexports.fetchTransactionFailure = fetchTransactionFailure; // Watch pending transactions\n\nexports.WATCH_PENDING_TRANSACTIONS = 'Watch Pending Transactions';\n\nvar watchPendingTransactions = function watchPendingTransactions() {\n  return typesafe_actions_1.action(exports.WATCH_PENDING_TRANSACTIONS, {});\n};\n\nexports.watchPendingTransactions = watchPendingTransactions; // Update transaction status\n\nexports.UPDATE_TRANSACTION_STATUS = 'Update Transaction Status';\n\nvar updateTransactionStatus = function updateTransactionStatus(hash, status) {\n  return typesafe_actions_1.action(exports.UPDATE_TRANSACTION_STATUS, {\n    hash: hash,\n    status: status\n  });\n};\n\nexports.updateTransactionStatus = updateTransactionStatus; // Update transaction nonce\n\nexports.UPDATE_TRANSACTION_NONCE = 'Update Transaction Nonce';\n\nvar updateTransactionNonce = function updateTransactionNonce(hash, nonce) {\n  return typesafe_actions_1.action(exports.UPDATE_TRANSACTION_NONCE, {\n    hash: hash,\n    nonce: nonce\n  });\n};\n\nexports.updateTransactionNonce = updateTransactionNonce; // Watch dropped transactions\n\nexports.WATCH_DROPPED_TRANSACTIONS = 'Watch Dropped Transactions';\n\nvar watchDroppedTransactions = function watchDroppedTransactions() {\n  return typesafe_actions_1.action(exports.WATCH_DROPPED_TRANSACTIONS, {});\n};\n\nexports.watchDroppedTransactions = watchDroppedTransactions; // Watch reverted transaction\n\nexports.WATCH_REVERTED_TRANSACTION = 'Watch Reverted Transaction';\n\nvar watchRevertedTransaction = function watchRevertedTransaction(hash) {\n  return typesafe_actions_1.action(exports.WATCH_REVERTED_TRANSACTION, {\n    hash: hash\n  });\n};\n\nexports.watchRevertedTransaction = watchRevertedTransaction; // Fix reverted transaction\n\nexports.FIX_REVERTED_TRANSACTION = 'Fix Reverted Transaction';\n\nvar fixRevertedTransaction = function fixRevertedTransaction(hash) {\n  return typesafe_actions_1.action(exports.FIX_REVERTED_TRANSACTION, {\n    hash: hash\n  });\n};\n\nexports.fixRevertedTransaction = fixRevertedTransaction; // Replace transaction\n\nexports.REPLACE_TRANSACTION_REQUEST = '[Request] Replace Transaction';\nexports.REPLACE_TRANSACTION_SUCCESS = '[Success] Replace Transaction';\nexports.REPLACE_TRANSACTION_FAILURE = '[Failure] Replace Transaction';\n\nvar replaceTransactionRequest = function replaceTransactionRequest(hash, nonce) {\n  return typesafe_actions_1.action(exports.REPLACE_TRANSACTION_REQUEST, {\n    hash: hash,\n    nonce: nonce\n  });\n};\n\nexports.replaceTransactionRequest = replaceTransactionRequest;\n\nvar replaceTransactionSuccess = function replaceTransactionSuccess(hash, replaceBy) {\n  return typesafe_actions_1.action(exports.REPLACE_TRANSACTION_SUCCESS, {\n    hash: hash,\n    replaceBy: replaceBy\n  });\n};\n\nexports.replaceTransactionSuccess = replaceTransactionSuccess;\n\nvar replaceTransactionFailure = function replaceTransactionFailure(hash, error) {\n  return typesafe_actions_1.action(exports.REPLACE_TRANSACTION_FAILURE, {\n    hash: hash,\n    error: error\n  });\n};\n\nexports.replaceTransactionFailure = replaceTransactionFailure; // Clear Transactions (multiple)\n\nexports.CLEAR_TRANSACTIONS = 'Clear Transactions';\n\nvar clearTransactions = function clearTransactions(address) {\n  var clearPendings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return typesafe_actions_1.action(exports.CLEAR_TRANSACTIONS, {\n    address: address,\n    clearPendings: clearPendings\n  });\n};\n\nexports.clearTransactions = clearTransactions; // Clear Transaction (single)\n\nexports.CLEAR_TRANSACTION = 'Clear Transaction';\n\nvar clearTransaction = function clearTransaction(hash) {\n  return typesafe_actions_1.action(exports.CLEAR_TRANSACTION, {\n    hash: hash\n  });\n};\n\nexports.clearTransaction = clearTransaction;","map":null,"metadata":{},"sourceType":"script"}