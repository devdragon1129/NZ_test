{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/UseAsAliasModal/UseAsAliasModal.tsx\";\nimport * as React from 'react';\nimport { ModalNavigation, Button, ModalContent, ModalActions } from 'decentraland-ui';\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\n\nvar UseAsAliasModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(UseAsAliasModal, _React$PureComponent);\n\n  function UseAsAliasModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UseAsAliasModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UseAsAliasModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function () {\n      var _this$props = _this.props,\n          onSubmit = _this$props.onSubmit,\n          address = _this$props.address;\n      var newName = _this.props.metadata.newName;\n\n      if (address) {\n        onSubmit(address, newName);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(UseAsAliasModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onClose = _this$props2.onClose,\n          isLoading = _this$props2.isLoading,\n          aliases = _this$props2.aliases,\n          oldName = _this$props2.name;\n      var newName = this.props.metadata.newName;\n      var aliasName = aliases.length > 0 ? aliases[0].name : '';\n      var successOnSetAlias = newName === aliasName && !isLoading;\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: newName,\n        onClose: onClose,\n        size: \"tiny\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('use_as_alias_modal.title'),\n        subtitle: t('use_as_alias_modal.subtitle'),\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ModalContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, successOnSetAlias ? /*#__PURE__*/React.createElement(T, {\n        id: \"use_as_alias_modal.success\",\n        values: {\n          name: /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 66\n            }\n          }, newName)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }) : /*#__PURE__*/React.createElement(T, {\n        id: \"use_as_alias_modal.body\",\n        values: {\n          newName: /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 66\n            }\n          }, newName),\n          oldName: /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 93\n            }\n          }, oldName)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, successOnSetAlias ? /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        onClick: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, t('global.done')) : /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        loading: isLoading,\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, t('global.confirm'))));\n    }\n  }]);\n\n  return UseAsAliasModal;\n}(React.PureComponent);\n\nexport { UseAsAliasModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/UseAsAliasModal/UseAsAliasModal.tsx"],"names":["React","ModalNavigation","Button","ModalContent","ModalActions","T","t","Modal","UseAsAliasModal","handleSubmit","props","onSubmit","address","newName","metadata","onClose","isLoading","aliases","oldName","name","aliasName","length","successOnSetAlias","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { ModalNavigation, Button, ModalContent, ModalActions } from 'decentraland-ui'\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport { Props } from './UseAsAliasModal.types'\n\nexport default class UseAsAliasModal extends React.PureComponent<Props> {\n  handleSubmit = () => {\n    const { onSubmit, address } = this.props\n    const { newName } = this.props.metadata\n    if (address) {\n      onSubmit(address, newName)\n    }\n  }\n\n  render() {\n    const { onClose, isLoading, aliases, name: oldName } = this.props\n    const { newName } = this.props.metadata\n    const aliasName = aliases.length > 0 ? aliases[0].name : ''\n    const successOnSetAlias = newName === aliasName && !isLoading\n\n    return (\n      <Modal name={newName} onClose={onClose} size=\"tiny\">\n        <ModalNavigation title={t('use_as_alias_modal.title')} subtitle={t('use_as_alias_modal.subtitle')} onClose={onClose} />\n        <ModalContent>\n          <p>\n            {successOnSetAlias ? (\n              <T id=\"use_as_alias_modal.success\" values={{ name: <b>{newName}</b> }} />\n            ) : (\n              <T id=\"use_as_alias_modal.body\" values={{ newName: <b>{newName}</b>, oldName: <b>{oldName}</b> }} />\n            )}\n          </p>\n        </ModalContent>\n        <ModalActions>\n          {successOnSetAlias ? (\n            <Button primary onClick={onClose}>\n              {t('global.done')}\n            </Button>\n          ) : (\n            <Button primary loading={isLoading} onClick={this.handleSubmit}>\n              {t('global.confirm')}\n            </Button>\n          )}\n        </ModalActions>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}