{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { BoundingInfo, Camera, Color4, DirectionalLight, Engine, HemisphericLight, Mesh, Scene, SceneLoader, SpotLight, TargetCamera, Tools, Vector3 } from '@babylonjs/core';\nimport '@babylonjs/loaders';\nimport { defaults, ThumbnailType } from './getModelData';\nexport var EMOTE_ERROR = 'Model is EMOTE';\n\nfunction refreshBoundingInfo(parent) {\n  var children = parent.getChildren().filter(function (mesh) {\n    return mesh.id !== '__root__';\n  });\n\n  if (children.length > 0) {\n    var child = children[0]; // child.showBoundingBox = true\n\n    var boundingInfo = child.getBoundingInfo();\n    var min = boundingInfo.boundingBox.minimumWorld.add(child.position);\n    var max = boundingInfo.boundingBox.maximumWorld.add(child.position);\n\n    for (var i = 1; i < children.length; i++) {\n      var _child = children[i]; // child.showBoundingBox = true\n\n      boundingInfo = _child.getBoundingInfo();\n      var siblingMin = boundingInfo.boundingBox.minimumWorld.add(_child.position);\n      var siblingMax = boundingInfo.boundingBox.maximumWorld.add(_child.position);\n      min = Vector3.Minimize(min, siblingMin);\n      max = Vector3.Maximize(max, siblingMax);\n    }\n\n    parent.setBoundingInfo(new BoundingInfo(min, max));\n  }\n}\n\nvar hideMaterialList = ['hair_mat', 'avatarskin_mat'];\nexport function getScreenshot(_x) {\n  return _getScreenshot.apply(this, arguments);\n}\n\nfunction _getScreenshot() {\n  _getScreenshot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var options,\n        _defaults$options,\n        width,\n        height,\n        extension,\n        thumbnailType,\n        canvas,\n        engine,\n        scene,\n        camera,\n        directional,\n        top,\n        bottom,\n        spot,\n        parent,\n        _iterator,\n        _step,\n        mesh,\n        _iterator2,\n        _step2,\n        materialName,\n        _iterator3,\n        _step3,\n        material,\n        _iterator4,\n        _step4,\n        texture,\n        bounds,\n        size,\n        scale,\n        center,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            // add defaults to options\n            _defaults$options = _objectSpread({}, defaults, options), width = _defaults$options.width, height = _defaults$options.height, extension = _defaults$options.extension, thumbnailType = _defaults$options.thumbnailType; // setup renderer\n\n            canvas = document.createElement('canvas');\n            canvas.width = width;\n            canvas.height = height;\n            canvas.style.visibility = 'hidden';\n            document.body.appendChild(canvas);\n            engine = new Engine(canvas, true, {\n              preserveDrawingBuffer: true,\n              stencil: true\n            }); // Load GLTF\n\n            scene = new Scene(engine);\n            scene.autoClear = true;\n            scene.clearColor = new Color4(0, 0, 0, 0);\n            _context.next = 13;\n            return SceneLoader.AppendAsync(url, '', scene, undefined, extension);\n\n          case 13:\n            _context.next = 15;\n            return scene.whenReadyAsync();\n\n          case 15:\n            if (!(scene.animationGroups.length > 0)) {\n              _context.next = 17;\n              break;\n            }\n\n            throw new Error(EMOTE_ERROR);\n\n          case 17:\n            // Setup Camera\n            camera = new TargetCamera('targetCamera', new Vector3(0, 0, 0), scene);\n            camera.mode = Camera.ORTHOGRAPHIC_CAMERA;\n            camera.orthoTop = 1;\n            camera.orthoBottom = -1;\n            camera.orthoLeft = -1;\n            camera.orthoRight = 1;\n            _context.t0 = thumbnailType;\n            _context.next = _context.t0 === ThumbnailType.FRONT ? 26 : _context.t0 === ThumbnailType.TOP ? 28 : 30;\n            break;\n\n          case 26:\n            camera.position = new Vector3(0, 0, 2);\n            return _context.abrupt(\"break\", 31);\n\n          case 28:\n            camera.position = new Vector3(0, 1, 0);\n            return _context.abrupt(\"break\", 31);\n\n          case 30:\n            camera.position = new Vector3(-2, 2, 2);\n\n          case 31:\n            camera.setTarget(Vector3.Zero());\n            camera.attachControl(canvas, true); // Setup lights\n\n            directional = new DirectionalLight('directional', new Vector3(0, 0, 1), scene);\n            directional.intensity = 1;\n            top = new HemisphericLight('top', new Vector3(0, -1, 0), scene);\n            top.intensity = 1;\n            bottom = new HemisphericLight('bottom', new Vector3(0, 1, 0), scene);\n            bottom.intensity = 1;\n            spot = new SpotLight('spot', new Vector3(-2, 2, 2), new Vector3(2, -2, -2), Math.PI / 2, 1000, scene);\n            spot.intensity = 1; // Setup parent\n\n            parent = new Mesh('parent', scene);\n            _iterator = _createForOfIteratorHelper(scene.meshes);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                mesh = _step.value;\n\n                if (mesh !== parent) {\n                  mesh.setParent(parent);\n                }\n              } // Clean up\n\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            _iterator2 = _createForOfIteratorHelper(hideMaterialList);\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                materialName = _step2.value;\n                _iterator3 = _createForOfIteratorHelper(scene.materials);\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    material = _step3.value;\n\n                    if (material.name.toLowerCase().includes(materialName)) {\n                      material.alpha = 0;\n                      scene.removeMaterial(material);\n                    }\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n                _iterator4 = _createForOfIteratorHelper(scene.textures);\n\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    texture = _step4.value;\n\n                    if (texture.name.toLowerCase().includes(materialName)) {\n                      texture.dispose();\n                      scene.removeTexture(texture);\n                    }\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n              } // resize and center\n\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            refreshBoundingInfo(parent);\n            bounds = parent.getBoundingInfo().boundingBox.extendSize;\n            size = bounds.length();\n            scale = new Vector3(1 / size, 1 / size, 1 / size);\n            parent.scaling = scale;\n            center = parent.getBoundingInfo().boundingBox.center.multiply(scale);\n            parent.position.subtractInPlace(center); // remove dom element\n\n            document.body.removeChild(canvas); // render\n\n            return _context.abrupt(\"return\", Tools.CreateScreenshotUsingRenderTargetAsync(engine, camera, {\n              width: width,\n              height: height\n            }, undefined, undefined, true));\n\n          case 55:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getScreenshot.apply(this, arguments);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/lib/getScreenshot.ts"],"names":["BoundingInfo","Camera","Color4","DirectionalLight","Engine","HemisphericLight","Mesh","Scene","SceneLoader","SpotLight","TargetCamera","Tools","Vector3","defaults","ThumbnailType","EMOTE_ERROR","refreshBoundingInfo","parent","children","getChildren","filter","mesh","id","length","child","boundingInfo","getBoundingInfo","min","boundingBox","minimumWorld","add","position","max","maximumWorld","i","siblingMin","siblingMax","Minimize","Maximize","setBoundingInfo","hideMaterialList","getScreenshot","url","options","width","height","extension","thumbnailType","canvas","document","createElement","style","visibility","body","appendChild","engine","preserveDrawingBuffer","stencil","scene","autoClear","clearColor","AppendAsync","undefined","whenReadyAsync","animationGroups","Error","camera","mode","ORTHOGRAPHIC_CAMERA","orthoTop","orthoBottom","orthoLeft","orthoRight","FRONT","TOP","setTarget","Zero","attachControl","directional","intensity","top","bottom","spot","Math","PI","meshes","setParent","materialName","materials","material","name","toLowerCase","includes","alpha","removeMaterial","textures","texture","dispose","removeTexture","bounds","extendSize","size","scale","scaling","center","multiply","subtractInPlace","removeChild","CreateScreenshotUsingRenderTargetAsync"],"mappings":"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","sourcesContent":["import {\n  BoundingInfo,\n  Camera,\n  Color4,\n  DirectionalLight,\n  Engine,\n  HemisphericLight,\n  Mesh,\n  Scene,\n  SceneLoader,\n  SpotLight,\n  TargetCamera,\n  Tools,\n  Vector3\n} from '@babylonjs/core'\nimport '@babylonjs/loaders'\nimport { defaults, Options, ThumbnailType } from './getModelData'\n\nexport const EMOTE_ERROR = 'Model is EMOTE'\n\nfunction refreshBoundingInfo(parent: Mesh) {\n  const children = parent.getChildren().filter(mesh => mesh.id !== '__root__')\n\n  if (children.length > 0) {\n    const child = children[0] as Mesh\n    // child.showBoundingBox = true\n    let boundingInfo = child.getBoundingInfo()\n\n    let min = boundingInfo.boundingBox.minimumWorld.add(child.position)\n    let max = boundingInfo.boundingBox.maximumWorld.add(child.position)\n\n    for (let i = 1; i < children.length; i++) {\n      const child = children[i] as Mesh\n      // child.showBoundingBox = true\n      boundingInfo = child.getBoundingInfo()\n      const siblingMin = boundingInfo.boundingBox.minimumWorld.add(child.position)\n      const siblingMax = boundingInfo.boundingBox.maximumWorld.add(child.position)\n\n      min = Vector3.Minimize(min, siblingMin)\n      max = Vector3.Maximize(max, siblingMax)\n    }\n\n    parent.setBoundingInfo(new BoundingInfo(min, max))\n  }\n}\n\nconst hideMaterialList = ['hair_mat', 'avatarskin_mat']\n\nexport async function getScreenshot(url: string, options: Partial<Options> = {}) {\n  // add defaults to options\n  const { width, height, extension, thumbnailType } = {\n    ...defaults,\n    ...options\n  }\n\n  // setup renderer\n  const canvas = document.createElement('canvas')\n  canvas.width = width\n  canvas.height = height\n  canvas.style.visibility = 'hidden'\n  document.body.appendChild(canvas)\n  const engine = new Engine(canvas, true, {\n    preserveDrawingBuffer: true,\n    stencil: true\n  })\n\n  // Load GLTF\n  const scene = new Scene(engine)\n  scene.autoClear = true\n  scene.clearColor = new Color4(0, 0, 0, 0)\n\n  await SceneLoader.AppendAsync(url, '', scene, undefined, extension)\n  await scene.whenReadyAsync()\n\n  // check if it's emote\n  if (scene.animationGroups.length > 0) {\n    throw new Error(EMOTE_ERROR)\n  }\n\n  // Setup Camera\n  var camera = new TargetCamera('targetCamera', new Vector3(0, 0, 0), scene)\n  camera.mode = Camera.ORTHOGRAPHIC_CAMERA\n  camera.orthoTop = 1\n  camera.orthoBottom = -1\n  camera.orthoLeft = -1\n  camera.orthoRight = 1\n\n  switch (thumbnailType) {\n    case ThumbnailType.FRONT: {\n      camera.position = new Vector3(0, 0, 2)\n      break\n    }\n    case ThumbnailType.TOP: {\n      camera.position = new Vector3(0, 1, 0)\n      break\n    }\n    default:\n      camera.position = new Vector3(-2, 2, 2)\n  }\n\n  camera.setTarget(Vector3.Zero())\n  camera.attachControl(canvas, true)\n\n  // Setup lights\n  var directional = new DirectionalLight('directional', new Vector3(0, 0, 1), scene)\n  directional.intensity = 1\n  var top = new HemisphericLight('top', new Vector3(0, -1, 0), scene)\n  top.intensity = 1\n  var bottom = new HemisphericLight('bottom', new Vector3(0, 1, 0), scene)\n  bottom.intensity = 1\n  var spot = new SpotLight('spot', new Vector3(-2, 2, 2), new Vector3(2, -2, -2), Math.PI / 2, 1000, scene)\n  spot.intensity = 1\n\n  // Setup parent\n  var parent = new Mesh('parent', scene)\n  for (const mesh of scene.meshes) {\n    if (mesh !== parent) {\n      mesh.setParent(parent)\n    }\n  }\n\n  // Clean up\n  for (const materialName of hideMaterialList) {\n    for (let material of scene.materials) {\n      if (material.name.toLowerCase().includes(materialName)) {\n        material.alpha = 0\n        scene.removeMaterial(material)\n      }\n    }\n    for (let texture of scene.textures) {\n      if (texture.name.toLowerCase().includes(materialName)) {\n        texture.dispose()\n        scene.removeTexture(texture)\n      }\n    }\n  }\n\n  // resize and center\n  refreshBoundingInfo(parent)\n  const bounds = parent.getBoundingInfo().boundingBox.extendSize\n  const size = bounds.length()\n  const scale = new Vector3(1 / size, 1 / size, 1 / size)\n  parent.scaling = scale\n  const center = parent.getBoundingInfo().boundingBox.center.multiply(scale)\n  parent.position.subtractInPlace(center)\n\n  // remove dom element\n  document.body.removeChild(canvas)\n\n  // render\n  return Tools.CreateScreenshotUsingRenderTargetAsync(engine, camera, { width, height }, undefined, undefined, true)\n}\n"]},"metadata":{},"sourceType":"module"}