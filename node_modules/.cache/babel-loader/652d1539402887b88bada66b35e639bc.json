{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEnvFromQueryParam = exports.getEnvFromTLD = void 0;\n\nvar env_1 = require(\"./env\");\n/**\n * Returns the Env from the top level domain if possible\n * @param location\n * @returns Env or null\n */\n\n\nfunction getEnvFromTLD(location) {\n  var host = location.host;\n\n  if (host.endsWith('.org')) {\n    return env_1.Env.PRODUCTION;\n  } else if (host.endsWith('.today') || host.endsWith('.net')) {\n    return env_1.Env.STAGING;\n  } else if (host.endsWith('.io') || host.endsWith('.zone')) {\n    return env_1.Env.DEVELOPMENT;\n  }\n\n  return null;\n}\n\nexports.getEnvFromTLD = getEnvFromTLD;\n/**\n * Returns the Env from the query param if possible\n * @param location\n * @returns Env or null\n */\n\nfunction getEnvFromQueryParam(location) {\n  var search = new URLSearchParams(location.search);\n  var param = search.get('ENV') || search.get('env');\n\n  if (param) {\n    var env = param.toLowerCase();\n\n    if ((0, env_1.isEnv)(env)) {\n      return env;\n    }\n  }\n\n  return null;\n}\n\nexports.getEnvFromQueryParam = getEnvFromQueryParam;","map":null,"metadata":{},"sourceType":"script"}