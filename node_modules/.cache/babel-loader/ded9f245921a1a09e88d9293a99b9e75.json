{"ast":null,"code":"import { AuthorizationType } from 'decentraland-dapps/dist/modules/authorization/types';\nimport { ContractName, getContract } from 'decentraland-transactions';\nvar MANA_SYMBOL = '⏣';\nexport function addSymbol(num) {\n  return num > 0 ? \"\".concat(MANA_SYMBOL, \" \").concat(num.toString()) : '';\n}\nexport function buildManaAuthorization(address, chainId, contractName) {\n  var manaContractAddress = getContract(ContractName.MANAToken, chainId).address;\n  var toAuthorizeContractAddress = getContract(contractName, chainId).address;\n  return {\n    type: AuthorizationType.ALLOWANCE,\n    address: address,\n    contractName: ContractName.MANAToken,\n    contractAddress: manaContractAddress,\n    authorizedAddress: toAuthorizeContractAddress,\n    chainId: chainId\n  };\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/lib/mana.ts"],"names":["AuthorizationType","ContractName","getContract","MANA_SYMBOL","addSymbol","num","toString","buildManaAuthorization","address","chainId","contractName","manaContractAddress","MANAToken","toAuthorizeContractAddress","type","ALLOWANCE","contractAddress","authorizedAddress"],"mappings":"AACA,SAAwBA,iBAAxB,QAAiD,qDAAjD;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,2BAA1C;AAEA,IAAMC,WAAW,GAAG,GAApB;AAEA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAyC;AAC9C,SAAOA,GAAG,GAAG,CAAN,aAAaF,WAAb,cAA4BE,GAAG,CAACC,QAAJ,EAA5B,IAA+C,EAAtD;AACD;AAED,OAAO,SAASC,sBAAT,CAAgCC,OAAhC,EAAiDC,OAAjD,EAAmEC,YAAnE,EAA8G;AACnH,MAAMC,mBAAmB,GAAGT,WAAW,CAACD,YAAY,CAACW,SAAd,EAAyBH,OAAzB,CAAX,CAA6CD,OAAzE;AACA,MAAMK,0BAA0B,GAAGX,WAAW,CAACQ,YAAD,EAAeD,OAAf,CAAX,CAAmCD,OAAtE;AAEA,SAAO;AACLM,IAAAA,IAAI,EAAEd,iBAAiB,CAACe,SADnB;AAELP,IAAAA,OAAO,EAAEA,OAFJ;AAGLE,IAAAA,YAAY,EAAET,YAAY,CAACW,SAHtB;AAILI,IAAAA,eAAe,EAAEL,mBAJZ;AAKLM,IAAAA,iBAAiB,EAAEJ,0BALd;AAMLJ,IAAAA,OAAO,EAAPA;AANK,GAAP;AAQD","sourcesContent":["import { ChainId } from '@dcl/schemas'\nimport { Authorization, AuthorizationType } from 'decentraland-dapps/dist/modules/authorization/types'\nimport { ContractName, getContract } from 'decentraland-transactions'\n\nconst MANA_SYMBOL = '⏣'\n\nexport function addSymbol(num: string | number) {\n  return num > 0 ? `${MANA_SYMBOL} ${num.toString()}` : ''\n}\n\nexport function buildManaAuthorization(address: string, chainId: ChainId, contractName: ContractName): Authorization {\n  const manaContractAddress = getContract(ContractName.MANAToken, chainId).address\n  const toAuthorizeContractAddress = getContract(contractName, chainId).address\n\n  return {\n    type: AuthorizationType.ALLOWANCE,\n    address: address,\n    contractName: ContractName.MANAToken,\n    contractAddress: manaContractAddress,\n    authorizedAddress: toAuthorizeContractAddress,\n    chainId\n  }\n}\n"]},"metadata":{},"sourceType":"module"}