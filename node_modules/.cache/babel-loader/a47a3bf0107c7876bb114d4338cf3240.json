{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { CurationStatus } from 'modules/curations/types';\nexport var CurationExtraStatuses;\n\n(function (CurationExtraStatuses) {\n  CurationExtraStatuses[\"ALL_STATUS\"] = \"ALL_STATUS\";\n})(CurationExtraStatuses || (CurationExtraStatuses = {}));\n\nexport var CurationFilterOptions = _objectSpread({}, CurationStatus, CurationExtraStatuses);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/CurationPage/CurationPage.types.ts"],"names":["CurationStatus","CurationExtraStatuses","CurationFilterOptions"],"mappings":";AAKA,SAA8BA,cAA9B,QAAoD,yBAApD;AAIA,WAAYC,qBAAZ;;WAAYA,qB;AAAAA,EAAAA,qB;GAAAA,qB,KAAAA,qB;;AAIZ,OAAO,IAAMC,qBAAqB,qBAAQF,cAAR,EAA2BC,qBAA3B,CAA3B","sourcesContent":["import { Dispatch } from 'redux'\nimport { Wallet } from 'decentraland-dapps/dist/modules/wallet/types'\nimport { FetchCollectionsParams } from 'lib/api/builder'\nimport { FetchCollectionsRequestAction } from 'modules/collection/actions'\nimport { CollectionPaginationData } from 'modules/collection/reducer'\nimport { CurationSortOptions, CurationStatus } from 'modules/curations/types'\nimport { Collection } from 'modules/collection/types'\nimport { CollectionCuration } from 'modules/curations/collectionCuration/types'\n\nexport enum CurationExtraStatuses {\n  ALL_STATUS = 'ALL_STATUS'\n}\n\nexport const CurationFilterOptions = { ...CurationStatus, ...CurationExtraStatuses }\n\nexport type Filters = CurationStatus | CurationExtraStatuses\n\nexport type Props = {\n  wallet: Wallet\n  collections: Collection[]\n  paginationData: CollectionPaginationData | null\n  curationsByCollectionId: Record<string, CollectionCuration>\n  isCommitteeMember: boolean\n  committeeMembers: string[]\n  isConnecting: boolean\n  isLoadingCollectionsData: boolean\n  isLoadingCommittee: boolean\n  onNavigate: (path: string) => void\n  onFetchCollections: (params?: FetchCollectionsParams) => ReturnType<Dispatch<FetchCollectionsRequestAction>>\n}\n\nexport type State = {\n  page: number\n  sortBy: CurationSortOptions\n  filterBy: Filters\n  assignee: string\n  searchText: string\n}\n\nexport type MapStateProps = Pick<\n  Props,\n  | 'wallet'\n  | 'collections'\n  | 'paginationData'\n  | 'curationsByCollectionId'\n  | 'isCommitteeMember'\n  | 'committeeMembers'\n  | 'isConnecting'\n  | 'isLoadingCollectionsData'\n  | 'isLoadingCommittee'\n>\n\nexport type MapDispatchProps = Pick<Props, 'onFetchCollections'>\nexport type MapDispatch = Dispatch<FetchCollectionsRequestAction>\n"]},"metadata":{},"sourceType":"module"}