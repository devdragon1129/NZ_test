{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { PostProcess } from \"./postProcess\";\nimport { ToGammaSpace } from \"../Maths/math.constants\";\nimport \"../Shaders/extractHighlights.fragment\";\nimport { serialize } from '../Misc/decorators';\nimport { _TypeStore } from '../Misc/typeStore';\n/**\r\n * The extract highlights post process sets all pixels to black except pixels above the specified luminance threshold. Used as the first step for a bloom effect.\r\n */\n\nvar ExtractHighlightsPostProcess =\n/** @class */\nfunction (_super) {\n  __extends(ExtractHighlightsPostProcess, _super);\n\n  function ExtractHighlightsPostProcess(name, options, camera, samplingMode, engine, reusable, textureType, blockCompilation) {\n    if (textureType === void 0) {\n      textureType = 0;\n    }\n\n    if (blockCompilation === void 0) {\n      blockCompilation = false;\n    }\n\n    var _this = _super.call(this, name, \"extractHighlights\", [\"threshold\", \"exposure\"], null, options, camera, samplingMode, engine, reusable, null, textureType, undefined, null, blockCompilation) || this;\n    /**\r\n     * The luminance threshold, pixels below this value will be set to black.\r\n     */\n\n\n    _this.threshold = 0.9;\n    /** @hidden */\n\n    _this._exposure = 1;\n    /**\r\n     * Post process which has the input texture to be used when performing highlight extraction\r\n     * @hidden\r\n     */\n\n    _this._inputPostProcess = null;\n\n    _this.onApplyObservable.add(function (effect) {\n      if (_this._inputPostProcess) {\n        effect.setTextureFromPostProcess(\"textureSampler\", _this._inputPostProcess);\n      }\n\n      effect.setFloat('threshold', Math.pow(_this.threshold, ToGammaSpace));\n      effect.setFloat('exposure', _this._exposure);\n    });\n\n    return _this;\n  }\n  /**\r\n   * Gets a string identifying the name of the class\r\n   * @returns \"ExtractHighlightsPostProcess\" string\r\n   */\n\n\n  ExtractHighlightsPostProcess.prototype.getClassName = function () {\n    return \"ExtractHighlightsPostProcess\";\n  };\n\n  __decorate([serialize()], ExtractHighlightsPostProcess.prototype, \"threshold\", void 0);\n\n  return ExtractHighlightsPostProcess;\n}(PostProcess);\n\nexport { ExtractHighlightsPostProcess };\n_TypeStore.RegisteredTypes[\"BABYLON.ExtractHighlightsPostProcess\"] = ExtractHighlightsPostProcess;","map":null,"metadata":{},"sourceType":"module"}