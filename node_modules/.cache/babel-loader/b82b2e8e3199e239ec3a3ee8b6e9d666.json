{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../../Misc/typeStore';\n/**\r\n * Block used to make gl_FragCoord available\r\n */\n\nvar FragCoordBlock =\n/** @class */\nfunction (_super) {\n  __extends(FragCoordBlock, _super);\n  /**\r\n   * Creates a new FragCoordBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function FragCoordBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n\n    _this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  FragCoordBlock.prototype.getClassName = function () {\n    return \"FragCoordBlock\";\n  };\n\n  Object.defineProperty(FragCoordBlock.prototype, \"xy\", {\n    /**\r\n     * Gets the xy component\r\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"xyz\", {\n    /**\r\n     * Gets the xyz component\r\n     */\n    get: function get() {\n      return this._outputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"xyzw\", {\n    /**\r\n     * Gets the xyzw component\r\n     */\n    get: function get() {\n      return this._outputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"x\", {\n    /**\r\n     * Gets the x component\r\n     */\n    get: function get() {\n      return this._outputs[3];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"y\", {\n    /**\r\n     * Gets the y component\r\n     */\n    get: function get() {\n      return this._outputs[4];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"z\", {\n    /**\r\n     * Gets the z component\r\n     */\n    get: function get() {\n      return this._outputs[5];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"output\", {\n    /**\r\n     * Gets the w component\r\n     */\n    get: function get() {\n      return this._outputs[6];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FragCoordBlock.prototype.writeOutputs = function (state) {\n    var code = \"\";\n\n    for (var _i = 0, _a = this._outputs; _i < _a.length; _i++) {\n      var output = _a[_i];\n\n      if (output.hasEndpoints) {\n        code += this._declareOutput(output, state) + \" = gl_FragCoord.\" + output.name + \";\\r\\n\";\n      }\n    }\n\n    return code;\n  };\n\n  FragCoordBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    if (state.target === NodeMaterialBlockTargets.Vertex) {\n      throw \"FragCoordBlock must only be used in a fragment shader\";\n    }\n\n    state.compilationString += this.writeOutputs(state);\n    return this;\n  };\n\n  return FragCoordBlock;\n}(NodeMaterialBlock);\n\nexport { FragCoordBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.FragCoordBlock\"] = FragCoordBlock;","map":null,"metadata":{},"sourceType":"module"}