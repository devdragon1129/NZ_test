{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/HomePage/HomePage.tsx\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { Container, Button, Page, Dropdown, Pagination, Row, Header, Icon, Section } from 'decentraland-ui';\nimport BuilderIcon from 'components/Icon';\nimport ProjectCard from 'components/ProjectCard';\nimport Footer from 'components/Footer';\nimport Navbar from 'components/Navbar';\nimport LoadingPage from 'components/LoadingPage';\nimport SyncToast from 'components/SyncToast';\nimport { SortBy } from 'modules/ui/dashboard/types';\nimport Navigation from 'components/Navigation';\nimport { NavigationTab } from 'components/Navigation/Navigation.types';\nimport { locations } from 'routing/locations';\nimport './HomePage.css';\n\nvar HomePage = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(HomePage, _React$PureComponent);\n\n  function HomePage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HomePage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleOpenImportModal = function () {\n      _this.props.onOpenModal('ImportModal');\n    };\n\n    _this.handleOpenCreateModal = function () {\n      _this.props.onOpenModal('CustomLayoutModal');\n    };\n\n    _this.renderImportButton = function () {\n      return /*#__PURE__*/React.createElement(Button, {\n        basic: true,\n        className: \"import-scene\",\n        onClick: _this.handleOpenImportModal,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(BuilderIcon, {\n        name: \"import\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.renderCreateButton = function () {\n      return /*#__PURE__*/React.createElement(Button, {\n        basic: true,\n        className: \"create-scene\",\n        onClick: _this.handleOpenCreateModal,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(BuilderIcon, {\n        name: \"add-active\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.renderSortDropdown = function () {\n      var sortBy = _this.props.sortBy;\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        direction: \"left\",\n        value: sortBy,\n        options: [{\n          value: SortBy.NEWEST,\n          text: t('home_page.sort.newest')\n        }, {\n          value: SortBy.NAME,\n          text: t('home_page.sort.name')\n        }, {\n          value: SortBy.SIZE,\n          text: t('home_page.sort.size')\n        }],\n        onChange: _this.handleDropdownChange,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.renderProjects = function () {\n      var _this$props = _this.props,\n          isLoggedIn = _this$props.isLoggedIn,\n          didSync = _this$props.didSync,\n          projects = _this$props.projects;\n\n      if (projects.length > 0) {\n        return projects.map(function (project) {\n          return /*#__PURE__*/React.createElement(ProjectCard, {\n            key: project.id,\n            project: project,\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 38\n            }\n          });\n        });\n      } else if (!isLoggedIn && didSync) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"empty-projects\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(T, {\n          id: \"home_page.no_projects_guest\",\n          values: {\n            br: /*#__PURE__*/React.createElement(\"br\", {\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }\n            }),\n            sign_in: /*#__PURE__*/React.createElement(\"a\", {\n              href: \"#\",\n              onClick: _this.handleLogin,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }\n            }, t('user_menu.sign_in'))\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty-projects\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(T, {\n        id: \"home_page.no_projects\",\n        values: {\n          br: /*#__PURE__*/React.createElement(\"br\", {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }\n          }),\n          link: /*#__PURE__*/React.createElement(\"a\", {\n            href: \"#\",\n            onClick: function onClick(event) {\n              event.preventDefault();\n\n              _this.handleOpenCreateModal();\n            },\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }\n          }, t('global.click_here'))\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    _this.handleLogin = function () {\n      return _this.props.onNavigate(locations.signIn());\n    };\n\n    _this.handleOpenShowcase = function () {\n      return _this.props.onNavigate(locations.poolSearch());\n    };\n\n    _this.handleNavigateToLand = function () {\n      return _this.props.onNavigate(locations.land());\n    };\n\n    _this.handleDropdownChange = function (_event, _ref) {\n      var value = _ref.value;\n      return _this.paginate({\n        sortBy: value\n      });\n    };\n\n    _this.handlePageChange = function (_event, _ref2) {\n      var activePage = _ref2.activePage;\n      return _this.paginate({\n        page: activePage\n      });\n    };\n\n    _this.paginate = function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props2 = _this.props,\n          page = _this$props2.page,\n          sortBy = _this$props2.sortBy;\n\n      _this.props.onPageChange(_objectSpread({\n        page: page,\n        sortBy: sortBy\n      }, options));\n    };\n\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var onLoadFromScenePool = this.props.onLoadFromScenePool;\n      onLoadFromScenePool({\n        sortBy: 'updated_at',\n        sortOrder: 'desc'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          projects = _this$props3.projects,\n          isFetching = _this$props3.isFetching,\n          totalPages = _this$props3.totalPages,\n          page = _this$props3.page,\n          isLoggingIn = _this$props3.isLoggingIn,\n          poolList = _this$props3.poolList;\n\n      if (isLoggingIn || isFetching) {\n        return /*#__PURE__*/React.createElement(LoadingPage, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 14\n          }\n        });\n      }\n\n      var hasPagination = totalPages > 1;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n        isFullscreen: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Page, {\n        isFullscreen: true,\n        className: \"HomePage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navigation, {\n        activeTab: NavigationTab.SCENES,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(SyncToast, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"projects-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"items-count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }\n      }, t('home_page.results', {\n        count: projects.length\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      }, projects.length > 1 ? this.renderSortDropdown() : null, this.renderImportButton(), this.renderCreateButton())), /*#__PURE__*/React.createElement(Section, {\n        className: \"project-cards \".concat(hasPagination ? 'has-pagination' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"CardList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }, this.renderProjects()), hasPagination ? /*#__PURE__*/React.createElement(Pagination, {\n        firstItem: null,\n        lastItem: null,\n        activePage: page,\n        totalPages: totalPages,\n        onPageChange: this.handlePageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }) : null), poolList ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"scene-pool-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }, t('home_page.from_scene_pool'))), /*#__PURE__*/React.createElement(Row, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: locations.poolSearch(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        basic: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 23\n        }\n      }, t('global.view_more'), \"\\xA0\", /*#__PURE__*/React.createElement(Icon, {\n        name: \"chevron right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 54\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"scene-pool-projects\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, poolList.map(function (pool) {\n        return /*#__PURE__*/React.createElement(ProjectCard, {\n          key: pool.id,\n          project: pool,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }\n        });\n      }))) : null)), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return HomePage;\n}(React.PureComponent);\n\nHomePage.defaultProps = {\n  projects: []\n};\nexport { HomePage as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/HomePage/HomePage.tsx"],"names":["React","Link","t","T","Container","Button","Page","Dropdown","Pagination","Row","Header","Icon","Section","BuilderIcon","ProjectCard","Footer","Navbar","LoadingPage","SyncToast","SortBy","Navigation","NavigationTab","locations","HomePage","handleOpenImportModal","props","onOpenModal","handleOpenCreateModal","renderImportButton","renderCreateButton","renderSortDropdown","sortBy","value","NEWEST","text","NAME","SIZE","handleDropdownChange","renderProjects","isLoggedIn","didSync","projects","length","map","project","id","br","sign_in","handleLogin","link","event","preventDefault","onNavigate","signIn","handleOpenShowcase","poolSearch","handleNavigateToLand","land","_event","paginate","handlePageChange","activePage","page","options","onPageChange","onLoadFromScenePool","sortOrder","isFetching","totalPages","isLoggingIn","poolList","hasPagination","SCENES","count","pool","PureComponent","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { Container, Button, Page, Dropdown, DropdownProps, Pagination, PaginationProps, Row, Header, Icon, Section } from 'decentraland-ui'\n\nimport BuilderIcon from 'components/Icon'\nimport ProjectCard from 'components/ProjectCard'\nimport Footer from 'components/Footer'\nimport Navbar from 'components/Navbar'\nimport LoadingPage from 'components/LoadingPage'\nimport SyncToast from 'components/SyncToast'\nimport { SortBy } from 'modules/ui/dashboard/types'\nimport Navigation from 'components/Navigation'\nimport { NavigationTab } from 'components/Navigation/Navigation.types'\nimport { locations } from 'routing/locations'\nimport { PaginationOptions } from 'routing/utils'\nimport { Props, DefaultProps } from './HomePage.types'\nimport './HomePage.css'\n\nexport default class HomePage extends React.PureComponent<Props> {\n  static defaultProps: DefaultProps = {\n    projects: []\n  }\n\n  componentWillMount() {\n    const { onLoadFromScenePool } = this.props\n    onLoadFromScenePool({ sortBy: 'updated_at', sortOrder: 'desc' })\n  }\n\n  handleOpenImportModal = () => {\n    this.props.onOpenModal('ImportModal')\n  }\n\n  handleOpenCreateModal = () => {\n    this.props.onOpenModal('CustomLayoutModal')\n  }\n\n  renderImportButton = () => {\n    return (\n      <Button basic className=\"import-scene\" onClick={this.handleOpenImportModal}>\n        <BuilderIcon name=\"import\" />\n      </Button>\n    )\n  }\n\n  renderCreateButton = () => {\n    return (\n      <Button basic className=\"create-scene\" onClick={this.handleOpenCreateModal}>\n        <BuilderIcon name=\"add-active\" />\n      </Button>\n    )\n  }\n\n  renderSortDropdown = () => {\n    const { sortBy } = this.props\n    return (\n      <Dropdown\n        direction=\"left\"\n        value={sortBy}\n        options={[\n          { value: SortBy.NEWEST, text: t('home_page.sort.newest') },\n          { value: SortBy.NAME, text: t('home_page.sort.name') },\n          { value: SortBy.SIZE, text: t('home_page.sort.size') }\n        ]}\n        onChange={this.handleDropdownChange}\n      />\n    )\n  }\n\n  renderProjects = () => {\n    const { isLoggedIn, didSync, projects } = this.props\n\n    if (projects.length > 0) {\n      return projects.map(project => <ProjectCard key={project.id} project={project} />)\n    } else if (!isLoggedIn && didSync) {\n      return (\n        <div className=\"empty-projects\">\n          <div>\n            <T\n              id=\"home_page.no_projects_guest\"\n              values={{\n                br: <br />,\n                sign_in: (\n                  <a href=\"#\" onClick={this.handleLogin}>\n                    {t('user_menu.sign_in')}\n                  </a>\n                )\n              }}\n            />\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"empty-projects\">\n        <div>\n          <T\n            id=\"home_page.no_projects\"\n            values={{\n              br: <br />,\n              link: (\n                <a\n                  href=\"#\"\n                  onClick={event => {\n                    event.preventDefault()\n                    this.handleOpenCreateModal()\n                  }}\n                >\n                  {t('global.click_here')}\n                </a>\n              )\n            }}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  handleLogin = () => this.props.onNavigate(locations.signIn())\n\n  handleOpenShowcase = () => this.props.onNavigate(locations.poolSearch())\n\n  handleNavigateToLand = () => this.props.onNavigate(locations.land())\n\n  handleDropdownChange = (_event: React.SyntheticEvent<HTMLElement, Event>, { value }: DropdownProps) =>\n    this.paginate({ sortBy: value as SortBy })\n\n  handlePageChange = (_event: React.SyntheticEvent<HTMLElement, Event>, { activePage }: PaginationProps) =>\n    this.paginate({ page: activePage as number })\n\n  paginate = (options: PaginationOptions = {}) => {\n    const { page, sortBy } = this.props\n    this.props.onPageChange({\n      page,\n      sortBy,\n      ...options\n    })\n  }\n\n  render() {\n    const { projects, isFetching, totalPages, page, isLoggingIn, poolList } = this.props\n    if (isLoggingIn || isFetching) {\n      return <LoadingPage />\n    }\n\n    const hasPagination = totalPages > 1\n\n    return (\n      <>\n        <Navbar isFullscreen />\n        <Page isFullscreen className=\"HomePage\">\n          <Navigation activeTab={NavigationTab.SCENES}>\n            <SyncToast />\n          </Navigation>\n          <Container>\n            <div className=\"projects-menu\">\n              <div className=\"items-count\">{t('home_page.results', { count: projects.length })}</div>\n              <div className=\"actions\">\n                {projects.length > 1 ? this.renderSortDropdown() : null}\n                {this.renderImportButton()}\n                {this.renderCreateButton()}\n              </div>\n            </div>\n            <Section className={`project-cards ${hasPagination ? 'has-pagination' : ''}`}>\n              <div className=\"CardList\">{this.renderProjects()}</div>\n              {hasPagination ? (\n                <Pagination\n                  firstItem={null}\n                  lastItem={null}\n                  activePage={page}\n                  totalPages={totalPages}\n                  onPageChange={this.handlePageChange}\n                />\n              ) : null}\n            </Section>\n            {poolList ? (\n              <>\n                <Row>\n                  <Row className=\"scene-pool-menu\">\n                    <Header sub>{t('home_page.from_scene_pool')}</Header>\n                  </Row>\n                  <Row align=\"right\">\n                    <Link to={locations.poolSearch()}>\n                      <Button basic>\n                        {t('global.view_more')}&nbsp;<Icon name=\"chevron right\"></Icon>\n                      </Button>\n                    </Link>\n                  </Row>\n                </Row>\n                <div className=\"scene-pool-projects\">\n                  {poolList.map(pool => (\n                    <ProjectCard key={pool.id} project={pool} />\n                  ))}\n                </div>\n              </>\n            ) : null}\n          </Container>\n        </Page>\n        <Footer />\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}