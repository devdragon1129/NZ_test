{"ast":null,"code":"import { connect } from 'react-redux';\nimport { cancelSaveMultipleItems, saveMultipleItemsRequest, clearSaveMultipleItems } from 'modules/item/actions';\nimport { getSavedItemsFiles, getMultipleItemsSaveState, getProgress, getNotSavedItemsFiles, getCanceledItemsFiles } from 'modules/ui/createMultipleItems/selectors';\nimport { getError } from 'modules/item/selectors';\nimport { getCollection } from 'modules/collection/selectors';\nimport CreateAndEditMultipleItemsModal from './CreateAndEditMultipleItemsModal';\n\nvar mapState = function mapState(state, ownProps) {\n  var collection = ownProps.metadata.collectionId ? getCollection(state, ownProps.metadata.collectionId) : null;\n  return {\n    collection: collection,\n    error: getError(state),\n    savedItemsFiles: getSavedItemsFiles(state),\n    notSavedItemsFiles: getNotSavedItemsFiles(state),\n    cancelledItemsFiles: getCanceledItemsFiles(state),\n    saveMultipleItemsState: getMultipleItemsSaveState(state),\n    saveItemsProgress: getProgress(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSaveMultipleItems: function onSaveMultipleItems(builtItems) {\n      return dispatch(saveMultipleItemsRequest(builtItems));\n    },\n    onCancelSaveMultipleItems: function onCancelSaveMultipleItems() {\n      return dispatch(cancelSaveMultipleItems());\n    },\n    onModalUnmount: function onModalUnmount() {\n      return dispatch(clearSaveMultipleItems());\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CreateAndEditMultipleItemsModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CreateAndEditMultipleItemsModal/CreateAndEditMultipleItemsModal.container.ts"],"names":["connect","cancelSaveMultipleItems","saveMultipleItemsRequest","clearSaveMultipleItems","getSavedItemsFiles","getMultipleItemsSaveState","getProgress","getNotSavedItemsFiles","getCanceledItemsFiles","getError","getCollection","CreateAndEditMultipleItemsModal","mapState","state","ownProps","collection","metadata","collectionId","error","savedItemsFiles","notSavedItemsFiles","cancelledItemsFiles","saveMultipleItemsState","saveItemsProgress","mapDispatch","dispatch","onSaveMultipleItems","builtItems","onCancelSaveMultipleItems","onModalUnmount"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,uBAAT,EAAkCC,wBAAlC,EAA4DC,sBAA5D,QAA0F,sBAA1F;AACA,SACEC,kBADF,EAEEC,yBAFF,EAGEC,WAHF,EAIEC,qBAJF,EAKEC,qBALF,QAMO,0CANP;AAOA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,aAAT,QAA8B,8BAA9B;AAEA,OAAOC,+BAAP,MAA4C,mCAA5C;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB,EAAyD;AACxE,MAAMC,UAA6B,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,YAAlB,GAAiCP,aAAa,CAACG,KAAD,EAAQC,QAAQ,CAACE,QAAT,CAAkBC,YAA1B,CAA9C,GAAwF,IAA9H;AAEA,SAAO;AACLF,IAAAA,UAAU,EAAVA,UADK;AAELG,IAAAA,KAAK,EAAET,QAAQ,CAACI,KAAD,CAFV;AAGLM,IAAAA,eAAe,EAAEf,kBAAkB,CAACS,KAAD,CAH9B;AAILO,IAAAA,kBAAkB,EAAEb,qBAAqB,CAACM,KAAD,CAJpC;AAKLQ,IAAAA,mBAAmB,EAAEb,qBAAqB,CAACK,KAAD,CALrC;AAMLS,IAAAA,sBAAsB,EAAEjB,yBAAyB,CAACQ,KAAD,CAN5C;AAOLU,IAAAA,iBAAiB,EAAEjB,WAAW,CAACO,KAAD;AAPzB,GAAP;AASD,CAZD;;AAcA,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,mBAAmB,EAAE,6BAAAC,UAAU;AAAA,aAAIF,QAAQ,CAACvB,wBAAwB,CAACyB,UAAD,CAAzB,CAAZ;AAAA,KADiC;AAEhEC,IAAAA,yBAAyB,EAAE;AAAA,aAAMH,QAAQ,CAACxB,uBAAuB,EAAxB,CAAd;AAAA,KAFqC;AAGhE4B,IAAAA,cAAc,EAAE;AAAA,aAAMJ,QAAQ,CAACtB,sBAAsB,EAAvB,CAAd;AAAA;AAHgD,GAA9C;AAAA,CAApB;;AAMA,eAAeH,OAAO,CAACY,QAAD,EAAWY,WAAX,CAAP,CAA+Bb,+BAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { RootState } from 'modules/common/types'\nimport { cancelSaveMultipleItems, saveMultipleItemsRequest, clearSaveMultipleItems } from 'modules/item/actions'\nimport {\n  getSavedItemsFiles,\n  getMultipleItemsSaveState,\n  getProgress,\n  getNotSavedItemsFiles,\n  getCanceledItemsFiles\n} from 'modules/ui/createMultipleItems/selectors'\nimport { getError } from 'modules/item/selectors'\nimport { Collection } from 'modules/collection/types'\nimport { getCollection } from 'modules/collection/selectors'\nimport { MapStateProps, MapDispatchProps, MapDispatch, OwnProps } from './CreateAndEditMultipleItemsModal.types'\nimport CreateAndEditMultipleItemsModal from './CreateAndEditMultipleItemsModal'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapStateProps => {\n  const collection: Collection | null = ownProps.metadata.collectionId ? getCollection(state, ownProps.metadata.collectionId) : null\n\n  return {\n    collection,\n    error: getError(state),\n    savedItemsFiles: getSavedItemsFiles(state),\n    notSavedItemsFiles: getNotSavedItemsFiles(state),\n    cancelledItemsFiles: getCanceledItemsFiles(state),\n    saveMultipleItemsState: getMultipleItemsSaveState(state),\n    saveItemsProgress: getProgress(state)\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSaveMultipleItems: builtItems => dispatch(saveMultipleItemsRequest(builtItems)),\n  onCancelSaveMultipleItems: () => dispatch(cancelSaveMultipleItems()),\n  onModalUnmount: () => dispatch(clearSaveMultipleItems())\n})\n\nexport default connect(mapState, mapDispatch)(CreateAndEditMultipleItemsModal)\n"]},"metadata":{},"sourceType":"module"}