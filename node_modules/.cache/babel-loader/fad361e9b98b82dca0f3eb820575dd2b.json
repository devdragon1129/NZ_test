{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/ViewPort/ViewPort.tsx\";\nimport * as React from 'react';\nimport { IntercomWidget } from 'decentraland-dapps/dist/components/Intercom/IntercomWidget';\nimport Icon from 'components/Icon';\nimport Preview from 'components/Preview';\nimport './ViewPort.css';\nimport { PreviewType } from 'modules/editor/types';\nvar widget = IntercomWidget.getInstance();\n\nvar ViewPort = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ViewPort, _React$PureComponent);\n\n  function ViewPort() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ViewPort);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewPort)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClose = function () {\n      var onClosePreview = _this.props.onClosePreview;\n      widget.render();\n      onClosePreview();\n    };\n\n    return _this;\n  }\n\n  _createClass(ViewPort, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isPreviewing = _this$props.isPreviewing,\n          isReadOnly = _this$props.isReadOnly,\n          type = _this$props.type;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Preview, {\n        isReadOnly: isReadOnly,\n        type: type || PreviewType.PROJECT,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }), isPreviewing ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"close-preview\",\n        onClick: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      })) : null);\n    }\n  }]);\n\n  return ViewPort;\n}(React.PureComponent);\n\nexport { ViewPort as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ViewPort/ViewPort.tsx"],"names":["React","IntercomWidget","Icon","Preview","PreviewType","widget","getInstance","ViewPort","handleClose","onClosePreview","props","render","isPreviewing","isReadOnly","type","PROJECT","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,4DAA/B;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,gBAAP;AAEA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,IAAMC,MAAM,GAAGJ,cAAc,CAACK,WAAf,EAAf;;IAEqBC,Q;;;;;;;;;;;;;;;;UACnBC,W,GAAc,YAAM;AAAA,UACVC,cADU,GACS,MAAKC,KADd,CACVD,cADU;AAElBJ,MAAAA,MAAM,CAACM,MAAP;AACAF,MAAAA,cAAc;AACf,K;;;;;;;6BAEQ;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACCE,YADD,eACCA,YADD;AAAA,UACeC,UADf,eACeA,UADf;AAAA,UAC2BC,IAD3B,eAC2BA,IAD3B;AAEP,0BACE,uDACE,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAED,UAArB;AAAiC,QAAA,IAAI,EAAEC,IAAI,IAAIV,WAAW,CAACW,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGH,YAAY,gBACX;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,OAAO,EAAE,KAAKJ,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADW,GAIT,IANN,CADF;AAUD;;;;EAnBmCR,KAAK,CAACgB,a;;SAAvBT,Q","sourcesContent":["import * as React from 'react'\nimport { IntercomWidget } from 'decentraland-dapps/dist/components/Intercom/IntercomWidget'\n\nimport Icon from 'components/Icon'\nimport Preview from 'components/Preview'\nimport './ViewPort.css'\nimport { Props } from './ViewPort.types'\nimport { PreviewType } from 'modules/editor/types'\n\nconst widget = IntercomWidget.getInstance()\n\nexport default class ViewPort extends React.PureComponent<Props> {\n  handleClose = () => {\n    const { onClosePreview } = this.props\n    widget.render()\n    onClosePreview()\n  }\n\n  render() {\n    const { isPreviewing, isReadOnly, type } = this.props\n    return (\n      <>\n        <Preview isReadOnly={isReadOnly} type={type || PreviewType.PROJECT} />\n        {isPreviewing ? (\n          <div className=\"close-preview\" onClick={this.handleClose}>\n            <Icon name=\"close\" />\n          </div>\n        ) : null}\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}