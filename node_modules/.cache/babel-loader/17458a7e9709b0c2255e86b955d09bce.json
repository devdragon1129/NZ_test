{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { STORAGE_LOAD } from 'decentraland-dapps/dist/modules/storage/actions';\nimport { SAVE_PROJECT_REQUEST, SAVE_PROJECT_SUCCESS, SAVE_PROJECT_FAILURE } from 'modules/sync/actions';\nimport { domainReducer, INITIAL_STATE as DOMAIN_INITIAL_STATE } from './domain/reducer';\nimport { success, init, request, failure, create, remove } from './domain/actions';\nimport { CREATE_PROJECT, DELETE_PROJECT } from 'modules/project/actions';\nvar INITIAL_STATE = {\n  project: DOMAIN_INITIAL_STATE\n};\nexport var syncReducer = function syncReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case STORAGE_LOAD:\n      {\n        var payload = action.payload;\n        var projectIds = payload.project && payload.project.data ? Object.keys(payload.project.data) : [];\n        return _objectSpread({}, state, {\n          project: domainReducer(state.project, init(projectIds))\n        });\n      }\n\n    case SAVE_PROJECT_REQUEST:\n      {\n        var project = action.payload.project;\n        return _objectSpread({}, state, {\n          project: domainReducer(state.project, request(project.id))\n        });\n      }\n\n    case SAVE_PROJECT_SUCCESS:\n      {\n        var _project = action.payload.project;\n        return _objectSpread({}, state, {\n          project: domainReducer(state.project, success(_project.id))\n        });\n      }\n\n    case SAVE_PROJECT_FAILURE:\n      {\n        var _action$payload = action.payload,\n            _project2 = _action$payload.project,\n            error = _action$payload.error;\n        return _objectSpread({}, state, {\n          project: domainReducer(state.project, failure(_project2.id, error))\n        });\n      }\n\n    case CREATE_PROJECT:\n      {\n        var _project3 = action.payload.project;\n        return _objectSpread({}, state, {\n          project: domainReducer(state.project, create(_project3.id))\n        });\n      }\n\n    case DELETE_PROJECT:\n      {\n        var _project4 = action.payload.project;\n        return _objectSpread({}, state, {\n          project: domainReducer(state.project, remove(_project4.id))\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/sync/reducer.ts"],"names":["STORAGE_LOAD","SAVE_PROJECT_REQUEST","SAVE_PROJECT_SUCCESS","SAVE_PROJECT_FAILURE","domainReducer","INITIAL_STATE","DOMAIN_INITIAL_STATE","success","init","request","failure","create","remove","CREATE_PROJECT","DELETE_PROJECT","project","syncReducer","state","action","type","payload","projectIds","data","Object","keys","id","error"],"mappings":";AAAA,SAASA,YAAT,QAA6B,iDAA7B;AAEA,SACEC,oBADF,EAIEC,oBAJF,EAMEC,oBANF,QAOO,sBAPP;AASA,SAASC,aAAT,EAAwBC,aAAa,IAAIC,oBAAzC,QAAqE,kBAArE;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,OAAxB,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,MAAlD,QAAgE,kBAAhE;AAEA,SAASC,cAAT,EAA8CC,cAA9C,QAAyF,yBAAzF;AAEA,IAAMT,aAAwB,GAAG;AAC/BU,EAAAA,OAAO,EAAET;AADsB,CAAjC;AAYA,OAAO,IAAMU,WAAW,GAAG,SAAdA,WAAc,GAAiE;AAAA,MAAhEC,KAAgE,uEAAxDZ,aAAwD;AAAA,MAAzCa,MAAyC;;AAC1F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,YAAL;AAAmB;AAAA,YACToB,OADS,GACGF,MADH,CACTE,OADS;AAEjB,YAAMC,UAAU,GAAGD,OAAO,CAACL,OAAR,IAAmBK,OAAO,CAACL,OAAR,CAAgBO,IAAnC,GAA0CC,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACL,OAAR,CAAgBO,IAA5B,CAA1C,GAA8E,EAAjG;AACA,iCACKL,KADL;AAEEF,UAAAA,OAAO,EAAEX,aAAa,CAACa,KAAK,CAACF,OAAP,EAAgBP,IAAI,CAACa,UAAD,CAApB;AAFxB;AAID;;AACD,SAAKpB,oBAAL;AAA2B;AAAA,YACjBc,OADiB,GACLG,MAAM,CAACE,OADF,CACjBL,OADiB;AAEzB,iCACKE,KADL;AAEEF,UAAAA,OAAO,EAAEX,aAAa,CAACa,KAAK,CAACF,OAAP,EAAgBN,OAAO,CAACM,OAAO,CAACU,EAAT,CAAvB;AAFxB;AAID;;AACD,SAAKvB,oBAAL;AAA2B;AAAA,YACjBa,QADiB,GACLG,MAAM,CAACE,OADF,CACjBL,OADiB;AAEzB,iCACKE,KADL;AAEEF,UAAAA,OAAO,EAAEX,aAAa,CAACa,KAAK,CAACF,OAAP,EAAgBR,OAAO,CAACQ,QAAO,CAACU,EAAT,CAAvB;AAFxB;AAID;;AACD,SAAKtB,oBAAL;AAA2B;AAAA,8BACEe,MAAM,CAACE,OADT;AAAA,YACjBL,SADiB,mBACjBA,OADiB;AAAA,YACRW,KADQ,mBACRA,KADQ;AAEzB,iCACKT,KADL;AAEEF,UAAAA,OAAO,EAAEX,aAAa,CAACa,KAAK,CAACF,OAAP,EAAgBL,OAAO,CAACK,SAAO,CAACU,EAAT,EAAaC,KAAb,CAAvB;AAFxB;AAID;;AACD,SAAKb,cAAL;AAAqB;AAAA,YACXE,SADW,GACCG,MAAM,CAACE,OADR,CACXL,OADW;AAEnB,iCACKE,KADL;AAEEF,UAAAA,OAAO,EAAEX,aAAa,CAACa,KAAK,CAACF,OAAP,EAAgBJ,MAAM,CAACI,SAAO,CAACU,EAAT,CAAtB;AAFxB;AAID;;AACD,SAAKX,cAAL;AAAqB;AAAA,YACXC,SADW,GACCG,MAAM,CAACE,OADR,CACXL,OADW;AAEnB,iCACKE,KADL;AAEEF,UAAAA,OAAO,EAAEX,aAAa,CAACa,KAAK,CAACF,OAAP,EAAgBH,MAAM,CAACG,SAAO,CAACU,EAAT,CAAtB;AAFxB;AAID;;AACD;AACE,aAAOR,KAAP;AA7CJ;AA+CD,CAhDM","sourcesContent":["import { STORAGE_LOAD } from 'decentraland-dapps/dist/modules/storage/actions'\n\nimport {\n  SAVE_PROJECT_REQUEST,\n  SaveProjectRequestAction,\n  SaveProjectSuccessAction,\n  SAVE_PROJECT_SUCCESS,\n  SaveProjectFailureAction,\n  SAVE_PROJECT_FAILURE\n} from 'modules/sync/actions'\nimport { StorageLoadAction } from 'modules/common/types'\nimport { domainReducer, INITIAL_STATE as DOMAIN_INITIAL_STATE } from './domain/reducer'\nimport { success, init, request, failure, create, remove } from './domain/actions'\nimport { SyncState } from './types'\nimport { CREATE_PROJECT, CreateProjectAction, DELETE_PROJECT, DeleteProjectAction } from 'modules/project/actions'\n\nconst INITIAL_STATE: SyncState = {\n  project: DOMAIN_INITIAL_STATE\n}\n\nexport type SyncReducerAction =\n  | SaveProjectRequestAction\n  | SaveProjectSuccessAction\n  | SaveProjectFailureAction\n  | CreateProjectAction\n  | DeleteProjectAction\n  | StorageLoadAction\n\nexport const syncReducer = (state = INITIAL_STATE, action: SyncReducerAction): SyncState => {\n  switch (action.type) {\n    case STORAGE_LOAD: {\n      const { payload } = action\n      const projectIds = payload.project && payload.project.data ? Object.keys(payload.project.data) : []\n      return {\n        ...state,\n        project: domainReducer(state.project, init(projectIds))\n      }\n    }\n    case SAVE_PROJECT_REQUEST: {\n      const { project } = action.payload\n      return {\n        ...state,\n        project: domainReducer(state.project, request(project.id))\n      }\n    }\n    case SAVE_PROJECT_SUCCESS: {\n      const { project } = action.payload\n      return {\n        ...state,\n        project: domainReducer(state.project, success(project.id))\n      }\n    }\n    case SAVE_PROJECT_FAILURE: {\n      const { project, error } = action.payload\n      return {\n        ...state,\n        project: domainReducer(state.project, failure(project.id, error))\n      }\n    }\n    case CREATE_PROJECT: {\n      const { project } = action.payload\n      return {\n        ...state,\n        project: domainReducer(state.project, create(project.id))\n      }\n    }\n    case DELETE_PROJECT: {\n      const { project } = action.payload\n      return {\n        ...state,\n        project: domainReducer(state.project, remove(project.id))\n      }\n    }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}