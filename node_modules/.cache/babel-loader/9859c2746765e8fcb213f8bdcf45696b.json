{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _map2 = _interopRequireDefault(require(\"lodash/map\"));\n\nvar _invoke2 = _interopRequireDefault(require(\"lodash/invoke\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n\nvar _Button = _interopRequireDefault(require(\"../../elements/Button\"));\n/**\n * A modal can contain a row of actions.\n */\n\n\nvar ModalActions = /*#__PURE__*/function (_Component) {\n  (0, _inheritsLoose2.default)(ModalActions, _Component);\n\n  function ModalActions() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleButtonOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          (0, _invoke2.default)(predefinedProps, 'onClick', e, buttonProps);\n          (0, _invoke2.default)(_this.props, 'onActionClick', e, buttonProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = ModalActions.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        actions = _this$props.actions,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content;\n    var classes = (0, _clsx.default)('actions', className);\n    var rest = (0, _lib.getUnhandledProps)(ModalActions, this.props);\n    var ElementType = (0, _lib.getElementType)(ModalActions, this.props);\n\n    if (!_lib.childrenUtils.isNil(children)) {\n      return /*#__PURE__*/_react.default.createElement(ElementType, (0, _extends2.default)({}, rest, {\n        className: classes\n      }), children);\n    }\n\n    if (!_lib.childrenUtils.isNil(content)) {\n      return /*#__PURE__*/_react.default.createElement(ElementType, (0, _extends2.default)({}, rest, {\n        className: classes\n      }), content);\n    }\n\n    return /*#__PURE__*/_react.default.createElement(ElementType, (0, _extends2.default)({}, rest, {\n      className: classes\n    }), (0, _map2.default)(actions, function (action) {\n      return _Button.default.create(action, {\n        overrideProps: _this2.handleButtonOverrides\n      });\n    }));\n  };\n\n  return ModalActions;\n}(_react.Component);\n\nexports.default = ModalActions;\nModalActions.handledProps = [\"actions\", \"as\", \"children\", \"className\", \"content\", \"onActionClick\"];\nModalActions.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _propTypes.default.elementType,\n\n  /** Array of shorthand buttons. */\n  actions: _lib.customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: _propTypes.default.node,\n\n  /** Additional classes. */\n  className: _propTypes.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props from the clicked action.\n   */\n  onActionClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes.default.func])\n} : {};\nModalActions.create = (0, _lib.createShorthandFactory)(ModalActions, function (actions) {\n  return {\n    actions: actions\n  };\n});","map":null,"metadata":{},"sourceType":"script"}