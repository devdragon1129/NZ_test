{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../../Misc/typeStore';\n/**\r\n * Block used to get the derivative value on x and y of a given input\r\n */\n\nvar DerivativeBlock =\n/** @class */\nfunction (_super) {\n  __extends(DerivativeBlock, _super);\n  /**\r\n   * Create a new DerivativeBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function DerivativeBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n\n    _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect, false);\n\n    _this.registerOutput(\"dx\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this.registerOutput(\"dy\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n    _this._outputs[1]._typeConnectionSource = _this._inputs[0];\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  DerivativeBlock.prototype.getClassName = function () {\n    return \"DerivativeBlock\";\n  };\n\n  Object.defineProperty(DerivativeBlock.prototype, \"input\", {\n    /**\r\n     * Gets the input component\r\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DerivativeBlock.prototype, \"dx\", {\n    /**\r\n     * Gets the derivative output on x\r\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DerivativeBlock.prototype, \"dy\", {\n    /**\r\n     * Gets the derivative output on y\r\n     */\n    get: function get() {\n      return this._outputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DerivativeBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var dx = this._outputs[0];\n    var dy = this._outputs[1];\n\n    state._emitExtension(\"derivatives\", \"#extension GL_OES_standard_derivatives : enable\");\n\n    if (dx.hasEndpoints) {\n      state.compilationString += this._declareOutput(dx, state) + (\" = dFdx(\" + this.input.associatedVariableName + \");\\r\\n\");\n    }\n\n    if (dy.hasEndpoints) {\n      state.compilationString += this._declareOutput(dy, state) + (\" = dFdy(\" + this.input.associatedVariableName + \");\\r\\n\");\n    }\n\n    return this;\n  };\n\n  return DerivativeBlock;\n}(NodeMaterialBlock);\n\nexport { DerivativeBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.DerivativeBlock\"] = DerivativeBlock;","map":null,"metadata":{},"sourceType":"module"}