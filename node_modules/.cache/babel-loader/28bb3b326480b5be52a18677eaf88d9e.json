{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { connect } from 'react-redux';\nimport { pushCollectionCurationRequest, PUSH_COLLECTION_CURATION_REQUEST } from 'modules/curations/collectionCuration/actions';\nimport PushCollectionChangesModal from './PushCollectionChangesModal';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { getLoading } from 'modules/curations/collectionCuration/selectors';\n\nvar mapState = function mapState(store) {\n  return {\n    isLoading: isLoadingType(getLoading(store), PUSH_COLLECTION_CURATION_REQUEST)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onProceed: function onProceed(collectionId) {\n      return dispatch(pushCollectionCurationRequest(collectionId));\n    }\n  };\n};\n\nvar merge = function merge(stateProps, dispatchProps, ownProps) {\n  return _objectSpread({}, stateProps, dispatchProps, ownProps, {\n    onProceed: function onProceed() {\n      return dispatchProps.onProceed(ownProps.metadata.collectionId);\n    }\n  });\n};\n\nexport default connect(mapState, mapDispatch, merge)(PushCollectionChangesModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/PushCollectionChangesModal/PushCollectionChangesModal.container.ts"],"names":["connect","pushCollectionCurationRequest","PUSH_COLLECTION_CURATION_REQUEST","PushCollectionChangesModal","isLoadingType","getLoading","mapState","store","isLoading","mapDispatch","dispatch","onProceed","collectionId","merge","stateProps","dispatchProps","ownProps","metadata"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,6BAAT,EAAwCC,gCAAxC,QAAgF,8CAAhF;AAEA,OAAOC,0BAAP,MAAuC,8BAAvC;AAEA,SAASC,aAAT,QAA8B,mDAA9B;AACA,SAASC,UAAT,QAA2B,gDAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,SAAS,EAAEJ,aAAa,CAACC,UAAU,CAACE,KAAD,CAAX,EAAoBL,gCAApB;AAD6B,GAAtC;AAAA,CAAjB;;AAIA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,SAAS,EAAE,mBAACC,YAAD;AAAA,aAA0BF,QAAQ,CAACT,6BAA6B,CAACW,YAAD,CAA9B,CAAlC;AAAA;AADqD,GAA9C;AAAA,CAApB;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,UAAD,EAAkBC,aAAlB,EAAmDC,QAAnD;AAAA,2BACTF,UADS,EAETC,aAFS,EAGTC,QAHS;AAIZL,IAAAA,SAAS,EAAE;AAAA,aAAMI,aAAa,CAACJ,SAAd,CAAwBK,QAAQ,CAACC,QAAT,CAAkBL,YAA1C,CAAN;AAAA;AAJC;AAAA,CAAd;;AAOA,eAAeZ,OAAO,CAACM,QAAD,EAAWG,WAAX,EAAwBI,KAAxB,CAAP,CAAsCV,0BAAtC,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { pushCollectionCurationRequest, PUSH_COLLECTION_CURATION_REQUEST } from 'modules/curations/collectionCuration/actions'\nimport { OwnProps, MapDispatchProps, MapDispatch, MapStateProps } from './PushCollectionChangesModal.types'\nimport PushCollectionChangesModal from './PushCollectionChangesModal'\nimport { RootState } from 'modules/common/types'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { getLoading } from 'modules/curations/collectionCuration/selectors'\n\nconst mapState = (store: RootState): MapStateProps => ({\n  isLoading: isLoadingType(getLoading(store), PUSH_COLLECTION_CURATION_REQUEST)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onProceed: (collectionId: string) => dispatch(pushCollectionCurationRequest(collectionId))\n})\n\nconst merge = (stateProps: any, dispatchProps: MapDispatchProps, ownProps: OwnProps) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  onProceed: () => dispatchProps.onProceed(ownProps.metadata.collectionId)\n})\n\nexport default connect(mapState, mapDispatch, merge)(PushCollectionChangesModal)\n"]},"metadata":{},"sourceType":"module"}