{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Drawer/Drawer.tsx\";\nimport * as React from 'react';\nimport { Icon } from 'decentraland-ui';\nimport './Drawer.css';\n\nvar Drawer = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Drawer, _React$PureComponent);\n\n  function Drawer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Drawer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Drawer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpen: true\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Drawer, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (!nextProps.hasLabel) {\n        this.setState({\n          isOpen: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          children = _this$props.children,\n          hasLabel = _this$props.hasLabel,\n          className = _this$props.className;\n      var isOpen = this.state.isOpen;\n      var classes = 'Drawer';\n\n      if (className) {\n        classes += ' ' + className;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, hasLabel ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"heading\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, label), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: isOpen ? 'angle up' : 'angle down',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }))) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, isOpen ? children : null));\n    }\n  }]);\n\n  return Drawer;\n}(React.PureComponent);\n\nexport { Drawer as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Drawer/Drawer.tsx"],"names":["React","Icon","Drawer","state","isOpen","handleClick","setState","nextProps","hasLabel","props","label","children","className","classes","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAGA,OAAO,cAAP;;IAEqBC,M;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;;UAURC,W,GAAc,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZF,QAAAA,MAAM,EAAE,CAAC,MAAKD,KAAL,CAAWC;AADR,OAAd;AAGD,K;;;;;;;8CAVyBG,S,EAAkB;AAC1C,UAAI,CAACA,SAAS,CAACC,QAAf,EAAyB;AACvB,aAAKF,QAAL,CAAc;AAAEF,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF;;;6BAQQ;AAAA,wBAC0C,KAAKK,KAD/C;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBH,QADlB,eACkBA,QADlB;AAAA,UAC4BI,SAD5B,eAC4BA,SAD5B;AAAA,UAECR,MAFD,GAEY,KAAKD,KAFjB,CAECC,MAFD;AAIP,UAAIS,OAAO,GAAG,QAAd;;AACA,UAAID,SAAJ,EAAe;AACbC,QAAAA,OAAO,IAAI,MAAMD,SAAjB;AACD;;AACD,0BACE;AAAK,QAAA,SAAS,EAAEC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,QAAQ,gBACP;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,OAAO,EAAE,KAAKH,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBK,KAAzB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEN,MAAM,GAAG,UAAH,GAAgB,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADO,GAOL,IARN,eASE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBA,MAAM,GAAGO,QAAH,GAAc,IAA3C,CATF,CADF;AAaD;;;;EAtCiCX,KAAK,CAACc,a;;SAArBZ,M","sourcesContent":["import * as React from 'react'\nimport { Icon } from 'decentraland-ui'\nimport { Props, State } from './Drawer.types'\n\nimport './Drawer.css'\n\nexport default class Drawer extends React.PureComponent<Props, State> {\n  state = {\n    isOpen: true\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (!nextProps.hasLabel) {\n      this.setState({ isOpen: true })\n    }\n  }\n\n  handleClick = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n\n  render() {\n    const { label, children, hasLabel, className } = this.props\n    const { isOpen } = this.state\n\n    let classes = 'Drawer'\n    if (className) {\n      classes += ' ' + className\n    }\n    return (\n      <div className={classes}>\n        {hasLabel ? (\n          <div className=\"heading\" onClick={this.handleClick}>\n            <span className=\"label\">{label}</span>\n            <div>\n              <Icon name={isOpen ? 'angle up' : 'angle down'} />\n            </div>\n          </div>\n        ) : null}\n        <div className=\"body\">{isOpen ? children : null}</div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}