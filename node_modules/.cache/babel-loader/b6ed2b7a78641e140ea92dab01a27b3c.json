{"ast":null,"code":"import _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/ThirdPartyCollectionDetailPage/ThirdPartyCollectionDetailPage.tsx\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { Grid, Section, Row, Narrow, Column, Header, Icon, Button, TextFilter, Pagination, Checkbox, Loader } from 'decentraland-ui';\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { ContractName } from 'decentraland-transactions';\nimport { getArrayOfPagesFromTotal } from 'lib/api/pagination';\nimport { locations } from 'routing/locations';\nimport { isUserManagerOfThirdParty } from 'modules/thirdParty/utils';\nimport LoggedInDetailPage from 'components/LoggedInDetailPage';\nimport CollectionProvider from 'components/CollectionProvider';\nimport Notice from 'components/Notice';\nimport NotFound from 'components/NotFound';\nimport BuilderIcon from 'components/Icon';\nimport Back from 'components/Back';\nimport { buildManaAuthorization } from 'lib/mana';\nimport CollectionContextMenu from './CollectionContextMenu';\nimport CollectionPublishButton from './CollectionPublishButton';\nimport CollectionItem from './CollectionItem';\nimport { PAGE_SIZE } from './ThirdPartyCollectionDetailPage.types';\nimport './ThirdPartyCollectionDetailPage.css';\nvar STORAGE_KEY = 'dcl-third-party-collection-notice';\n\nvar ThirdPartyCollectionDetailPage = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ThirdPartyCollectionDetailPage, _React$PureComponent);\n\n  function ThirdPartyCollectionDetailPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ThirdPartyCollectionDetailPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ThirdPartyCollectionDetailPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedItems: {},\n      searchText: '',\n      page: _this.props.currentPage,\n      showSelectAllPages: false,\n      shouldFetchAllPages: false\n    };\n\n    _this.getManaAuthorization = function () {\n      var wallet = _this.props.wallet;\n      return buildManaAuthorization(wallet.address, wallet.networks.MATIC.chainId, ContractName.ThirdPartyRegistry);\n    };\n\n    _this.handleNewItems = function () {\n      var _this$props = _this.props,\n          collection = _this$props.collection,\n          onOpenModal = _this$props.onOpenModal;\n      onOpenModal('CreateItemsModal', {\n        collectionId: collection.id\n      });\n    };\n\n    _this.handleEditName = function () {\n      var _this$props2 = _this.props,\n          collection = _this$props2.collection,\n          onOpenModal = _this$props2.onOpenModal;\n\n      if (collection) {\n        onOpenModal('EditCollectionNameModal', {\n          collection: collection\n        });\n      }\n    };\n\n    _this.handleGoBack = function () {\n      _this.props.onNavigate(locations.collections());\n    };\n\n    _this.handlePageChange = function (_event, data) {\n      var _this$props3 = _this.props,\n          collection = _this$props3.collection,\n          onPageChange = _this$props3.onPageChange;\n\n      _this.setState({\n        page: +data.activePage\n      });\n\n      onPageChange(collection.id, +data.activePage); // pushes the query param to the url\n    };\n\n    _this.handleSearchChange = function (searchText) {\n      if (searchText) {\n        _this.setState({\n          page: 1,\n          searchText: searchText\n        });\n      }\n    };\n\n    _this.handleSelectItemChange = function (item, isSelected) {\n      var selectedItems = _this.state.selectedItems;\n\n      _this.setState({\n        selectedItems: _objectSpread({}, selectedItems, _defineProperty({}, item.id, isSelected)),\n        shouldFetchAllPages: false,\n        showSelectAllPages: false\n      });\n    };\n\n    _this.handleSelectPageChange = function (items, data) {\n      var _this$state = _this.state,\n          selectedItems = _this$state.selectedItems,\n          shouldFetchAllPages = _this$state.shouldFetchAllPages;\n\n      var newItemSelectionState = _objectSpread({}, selectedItems); // Performs the opposite action, if everything is selected, it'll deselect and viceversa\n\n\n      var isSelected = !_this.areAllSelected(items);\n\n      var _iterator = _createForOfIteratorHelper(items),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          newItemSelectionState[item.id] = isSelected;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      _this.setState({\n        selectedItems: newItemSelectionState,\n        showSelectAllPages: true,\n        shouldFetchAllPages: shouldFetchAllPages && !!data.checked // if the checkbox is unchecked, turn off shouldFetchAllPages flag\n\n      });\n    };\n\n    _this.handleClearSelection = function () {\n      _this.setState({\n        selectedItems: {}\n      });\n    };\n\n    _this.handleSelectAllItems = function (onFetchAllCollectionItems) {\n      var _this$props4 = _this.props,\n          collection = _this$props4.collection,\n          totalItems = _this$props4.totalItems;\n\n      _this.setState({\n        shouldFetchAllPages: true\n      });\n\n      if (collection) {\n        var totalPages = Math.ceil(totalItems / PAGE_SIZE);\n        onFetchAllCollectionItems(collection.id, {\n          page: getArrayOfPagesFromTotal(totalPages),\n          limit: PAGE_SIZE,\n          overridePaginationData: false\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ThirdPartyCollectionDetailPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props5 = this.props,\n          thirdParty = _this$props5.thirdParty,\n          onFetchAvailableSlots = _this$props5.onFetchAvailableSlots,\n          isLoadingAvailableSlots = _this$props5.isLoadingAvailableSlots;\n\n      if (thirdParty && thirdParty.availableSlots === undefined && !isLoadingAvailableSlots) {\n        onFetchAvailableSlots(thirdParty.id);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$state2 = this.state,\n          page = _this$state2.page,\n          shouldFetchAllPages = _this$state2.shouldFetchAllPages;\n      var _this$props6 = this.props,\n          items = _this$props6.items,\n          thirdParty = _this$props6.thirdParty,\n          isLoadingAvailableSlots = _this$props6.isLoadingAvailableSlots,\n          onFetchAvailableSlots = _this$props6.onFetchAvailableSlots,\n          currentPage = _this$props6.currentPage;\n      var shouldFetchAvailbleSlots = thirdParty && thirdParty.availableSlots === undefined && !isLoadingAvailableSlots;\n\n      if (shouldFetchAvailbleSlots) {\n        onFetchAvailableSlots(thirdParty.id);\n      } // update the state if the page query param changes\n\n\n      if (currentPage !== page) {\n        this.setState({\n          page: currentPage\n        });\n      }\n\n      if (prevProps.items !== items && shouldFetchAllPages) {\n        // select all items in the state\n        var selectedItems = items.reduce(function (acc, item) {\n          acc[item.id] = true;\n          return acc;\n        }, {});\n        this.setState({\n          selectedItems: selectedItems,\n          showSelectAllPages: false\n        });\n      }\n    }\n  }, {\n    key: \"hasAccess\",\n    value: function hasAccess() {\n      var _this$props7 = this.props,\n          wallet = _this$props7.wallet,\n          collection = _this$props7.collection,\n          thirdParty = _this$props7.thirdParty;\n      return collection && thirdParty && isUserManagerOfThirdParty(wallet.address, thirdParty);\n    }\n  }, {\n    key: \"areAllSelected\",\n    value: function areAllSelected(items) {\n      var selectedItems = this.state.selectedItems;\n      return items.every(function (item) {\n        return selectedItems[item.id];\n      });\n    }\n  }, {\n    key: \"getSelectedItems\",\n    value: function getSelectedItems(items) {\n      var _this$state3 = this.state,\n          selectedItems = _this$state3.selectedItems,\n          shouldFetchAllPages = _this$state3.shouldFetchAllPages;\n      return shouldFetchAllPages ? items : items.filter(function (item) {\n        return selectedItems[item.id];\n      });\n    }\n  }, {\n    key: \"isSearching\",\n    value: function isSearching() {\n      return this.state.searchText !== '';\n    }\n  }, {\n    key: \"filterItemsBySearchText\",\n    value: function filterItemsBySearchText(items) {\n      var searchText = this.state.searchText;\n      return items.filter(function (item) {\n        return item.name.toLowerCase().includes(searchText.toLowerCase()) || item.owner.toLowerCase().includes(searchText.toLowerCase());\n      });\n    }\n  }, {\n    key: \"paginate\",\n    value: function paginate(items) {\n      var page = this.state.page;\n      return items.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE);\n    }\n  }, {\n    key: \"renderPage\",\n    value: function renderPage(thirdParty, allItems, paginatedItems, onFetchCollectionItemsPages) {\n      var _this2 = this;\n\n      var _this$props8 = this.props,\n          totalItems = _this$props8.totalItems,\n          isLoadingAvailableSlots = _this$props8.isLoadingAvailableSlots;\n      var _this$state4 = this.state,\n          page = _this$state4.page,\n          searchText = _this$state4.searchText,\n          stateSelectedItems = _this$state4.selectedItems,\n          showSelectAllPages = _this$state4.showSelectAllPages;\n      var collection = this.props.collection;\n      var areSlotsEmpty = (thirdParty === null || thirdParty === void 0 ? void 0 : thirdParty.availableSlots) && thirdParty.availableSlots <= 0;\n      var selectedItems = allItems.filter(function (item) {\n        return stateSelectedItems[item.id];\n      });\n      var selectedItemsCount = selectedItems.length;\n      var total = totalItems;\n      var totalPages = Math.ceil(total / PAGE_SIZE);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Back, {\n        absolute: true,\n        onClick: this.handleGoBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Narrow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        className: \"header-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"header-row\",\n        onClick: this.handleEditName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        size: \"huge\",\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, collection.name), /*#__PURE__*/React.createElement(BuilderIcon, {\n        name: \"edit\",\n        className: \"edit-collection-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"urn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n        text: collection.urn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }\n      }, collection.urn, /*#__PURE__*/React.createElement(Icon, {\n        \"aria-label\": \"Copy urn\",\n        \"aria-hidden\": \"false\",\n        className: \"link copy\",\n        name: \"copy outline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 27\n        }\n      })))))), /*#__PURE__*/React.createElement(Column, {\n        align: \"right\",\n        shrink: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('slots', {\n          empty: areSlotsEmpty && !isLoadingAvailableSlots\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }, isLoadingAvailableSlots ? /*#__PURE__*/React.createElement(Loader, {\n        active: true,\n        size: \"tiny\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, t('third_party_collection_detail_page.slots', {\n        amount: thirdParty === null || thirdParty === void 0 ? void 0 : thirdParty.availableSlots\n      }), areSlotsEmpty ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"buy-slots link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 44\n        }\n      }, t('global.buy')) : null)), /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        compact: true,\n        className: 'add-items',\n        onClick: this.handleNewItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }\n      }, t('third_party_collection_detail_page.new_items')), thirdParty.availableSlots !== undefined ? /*#__PURE__*/React.createElement(CollectionPublishButton, {\n        collection: collection,\n        items: selectedItems,\n        slots: thirdParty.availableSlots,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 23\n        }\n      }) : null, /*#__PURE__*/React.createElement(CollectionContextMenu, {\n        collection: collection,\n        items: paginatedItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }\n      }))))))), /*#__PURE__*/React.createElement(Narrow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Notice, {\n        storageKey: STORAGE_KEY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(T, {\n        id: \"third_party_collection_detail_page.notice\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      })), paginatedItems.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextFilter, {\n        placeholder: t('third_party_collection_detail_page.search_placeholder', {\n          count: total\n        }),\n        value: searchText,\n        onChange: this.handleSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-info secondary-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }\n      }, t('third_party_collection_detail_page.search_info', {\n        page: (page - 1) * PAGE_SIZE + 1,\n        pageTotal: Math.min(total, page * PAGE_SIZE),\n        total: total\n      }))), selectedItemsCount > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"selection-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }\n      }, t('third_party_collection_detail_page.selection', {\n        count: selectedItemsCount\n      }), \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"link\",\n        onClick: this.handleClearSelection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 19\n        }\n      }, t('third_party_collection_detail_page.clear_selection')), \". \\xA0\", showSelectAllPages && totalPages > 1 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"link\",\n        onClick: function onClick() {\n          return _this2.handleSelectAllItems(onFetchCollectionItemsPages);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }\n      }, t('third_party_collection_detail_page.select_all', {\n        total: total\n      })) : null, \"\\xA0\") : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"collection-items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        columns: \"equal\",\n        className: \"grid-header secondary-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 5,\n        className: \"item-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        className: \"item-checkbox\",\n        checked: this.areAllSelected(paginatedItems),\n        onClick: function onClick(_event, data) {\n          return _this2.handleSelectPageChange(paginatedItems, data);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 23\n        }\n      }), \"\\xA0\", t('global.item')), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }\n      }, t('global.category')), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }, t('global.body_shape')), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }\n      }, \"URN ID\"), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }\n      }))), paginatedItems.map(function (item) {\n        return /*#__PURE__*/React.createElement(CollectionItem, {\n          key: item.id,\n          collection: collection,\n          item: item,\n          selected: !!stateSelectedItems[item.id],\n          onSelect: _this2.handleSelectItemChange,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 19\n          }\n        });\n      }), totalPages > 1 ? /*#__PURE__*/React.createElement(Pagination, {\n        firstItem: null,\n        lastItem: null,\n        totalPages: totalPages,\n        activePage: page,\n        onPageChange: this.handlePageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 19\n        }\n      }) : null)) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sparkles\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }\n      }, t('third_party_collection_detail_page.start_adding_items'), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }\n      }), t('third_party_collection_detail_page.cant_remove')))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var page = this.state.page;\n      var _this$props9 = this.props,\n          isLoading = _this$props9.isLoading,\n          collection = _this$props9.collection,\n          thirdParty = _this$props9.thirdParty;\n      var hasAccess = this.hasAccess();\n      var shouldRender = hasAccess && collection;\n      return /*#__PURE__*/React.createElement(CollectionProvider, {\n        id: collection === null || collection === void 0 ? void 0 : collection.id,\n        itemsPage: page,\n        itemsPageSize: PAGE_SIZE,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 7\n        }\n      }, function (_ref) {\n        var isLoadingCollectionData = _ref.isLoading,\n            items = _ref.items,\n            paginatedItems = _ref.paginatedItems,\n            onFetchCollectionItemsPages = _ref.onFetchCollectionItemsPages;\n        return /*#__PURE__*/React.createElement(LoggedInDetailPage, {\n          className: \"ThirdPartyCollectionDetailPage\",\n          hasNavigation: !hasAccess && !isLoading,\n          isLoading: isLoading || isLoadingCollectionData,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 11\n          }\n        }, shouldRender && thirdParty ? _this3.renderPage(thirdParty, items, paginatedItems, onFetchCollectionItemsPages) : /*#__PURE__*/React.createElement(NotFound, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 125\n          }\n        }));\n      });\n    }\n  }]);\n\n  return ThirdPartyCollectionDetailPage;\n}(React.PureComponent);\n\nexport { ThirdPartyCollectionDetailPage as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ThirdPartyCollectionDetailPage/ThirdPartyCollectionDetailPage.tsx"],"names":["React","classNames","CopyToClipboard","Grid","Section","Row","Narrow","Column","Header","Icon","Button","TextFilter","Pagination","Checkbox","Loader","t","T","ContractName","getArrayOfPagesFromTotal","locations","isUserManagerOfThirdParty","LoggedInDetailPage","CollectionProvider","Notice","NotFound","BuilderIcon","Back","buildManaAuthorization","CollectionContextMenu","CollectionPublishButton","CollectionItem","PAGE_SIZE","STORAGE_KEY","ThirdPartyCollectionDetailPage","state","selectedItems","searchText","page","props","currentPage","showSelectAllPages","shouldFetchAllPages","getManaAuthorization","wallet","address","networks","MATIC","chainId","ThirdPartyRegistry","handleNewItems","collection","onOpenModal","collectionId","id","handleEditName","handleGoBack","onNavigate","collections","handlePageChange","_event","data","onPageChange","setState","activePage","handleSearchChange","handleSelectItemChange","item","isSelected","handleSelectPageChange","items","newItemSelectionState","areAllSelected","checked","handleClearSelection","handleSelectAllItems","onFetchAllCollectionItems","totalItems","totalPages","Math","ceil","limit","overridePaginationData","thirdParty","onFetchAvailableSlots","isLoadingAvailableSlots","availableSlots","undefined","prevProps","shouldFetchAvailbleSlots","reduce","acc","every","filter","name","toLowerCase","includes","owner","slice","allItems","paginatedItems","onFetchCollectionItemsPages","stateSelectedItems","areSlotsEmpty","selectedItemsCount","length","total","urn","empty","amount","count","pageTotal","min","map","isLoading","hasAccess","shouldRender","isLoadingCollectionData","renderPage","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport classNames from 'classnames'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {\n  Grid,\n  Section,\n  Row,\n  Narrow,\n  Column,\n  Header,\n  Icon,\n  Button,\n  TextFilter,\n  Pagination,\n  PaginationProps,\n  Checkbox,\n  CheckboxProps,\n  Loader\n} from 'decentraland-ui'\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { ContractName } from 'decentraland-transactions'\nimport { getArrayOfPagesFromTotal } from 'lib/api/pagination'\nimport { locations } from 'routing/locations'\nimport { isUserManagerOfThirdParty } from 'modules/thirdParty/utils'\nimport { Item } from 'modules/item/types'\nimport { fetchCollectionItemsRequest } from 'modules/item/actions'\nimport LoggedInDetailPage from 'components/LoggedInDetailPage'\nimport CollectionProvider from 'components/CollectionProvider'\nimport Notice from 'components/Notice'\nimport NotFound from 'components/NotFound'\nimport BuilderIcon from 'components/Icon'\nimport Back from 'components/Back'\nimport { buildManaAuthorization } from 'lib/mana'\nimport CollectionContextMenu from './CollectionContextMenu'\nimport CollectionPublishButton from './CollectionPublishButton'\nimport CollectionItem from './CollectionItem'\nimport { Props, State, PAGE_SIZE } from './ThirdPartyCollectionDetailPage.types'\nimport { ThirdParty } from 'modules/thirdParty/types'\nimport './ThirdPartyCollectionDetailPage.css'\n\nconst STORAGE_KEY = 'dcl-third-party-collection-notice'\n\nexport default class ThirdPartyCollectionDetailPage extends React.PureComponent<Props, State> {\n  state: State = {\n    selectedItems: {},\n    searchText: '',\n    page: this.props.currentPage,\n    showSelectAllPages: false,\n    shouldFetchAllPages: false\n  }\n\n  componentDidMount() {\n    const { thirdParty, onFetchAvailableSlots, isLoadingAvailableSlots } = this.props\n    if (thirdParty && thirdParty.availableSlots === undefined && !isLoadingAvailableSlots) {\n      onFetchAvailableSlots(thirdParty.id)\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { page, shouldFetchAllPages } = this.state\n    const { items, thirdParty, isLoadingAvailableSlots, onFetchAvailableSlots, currentPage } = this.props\n\n    const shouldFetchAvailbleSlots = thirdParty && thirdParty.availableSlots === undefined && !isLoadingAvailableSlots\n    if (shouldFetchAvailbleSlots) {\n      onFetchAvailableSlots(thirdParty.id)\n    }\n    // update the state if the page query param changes\n    if (currentPage !== page) {\n      this.setState({ page: currentPage })\n    }\n    if (prevProps.items !== items && shouldFetchAllPages) {\n      // select all items in the state\n      const selectedItems = items.reduce((acc, item) => {\n        acc[item.id] = true\n        return acc\n      }, {} as Record<string, boolean>)\n      this.setState({ selectedItems, showSelectAllPages: false })\n    }\n  }\n\n  getManaAuthorization = () => {\n    const { wallet } = this.props\n    return buildManaAuthorization(wallet.address, wallet.networks.MATIC.chainId, ContractName.ThirdPartyRegistry)\n  }\n\n  handleNewItems = () => {\n    const { collection, onOpenModal } = this.props\n    onOpenModal('CreateItemsModal', { collectionId: collection!.id })\n  }\n\n  handleEditName = () => {\n    const { collection, onOpenModal } = this.props\n    if (collection) {\n      onOpenModal('EditCollectionNameModal', { collection })\n    }\n  }\n\n  handleGoBack = () => {\n    this.props.onNavigate(locations.collections())\n  }\n\n  handlePageChange = (_event: React.MouseEvent<HTMLAnchorElement>, data: PaginationProps) => {\n    const { collection, onPageChange } = this.props\n    this.setState({ page: +data.activePage! })\n    onPageChange(collection!.id, +data.activePage!) // pushes the query param to the url\n  }\n\n  handleSearchChange = (searchText: string) => {\n    if (searchText) {\n      this.setState({ page: 1, searchText })\n    }\n  }\n\n  handleSelectItemChange = (item: Item, isSelected: boolean) => {\n    const { selectedItems } = this.state\n    this.setState({\n      selectedItems: {\n        ...selectedItems,\n        [item.id]: isSelected\n      },\n      shouldFetchAllPages: false,\n      showSelectAllPages: false\n    })\n  }\n\n  handleSelectPageChange = (items: Item[], data: CheckboxProps) => {\n    const { selectedItems, shouldFetchAllPages } = this.state\n    const newItemSelectionState: Record<string, boolean> = { ...selectedItems }\n\n    // Performs the opposite action, if everything is selected, it'll deselect and viceversa\n    const isSelected = !this.areAllSelected(items)\n\n    for (const item of items) {\n      newItemSelectionState[item.id] = isSelected\n    }\n\n    this.setState({\n      selectedItems: newItemSelectionState,\n      showSelectAllPages: true,\n      shouldFetchAllPages: shouldFetchAllPages && !!data.checked // if the checkbox is unchecked, turn off shouldFetchAllPages flag\n    })\n  }\n\n  handleClearSelection = () => {\n    this.setState({ selectedItems: {} })\n  }\n\n  hasAccess() {\n    const { wallet, collection, thirdParty } = this.props\n    return collection && thirdParty && isUserManagerOfThirdParty(wallet.address, thirdParty)\n  }\n\n  areAllSelected(items: Item[]) {\n    const { selectedItems } = this.state\n    return items.every(item => selectedItems[item.id])\n  }\n\n  getSelectedItems(items: Item[]) {\n    const { selectedItems, shouldFetchAllPages } = this.state\n    return shouldFetchAllPages ? items : items.filter(item => selectedItems[item.id])\n  }\n\n  isSearching() {\n    return this.state.searchText !== ''\n  }\n\n  filterItemsBySearchText(items: Item[]) {\n    const { searchText } = this.state\n\n    return items.filter(\n      item => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.owner.toLowerCase().includes(searchText.toLowerCase())\n    )\n  }\n\n  paginate(items: Item[]) {\n    const { page } = this.state\n    return items.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE)\n  }\n\n  handleSelectAllItems = (onFetchAllCollectionItems: typeof fetchCollectionItemsRequest) => {\n    const { collection, totalItems } = this.props\n    this.setState({ shouldFetchAllPages: true })\n    if (collection) {\n      const totalPages = Math.ceil(totalItems! / PAGE_SIZE)\n      onFetchAllCollectionItems(collection.id, {\n        page: getArrayOfPagesFromTotal(totalPages),\n        limit: PAGE_SIZE,\n        overridePaginationData: false\n      })\n    }\n  }\n\n  renderPage(\n    thirdParty: ThirdParty,\n    allItems: Item[],\n    paginatedItems: Item[],\n    onFetchCollectionItemsPages: typeof fetchCollectionItemsRequest\n  ) {\n    const { totalItems, isLoadingAvailableSlots } = this.props\n    const { page, searchText, selectedItems: stateSelectedItems, showSelectAllPages } = this.state\n\n    const collection = this.props.collection!\n    const areSlotsEmpty = thirdParty?.availableSlots && thirdParty.availableSlots <= 0\n    const selectedItems = allItems.filter(item => stateSelectedItems[item.id])\n    const selectedItemsCount = selectedItems.length\n    const total = totalItems!\n    const totalPages = Math.ceil(total / PAGE_SIZE)\n\n    return (\n      <>\n        <Section>\n          <Row>\n            <Back absolute onClick={this.handleGoBack} />\n            <Narrow>\n              <Row>\n                <Column className=\"header-column\">\n                  <Row className=\"header-row\" onClick={this.handleEditName}>\n                    <Header size=\"huge\" className=\"name\">\n                      {collection.name}\n                    </Header>\n                    <BuilderIcon name=\"edit\" className=\"edit-collection-name\" />\n                  </Row>\n                  <Row>\n                    <small className=\"urn\">\n                      <CopyToClipboard text={collection.urn}>\n                        <div>\n                          {collection.urn}\n                          <Icon aria-label=\"Copy urn\" aria-hidden=\"false\" className=\"link copy\" name=\"copy outline\" />\n                        </div>\n                      </CopyToClipboard>\n                    </small>\n                  </Row>\n                </Column>\n                <Column align=\"right\" shrink={false}>\n                  <Row className=\"actions\">\n                    <div className={classNames('slots', { empty: areSlotsEmpty && !isLoadingAvailableSlots })}>\n                      {isLoadingAvailableSlots ? (\n                        <Loader active size=\"tiny\" />\n                      ) : (\n                        <>\n                          {t('third_party_collection_detail_page.slots', { amount: thirdParty?.availableSlots })}\n                          {areSlotsEmpty ? <span className=\"buy-slots link\">{t('global.buy')}</span> : null}\n                        </>\n                      )}\n                    </div>\n                    <Button secondary compact className={'add-items'} onClick={this.handleNewItems}>\n                      {t('third_party_collection_detail_page.new_items')}\n                    </Button>\n                    {thirdParty.availableSlots !== undefined ? (\n                      <CollectionPublishButton collection={collection} items={selectedItems} slots={thirdParty.availableSlots} />\n                    ) : null}\n                    <CollectionContextMenu collection={collection} items={paginatedItems} />\n                  </Row>\n                </Column>\n              </Row>\n            </Narrow>\n          </Row>\n        </Section>\n        <Narrow>\n          <Notice storageKey={STORAGE_KEY}>\n            <T id=\"third_party_collection_detail_page.notice\" />\n          </Notice>\n\n          {paginatedItems.length ? (\n            <>\n              <div className=\"search-container\">\n                <TextFilter\n                  placeholder={t('third_party_collection_detail_page.search_placeholder', { count: total })}\n                  value={searchText}\n                  onChange={this.handleSearchChange}\n                />\n\n                <div className=\"search-info secondary-text\">\n                  {t('third_party_collection_detail_page.search_info', {\n                    page: (page - 1) * PAGE_SIZE + 1,\n                    pageTotal: Math.min(total, page * PAGE_SIZE),\n                    total\n                  })}\n                </div>\n              </div>\n\n              {selectedItemsCount > 0 ? (\n                <div className=\"selection-info\">\n                  {t('third_party_collection_detail_page.selection', { count: selectedItemsCount })}\n                  &nbsp;\n                  <span className=\"link\" onClick={this.handleClearSelection}>\n                    {t('third_party_collection_detail_page.clear_selection')}\n                  </span>\n                  . &nbsp;\n                  {showSelectAllPages && totalPages > 1 ? (\n                    <span className=\"link\" onClick={() => this.handleSelectAllItems(onFetchCollectionItemsPages)}>\n                      {t('third_party_collection_detail_page.select_all', { total })}\n                    </span>\n                  ) : null}\n                  &nbsp;\n                </div>\n              ) : null}\n\n              <div className=\"collection-items\">\n                <Grid columns=\"equal\" className=\"grid-header secondary-text\">\n                  <Grid.Row>\n                    <Grid.Column width={5} className=\"item-column\">\n                      <Checkbox\n                        className=\"item-checkbox\"\n                        checked={this.areAllSelected(paginatedItems)}\n                        onClick={(_event: React.MouseEvent<HTMLInputElement>, data: CheckboxProps) =>\n                          this.handleSelectPageChange(paginatedItems, data)\n                        }\n                      />\n                      &nbsp;\n                      {t('global.item')}\n                    </Grid.Column>\n                    <Grid.Column>{t('global.category')}</Grid.Column>\n                    <Grid.Column>{t('global.body_shape')}</Grid.Column>\n                    <Grid.Column>URN ID</Grid.Column>\n                    <Grid.Column></Grid.Column>\n                  </Grid.Row>\n                </Grid>\n\n                {paginatedItems.map(item => (\n                  <CollectionItem\n                    key={item.id}\n                    collection={collection}\n                    item={item}\n                    selected={!!stateSelectedItems[item.id]}\n                    onSelect={this.handleSelectItemChange}\n                  />\n                ))}\n\n                {totalPages > 1 ? (\n                  <Pagination\n                    firstItem={null}\n                    lastItem={null}\n                    totalPages={totalPages}\n                    activePage={page}\n                    onPageChange={this.handlePageChange}\n                  />\n                ) : null}\n              </div>\n            </>\n          ) : (\n            <div className=\"empty\">\n              <div className=\"sparkles\" />\n              <div>\n                {t('third_party_collection_detail_page.start_adding_items')}\n                <br />\n                {t('third_party_collection_detail_page.cant_remove')}\n              </div>\n            </div>\n          )}\n        </Narrow>\n      </>\n    )\n  }\n\n  render() {\n    const { page } = this.state\n    const { isLoading, collection, thirdParty } = this.props\n    const hasAccess = this.hasAccess()\n    const shouldRender = hasAccess && collection\n    return (\n      <CollectionProvider id={collection?.id} itemsPage={page} itemsPageSize={PAGE_SIZE}>\n        {({ isLoading: isLoadingCollectionData, items, paginatedItems, onFetchCollectionItemsPages }) => (\n          <LoggedInDetailPage\n            className=\"ThirdPartyCollectionDetailPage\"\n            hasNavigation={!hasAccess && !isLoading}\n            isLoading={isLoading || isLoadingCollectionData}\n          >\n            {shouldRender && thirdParty ? this.renderPage(thirdParty, items, paginatedItems, onFetchCollectionItemsPages) : <NotFound />}\n          </LoggedInDetailPage>\n        )}\n      </CollectionProvider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}