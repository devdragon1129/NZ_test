{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { loadingReducer } from 'decentraland-dapps/dist/modules/loading/reducer';\nimport { DEPLOY_ENTITIES_FAILURE, DEPLOY_ENTITIES_REQUEST, DEPLOY_ENTITIES_SUCCESS, FETCH_ENTITIES_BY_IDS_FAILURE, FETCH_ENTITIES_BY_IDS_REQUEST, FETCH_ENTITIES_BY_IDS_SUCCESS, FETCH_ENTITIES_BY_POINTERS_FAILURE, FETCH_ENTITIES_BY_POINTERS_REQUEST, FETCH_ENTITIES_BY_POINTERS_SUCCESS } from './actions';\nvar INITIAL_STATE = {\n  data: {},\n  loading: [],\n  error: null\n};\nexport function entityReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ENTITIES_BY_POINTERS_REQUEST:\n    case FETCH_ENTITIES_BY_IDS_REQUEST:\n    case DEPLOY_ENTITIES_REQUEST:\n    case DEPLOY_ENTITIES_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: null\n        });\n      }\n\n    case FETCH_ENTITIES_BY_POINTERS_SUCCESS:\n    case FETCH_ENTITIES_BY_IDS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: null,\n          data: _objectSpread({}, state.data, action.payload.entities.reduce(function (obj, entity) {\n            obj[entity.id] = entity;\n            return obj;\n          }, {}))\n        });\n      }\n\n    case FETCH_ENTITIES_BY_POINTERS_FAILURE:\n    case FETCH_ENTITIES_BY_IDS_FAILURE:\n    case DEPLOY_ENTITIES_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action),\n          error: action.payload.error\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/entity/reducer.ts"],"names":["loadingReducer","DEPLOY_ENTITIES_FAILURE","DEPLOY_ENTITIES_REQUEST","DEPLOY_ENTITIES_SUCCESS","FETCH_ENTITIES_BY_IDS_FAILURE","FETCH_ENTITIES_BY_IDS_REQUEST","FETCH_ENTITIES_BY_IDS_SUCCESS","FETCH_ENTITIES_BY_POINTERS_FAILURE","FETCH_ENTITIES_BY_POINTERS_REQUEST","FETCH_ENTITIES_BY_POINTERS_SUCCESS","INITIAL_STATE","data","loading","error","entityReducer","state","action","type","payload","entities","reduce","obj","entity","id"],"mappings":";AACA,SAASA,cAAT,QAA6C,iDAA7C;AACA,SAIEC,uBAJF,EAKEC,uBALF,EAMEC,uBANF,EAaEC,6BAbF,EAcEC,6BAdF,EAeEC,6BAfF,EAgBEC,kCAhBF,EAiBEC,kCAjBF,EAkBEC,kCAlBF,QAmBO,WAnBP;AA2BA,IAAMC,aAA0B,GAAG;AACjCC,EAAAA,IAAI,EAAE,EAD2B;AAEjCC,EAAAA,OAAO,EAAE,EAFwB;AAGjCC,EAAAA,KAAK,EAAE;AAH0B,CAAnC;AAiBA,OAAO,SAASC,aAAT,GAAqG;AAAA,MAA9EC,KAA8E,uEAAzDL,aAAyD;AAAA,MAA1CM,MAA0C;;AAC1G,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,kCAAL;AACA,SAAKH,6BAAL;AACA,SAAKH,uBAAL;AACA,SAAKC,uBAAL;AAA8B;AAC5B,iCACKY,KADL;AAEEH,UAAAA,OAAO,EAAEZ,cAAc,CAACe,KAAK,CAACH,OAAP,EAAgBI,MAAhB,CAFzB;AAGEH,UAAAA,KAAK,EAAE;AAHT;AAKD;;AACD,SAAKJ,kCAAL;AACA,SAAKH,6BAAL;AAAoC;AAClC,iCACKS,KADL;AAEEH,UAAAA,OAAO,EAAEZ,cAAc,CAACe,KAAK,CAACH,OAAP,EAAgBI,MAAhB,CAFzB;AAGEH,UAAAA,KAAK,EAAE,IAHT;AAIEF,UAAAA,IAAI,oBACCI,KAAK,CAACJ,IADP,EAECK,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBC,MAAxB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACjDD,YAAAA,GAAG,CAACC,MAAM,CAACC,EAAR,CAAH,GAAiBD,MAAjB;AACA,mBAAOD,GAAP;AACD,WAHE,EAGA,EAHA,CAFD;AAJN;AAYD;;AACD,SAAKd,kCAAL;AACA,SAAKH,6BAAL;AACA,SAAKH,uBAAL;AAA8B;AAC5B,iCACKc,KADL;AAEEH,UAAAA,OAAO,EAAEZ,cAAc,CAACe,KAAK,CAACH,OAAP,EAAgBI,MAAhB,CAFzB;AAGEH,UAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHxB;AAKD;;AACD;AACE,aAAOE,KAAP;AApCJ;AAsCD","sourcesContent":["import { Entity } from 'dcl-catalyst-commons'\nimport { loadingReducer, LoadingState } from 'decentraland-dapps/dist/modules/loading/reducer'\nimport {\n  DeployEntitiesFailureAction,\n  DeployEntitiesRequestAction,\n  DeployEntitiesSuccessAction,\n  DEPLOY_ENTITIES_FAILURE,\n  DEPLOY_ENTITIES_REQUEST,\n  DEPLOY_ENTITIES_SUCCESS,\n  FetchEntitiesByIdsFailureAction,\n  FetchEntitiesByIdsRequestAction,\n  FetchEntitiesByIdsSuccessAction,\n  FetchEntitiesByPointersFailureAction,\n  FetchEntitiesByPointersRequestAction,\n  FetchEntitiesByPointersSuccessAction,\n  FETCH_ENTITIES_BY_IDS_FAILURE,\n  FETCH_ENTITIES_BY_IDS_REQUEST,\n  FETCH_ENTITIES_BY_IDS_SUCCESS,\n  FETCH_ENTITIES_BY_POINTERS_FAILURE,\n  FETCH_ENTITIES_BY_POINTERS_REQUEST,\n  FETCH_ENTITIES_BY_POINTERS_SUCCESS\n} from './actions'\n\nexport type EntityState = {\n  data: Record<string, Entity>\n  loading: LoadingState\n  error: string | null\n}\n\nconst INITIAL_STATE: EntityState = {\n  data: {},\n  loading: [],\n  error: null\n}\n\ntype EntityReducerAction =\n  | FetchEntitiesByPointersRequestAction\n  | FetchEntitiesByPointersSuccessAction\n  | FetchEntitiesByPointersFailureAction\n  | FetchEntitiesByIdsRequestAction\n  | FetchEntitiesByIdsSuccessAction\n  | FetchEntitiesByIdsFailureAction\n  | DeployEntitiesRequestAction\n  | DeployEntitiesSuccessAction\n  | DeployEntitiesFailureAction\n\nexport function entityReducer(state: EntityState = INITIAL_STATE, action: EntityReducerAction): EntityState {\n  switch (action.type) {\n    case FETCH_ENTITIES_BY_POINTERS_REQUEST:\n    case FETCH_ENTITIES_BY_IDS_REQUEST:\n    case DEPLOY_ENTITIES_REQUEST:\n    case DEPLOY_ENTITIES_SUCCESS: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: null\n      }\n    }\n    case FETCH_ENTITIES_BY_POINTERS_SUCCESS:\n    case FETCH_ENTITIES_BY_IDS_SUCCESS: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: null,\n        data: {\n          ...state.data,\n          ...action.payload.entities.reduce((obj, entity) => {\n            obj[entity.id] = entity\n            return obj\n          }, {} as EntityState['data'])\n        }\n      }\n    }\n    case FETCH_ENTITIES_BY_POINTERS_FAILURE:\n    case FETCH_ENTITIES_BY_IDS_FAILURE:\n    case DEPLOY_ENTITIES_FAILURE: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action),\n        error: action.payload.error\n      }\n    }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}