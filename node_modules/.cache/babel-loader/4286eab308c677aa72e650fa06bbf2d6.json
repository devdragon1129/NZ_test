{"ast":null,"code":"import _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/opt/work/NZ_test/src/components/ActivityPage/Transaction/Transaction.tsx\";\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { getContractName } from 'decentraland-transactions';\nimport { GRANT_TOKEN_SUCCESS, REVOKE_TOKEN_SUCCESS } from 'decentraland-dapps/dist/modules/authorization/actions';\nimport { TransactionLink } from 'decentraland-dapps/dist/containers';\nimport { locations } from 'routing/locations';\nimport { TRANSFER_LAND_SUCCESS, EDIT_LAND_SUCCESS, SET_OPERATOR_SUCCESS, CREATE_ESTATE_SUCCESS, EDIT_ESTATE_SUCCESS, DISSOLVE_ESTATE_SUCCESS, SET_UPDATE_MANAGER_SUCCESS } from 'modules/land/actions';\nimport { RESCUE_ITEMS_CHUNK_SUCCESS, SET_PRICE_AND_BENEFICIARY_REQUEST } from 'modules/item/actions';\nimport { MINT_COLLECTION_ITEMS_SUCCESS, SET_COLLECTION_MINTERS_SUCCESS, SET_COLLECTION_MANAGERS_SUCCESS, PUBLISH_COLLECTION_SUCCESS, APPROVE_COLLECTION_SUCCESS, REJECT_COLLECTION_SUCCESS } from 'modules/collection/actions';\nimport { SET_ENS_RESOLVER_SUCCESS, SET_ENS_CONTENT_SUCCESS, ALLOW_CLAIM_MANA_SUCCESS, CLAIM_NAME_SUCCESS } from 'modules/ens/actions';\nimport { getSaleAddress, getTotalAmountOfMintedItems } from 'modules/collection/utils';\nimport { isEnoughClaimMana } from 'modules/ens/utils';\nimport { includes } from 'lib/address';\nimport { difference } from 'lib/array';\nimport Profile from 'components/Profile';\nimport TransactionDetail from './TransactionDetail';\n\nvar Transaction = function Transaction(props) {\n  var tx = props.tx;\n\n  switch (tx.actionType) {\n    case GRANT_TOKEN_SUCCESS:\n    case REVOKE_TOKEN_SUCCESS:\n      {\n        var _ref = tx.payload,\n            authorization = _ref.authorization;\n        var authorizedName = getContractName(authorization.authorizedAddress);\n        var contractName = getContractName(authorization.contractAddress);\n        var action = tx.actionType === GRANT_TOKEN_SUCCESS ? t('transaction.approved') : t('transaction.unapproved');\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          address: authorization.address,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.approve_token\",\n            values: {\n              action: action,\n              contract: /*#__PURE__*/React.createElement(TransactionLink, {\n                chainId: authorization.chainId,\n                address: authorization.authorizedAddress,\n                txHash: \"\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }\n              }, authorizedName),\n              token: /*#__PURE__*/React.createElement(TransactionLink, {\n                chainId: authorization.chainId,\n                address: authorization.contractAddress,\n                txHash: \"\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }\n              }, contractName)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case TRANSFER_LAND_SUCCESS:\n      {\n        var _tx$payload = tx.payload,\n            name = _tx$payload.name,\n            address = _tx$payload.address,\n            selection = _tx$payload.selection;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          selection: selection,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.transfer\",\n            values: {\n              name: /*#__PURE__*/React.createElement(\"strong\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }\n              }, name),\n              address: /*#__PURE__*/React.createElement(Profile, {\n                address: address,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 26\n                }\n              })\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case EDIT_LAND_SUCCESS:\n      {\n        var _tx$payload2 = tx.payload,\n            _name = _tx$payload2.name,\n            _selection = _tx$payload2.selection;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          selection: _selection,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.edit\",\n            values: {\n              name: /*#__PURE__*/React.createElement(\"strong\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }\n              }, _name)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case SET_OPERATOR_SUCCESS:\n      {\n        var _tx$payload3 = tx.payload,\n            _name2 = _tx$payload3.name,\n            _address = _tx$payload3.address,\n            _selection2 = _tx$payload3.selection;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          selection: _selection2,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: _address ? 'transaction.set_operator_assigned' : 'transaction.set_operator_revoked',\n            values: {\n              name: /*#__PURE__*/React.createElement(\"strong\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }\n              }, _name2),\n              address: /*#__PURE__*/React.createElement(Profile, {\n                address: _address,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 26\n                }\n              })\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case CREATE_ESTATE_SUCCESS:\n      {\n        var _tx$payload4 = tx.payload,\n            _name3 = _tx$payload4.name,\n            _selection3 = _tx$payload4.selection;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          selection: _selection3,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.create_estate\",\n            values: {\n              name: /*#__PURE__*/React.createElement(\"strong\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 23\n                }\n              }, _name3)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case EDIT_ESTATE_SUCCESS:\n      {\n        var _tx$payload5 = tx.payload,\n            _name4 = _tx$payload5.name,\n            count = _tx$payload5.count,\n            type = _tx$payload5.type,\n            _selection4 = _tx$payload5.selection;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          selection: _selection4,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.edit_estate_\".concat(type),\n            values: {\n              name: /*#__PURE__*/React.createElement(\"strong\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }\n              }, _name4),\n              count: count\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case DISSOLVE_ESTATE_SUCCESS:\n      {\n        var _tx$payload6 = tx.payload,\n            _name5 = _tx$payload6.name,\n            _selection5 = _tx$payload6.selection;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          selection: _selection5,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.dissolve_estate\",\n            values: {\n              name: /*#__PURE__*/React.createElement(\"strong\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }\n              }, _name5)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case SET_UPDATE_MANAGER_SUCCESS:\n      {\n        var _tx$payload7 = tx.payload,\n            _address2 = _tx$payload7.address,\n            _type = _tx$payload7.type,\n            isApproved = _tx$payload7.isApproved;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          address: _address2,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: isApproved ? 'transaction.set_manager_assigned' : 'transaction.set_manager_revoked',\n            values: {\n              address: /*#__PURE__*/React.createElement(Profile, {\n                address: _address2,\n                textOnly: true,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 26\n                }\n              }),\n              type: t(\"global.\".concat(_type, \"_plural\"))\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case SET_PRICE_AND_BENEFICIARY_REQUEST:\n      {\n        var item = tx.payload.item;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          item: item,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.set_price_and_beneficiary\",\n            values: {\n              name: /*#__PURE__*/React.createElement(Link, {\n                to: locations.itemDetail(item.id),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 75\n                }\n              }, item.name)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case PUBLISH_COLLECTION_SUCCESS:\n    case APPROVE_COLLECTION_SUCCESS:\n    case REJECT_COLLECTION_SUCCESS:\n    case SET_COLLECTION_MANAGERS_SUCCESS:\n      {\n        var _PUBLISH_COLLECTION_S;\n\n        var collection = tx.payload.collection;\n        var translationKey = (_PUBLISH_COLLECTION_S = {}, _defineProperty(_PUBLISH_COLLECTION_S, PUBLISH_COLLECTION_SUCCESS, 'collection_published'), _defineProperty(_PUBLISH_COLLECTION_S, APPROVE_COLLECTION_SUCCESS, 'collection_approved'), _defineProperty(_PUBLISH_COLLECTION_S, REJECT_COLLECTION_SUCCESS, 'collection_rejected'), _defineProperty(_PUBLISH_COLLECTION_S, SET_COLLECTION_MANAGERS_SUCCESS, 'updated_collection_managers'), _PUBLISH_COLLECTION_S)[tx.actionType];\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          collectionId: collection.id,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.\".concat(translationKey),\n            values: {\n              name: /*#__PURE__*/React.createElement(Link, {\n                to: locations.collectionDetail(collection.id),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 31\n                }\n              }, collection.name)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case MINT_COLLECTION_ITEMS_SUCCESS:\n      {\n        var _tx$payload8 = tx.payload,\n            _collection = _tx$payload8.collection,\n            mints = _tx$payload8.mints;\n        var isSingleMint = mints.length === 1;\n        var _item = mints[0].item;\n        var transactionDetailData = isSingleMint ? {\n          item: _item\n        } : {\n          collection: _collection\n        };\n        return /*#__PURE__*/React.createElement(TransactionDetail, Object.assign({}, transactionDetailData, {\n          text: /*#__PURE__*/React.createElement(T, {\n            id: isSingleMint ? 'transaction.collection_item_minted' : 'transaction.collection_items_minted',\n            values: {\n              collectionName: /*#__PURE__*/React.createElement(Link, {\n                to: locations.collectionDetail(_collection.id),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 33\n                }\n              }, _collection.name),\n              itemName: /*#__PURE__*/React.createElement(Link, {\n                to: locations.itemDetail(_item.id),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 27\n                }\n              }, _item.name),\n              count: getTotalAmountOfMintedItems(mints)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 9\n          }\n        }));\n      }\n\n    case SET_COLLECTION_MINTERS_SUCCESS:\n      {\n        var chainId = tx.chainId;\n        var _tx$payload9 = tx.payload,\n            _collection2 = _tx$payload9.collection,\n            minters = _tx$payload9.minters;\n        var addedMinters = difference(minters, _collection2.minters);\n        var removedMinters = difference(_collection2.minters, minters);\n        var saleAddress = getSaleAddress(chainId);\n        var hadSaleAccess = includes(removedMinters, saleAddress);\n        var hasNewSaleAccess = includes(addedMinters, saleAddress);\n        var translationId = '';\n\n        if (hadSaleAccess) {\n          translationId = 'transaction.unset_collection_on_sale';\n        } else if (hasNewSaleAccess) {\n          translationId = 'transaction.set_collection_on_sale';\n        } else {\n          translationId = 'transaction.updated_collection_minters';\n        }\n\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          collectionId: _collection2.id,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: translationId,\n            values: {\n              name: /*#__PURE__*/React.createElement(Link, {\n                to: locations.collectionDetail(_collection2.id),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }\n              }, _collection2.name)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case SET_ENS_RESOLVER_SUCCESS:\n      {\n        var _tx$payload10 = tx.payload,\n            _address3 = _tx$payload10.address,\n            ens = _tx$payload10.ens;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          address: _address3,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.set_ens_resolver\",\n            values: {\n              address: /*#__PURE__*/React.createElement(Profile, {\n                address: _address3,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 26\n                }\n              }),\n              name: ens.subdomain\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case SET_ENS_CONTENT_SUCCESS:\n      {\n        var _tx$payload11 = tx.payload,\n            _address4 = _tx$payload11.address,\n            _ens = _tx$payload11.ens,\n            land = _tx$payload11.land;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          address: _address4,\n          text: land ? /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.set_ens_content\",\n            values: {\n              address: /*#__PURE__*/React.createElement(Profile, {\n                address: _address4,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 28\n                }\n              }),\n              name: _ens.subdomain,\n              land_link: /*#__PURE__*/React.createElement(Link, {\n                to: locations.landDetail(land.id),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 30\n                }\n              }, land.name)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }\n          }) : /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.unset_ens_content\",\n            values: {\n              address: /*#__PURE__*/React.createElement(Profile, {\n                address: _address4,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 28\n                }\n              }),\n              name: _ens.subdomain\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case ALLOW_CLAIM_MANA_SUCCESS:\n      {\n        var _tx$payload12 = tx.payload,\n            _address5 = _tx$payload12.address,\n            allowance = _tx$payload12.allowance;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          address: _address5,\n          text: isEnoughClaimMana(allowance) ? /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.allowed_claim_mana\",\n            values: {\n              address: /*#__PURE__*/React.createElement(Profile, {\n                address: _address5,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 73\n                }\n              })\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }\n          }) : /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.disallowed_claim_mana\",\n            values: {\n              address: /*#__PURE__*/React.createElement(Profile, {\n                address: _address5,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 76\n                }\n              })\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case CLAIM_NAME_SUCCESS:\n      {\n        var _tx$payload13 = tx.payload,\n            _address6 = _tx$payload13.address,\n            _ens2 = _tx$payload13.ens;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          address: _address6,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.claim_name\",\n            values: {\n              address: /*#__PURE__*/React.createElement(Profile, {\n                address: _address6,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 26\n                }\n              }),\n              name: _ens2.subdomain\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 13\n            }\n          }),\n          tx: tx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 9\n          }\n        });\n      }\n\n    case RESCUE_ITEMS_CHUNK_SUCCESS:\n      {\n        var _tx$payload14 = tx.payload,\n            _count = _tx$payload14.count,\n            collectionId = _tx$payload14.collectionId,\n            collectionName = _tx$payload14.collectionName;\n        return /*#__PURE__*/React.createElement(TransactionDetail, {\n          tx: tx,\n          collectionId: collectionId,\n          text: /*#__PURE__*/React.createElement(T, {\n            id: \"transaction.rescue_items\",\n            values: {\n              count: _count,\n              collectionName: /*#__PURE__*/React.createElement(Link, {\n                to: locations.collectionDetail(collectionId),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 48\n                }\n              }, collectionName)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 13\n            }\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 9\n          }\n        });\n      }\n\n    default:\n      return null;\n  }\n};\n\nexport default React.memo(Transaction);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ActivityPage/Transaction/Transaction.tsx"],"names":["React","Link","T","t","getContractName","GRANT_TOKEN_SUCCESS","REVOKE_TOKEN_SUCCESS","TransactionLink","locations","TRANSFER_LAND_SUCCESS","EDIT_LAND_SUCCESS","SET_OPERATOR_SUCCESS","CREATE_ESTATE_SUCCESS","EDIT_ESTATE_SUCCESS","DISSOLVE_ESTATE_SUCCESS","SET_UPDATE_MANAGER_SUCCESS","RESCUE_ITEMS_CHUNK_SUCCESS","SET_PRICE_AND_BENEFICIARY_REQUEST","MINT_COLLECTION_ITEMS_SUCCESS","SET_COLLECTION_MINTERS_SUCCESS","SET_COLLECTION_MANAGERS_SUCCESS","PUBLISH_COLLECTION_SUCCESS","APPROVE_COLLECTION_SUCCESS","REJECT_COLLECTION_SUCCESS","SET_ENS_RESOLVER_SUCCESS","SET_ENS_CONTENT_SUCCESS","ALLOW_CLAIM_MANA_SUCCESS","CLAIM_NAME_SUCCESS","getSaleAddress","getTotalAmountOfMintedItems","isEnoughClaimMana","includes","difference","Profile","TransactionDetail","Transaction","props","tx","actionType","payload","authorization","authorizedName","authorizedAddress","contractName","contractAddress","action","address","contract","chainId","token","name","selection","count","type","isApproved","item","itemDetail","id","collection","translationKey","collectionDetail","mints","isSingleMint","length","transactionDetailData","collectionName","itemName","minters","addedMinters","removedMinters","saleAddress","hadSaleAccess","hasNewSaleAccess","translationId","ens","subdomain","land","land_link","landDetail","allowance","collectionId","memo"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { getContractName } from 'decentraland-transactions'\nimport {\n  GrantTokenSuccessAction,\n  RevokeTokenSuccessAction,\n  GRANT_TOKEN_SUCCESS,\n  REVOKE_TOKEN_SUCCESS\n} from 'decentraland-dapps/dist/modules/authorization/actions'\nimport { TransactionLink } from 'decentraland-dapps/dist/containers'\nimport { locations } from 'routing/locations'\nimport {\n  TRANSFER_LAND_SUCCESS,\n  EDIT_LAND_SUCCESS,\n  SET_OPERATOR_SUCCESS,\n  CREATE_ESTATE_SUCCESS,\n  EDIT_ESTATE_SUCCESS,\n  DISSOLVE_ESTATE_SUCCESS,\n  SET_UPDATE_MANAGER_SUCCESS\n} from 'modules/land/actions'\nimport { RESCUE_ITEMS_CHUNK_SUCCESS, SET_PRICE_AND_BENEFICIARY_REQUEST } from 'modules/item/actions'\nimport {\n  MINT_COLLECTION_ITEMS_SUCCESS,\n  SET_COLLECTION_MINTERS_SUCCESS,\n  SET_COLLECTION_MANAGERS_SUCCESS,\n  PUBLISH_COLLECTION_SUCCESS,\n  APPROVE_COLLECTION_SUCCESS,\n  REJECT_COLLECTION_SUCCESS\n} from 'modules/collection/actions'\nimport { SET_ENS_RESOLVER_SUCCESS, SET_ENS_CONTENT_SUCCESS, ALLOW_CLAIM_MANA_SUCCESS, CLAIM_NAME_SUCCESS } from 'modules/ens/actions'\nimport { getSaleAddress, getTotalAmountOfMintedItems } from 'modules/collection/utils'\nimport { isEnoughClaimMana } from 'modules/ens/utils'\nimport { includes } from 'lib/address'\nimport { difference } from 'lib/array'\nimport Profile from 'components/Profile'\nimport TransactionDetail from './TransactionDetail'\nimport { Props } from './Transaction.types'\n\nconst Transaction = (props: Props) => {\n  const { tx } = props\n  switch (tx.actionType) {\n    case GRANT_TOKEN_SUCCESS:\n    case REVOKE_TOKEN_SUCCESS: {\n      const { authorization } = tx.payload as GrantTokenSuccessAction['payload'] | RevokeTokenSuccessAction['payload']\n      const authorizedName = getContractName(authorization.authorizedAddress)\n      const contractName = getContractName(authorization.contractAddress)\n      const action = tx.actionType === GRANT_TOKEN_SUCCESS ? t('transaction.approved') : t('transaction.unapproved')\n      return (\n        <TransactionDetail\n          address={authorization.address}\n          text={\n            <T\n              id=\"transaction.approve_token\"\n              values={{\n                action,\n                contract: (\n                  <TransactionLink chainId={authorization.chainId} address={authorization.authorizedAddress} txHash=\"\">\n                    {authorizedName}\n                  </TransactionLink>\n                ),\n                token: (\n                  <TransactionLink chainId={authorization.chainId} address={authorization.contractAddress} txHash=\"\">\n                    {contractName}\n                  </TransactionLink>\n                )\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case TRANSFER_LAND_SUCCESS: {\n      const { name, address, selection } = tx.payload\n      return (\n        <TransactionDetail\n          selection={selection}\n          text={\n            <T\n              id=\"transaction.transfer\"\n              values={{\n                name: <strong>{name}</strong>,\n                address: <Profile address={address} />\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case EDIT_LAND_SUCCESS: {\n      const { name, selection } = tx.payload\n      return (\n        <TransactionDetail\n          selection={selection}\n          text={\n            <T\n              id=\"transaction.edit\"\n              values={{\n                name: <strong>{name}</strong>\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case SET_OPERATOR_SUCCESS: {\n      const { name, address, selection } = tx.payload\n      return (\n        <TransactionDetail\n          selection={selection}\n          text={\n            <T\n              id={address ? 'transaction.set_operator_assigned' : 'transaction.set_operator_revoked'}\n              values={{\n                name: <strong>{name}</strong>,\n                address: <Profile address={address} />\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case CREATE_ESTATE_SUCCESS: {\n      const { name, selection } = tx.payload\n      return (\n        <TransactionDetail\n          selection={selection}\n          text={\n            <T\n              id=\"transaction.create_estate\"\n              values={{\n                name: <strong>{name}</strong>\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case EDIT_ESTATE_SUCCESS: {\n      const { name, count, type, selection } = tx.payload\n      return (\n        <TransactionDetail\n          selection={selection}\n          text={\n            <T\n              id={`transaction.edit_estate_${type}`}\n              values={{\n                name: <strong>{name}</strong>,\n                count\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case DISSOLVE_ESTATE_SUCCESS: {\n      const { name, selection } = tx.payload\n      return (\n        <TransactionDetail\n          selection={selection}\n          text={\n            <T\n              id=\"transaction.dissolve_estate\"\n              values={{\n                name: <strong>{name}</strong>\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case SET_UPDATE_MANAGER_SUCCESS: {\n      const { address, type, isApproved } = tx.payload\n      return (\n        <TransactionDetail\n          address={address}\n          text={\n            <T\n              id={isApproved ? 'transaction.set_manager_assigned' : 'transaction.set_manager_revoked'}\n              values={{\n                address: <Profile address={address} textOnly />,\n                type: t(`global.${type}_plural`)\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case SET_PRICE_AND_BENEFICIARY_REQUEST: {\n      const { item } = tx.payload\n      return (\n        <TransactionDetail\n          item={item}\n          text={\n            <T id=\"transaction.set_price_and_beneficiary\" values={{ name: <Link to={locations.itemDetail(item.id)}>{item.name}</Link> }} />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case PUBLISH_COLLECTION_SUCCESS:\n    case APPROVE_COLLECTION_SUCCESS:\n    case REJECT_COLLECTION_SUCCESS:\n    case SET_COLLECTION_MANAGERS_SUCCESS: {\n      const { collection } = tx.payload\n\n      const translationKey = {\n        [PUBLISH_COLLECTION_SUCCESS]: 'collection_published',\n        [APPROVE_COLLECTION_SUCCESS]: 'collection_approved',\n        [REJECT_COLLECTION_SUCCESS]: 'collection_rejected',\n        [SET_COLLECTION_MANAGERS_SUCCESS]: 'updated_collection_managers'\n      }[tx.actionType]\n\n      return (\n        <TransactionDetail\n          collectionId={collection.id}\n          text={\n            <T\n              id={`transaction.${translationKey}`}\n              values={{ name: <Link to={locations.collectionDetail(collection.id)}>{collection.name}</Link> }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case MINT_COLLECTION_ITEMS_SUCCESS: {\n      const { collection, mints } = tx.payload\n\n      const isSingleMint = mints.length === 1\n      const item = mints[0].item\n      const transactionDetailData = isSingleMint ? { item } : { collection }\n      return (\n        <TransactionDetail\n          {...transactionDetailData}\n          text={\n            <T\n              id={isSingleMint ? 'transaction.collection_item_minted' : 'transaction.collection_items_minted'}\n              values={{\n                collectionName: <Link to={locations.collectionDetail(collection.id)}>{collection.name}</Link>,\n                itemName: <Link to={locations.itemDetail(item.id)}>{item.name}</Link>,\n                count: getTotalAmountOfMintedItems(mints)\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case SET_COLLECTION_MINTERS_SUCCESS: {\n      const { chainId } = tx\n      const { collection, minters } = tx.payload\n\n      const addedMinters = difference(minters, collection.minters)\n      const removedMinters = difference(collection.minters, minters)\n\n      const saleAddress = getSaleAddress(chainId)\n\n      const hadSaleAccess = includes(removedMinters, saleAddress)\n      const hasNewSaleAccess = includes(addedMinters, saleAddress)\n\n      let translationId = ''\n      if (hadSaleAccess) {\n        translationId = 'transaction.unset_collection_on_sale'\n      } else if (hasNewSaleAccess) {\n        translationId = 'transaction.set_collection_on_sale'\n      } else {\n        translationId = 'transaction.updated_collection_minters'\n      }\n      return (\n        <TransactionDetail\n          collectionId={collection.id}\n          text={\n            <T\n              id={translationId}\n              values={{\n                name: <Link to={locations.collectionDetail(collection.id)}>{collection.name}</Link>\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case SET_ENS_RESOLVER_SUCCESS: {\n      const { address, ens } = tx.payload\n      return (\n        <TransactionDetail\n          address={address}\n          text={\n            <T\n              id=\"transaction.set_ens_resolver\"\n              values={{\n                address: <Profile address={address} />,\n                name: ens.subdomain\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n    case SET_ENS_CONTENT_SUCCESS: {\n      const { address, ens, land } = tx.payload\n      return (\n        <TransactionDetail\n          address={address}\n          text={\n            land ? (\n              <T\n                id=\"transaction.set_ens_content\"\n                values={{\n                  address: <Profile address={address} />,\n                  name: ens.subdomain,\n                  land_link: <Link to={locations.landDetail(land.id)}>{land.name}</Link>\n                }}\n              />\n            ) : (\n              <T\n                id=\"transaction.unset_ens_content\"\n                values={{\n                  address: <Profile address={address} />,\n                  name: ens.subdomain\n                }}\n              />\n            )\n          }\n          tx={tx}\n        />\n      )\n    }\n    case ALLOW_CLAIM_MANA_SUCCESS: {\n      const { address, allowance } = tx.payload\n      return (\n        <TransactionDetail\n          address={address}\n          text={\n            isEnoughClaimMana(allowance) ? (\n              <T id=\"transaction.allowed_claim_mana\" values={{ address: <Profile address={address} /> }} />\n            ) : (\n              <T id=\"transaction.disallowed_claim_mana\" values={{ address: <Profile address={address} /> }} />\n            )\n          }\n          tx={tx}\n        />\n      )\n    }\n    case CLAIM_NAME_SUCCESS: {\n      const { address, ens } = tx.payload\n      return (\n        <TransactionDetail\n          address={address}\n          text={\n            <T\n              id=\"transaction.claim_name\"\n              values={{\n                address: <Profile address={address} />,\n                name: ens.subdomain\n              }}\n            />\n          }\n          tx={tx}\n        />\n      )\n    }\n\n    case RESCUE_ITEMS_CHUNK_SUCCESS: {\n      const { count, collectionId, collectionName } = tx.payload\n      return (\n        <TransactionDetail\n          tx={tx}\n          collectionId={collectionId}\n          text={\n            <T\n              id=\"transaction.rescue_items\"\n              values={{ count, collectionName: <Link to={locations.collectionDetail(collectionId)}>{collectionName}</Link> }}\n            />\n          }\n        />\n      )\n    }\n    default:\n      return null\n  }\n}\n\nexport default React.memo(Transaction)\n"]},"metadata":{},"sourceType":"module"}