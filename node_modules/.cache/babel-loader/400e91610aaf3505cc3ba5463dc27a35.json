{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ShaderDefineExpression } from '../shaderDefineExpression';\n/** @hidden */\n\nvar ShaderDefineArithmeticOperator =\n/** @class */\nfunction (_super) {\n  __extends(ShaderDefineArithmeticOperator, _super);\n\n  function ShaderDefineArithmeticOperator(define, operand, testValue) {\n    var _this = _super.call(this) || this;\n\n    _this.define = define;\n    _this.operand = operand;\n    _this.testValue = testValue;\n    return _this;\n  }\n\n  ShaderDefineArithmeticOperator.prototype.isTrue = function (preprocessors) {\n    var value = preprocessors[this.define];\n\n    if (value === undefined) {\n      value = this.define;\n    }\n\n    var condition = false;\n    var left = parseInt(value);\n    var right = parseInt(this.testValue);\n\n    switch (this.operand) {\n      case \">\":\n        condition = left > right;\n        break;\n\n      case \"<\":\n        condition = left < right;\n        break;\n\n      case \"<=\":\n        condition = left <= right;\n        break;\n\n      case \">=\":\n        condition = left >= right;\n        break;\n\n      case \"==\":\n        condition = left === right;\n        break;\n    }\n\n    return condition;\n  };\n\n  return ShaderDefineArithmeticOperator;\n}(ShaderDefineExpression);\n\nexport { ShaderDefineArithmeticOperator };","map":null,"metadata":{},"sourceType":"module"}