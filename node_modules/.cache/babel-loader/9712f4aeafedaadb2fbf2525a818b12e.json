{"ast":null,"code":"import _slicedToArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/opt/work/NZ_test/src/components/CollectionsPage/CollectionCard/CollectionCard.tsx\";\n\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Confirm } from 'decentraland-ui';\nimport classNames from 'classnames';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport CollectionStatus from 'components/CollectionStatus';\nimport CollectionImage from 'components/CollectionImage';\nimport { locations } from 'routing/locations';\nimport { getCollectionType } from 'modules/collection/utils';\nimport { OptionsDropdown } from '../../OptionsDropdown';\nimport './CollectionCard.css';\n\nvar CollectionCard = function CollectionCard(props) {\n  var collection = props.collection,\n      onDeleteCollection = props.onDeleteCollection,\n      itemCount = props.itemCount;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isDeleting = _React$useState2[0],\n      setIsDeleting = _React$useState2[1];\n\n  var handleCancelDeleteCollection = React.useCallback(function () {\n    return setIsDeleting(false);\n  }, [setIsDeleting]);\n  var handleDeleteConfirmation = React.useCallback(function () {\n    return setIsDeleting(true);\n  }, [setIsDeleting]);\n  var handleDeleteCollection = React.useCallback(function () {\n    setIsDeleting(false);\n    onDeleteCollection();\n  }, [setIsDeleting, onDeleteCollection]);\n  var type = getCollectionType(collection);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CollectionCard is-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, !collection.isPublished && /*#__PURE__*/React.createElement(OptionsDropdown, {\n    className: classNames({\n      'empty-collection-options': itemCount === 0\n    }, 'options-dropdown'),\n    options: [{\n      text: t('global.delete'),\n      handler: handleDeleteConfirmation\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: locations.collectionDetail(collection.id, type),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CollectionImage, {\n    collectionId: collection.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    title: collection.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CollectionStatus, {\n    collection: collection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }), \" \", collection.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, t(\"collection.type.\".concat(type)), \"\\xA0\\xB7\\xA0\", t('collection_card.item_count', {\n    count: itemCount\n  }))))), /*#__PURE__*/React.createElement(Confirm, {\n    size: \"tiny\",\n    open: isDeleting,\n    header: t('collection_card.confirm_delete_header', {\n      name: collection.name\n    }),\n    content: t('collection_card.confirm_delete_content', {\n      name: collection.name\n    }),\n    confirmButton: /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }\n    }, t('global.confirm')),\n    cancelButton: /*#__PURE__*/React.createElement(Button, {\n      secondary: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }, t('global.cancel')),\n    onCancel: handleCancelDeleteCollection,\n    onConfirm: handleDeleteCollection,\n    className: \"delete-collection-confirm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default React.memo(CollectionCard);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/CollectionsPage/CollectionCard/CollectionCard.tsx"],"names":["React","Link","Button","Card","Confirm","classNames","t","CollectionStatus","CollectionImage","locations","getCollectionType","OptionsDropdown","CollectionCard","props","collection","onDeleteCollection","itemCount","useState","isDeleting","setIsDeleting","handleCancelDeleteCollection","useCallback","handleDeleteConfirmation","handleDeleteCollection","type","isPublished","text","handler","collectionDetail","id","name","count","memo"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Card, Confirm } from 'decentraland-ui'\nimport classNames from 'classnames'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport CollectionStatus from 'components/CollectionStatus'\nimport CollectionImage from 'components/CollectionImage'\nimport { locations } from 'routing/locations'\nimport { getCollectionType } from 'modules/collection/utils'\nimport { OptionsDropdown } from '../../OptionsDropdown'\nimport { Props } from './CollectionCard.types'\nimport './CollectionCard.css'\n\nconst CollectionCard = (props: Props) => {\n  const { collection, onDeleteCollection, itemCount } = props\n  const [isDeleting, setIsDeleting] = React.useState(false)\n\n  const handleCancelDeleteCollection = React.useCallback(() => setIsDeleting(false), [setIsDeleting])\n  const handleDeleteConfirmation = React.useCallback(() => setIsDeleting(true), [setIsDeleting])\n  const handleDeleteCollection = React.useCallback(() => {\n    setIsDeleting(false)\n    onDeleteCollection()\n  }, [setIsDeleting, onDeleteCollection])\n\n  const type = getCollectionType(collection)\n\n  return (\n    <>\n      <div className=\"CollectionCard is-card\">\n        {!collection.isPublished && (\n          <OptionsDropdown\n            className={classNames({ 'empty-collection-options': itemCount === 0 }, 'options-dropdown')}\n            options={[{ text: t('global.delete'), handler: handleDeleteConfirmation }]}\n          />\n        )}\n        <Link to={locations.collectionDetail(collection.id, type)}>\n          <CollectionImage collectionId={collection.id} />\n          <Card.Content>\n            <div className=\"text\" title={collection.name}>\n              <CollectionStatus collection={collection} /> {collection.name}\n            </div>\n            <div className=\"subtitle\">\n              {t(`collection.type.${type}`)}&nbsp;·&nbsp;\n              {t('collection_card.item_count', { count: itemCount })}\n            </div>\n          </Card.Content>\n        </Link>\n      </div>\n      <Confirm\n        size=\"tiny\"\n        open={isDeleting}\n        header={t('collection_card.confirm_delete_header', { name: collection.name })}\n        content={t('collection_card.confirm_delete_content', { name: collection.name })}\n        confirmButton={<Button primary>{t('global.confirm')}</Button>}\n        cancelButton={<Button secondary>{t('global.cancel')}</Button>}\n        onCancel={handleCancelDeleteCollection}\n        onConfirm={handleDeleteCollection}\n        className=\"delete-collection-confirm\"\n      />\n    </>\n  )\n}\n\nexport default React.memo(CollectionCard)\n"]},"metadata":{},"sourceType":"module"}