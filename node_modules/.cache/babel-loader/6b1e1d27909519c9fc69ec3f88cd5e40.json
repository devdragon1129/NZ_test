{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/EditCollectionNameModal/EditCollectionNameModal.tsx\";\nimport * as React from 'react';\nimport { ModalNavigation, ModalContent, ModalActions, Button, Field, Form } from 'decentraland-ui';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { CollectionType, COLLECTION_NAME_MAX_LENGTH, TP_COLLECTION_NAME_MAX_LENGTH } from 'modules/collection/types';\nimport { getCollectionType } from 'modules/collection/utils';\n\nvar EditCollectionNameModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(EditCollectionNameModal, _React$PureComponent);\n\n  function EditCollectionNameModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditCollectionNameModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditCollectionNameModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: _this.props.metadata.collection.name\n    };\n\n    _this.handleNameChange = function (_event, _ref) {\n      var value = _ref.value;\n      var nameMaxLength = getCollectionType(_this.props.metadata.collection) === CollectionType.THIRD_PARTY ? TP_COLLECTION_NAME_MAX_LENGTH : COLLECTION_NAME_MAX_LENGTH;\n\n      _this.setState({\n        name: value.slice(0, nameMaxLength)\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var name = _this.state.name;\n      var _this$props = _this.props,\n          metadata = _this$props.metadata,\n          onSubmit = _this$props.onSubmit;\n      var _ref2 = metadata,\n          collection = _ref2.collection;\n\n      if (name) {\n        onSubmit(_objectSpread({}, collection, {\n          name: name\n        }));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(EditCollectionNameModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          modalName = _this$props2.name,\n          onClose = _this$props2.onClose,\n          isLoading = _this$props2.isLoading;\n      var name = this.state.name;\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: modalName,\n        onClose: onClose,\n        size: \"tiny\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('edit_collection_name_modal.title'),\n        subtitle: t('edit_collection_name_modal.subtitle'),\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        label: t('global.name'),\n        value: name,\n        onChange: this.handleNameChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        loading: isLoading,\n        disabled: !name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, t('global.save')))));\n    }\n  }]);\n\n  return EditCollectionNameModal;\n}(React.PureComponent);\n\nexport { EditCollectionNameModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/EditCollectionNameModal/EditCollectionNameModal.tsx"],"names":["React","ModalNavigation","ModalContent","ModalActions","Button","Field","Form","Modal","t","CollectionType","COLLECTION_NAME_MAX_LENGTH","TP_COLLECTION_NAME_MAX_LENGTH","getCollectionType","EditCollectionNameModal","state","name","props","metadata","collection","handleNameChange","_event","value","nameMaxLength","THIRD_PARTY","setState","slice","handleSubmit","onSubmit","modalName","onClose","isLoading","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { ModalNavigation, ModalContent, ModalActions, Button, Field, InputOnChangeData, Form } from 'decentraland-ui'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { CollectionType, COLLECTION_NAME_MAX_LENGTH, TP_COLLECTION_NAME_MAX_LENGTH } from 'modules/collection/types'\nimport { Props, State, EditCollectionNameModalMetadata } from './EditCollectionNameModal.types'\nimport { getCollectionType } from 'modules/collection/utils'\n\nexport default class EditCollectionNameModal extends React.PureComponent<Props, State> {\n  state: State = {\n    name: (this.props.metadata as EditCollectionNameModalMetadata).collection.name\n  }\n\n  handleNameChange = (_event: React.ChangeEvent<HTMLInputElement>, { value }: InputOnChangeData) => {\n    const nameMaxLength =\n      getCollectionType(this.props.metadata.collection) === CollectionType.THIRD_PARTY\n        ? TP_COLLECTION_NAME_MAX_LENGTH\n        : COLLECTION_NAME_MAX_LENGTH\n    this.setState({ name: value.slice(0, nameMaxLength) })\n  }\n\n  handleSubmit = () => {\n    const { name } = this.state\n    const { metadata, onSubmit } = this.props\n    const { collection } = metadata as EditCollectionNameModalMetadata\n    if (name) {\n      onSubmit({ ...collection, name })\n    }\n  }\n\n  render() {\n    const { name: modalName, onClose, isLoading } = this.props\n    const { name } = this.state\n    return (\n      <Modal name={modalName} onClose={onClose} size=\"tiny\">\n        <ModalNavigation\n          title={t('edit_collection_name_modal.title')}\n          subtitle={t('edit_collection_name_modal.subtitle')}\n          onClose={onClose}\n        />\n        <Form onSubmit={this.handleSubmit}>\n          <ModalContent>\n            <Field label={t('global.name')} value={name} onChange={this.handleNameChange} />\n          </ModalContent>\n          <ModalActions>\n            <Button primary loading={isLoading} disabled={!name}>\n              {t('global.save')}\n            </Button>\n          </ModalActions>\n        </Form>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}