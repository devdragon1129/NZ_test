{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/ItemEditorPage/CenterPanel/AvatarColorDropdown/AvatarColorDropdown.tsx\";\nimport React from 'react';\nimport { Dropdown } from 'decentraland-ui';\nimport './AvatarColorDropdown.css';\n\nvar AvatarColorDropdown = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AvatarColorDropdown, _React$PureComponent);\n\n  function AvatarColorDropdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AvatarColorDropdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AvatarColorDropdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleAvatarColorChange = function (_event, data) {\n      var _this$props = _this.props,\n          currentColor = _this$props.currentColor,\n          colors = _this$props.colors,\n          onChange = _this$props.onChange;\n\n      if (currentColor.toHexString() !== data.value) {\n        var newColor = colors.find(function (color) {\n          return color.toHexString() === data.value;\n        });\n        onChange(newColor);\n      }\n    };\n\n    _this.renderItem = function (color, index) {\n      var hexString = color.toHexString();\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        key: index,\n        value: hexString,\n        onClick: _this.handleAvatarColorChange,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"color\",\n        style: {\n          background: hexString\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(AvatarColorDropdown, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          currentColor = _this$props2.currentColor,\n          colors = _this$props2.colors,\n          label = _this$props2.label;\n      var currentHexString = currentColor.toHexString();\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        inline: true,\n        direction: \"right\",\n        className: \"AvatarColorDropdown Select\",\n        value: currentHexString,\n        trigger: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        }, label), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"value\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"color\",\n          style: {\n            background: currentHexString\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"handle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        className: \"colors-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, colors.map(this.renderItem)));\n    }\n  }]);\n\n  return AvatarColorDropdown;\n}(React.PureComponent);\n\nexport { AvatarColorDropdown as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ItemEditorPage/CenterPanel/AvatarColorDropdown/AvatarColorDropdown.tsx"],"names":["React","Dropdown","AvatarColorDropdown","handleAvatarColorChange","_event","data","props","currentColor","colors","onChange","toHexString","value","newColor","find","color","renderItem","index","hexString","background","label","currentHexString","map","PureComponent"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAA4C,iBAA5C;AAEA,OAAO,2BAAP;;IAEqBC,mB;;;;;;;;;;;;;;;;UACnBC,uB,GAA0B,UAACC,MAAD,EAA+CC,IAA/C,EAA2E;AAAA,wBACxD,MAAKC,KADmD;AAAA,UAC3FC,YAD2F,eAC3FA,YAD2F;AAAA,UAC7EC,MAD6E,eAC7EA,MAD6E;AAAA,UACrEC,QADqE,eACrEA,QADqE;;AAEnG,UAAIF,YAAY,CAACG,WAAb,OAA+BL,IAAI,CAACM,KAAxC,EAA+C;AAC7C,YAAMC,QAAQ,GAAGJ,MAAM,CAACK,IAAP,CAAY,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACJ,WAAN,OAAwBL,IAAI,CAACM,KAAjC;AAAA,SAAjB,CAAjB;AACAF,QAAAA,QAAQ,CAACG,QAAD,CAAR;AACD;AACF,K;;UAEDG,U,GAAa,UAACD,KAAD,EAAgBE,KAAhB,EAAkC;AAC7C,UAAMC,SAAS,GAAGH,KAAK,CAACJ,WAAN,EAAlB;AACA,0BACE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,GAAG,EAAEM,KAApB;AAA2B,QAAA,KAAK,EAAEC,SAAlC;AAA6C,QAAA,OAAO,EAAE,MAAKd,uBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAE;AAAEe,UAAAA,UAAU,EAAED;AAAd,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,K;;;;;;;6BAEQ;AAAA,yBACiC,KAAKX,KADtC;AAAA,UACCC,YADD,gBACCA,YADD;AAAA,UACeC,MADf,gBACeA,MADf;AAAA,UACuBW,KADvB,gBACuBA,KADvB;AAGP,UAAMC,gBAAgB,GAAGb,YAAY,CAACG,WAAb,EAAzB;AACA,0BACE,oBAAC,QAAD;AACE,QAAA,MAAM,MADR;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,SAAS,EAAC,4BAHZ;AAIE,QAAA,KAAK,EAAEU,gBAJT;AAKE,QAAA,OAAO,eACL,uDACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBD,KAAxB,CADF,eAEE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,OAAb;AAAqB,UAAA,KAAK,EAAE;AAAED,YAAAA,UAAU,EAAEE;AAAd,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFF,eAKE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAeE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,SAAS,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwCZ,MAAM,CAACa,GAAP,CAAW,KAAKN,UAAhB,CAAxC,CAfF,CADF;AAmBD;;;;EAzC8Cf,KAAK,CAACsB,a;;SAAlCpB,mB","sourcesContent":["import React from 'react'\nimport { Color4 } from 'decentraland-ecs'\nimport { Dropdown, DropdownItemProps } from 'decentraland-ui'\nimport { Props } from './AvatarColorDropdown.types'\nimport './AvatarColorDropdown.css'\n\nexport default class AvatarColorDropdown extends React.PureComponent<Props> {\n  handleAvatarColorChange = (_event: React.SyntheticEvent<HTMLDivElement>, data: DropdownItemProps) => {\n    const { currentColor, colors, onChange } = this.props\n    if (currentColor.toHexString() !== data.value) {\n      const newColor = colors.find(color => color.toHexString() === data.value)\n      onChange(newColor!)\n    }\n  }\n\n  renderItem = (color: Color4, index: number) => {\n    const hexString = color.toHexString()\n    return (\n      <Dropdown.Item key={index} value={hexString} onClick={this.handleAvatarColorChange}>\n        <i className=\"color\" style={{ background: hexString }} />\n      </Dropdown.Item>\n    )\n  }\n\n  render() {\n    const { currentColor, colors, label } = this.props\n\n    const currentHexString = currentColor.toHexString()\n    return (\n      <Dropdown\n        inline\n        direction=\"right\"\n        className=\"AvatarColorDropdown Select\"\n        value={currentHexString}\n        trigger={\n          <>\n            <div className=\"label\">{label}</div>\n            <div className=\"value\">\n              <i className=\"color\" style={{ background: currentHexString }} />\n            </div>\n            <div className=\"handle\" />\n          </>\n        }\n      >\n        <Dropdown.Menu className=\"colors-menu\">{colors.map(this.renderItem)}</Dropdown.Menu>\n      </Dropdown>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}