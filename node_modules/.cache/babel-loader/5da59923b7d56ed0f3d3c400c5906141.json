{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getRangeDef(keyword) {\n  return function () {\n    return {\n      keyword: keyword,\n      type: \"number\",\n      schemaType: \"array\",\n      macro: function macro(_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            min = _ref2[0],\n            max = _ref2[1];\n\n        validateRangeSchema(min, max);\n        return keyword === \"range\" ? {\n          minimum: min,\n          maximum: max\n        } : {\n          exclusiveMinimum: min,\n          exclusiveMaximum: max\n        };\n      },\n      metaSchema: {\n        type: \"array\",\n        minItems: 2,\n        maxItems: 2,\n        items: {\n          type: \"number\"\n        }\n      }\n    };\n  };\n\n  function validateRangeSchema(min, max) {\n    if (min > max || keyword === \"exclusiveRange\" && min === max) {\n      throw new Error(\"There are no numbers in range\");\n    }\n  }\n}\n\nexports.default = getRangeDef;","map":null,"metadata":{},"sourceType":"script"}