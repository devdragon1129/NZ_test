{"ast":null,"code":"import { GLTFLoader, ArrayItem } from \"../glTFLoader\";\nvar NAME = \"EXT_texture_webp\";\n/**\r\n * [Specification](https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Vendor/EXT_texture_webp/)\r\n */\n\nvar EXT_texture_webp =\n/** @class */\nfunction () {\n  /** @hidden */\n  function EXT_texture_webp(loader) {\n    /** The name of this extension. */\n    this.name = NAME;\n    this._loader = loader;\n    this.enabled = loader.isExtensionUsed(NAME);\n  }\n  /** @hidden */\n\n\n  EXT_texture_webp.prototype.dispose = function () {\n    this._loader = null;\n  };\n  /** @hidden */\n\n\n  EXT_texture_webp.prototype._loadTextureAsync = function (context, texture, assign) {\n    var _this = this;\n\n    return GLTFLoader.LoadExtensionAsync(context, texture, this.name, function (extensionContext, extension) {\n      var sampler = texture.sampler == undefined ? GLTFLoader.DefaultSampler : ArrayItem.Get(context + \"/sampler\", _this._loader.gltf.samplers, texture.sampler);\n      var image = ArrayItem.Get(extensionContext + \"/source\", _this._loader.gltf.images, extension.source);\n      return _this._loader._createTextureAsync(context, sampler, image, function (babylonTexture) {\n        assign(babylonTexture);\n      });\n    });\n  };\n\n  return EXT_texture_webp;\n}();\n\nexport { EXT_texture_webp };\nGLTFLoader.RegisterExtension(NAME, function (loader) {\n  return new EXT_texture_webp(loader);\n});","map":null,"metadata":{},"sourceType":"module"}