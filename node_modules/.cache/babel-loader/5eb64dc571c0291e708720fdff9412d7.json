{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeRequestOptions = exports.applySomeDefaults = exports.applyDefaults = exports.retry = exports.delay = void 0;\n\nvar ms_1 = __importDefault(require(\"ms\"));\n\nfunction delay(time) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, (0, ms_1.default)(time));\n  });\n}\n\nexports.delay = delay;\n\nfunction retry(_x, _x2) {\n  return _retry.apply(this, arguments);\n}\n\nfunction _retry() {\n  _retry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(execution, attempts) {\n    var waitTime,\n        failedAttemptCallback,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            waitTime = _args.length > 2 && _args[2] !== undefined ? _args[2] : '1s';\n            failedAttemptCallback = _args.length > 3 ? _args[3] : undefined;\n\n          case 2:\n            if (!(attempts > 0)) {\n              _context.next = 21;\n              break;\n            }\n\n            _context.prev = 3;\n            _context.next = 6;\n            return execution();\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n            attempts--;\n\n            if (!(attempts > 0)) {\n              _context.next = 18;\n              break;\n            }\n\n            if (failedAttemptCallback) {\n              failedAttemptCallback(attempts);\n            }\n\n            _context.next = 16;\n            return delay(waitTime);\n\n          case 16:\n            _context.next = 19;\n            break;\n\n          case 18:\n            throw _context.t0;\n\n          case 19:\n            _context.next = 2;\n            break;\n\n          case 21:\n            throw new Error('Please specify more than one attempt for the retry function');\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 9]]);\n  }));\n  return _retry.apply(this, arguments);\n}\n\nexports.retry = retry;\n/** Add defaults to missing properties in the partial object */\n\nfunction applyDefaults(defaults, partial) {\n  return _objectSpread({}, defaults, partial);\n}\n\nexports.applyDefaults = applyDefaults;\n/** Add some defaults to missing properties in the partial object. This means that the object is not yet complete */\n\nfunction applySomeDefaults(defaults, partial) {\n  return _objectSpread({}, defaults, partial);\n}\n\nexports.applySomeDefaults = applySomeDefaults;\n/**  As headers field is Record<string, string> type, then when merging request Options\n     it's needed to merge the array instead of just applying the defaults.           */\n\nfunction mergeRequestOptions(target, source) {\n  var _a, _b;\n\n  var combinedHeaders = _objectSpread({}, (_a = target) === null || _a === void 0 ? void 0 : _a.headers, source === null || source === void 0 ? void 0 : source.headers);\n\n  var combinedCookies = _objectSpread({}, (_b = target) === null || _b === void 0 ? void 0 : _b.cookies, source === null || source === void 0 ? void 0 : source.cookies);\n\n  return _objectSpread({}, target, source, {\n    headers: combinedHeaders,\n    cookies: combinedCookies\n  });\n}\n\nexports.mergeRequestOptions = mergeRequestOptions;","map":null,"metadata":{},"sourceType":"script"}