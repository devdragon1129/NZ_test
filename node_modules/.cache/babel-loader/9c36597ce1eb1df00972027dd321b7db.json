{"ast":null,"code":"/**\n * Format a number of bytes into it's proper size.\n * https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript\n */\nexport var formatBytes = function formatBytes(bytes) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  if (bytes < 0) return 'N/A';\n  if (bytes === 0) return '0 Bytes';\n  var k = 1024;\n  var dm = decimals < 0 ? 0 : decimals;\n  var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  var i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/lib/number.ts"],"names":["formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAyC;AAAA,MAAzBC,QAAyB,uEAAN,CAAM;AAClE,MAAID,KAAK,GAAG,CAAZ,EAAe,OAAO,KAAP;AACf,MAAIA,KAAK,KAAK,CAAd,EAAiB,OAAO,SAAP;AAEjB,MAAME,CAAC,GAAG,IAAV;AACA,MAAMC,EAAE,GAAGF,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmBA,QAA9B;AACA,MAAMG,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,CAAd;AAEA,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASR,KAAT,IAAkBM,IAAI,CAACE,GAAL,CAASN,CAAT,CAA7B,CAAV;AAEA,SAAOO,UAAU,CAAC,CAACT,KAAK,GAAGM,IAAI,CAACI,GAAL,CAASR,CAAT,EAAYG,CAAZ,CAAT,EAAyBM,OAAzB,CAAiCR,EAAjC,CAAD,CAAV,GAAmD,GAAnD,GAAyDC,KAAK,CAACC,CAAD,CAArE;AACD,CAXM","sourcesContent":["/**\n * Format a number of bytes into it's proper size.\n * https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript\n */\nexport const formatBytes = (bytes: number, decimals: number = 1) => {\n  if (bytes < 0) return 'N/A'\n  if (bytes === 0) return '0 Bytes'\n\n  const k = 1024\n  const dm = decimals < 0 ? 0 : decimals\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i]\n}\n"]},"metadata":{},"sourceType":"module"}