{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"../../compile/codegen\");\n\nvar equal = require(\"fast-deep-equal\");\n\nvar error = {\n  message: \"should be equal to constant\",\n  params: function params(_ref) {\n    var schemaCode = _ref.schemaCode;\n    return codegen_1._(_templateObject || (_templateObject = _taggedTemplateLiteral([\"{allowedValue: \", \"}\"])), schemaCode);\n  }\n};\nvar def = {\n  keyword: \"const\",\n  $data: true,\n  error: error,\n  code: function code(cxt) {\n    var eql = cxt.gen.scopeValue(\"func\", {\n      ref: equal,\n      code: codegen_1._(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"require(\\\"ajv/dist/compile/equal\\\")\"])))\n    }); // TODO optimize for scalar values in schema\n\n    cxt.fail$data(codegen_1._(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"!\", \"(\", \", \", \")\"])), eql, cxt.data, cxt.schemaCode));\n  }\n};\nexports.default = def;","map":null,"metadata":{},"sourceType":"script"}