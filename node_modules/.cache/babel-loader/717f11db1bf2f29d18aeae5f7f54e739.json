{"ast":null,"code":"import { connect } from 'react-redux';\nimport { retrySync } from 'modules/sync/actions';\nimport { getCurrentProject } from 'modules/project/selectors';\nimport { getLoadingSet, getErrorSet } from 'modules/sync/selectors';\nimport { isLoggedIn, isLoggingIn } from 'modules/identity/selectors';\nimport QuotaExceededModal from './QuotaExceededModal';\n\nvar mapState = function mapState(state) {\n  return {\n    errors: getErrorSet(state),\n    loading: getLoadingSet(state),\n    currentProject: getCurrentProject(state),\n    isLoggingIn: isLoggingIn(state),\n    isLoggedIn: isLoggedIn(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onRetry: function onRetry() {\n      return dispatch(retrySync());\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(QuotaExceededModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/QuotaExceededModal/QuotaExceededModal.container.ts"],"names":["connect","retrySync","getCurrentProject","getLoadingSet","getErrorSet","isLoggedIn","isLoggingIn","QuotaExceededModal","mapState","state","errors","loading","currentProject","mapDispatch","dispatch","onRetry"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,wBAA3C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,4BAAxC;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,MAAM,EAAEN,WAAW,CAACK,KAAD,CADkC;AAErDE,IAAAA,OAAO,EAAER,aAAa,CAACM,KAAD,CAF+B;AAGrDG,IAAAA,cAAc,EAAEV,iBAAiB,CAACO,KAAD,CAHoB;AAIrDH,IAAAA,WAAW,EAAEA,WAAW,CAACG,KAAD,CAJ6B;AAKrDJ,IAAAA,UAAU,EAAEA,UAAU,CAACI,KAAD;AAL+B,GAAtC;AAAA,CAAjB;;AAQA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACb,SAAS,EAAV,CAAd;AAAA;AADuD,GAA9C;AAAA,CAApB;;AAIA,eAAeD,OAAO,CAACQ,QAAD,EAAWK,WAAX,CAAP,CAA+BN,kBAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { RootState } from 'modules/common/types'\nimport { retrySync } from 'modules/sync/actions'\nimport { getCurrentProject } from 'modules/project/selectors'\nimport { getLoadingSet, getErrorSet } from 'modules/sync/selectors'\nimport { isLoggedIn, isLoggingIn } from 'modules/identity/selectors'\nimport { MapDispatchProps, MapStateProps, MapDispatch } from './QuotaExceededModal.types'\nimport QuotaExceededModal from './QuotaExceededModal'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  errors: getErrorSet(state),\n  loading: getLoadingSet(state),\n  currentProject: getCurrentProject(state),\n  isLoggingIn: isLoggingIn(state),\n  isLoggedIn: isLoggedIn(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onRetry: () => dispatch(retrySync())\n})\n\nexport default connect(mapState, mapDispatch)(QuotaExceededModal)\n"]},"metadata":{},"sourceType":"module"}