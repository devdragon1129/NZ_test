{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { getLocation } from 'connected-react-router';\nimport { getUserProjects } from 'modules/project/selectors';\nimport { SortBy } from './types';\nexport var PAGE_SIZE = 12;\nexport var getState = function getState(state) {\n  return state.ui.dashboard;\n};\nexport var didCreate = function didCreate(state) {\n  return getState(state).didCreate;\n};\nexport var didSync = function didSync(state) {\n  return getState(state).didSync;\n};\nexport var didDismissSyncedToast = function didDismissSyncedToast(state) {\n  return getState(state).didDismissSyncedToast;\n};\nexport var didDismissSignInToast = function didDismissSignInToast(state) {\n  return getState(state).didDismissSignInToast;\n};\nexport var getTotalPages = createSelector(getUserProjects, function (projects) {\n  return Math.max(Math.ceil(Object.keys(projects).length / PAGE_SIZE), 1);\n});\nexport var getPage = createSelector(function (state) {\n  return getLocation(state);\n}, getTotalPages, function (location, totalPages) {\n  var params = new URLSearchParams(location.search);\n  var page = parseInt(params.get('page'), 10);\n\n  if (!page || page < 1) {\n    page = 1;\n  }\n\n  if (page > totalPages) {\n    page = totalPages;\n  }\n\n  return page;\n});\nexport var getSortBy = createSelector(function (state) {\n  return getLocation(state);\n}, function (location) {\n  var params = new URLSearchParams(location.search);\n  var sortBy = SortBy.NEWEST;\n\n  for (var _i = 0, _Object$keys = Object.keys(SortBy); _i < _Object$keys.length; _i++) {\n    var upperCaseType = _Object$keys[_i];\n    var paramType = params.get('sort_by');\n\n    if (paramType) {\n      paramType = paramType.toLowerCase();\n      var type = upperCaseType.toLowerCase();\n\n      if (paramType === type) {\n        sortBy = type;\n      }\n    }\n  }\n\n  return sortBy;\n});\nexport var getProjects = createSelector(getPage, getSortBy, getUserProjects, function (page, sortBy, projects) {\n  var limit = PAGE_SIZE;\n  var offset = (page - 1) * PAGE_SIZE;\n  return Object.values(projects).sort(function (a, b) {\n    switch (sortBy) {\n      case SortBy.NEWEST:\n        {\n          return +new Date(a.createdAt) > +new Date(b.createdAt) ? -1 : 1;\n        }\n\n      case SortBy.NAME:\n        {\n          return a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1;\n        }\n\n      case SortBy.SIZE:\n        {\n          return a.layout.rows * a.layout.cols > b.layout.cols * b.layout.rows ? -1 : 1;\n        }\n    }\n  }).slice(offset, offset + limit);\n});\nexport var didMigrate = function didMigrate(state) {\n  return getState(state).didMigrate;\n};\nexport var needsMigration = function needsMigration(state) {\n  return getState(state).needsMigration;\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/ui/dashboard/selectors.ts"],"names":["createSelector","getLocation","getUserProjects","SortBy","PAGE_SIZE","getState","state","ui","dashboard","didCreate","didSync","didDismissSyncedToast","didDismissSignInToast","getTotalPages","projects","Math","max","ceil","Object","keys","length","getPage","location","totalPages","params","URLSearchParams","search","page","parseInt","get","getSortBy","sortBy","NEWEST","upperCaseType","paramType","toLowerCase","type","getProjects","limit","offset","values","sort","a","b","Date","createdAt","NAME","title","SIZE","layout","rows","cols","slice","didMigrate","needsMigration"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AAGA,SAASC,eAAT,QAAgC,2BAAhC;AAEA,SAASC,MAAT,QAAuB,SAAvB;AAEA,OAAO,IAAMC,SAAS,GAAG,EAAlB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsBA,KAAK,CAACC,EAAN,CAASC,SAA/B;AAAA,CAAjB;AAEP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACH,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBG,SAAtC;AAAA,CAAlB;AAEP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACJ,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBI,OAAtC;AAAA,CAAhB;AAEP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACL,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBK,qBAAtC;AAAA,CAA9B;AAEP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACN,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBM,qBAAtC;AAAA,CAA9B;AAEP,OAAO,IAAMC,aAAa,GAAGb,cAAc,CAAwCE,eAAxC,EAAyD,UAAAY,QAAQ;AAAA,SAC1GC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,IAAL,CAAUC,MAAM,CAACC,IAAP,CAAYL,QAAZ,EAAsBM,MAAtB,GAA+BhB,SAAzC,CAAT,EAA8D,CAA9D,CAD0G;AAAA,CAAjE,CAApC;AAIP,OAAO,IAAMiB,OAAO,GAAGrB,cAAc,CACnC,UAAAM,KAAK;AAAA,SAAIL,WAAW,CAAYK,KAAZ,CAAf;AAAA,CAD8B,EAEnCO,aAFmC,EAGnC,UAACS,QAAD,EAAWC,UAAX,EAA0B;AACxB,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,CAAf;AACA,MAAIC,IAAI,GAAGC,QAAQ,CAACJ,MAAM,CAACK,GAAP,CAAW,MAAX,CAAD,EAAsB,EAAtB,CAAnB;;AACA,MAAI,CAACF,IAAD,IAASA,IAAI,GAAG,CAApB,EAAuB;AACrBA,IAAAA,IAAI,GAAG,CAAP;AACD;;AACD,MAAIA,IAAI,GAAGJ,UAAX,EAAuB;AACrBI,IAAAA,IAAI,GAAGJ,UAAP;AACD;;AACD,SAAOI,IAAP;AACD,CAbkC,CAA9B;AAgBP,OAAO,IAAMG,SAAS,GAAG9B,cAAc,CACrC,UAAAM,KAAK;AAAA,SAAIL,WAAW,CAAYK,KAAZ,CAAf;AAAA,CADgC,EAErC,UAAAgB,QAAQ,EAAI;AACV,MAAME,MAAM,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,CAAf;AACA,MAAIK,MAAc,GAAG5B,MAAM,CAAC6B,MAA5B;;AACA,kCAA4Bd,MAAM,CAACC,IAAP,CAAYhB,MAAZ,CAA5B,kCAAiD;AAA5C,QAAM8B,aAAa,mBAAnB;AACH,QAAIC,SAAS,GAAGV,MAAM,CAACK,GAAP,CAAW,SAAX,CAAhB;;AACA,QAAIK,SAAJ,EAAe;AACbA,MAAAA,SAAS,GAAGA,SAAS,CAACC,WAAV,EAAZ;AACA,UAAMC,IAAI,GAAGH,aAAa,CAACE,WAAd,EAAb;;AACA,UAAID,SAAS,KAAKE,IAAlB,EAAwB;AACtBL,QAAAA,MAAM,GAAGK,IAAT;AACD;AACF;AACF;;AACD,SAAOL,MAAP;AACD,CAhBoC,CAAhC;AAmBP,OAAO,IAAMM,WAAW,GAAGrC,cAAc,CACvCqB,OADuC,EAEvCS,SAFuC,EAGvC5B,eAHuC,EAIvC,UAACyB,IAAD,EAAOI,MAAP,EAAejB,QAAf,EAA4B;AAC1B,MAAMwB,KAAK,GAAGlC,SAAd;AACA,MAAMmC,MAAM,GAAG,CAACZ,IAAI,GAAG,CAAR,IAAavB,SAA5B;AACA,SAAOc,MAAM,CAACsB,MAAP,CAAc1B,QAAd,EACJ2B,IADI,CACC,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACd,YAAQZ,MAAR;AACE,WAAK5B,MAAM,CAAC6B,MAAZ;AAAoB;AAClB,iBAAO,CAAC,IAAIY,IAAJ,CAASF,CAAC,CAACG,SAAX,CAAD,GAAyB,CAAC,IAAID,IAAJ,CAASD,CAAC,CAACE,SAAX,CAA1B,GAAkD,CAAC,CAAnD,GAAuD,CAA9D;AACD;;AACD,WAAK1C,MAAM,CAAC2C,IAAZ;AAAkB;AAChB,iBAAOJ,CAAC,CAACK,KAAF,CAAQZ,WAAR,KAAwBQ,CAAC,CAACI,KAAF,CAAQZ,WAAR,EAAxB,GAAgD,CAAhD,GAAoD,CAAC,CAA5D;AACD;;AACD,WAAKhC,MAAM,CAAC6C,IAAZ;AAAkB;AAChB,iBAAON,CAAC,CAACO,MAAF,CAASC,IAAT,GAAgBR,CAAC,CAACO,MAAF,CAASE,IAAzB,GAAgCR,CAAC,CAACM,MAAF,CAASE,IAAT,GAAgBR,CAAC,CAACM,MAAF,CAASC,IAAzD,GAAgE,CAAC,CAAjE,GAAqE,CAA5E;AACD;AATH;AAWD,GAbI,EAcJE,KAdI,CAcEb,MAdF,EAcUA,MAAM,GAAGD,KAdnB,CAAP;AAeD,CAtBsC,CAAlC;AAyBP,OAAO,IAAMe,UAAU,GAAG,SAAbA,UAAa,CAAC/C,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgB+C,UAAtC;AAAA,CAAnB;AACP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAChD,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBgD,cAAtC;AAAA,CAAvB","sourcesContent":["import { createSelector } from 'reselect'\nimport { Location } from 'history'\nimport { getLocation } from 'connected-react-router'\nimport { DataByKey } from 'decentraland-dapps/dist/lib/types'\nimport { RootState } from 'modules/common/types'\nimport { getUserProjects } from 'modules/project/selectors'\nimport { Project } from 'modules/project/types'\nimport { SortBy } from './types'\n\nexport const PAGE_SIZE = 12\n\nexport const getState = (state: RootState) => state.ui.dashboard\n\nexport const didCreate = (state: RootState) => getState(state).didCreate\n\nexport const didSync = (state: RootState) => getState(state).didSync\n\nexport const didDismissSyncedToast = (state: RootState) => getState(state).didDismissSyncedToast\n\nexport const didDismissSignInToast = (state: RootState) => getState(state).didDismissSignInToast\n\nexport const getTotalPages = createSelector<RootState, DataByKey<Project>, number>(getUserProjects, projects =>\n  Math.max(Math.ceil(Object.keys(projects).length / PAGE_SIZE), 1)\n)\n\nexport const getPage = createSelector<RootState, Location, number, number>(\n  state => getLocation<RootState>(state),\n  getTotalPages,\n  (location, totalPages) => {\n    const params = new URLSearchParams(location.search)\n    let page = parseInt(params.get('page')!, 10)\n    if (!page || page < 1) {\n      page = 1\n    }\n    if (page > totalPages) {\n      page = totalPages\n    }\n    return page\n  }\n)\n\nexport const getSortBy = createSelector<RootState, Location, SortBy>(\n  state => getLocation<RootState>(state),\n  location => {\n    const params = new URLSearchParams(location.search)\n    let sortBy: SortBy = SortBy.NEWEST\n    for (const upperCaseType of Object.keys(SortBy)) {\n      let paramType = params.get('sort_by')\n      if (paramType) {\n        paramType = paramType.toLowerCase()\n        const type = upperCaseType.toLowerCase()\n        if (paramType === type) {\n          sortBy = type as SortBy\n        }\n      }\n    }\n    return sortBy\n  }\n)\n\nexport const getProjects = createSelector<RootState, number, SortBy, DataByKey<Project>, Project[]>(\n  getPage,\n  getSortBy,\n  getUserProjects,\n  (page, sortBy, projects) => {\n    const limit = PAGE_SIZE\n    const offset = (page - 1) * PAGE_SIZE\n    return Object.values(projects)\n      .sort((a, b) => {\n        switch (sortBy) {\n          case SortBy.NEWEST: {\n            return +new Date(a.createdAt) > +new Date(b.createdAt) ? -1 : 1\n          }\n          case SortBy.NAME: {\n            return a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1\n          }\n          case SortBy.SIZE: {\n            return a.layout.rows * a.layout.cols > b.layout.cols * b.layout.rows ? -1 : 1\n          }\n        }\n      })\n      .slice(offset, offset + limit)\n  }\n)\n\nexport const didMigrate = (state: RootState) => getState(state).didMigrate\nexport const needsMigration = (state: RootState) => getState(state).needsMigration\n"]},"metadata":{},"sourceType":"module"}