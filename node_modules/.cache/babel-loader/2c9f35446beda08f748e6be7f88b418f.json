{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/MoveItemToCollectionModal/MoveItemToCollectionModal.tsx\";\nimport * as React from 'react';\nimport { ModalNavigation, ModalContent, ModalActions, Button } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport CollectionDropdown from 'components/CollectionDropdown';\nimport { isTPCollection } from 'modules/collection/utils';\n\nvar MoveItemToCollectionModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MoveItemToCollectionModal, _React$PureComponent);\n\n  function MoveItemToCollectionModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MoveItemToCollectionModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MoveItemToCollectionModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleChangeCollection = function (collection) {\n      _this.setState({\n        collection: collection\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MoveItemToCollectionModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          onClose = _this$props.onClose,\n          onSubmit = _this$props.onSubmit,\n          metadata = _this$props.metadata,\n          isLoading = _this$props.isLoading;\n      var _ref = metadata,\n          item = _ref.item;\n      var collection = this.state.collection;\n      return /*#__PURE__*/React.createElement(Modal, {\n        name: name,\n        onClose: onClose,\n        size: \"tiny\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('move_item_to_collection_modal.title'),\n        subtitle: t('move_item_to_collection_modal.subtitle'),\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ModalContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CollectionDropdown, {\n        value: collection,\n        onChange: this.handleChangeCollection,\n        filter: function filter(collection) {\n          return !isTPCollection(collection);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        onClick: function onClick() {\n          return collection && onSubmit(item, collection.id);\n        },\n        loading: isLoading,\n        disabled: !item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, t('move_item_to_collection_modal.confirm'))));\n    }\n  }]);\n\n  return MoveItemToCollectionModal;\n}(React.PureComponent);\n\nexport { MoveItemToCollectionModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/MoveItemToCollectionModal/MoveItemToCollectionModal.tsx"],"names":["React","ModalNavigation","ModalContent","ModalActions","Button","t","Modal","CollectionDropdown","isTPCollection","MoveItemToCollectionModal","state","handleChangeCollection","collection","setState","props","name","onClose","onSubmit","metadata","isLoading","item","id","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,YAAxC,EAAsDC,MAAtD,QAAoE,iBAApE;AACA,SAASC,CAAT,QAAkB,mDAAlB;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AAGA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,SAASC,cAAT,QAA+B,0BAA/B;;IAEqBC,yB;;;;;;;;;;;;;;;UACnBC,K,GAAe,E;;UAEfC,sB,GAAyB,UAACC,UAAD,EAA4B;AACnD,YAAKC,QAAL,CAAc;AAAED,QAAAA,UAAU,EAAVA;AAAF,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,wBACkD,KAAKE,KADvD;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,OADP,eACOA,OADP;AAAA,UACgBC,QADhB,eACgBA,QADhB;AAAA,UAC0BC,QAD1B,eAC0BA,QAD1B;AAAA,UACoCC,SADpC,eACoCA,SADpC;AAAA,iBAEUD,QAFV;AAAA,UAECE,IAFD,QAECA,IAFD;AAAA,UAGCR,UAHD,GAGgB,KAAKF,KAHrB,CAGCE,UAHD;AAIP,0BACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAEG,IAAb;AAAmB,QAAA,OAAO,EAAEC,OAA5B;AAAqC,QAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AACE,QAAA,KAAK,EAAEX,CAAC,CAAC,qCAAD,CADV;AAEE,QAAA,QAAQ,EAAEA,CAAC,CAAC,wCAAD,CAFb;AAGE,QAAA,OAAO,EAAEW,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,kBAAD;AACE,QAAA,KAAK,EAAEJ,UADT;AAEE,QAAA,QAAQ,EAAE,KAAKD,sBAFjB;AAGE,QAAA,MAAM,EAAE,gBAAAC,UAAU;AAAA,iBAAI,CAACJ,cAAc,CAACI,UAAD,CAAnB;AAAA,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,eAaE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,OAAO,EAAE;AAAA,iBAAMA,UAAU,IAAIK,QAAQ,CAACG,IAAD,EAAOR,UAAU,CAACS,EAAlB,CAA5B;AAAA,SAAzB;AAA4E,QAAA,OAAO,EAAEF,SAArF;AAAgG,QAAA,QAAQ,EAAE,CAACC,IAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,CAAC,CAAC,uCAAD,CADJ,CADF,CAbF,CADF;AAqBD;;;;EAhCoDL,KAAK,CAACsB,a;;SAAxCb,yB","sourcesContent":["import * as React from 'react'\nimport { ModalNavigation, ModalContent, ModalActions, Button } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport { Props, State, MoveItemToCollectionModallMetadata } from './MoveItemToCollectionModal.types'\nimport { Collection } from 'modules/collection/types'\nimport CollectionDropdown from 'components/CollectionDropdown'\nimport { isTPCollection } from 'modules/collection/utils'\n\nexport default class MoveItemToCollectionModal extends React.PureComponent<Props, State> {\n  state: State = {}\n\n  handleChangeCollection = (collection: Collection) => {\n    this.setState({ collection })\n  }\n\n  render() {\n    const { name, onClose, onSubmit, metadata, isLoading } = this.props\n    const { item } = metadata as MoveItemToCollectionModallMetadata\n    const { collection } = this.state\n    return (\n      <Modal name={name} onClose={onClose} size=\"tiny\">\n        <ModalNavigation\n          title={t('move_item_to_collection_modal.title')}\n          subtitle={t('move_item_to_collection_modal.subtitle')}\n          onClose={onClose}\n        />\n        <ModalContent>\n          <CollectionDropdown\n            value={collection}\n            onChange={this.handleChangeCollection}\n            filter={collection => !isTPCollection(collection)}\n          />\n        </ModalContent>\n        <ModalActions>\n          <Button primary onClick={() => collection && onSubmit(item, collection.id)} loading={isLoading} disabled={!item}>\n            {t('move_item_to_collection_modal.confirm')}\n          </Button>\n        </ModalActions>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}