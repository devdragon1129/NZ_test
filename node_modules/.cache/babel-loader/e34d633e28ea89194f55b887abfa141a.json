{"ast":null,"code":"/**\r\n * Sets of helpers dealing with the DOM and some of the recurrent functions needed in\r\n * Babylon.js\r\n */\nvar DomManagement =\n/** @class */\nfunction () {\n  function DomManagement() {}\n  /**\r\n   * Checks if the window object exists\r\n   * @returns true if the window object exists\r\n   */\n\n\n  DomManagement.IsWindowObjectExist = function () {\n    return typeof window !== \"undefined\";\n  };\n  /**\r\n   * Checks if the navigator object exists\r\n   * @returns true if the navigator object exists\r\n   */\n\n\n  DomManagement.IsNavigatorAvailable = function () {\n    return typeof navigator !== \"undefined\";\n  };\n  /**\r\n   * Check if the document object exists\r\n   * @returns true if the document object exists\r\n   */\n\n\n  DomManagement.IsDocumentAvailable = function () {\n    return typeof document !== \"undefined\";\n  };\n  /**\r\n   * Extracts text content from a DOM element hierarchy\r\n   * @param element defines the root element\r\n   * @returns a string\r\n   */\n\n\n  DomManagement.GetDOMTextContent = function (element) {\n    var result = \"\";\n    var child = element.firstChild;\n\n    while (child) {\n      if (child.nodeType === 3) {\n        result += child.textContent;\n      }\n\n      child = child.nextSibling;\n    }\n\n    return result;\n  };\n\n  return DomManagement;\n}();\n\nexport { DomManagement };","map":null,"metadata":{},"sourceType":"module"}