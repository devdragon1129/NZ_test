{"ast":null,"code":"import { getIsFeatureEnabled } from 'decentraland-dapps/dist/modules/features/selectors';\nimport { ApplicationName } from 'decentraland-dapps/dist/modules/features/types';\nimport { FeatureName } from './types';\nexport var getIsRaritiesWithOracleEnabled = function getIsRaritiesWithOracleEnabled(state) {\n  return getIsFeatureEnabled(state, ApplicationName.BUILDER, FeatureName.RARITIES_WITH_ORACLE);\n};\nexport var getIsMaintenanceEnabled = function getIsMaintenanceEnabled(state) {\n  // As this is called by the routes component which is rendered when the user enters the application,\n  // Features might have not yet been requested and will throw in that case.\n  try {\n    return getIsFeatureEnabled(state, ApplicationName.BUILDER, FeatureName.MAINTENANCE);\n  } catch (e) {\n    return false;\n  }\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/features/selectors.ts"],"names":["getIsFeatureEnabled","ApplicationName","FeatureName","getIsRaritiesWithOracleEnabled","state","BUILDER","RARITIES_WITH_ORACLE","getIsMaintenanceEnabled","MAINTENANCE","e"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,oDAApC;AACA,SAASC,eAAT,QAAgC,gDAAhC;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,KAAD;AAAA,SAC5CJ,mBAAmB,CAACI,KAAD,EAAQH,eAAe,CAACI,OAAxB,EAAiCH,WAAW,CAACI,oBAA7C,CADyB;AAAA,CAAvC;AAGP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACH,KAAD,EAAsB;AAC3D;AACA;AACA,MAAI;AACF,WAAOJ,mBAAmB,CAACI,KAAD,EAAQH,eAAe,CAACI,OAAxB,EAAiCH,WAAW,CAACM,WAA7C,CAA1B;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF,CARM","sourcesContent":["import { getIsFeatureEnabled } from 'decentraland-dapps/dist/modules/features/selectors'\nimport { ApplicationName } from 'decentraland-dapps/dist/modules/features/types'\nimport { RootState } from 'modules/common/types'\nimport { FeatureName } from './types'\n\nexport const getIsRaritiesWithOracleEnabled = (state: RootState) =>\n  getIsFeatureEnabled(state, ApplicationName.BUILDER, FeatureName.RARITIES_WITH_ORACLE)\n\nexport const getIsMaintenanceEnabled = (state: RootState) => {\n  // As this is called by the routes component which is rendered when the user enters the application,\n  // Features might have not yet been requested and will throw in that case.\n  try {\n    return getIsFeatureEnabled(state, ApplicationName.BUILDER, FeatureName.MAINTENANCE)\n  } catch (e) {\n    return false\n  }\n}\n"]},"metadata":{},"sourceType":"module"}