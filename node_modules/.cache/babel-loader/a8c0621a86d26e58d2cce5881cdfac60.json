{"ast":null,"code":"import { connect } from 'react-redux';\nimport { openModal } from 'modules/modal/actions';\nimport { getCurrentDeploymentStatus } from 'modules/deployment/selectors';\nimport DeployButton from './DeployButton';\nimport { getCurrentLimits, getCurrentMetrics } from 'modules/scene/selectors';\nimport { isReady, isLoading, areEntitiesOutOfBoundaries } from 'modules/editor/selectors';\nimport { getCurrentProject } from 'modules/project/selectors';\n\nvar mapState = function mapState(state) {\n  return {\n    project: getCurrentProject(state),\n    limits: getCurrentLimits(state),\n    metrics: getCurrentMetrics(state),\n    isLoading: !isReady(state) || isLoading(state),\n    areEntitiesOutOfBoundaries: areEntitiesOutOfBoundaries(state),\n    deploymentStatus: getCurrentDeploymentStatus(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onOpenModal: function onOpenModal(name, metadata) {\n      return dispatch(openModal(name, metadata));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(DeployButton);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/DeployButton/DeployButton.container.ts"],"names":["connect","openModal","getCurrentDeploymentStatus","DeployButton","getCurrentLimits","getCurrentMetrics","isReady","isLoading","areEntitiesOutOfBoundaries","getCurrentProject","mapState","state","project","limits","metrics","deploymentStatus","mapDispatch","dispatch","onOpenModal","name","metadata"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAGA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,yBAApD;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,0BAA7B,QAA+D,0BAA/D;AACA,SAASC,iBAAT,QAAkC,2BAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,OAAO,EAAEH,iBAAiB,CAACE,KAAD,CAD2B;AAErDE,IAAAA,MAAM,EAAET,gBAAgB,CAACO,KAAD,CAF6B;AAGrDG,IAAAA,OAAO,EAAET,iBAAiB,CAACM,KAAD,CAH2B;AAIrDJ,IAAAA,SAAS,EAAE,CAACD,OAAO,CAACK,KAAD,CAAR,IAAmBJ,SAAS,CAACI,KAAD,CAJc;AAKrDH,IAAAA,0BAA0B,EAAEA,0BAA0B,CAACG,KAAD,CALD;AAMrDI,IAAAA,gBAAgB,EAAEb,0BAA0B,CAACS,KAAD;AANS,GAAtC;AAAA,CAAjB;;AASA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,WAAW,EAAE,qBAACC,IAAD,EAAOC,QAAP;AAAA,aAAoBH,QAAQ,CAAChB,SAAS,CAACkB,IAAD,EAAOC,QAAP,CAAV,CAA5B;AAAA;AADmD,GAA9C;AAAA,CAApB;;AAIA,eAAepB,OAAO,CAACU,QAAD,EAAWM,WAAX,CAAP,CAA+Bb,YAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\n\nimport { RootState } from 'modules/common/types'\nimport { openModal } from 'modules/modal/actions'\nimport { getCurrentDeploymentStatus } from 'modules/deployment/selectors'\nimport { MapStateProps, MapDispatch, MapDispatchProps } from './DeployButton.types'\nimport DeployButton from './DeployButton'\nimport { getCurrentLimits, getCurrentMetrics } from 'modules/scene/selectors'\nimport { isReady, isLoading, areEntitiesOutOfBoundaries } from 'modules/editor/selectors'\nimport { getCurrentProject } from 'modules/project/selectors'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  project: getCurrentProject(state)!,\n  limits: getCurrentLimits(state),\n  metrics: getCurrentMetrics(state),\n  isLoading: !isReady(state) || isLoading(state),\n  areEntitiesOutOfBoundaries: areEntitiesOutOfBoundaries(state),\n  deploymentStatus: getCurrentDeploymentStatus(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onOpenModal: (name, metadata) => dispatch(openModal(name, metadata))\n})\n\nexport default connect(mapState, mapDispatch)(DeployButton)\n"]},"metadata":{},"sourceType":"module"}