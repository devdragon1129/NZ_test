{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/SideBar/EntityEditor/ActionField/ActionField.tsx\";\nimport * as React from 'react';\nimport { Dropdown } from 'decentraland-ui';\nimport { AssetParameterType } from 'modules/asset/types';\nimport Icon from 'components/Icon';\nimport EntityParameters from '../EntityParameters';\nimport OptionsField from '../OptionsField';\nimport EntityField from '../EntityField';\nimport './ActionField.css';\n\nvar ActionField = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ActionField, _React$PureComponent);\n\n  function ActionField() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ActionField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ActionField)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleEntityChange = function (entityName, index) {\n      var actions = _this.getActionOptions(entityName);\n\n      var actionId = actions.length > 0 ? actions[0].value : '';\n\n      var action = _this.findAction(entityName, actionId);\n\n      var values = _this.getActionValues(action);\n\n      var value = Object.assign([], _this.props.value, _defineProperty({}, index, {\n        entityName: entityName,\n        actionId: actionId,\n        values: values\n      }));\n\n      _this.props.onChange(value, false);\n    };\n\n    _this.handleAddAction = function () {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          entityAssets = _this$props.entityAssets;\n      var index = _this.props.value ? _this.props.value.length : 0;\n      var entityName = Object.keys(entityAssets)[0];\n\n      var actions = _this.getActionOptions(entityName);\n\n      var actionId = actions.length > 0 ? actions[0].value : '';\n      var action = actionId ? _this.findAction(entityName, actionId) : null;\n      var val = Object.assign([], value, _defineProperty({}, index, {\n        entityName: entityName,\n        actionId: actionId,\n        values: action ? _this.getActionValues(action) : {}\n      }));\n\n      _this.props.onChange(val, false);\n    };\n\n    _this.handleActionChange = function (actionId, index) {\n      var entityName = _this.props.value[index].entityName;\n\n      var action = _this.findAction(entityName, actionId);\n\n      var values = _this.getActionValues(action);\n\n      var value = Object.assign([], _this.props.value, _defineProperty({}, index, _objectSpread({}, _this.props.value[index], {\n        actionId: actionId,\n        values: values\n      })));\n\n      _this.props.onChange(value, false);\n    };\n\n    _this.handleParametersChange = function (values, index, debounce) {\n      var value = Object.assign([], _this.props.value, _defineProperty({}, index, _objectSpread({}, _this.props.value[index], {\n        values: values\n      })));\n\n      _this.props.onChange(value, debounce);\n    };\n\n    _this.handleRemove = function (index) {\n      var value = _this.props.value.filter(function (_, i) {\n        return i !== index;\n      });\n\n      _this.setState({\n        value: value\n      });\n\n      _this.props.onChange(value, false);\n    };\n\n    _this.handleReset = function (index) {\n      var _this$props2 = _this.props,\n          value = _this$props2.value,\n          entityAssets = _this$props2.entityAssets,\n          parameter = _this$props2.parameter,\n          entityName = _this$props2.entityName;\n      var newEntityName = parameter.default ? entityName : Object.keys(entityAssets)[0];\n\n      var actions = _this.getActionOptions(newEntityName);\n\n      var actionId = parameter.default || (actions.length > 0 ? actions[0].value : '');\n      var val = Object.assign([], value, _defineProperty({}, index, {\n        entityName: newEntityName,\n        actionId: actionId,\n        values: {}\n      }));\n\n      _this.props.onChange(val, false);\n    };\n\n    _this.getActionOptions = function (entityName) {\n      var entityAssets = _this.props.entityAssets;\n\n      if (entityAssets[entityName] && entityAssets[entityName].actions) {\n        return entityAssets[entityName].actions.map(function (action) {\n          return {\n            label: action.label,\n            value: action.id\n          };\n        });\n      }\n\n      return [];\n    };\n\n    _this.getParameters = function (value) {\n      var entityName = value.entityName,\n          actionId = value.actionId;\n\n      var action = _this.findAction(entityName, actionId);\n\n      if (action) {\n        return action.parameters;\n      }\n\n      return null;\n    };\n\n    _this.getActionValues = function (action) {\n      var values = {};\n\n      if (action) {\n        values = action.parameters.reduce(function (values, parameter) {\n          values[parameter.id] = parameter.type === AssetParameterType.ACTIONS ? [] : parameter.default;\n          return values;\n        }, {});\n      }\n\n      return values;\n    };\n\n    return _this;\n  }\n\n  _createClass(ActionField, [{\n    key: \"findAction\",\n    value: function findAction(entityName, actionId) {\n      return this.props.entityAssets[entityName].actions.find(function (a) {\n        return a.id === actionId;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          id = _this$props3.id,\n          label = _this$props3.label,\n          entityAssets = _this$props3.entityAssets,\n          _this$props3$classNam = _this$props3.className,\n          className = _this$props3$classNam === void 0 ? '' : _this$props3$classNam,\n          value = _this$props3.value;\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"ActionField ParameterField \".concat(className),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: id,\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, label), /*#__PURE__*/React.createElement(\"div\", {\n        title: \"Add Action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"add-active\",\n        onClick: this.handleAddAction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }))), value && value.map(function (action, i) {\n        var actionId = \"\".concat(id, \"-\").concat(i);\n\n        var options = _this2.getActionOptions(action.entityName);\n\n        var parameters = _this2.getParameters(action);\n\n        var parameterValues = value && value[i] ? value[i].values : {};\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container\",\n          key: actionId,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"signature\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(EntityField, {\n          id: actionId,\n          value: value ? action.entityName : '',\n          onChange: function onChange(name) {\n            return _this2.handleEntityChange(name, i);\n          },\n          filter: Object.keys(entityAssets),\n          className: 'action',\n          direction: null,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }\n        }), action.entityName && /*#__PURE__*/React.createElement(OptionsField, {\n          id: \"\".concat(actionId, \"-actions\"),\n          value: action.actionId,\n          options: options,\n          onChange: function onChange(actionid) {\n            return _this2.handleActionChange(actionid, i);\n          },\n          className: 'action',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Dropdown, {\n          trigger: /*#__PURE__*/React.createElement(Icon, {\n            className: \"action-options\",\n            name: \"ellipsis\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 38\n            }\n          }),\n          direction: \"left\",\n          title: \"More Options\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Menu, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n          text: \"Reset Action\",\n          onClick: function onClick() {\n            return _this2.handleReset(i);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          text: \"Remove Action\",\n          onClick: function onClick() {\n            return _this2.handleRemove(i);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 23\n          }\n        })))), parameters && parameters.length > 0 && /*#__PURE__*/React.createElement(\"aside\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(EntityParameters, {\n          id: \"\".concat(actionId, \"-parameters\"),\n          entityName: action.entityName,\n          parameters: parameters,\n          values: parameterValues,\n          onChange: function onChange(values, debounce) {\n            return _this2.handleParametersChange(values, i, debounce);\n          },\n          className: \"action\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }\n        })));\n      }));\n    }\n  }]);\n\n  return ActionField;\n}(React.PureComponent);\n\nexport { ActionField as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SideBar/EntityEditor/ActionField/ActionField.tsx"],"names":["React","Dropdown","AssetParameterType","Icon","EntityParameters","OptionsField","EntityField","ActionField","handleEntityChange","entityName","index","actions","getActionOptions","actionId","length","value","action","findAction","values","getActionValues","Object","assign","props","onChange","handleAddAction","entityAssets","keys","val","handleActionChange","handleParametersChange","debounce","handleRemove","filter","_","i","setState","handleReset","parameter","newEntityName","default","map","label","id","getParameters","parameters","reduce","type","ACTIONS","find","a","className","options","parameterValues","name","actionid","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Dropdown } from 'decentraland-ui'\nimport { AssetParameterValues, AssetActionValue, AssetAction, AssetParameterType } from 'modules/asset/types'\nimport Icon from 'components/Icon'\nimport EntityParameters from '../EntityParameters'\nimport OptionsField from '../OptionsField'\nimport EntityField from '../EntityField'\nimport { Props } from './ActionField.types'\nimport './ActionField.css'\n\nexport default class ActionField extends React.PureComponent<Props> {\n  handleEntityChange = (entityName: string, index: number) => {\n    const actions = this.getActionOptions(entityName)\n    const actionId = actions.length > 0 ? actions[0].value : ''\n    const action = this.findAction(entityName, actionId)\n    const values: Record<string, any> = this.getActionValues(action)\n\n    const value = Object.assign([], this.props.value, {\n      [index]: {\n        entityName,\n        actionId,\n        values\n      }\n    })\n\n    this.props.onChange(value, false)\n  }\n\n  handleAddAction = () => {\n    const { value, entityAssets } = this.props\n    const index = this.props.value ? this.props.value.length : 0\n    const entityName = Object.keys(entityAssets)[0]\n    const actions = this.getActionOptions(entityName)\n    const actionId = actions.length > 0 ? actions[0].value : ''\n    const action = actionId ? this.findAction(entityName, actionId) : null\n\n    const val = Object.assign([], value, {\n      [index]: {\n        entityName,\n        actionId,\n        values: action ? this.getActionValues(action) : {}\n      }\n    })\n\n    this.props.onChange(val, false)\n  }\n\n  handleActionChange = (actionId: string, index: number) => {\n    const { entityName } = this.props.value[index]\n    const action = this.findAction(entityName, actionId)\n    const values: Record<string, any> = this.getActionValues(action)\n\n    const value = Object.assign([], this.props.value, {\n      [index]: {\n        ...this.props.value[index],\n        actionId,\n        values\n      }\n    })\n\n    this.props.onChange(value, false)\n  }\n\n  handleParametersChange = (values: AssetParameterValues, index: number, debounce: boolean) => {\n    const value = Object.assign([], this.props.value, {\n      [index]: {\n        ...this.props.value[index],\n        values\n      }\n    })\n\n    this.props.onChange(value, debounce)\n  }\n\n  handleRemove = (index: number) => {\n    const value = this.props.value.filter((_, i) => i !== index)\n    this.setState({ value })\n    this.props.onChange(value, false)\n  }\n\n  handleReset = (index: number) => {\n    const { value, entityAssets, parameter, entityName } = this.props\n    const newEntityName = parameter.default ? entityName : Object.keys(entityAssets)[0]\n    const actions = this.getActionOptions(newEntityName)\n    const actionId = parameter.default || (actions.length > 0 ? actions[0].value : '')\n\n    const val = Object.assign([], value, {\n      [index]: {\n        entityName: newEntityName,\n        actionId,\n        values: {}\n      }\n    })\n\n    this.props.onChange(val, false)\n  }\n\n  findAction(entityName: string, actionId: string) {\n    return this.props.entityAssets[entityName].actions.find(a => a.id === actionId)\n  }\n\n  getActionOptions = (entityName: string) => {\n    const { entityAssets } = this.props\n\n    if (entityAssets[entityName] && entityAssets[entityName].actions) {\n      return entityAssets[entityName].actions.map(action => ({ label: action.label, value: action.id }))\n    }\n\n    return []\n  }\n\n  getParameters = (value: AssetActionValue) => {\n    const { entityName, actionId } = value\n\n    const action = this.findAction(entityName, actionId)\n    if (action) {\n      return action.parameters\n    }\n\n    return null\n  }\n\n  getActionValues = (action: AssetAction | undefined) => {\n    let values: Record<string, any> = {}\n\n    if (action) {\n      values = action.parameters.reduce<any>((values, parameter) => {\n        values[parameter.id] = parameter.type === AssetParameterType.ACTIONS ? [] : parameter.default\n        return values\n      }, {})\n    }\n\n    return values\n  }\n\n  render() {\n    const { id, label, entityAssets, className = '', value } = this.props\n\n    return (\n      <section className={`ActionField ParameterField ${className}`}>\n        <div className=\"header\">\n          <label htmlFor={id} className=\"label\">\n            {label}\n          </label>\n          <div title=\"Add Action\">\n            <Icon name=\"add-active\" onClick={this.handleAddAction} />\n          </div>\n        </div>\n\n        {value &&\n          value.map((action, i) => {\n            const actionId = `${id}-${i}`\n            const options = this.getActionOptions(action.entityName)\n            const parameters = this.getParameters(action)\n            const parameterValues = value && value[i] ? value[i].values : {}\n            return (\n              <div className=\"container\" key={actionId}>\n                <div className=\"signature\">\n                  <EntityField\n                    id={actionId}\n                    value={value ? action.entityName : ''}\n                    onChange={name => this.handleEntityChange(name, i)}\n                    filter={Object.keys(entityAssets)}\n                    className={'action'}\n                    direction={null}\n                  />\n                  {action.entityName && (\n                    <OptionsField\n                      id={`${actionId}-actions`}\n                      value={action.actionId}\n                      options={options}\n                      onChange={actionid => this.handleActionChange(actionid, i)}\n                      className={'action'}\n                    />\n                  )}\n                  <Dropdown trigger={<Icon className=\"action-options\" name=\"ellipsis\" />} direction=\"left\" title=\"More Options\">\n                    <Dropdown.Menu>\n                      <Dropdown.Item text=\"Reset Action\" onClick={() => this.handleReset(i)} />\n                      <Dropdown.Item text=\"Remove Action\" onClick={() => this.handleRemove(i)} />\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </div>\n\n                {parameters && parameters.length > 0 && (\n                  <aside>\n                    <EntityParameters\n                      id={`${actionId}-parameters`}\n                      entityName={action.entityName}\n                      parameters={parameters}\n                      values={parameterValues}\n                      onChange={(values, debounce) => this.handleParametersChange(values, i, debounce)}\n                      className=\"action\"\n                    />\n                  </aside>\n                )}\n              </div>\n            )\n          })}\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}