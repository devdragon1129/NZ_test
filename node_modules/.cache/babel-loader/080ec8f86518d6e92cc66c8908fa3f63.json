{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createProfileSaga = void 0;\n\nvar effects_1 = require(\"redux-saga/effects\");\n\nvar types_1 = require(\"dcl-catalyst-commons/dist/types\");\n\nvar peer_1 = require(\"../../lib/peer\");\n\nvar entities_1 = require(\"../../lib/entities\");\n\nvar actions_1 = require(\"../wallet/actions\");\n\nvar actions_2 = require(\"./actions\");\n\nfunction createProfileSaga(_ref) {\n  var _marked = /*#__PURE__*/_regeneratorRuntime.mark(profileSaga),\n      _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleLoadProfileRequest),\n      _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleWallet),\n      _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleSetAlias),\n      _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleSetProfileDescription),\n      _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(updateProfileAvatarWithoutNewFiles);\n\n  var peerUrl = _ref.peerUrl;\n  var peerApi = new peer_1.PeerAPI(peerUrl);\n  var entities = new entities_1.EntitiesOperator(peerUrl);\n\n  function profileSaga() {\n    return _regeneratorRuntime.wrap(function profileSaga$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return effects_1.takeEvery(actions_2.LOAD_PROFILE_REQUEST, handleLoadProfileRequest);\n\n          case 2:\n            _context.next = 4;\n            return effects_1.takeEvery(actions_2.SET_PROFILE_AVATAR_DESCRIPTION_REQUEST, handleSetProfileDescription);\n\n          case 4:\n            _context.next = 6;\n            return effects_1.takeEvery(actions_2.SET_PROFILE_AVATAR_ALIAS_REQUEST, handleSetAlias);\n\n          case 6:\n            _context.next = 8;\n            return effects_1.takeLatest(actions_1.CONNECT_WALLET_SUCCESS, handleWallet);\n\n          case 8:\n            _context.next = 10;\n            return effects_1.takeLatest(actions_1.CHANGE_ACCOUNT, handleWallet);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked);\n  }\n\n  function handleLoadProfileRequest(action) {\n    var address, profile;\n    return _regeneratorRuntime.wrap(function handleLoadProfileRequest$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            address = action.payload.address;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return effects_1.call([peerApi, 'fetchProfile'], address);\n\n          case 4:\n            profile = _context2.sent;\n            _context2.next = 7;\n            return effects_1.put(actions_2.loadProfileSuccess(address, profile));\n\n          case 7:\n            _context2.next = 13;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            _context2.next = 13;\n            return effects_1.put(actions_2.loadProfileFailure(address, _context2.t0.message));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _marked2, null, [[1, 9]]);\n  }\n\n  function handleWallet(action) {\n    return _regeneratorRuntime.wrap(function handleWallet$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return effects_1.put(actions_2.loadProfileRequest(action.payload.wallet.address));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _marked3);\n  }\n\n  function handleSetAlias(action) {\n    var _action$payload, address, alias, newAvatar;\n\n    return _regeneratorRuntime.wrap(function handleSetAlias$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _action$payload = action.payload, address = _action$payload.address, alias = _action$payload.alias;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return updateProfileAvatarWithoutNewFiles(address, {\n              hasClaimedName: true,\n              name: alias\n            });\n\n          case 4:\n            newAvatar = _context4.sent;\n            _context4.next = 7;\n            return effects_1.put(actions_2.setProfileAvatarAliasSuccess(address, alias, newAvatar.version));\n\n          case 7:\n            _context4.next = 13;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](1);\n            _context4.next = 13;\n            return effects_1.put(actions_2.setProfileAvatarAliasFailure(address, _context4.t0.message));\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _marked4, null, [[1, 9]]);\n  }\n  /**\n   * Handles the action to set the description of a user's profile.\n   * This handler gets the first profile entity of a given address\n   * and then rebuilds it with the specified description to deploy it\n   * again.\n   *\n   * @param action - The action that triggered the handler.\n   */\n\n\n  function handleSetProfileDescription(action) {\n    var _action$payload2, address, description, newAvatar;\n\n    return _regeneratorRuntime.wrap(function handleSetProfileDescription$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _action$payload2 = action.payload, address = _action$payload2.address, description = _action$payload2.description;\n            _context5.next = 4;\n            return updateProfileAvatarWithoutNewFiles(address, {\n              description: description\n            });\n\n          case 4:\n            newAvatar = _context5.sent;\n            _context5.next = 7;\n            return effects_1.put(actions_2.setProfileAvatarDescriptionSuccess(action.payload.address, newAvatar.description, newAvatar.version));\n\n          case 7:\n            _context5.next = 13;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](0);\n            _context5.next = 13;\n            return effects_1.put(actions_2.setProfileAvatarDescriptionFailure(action.payload.address, _context5.t0.message));\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _marked5, null, [[0, 9]]);\n  }\n\n  function updateProfileAvatarWithoutNewFiles(address, changes) {\n    var entity, newAvatar, profileMetadata, newProfileEntity;\n    return _regeneratorRuntime.wrap(function updateProfileAvatarWithoutNewFiles$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return effects_1.call([entities, entities.getProfileEntity], address);\n\n          case 2:\n            entity = _context6.sent;\n            newAvatar = Object.assign(Object.assign(Object.assign({}, entity.metadata.avatars[0]), changes), {\n              version: entity.metadata.avatars[0].version + 1\n            });\n            profileMetadata = Object.assign(Object.assign({}, entity.metadata), {\n              avatars: [newAvatar].concat(_toConsumableArray(entity.metadata.avatars.slice(1)))\n            });\n            newProfileEntity = Object.assign(Object.assign({}, entity), {\n              metadata: profileMetadata\n            });\n            _context6.next = 8;\n            return effects_1.call([entities, 'deployEntityWithoutNewFiles'], newProfileEntity, types_1.EntityType.PROFILE, address, address);\n\n          case 8:\n            return _context6.abrupt(\"return\", newAvatar);\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _marked6);\n  }\n\n  return profileSaga;\n}\n\nexports.createProfileSaga = createProfileSaga;","map":null,"metadata":{},"sourceType":"script"}