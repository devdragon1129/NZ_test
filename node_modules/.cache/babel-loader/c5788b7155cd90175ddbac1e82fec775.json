{"ast":null,"code":"import _slicedToArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/DeployModal/DeployToLand/LandAtlas/LandAtlas.tsx\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\nimport { Button, Popup, Icon as DCLIcon } from 'decentraland-ui';\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils';\nimport { Atlas } from 'components/Atlas';\nimport Icon from 'components/Icon';\nimport { getParcelOrientation } from 'modules/project/utils';\nimport { idToCoords, coordsToId, locateNextLand } from 'modules/land/utils';\nimport './LandAtlas.css';\nvar ROTATION_ORDER = ['north', 'east', 'south', 'west'];\nvar CLOCKWISE_ROTATION = 1;\nvar ANTICLOCKWISE_ROTATION = -1;\nexport var COLORS = Object.freeze({\n  occupiedParcel: '#774642',\n  freeParcel: '#ff9990',\n  selected: '#ff9990',\n  selectedStroke: '#ff0044',\n  indicator: '#716b7a',\n  indicatorStroke: '#3a3541'\n});\n\nvar LandAtlas = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(LandAtlas, _React$PureComponent);\n\n  function LandAtlas() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LandAtlas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LandAtlas)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _this.getBaseState();\n    _this.analytics = getAnalytics();\n\n    _this.isValid = function () {\n      var _this$props = _this.props,\n          project = _this$props.project,\n          landTiles = _this$props.landTiles;\n      var _this$state = _this.state,\n          rotation = _this$state.rotation,\n          hover = _this$state.hover;\n      var projectParcels = getParcelOrientation(project.layout, hover, rotation);\n      if (!hover) return false;\n      return projectParcels.every(function (_ref) {\n        var x = _ref.x,\n            y = _ref.y;\n        return !!landTiles[\"\".concat(x, \",\").concat(y)];\n      });\n    };\n\n    _this.isHighlighted = function (x, y) {\n      var project = _this.props.project;\n      var _this$state2 = _this.state,\n          rotation = _this$state2.rotation,\n          hover = _this$state2.hover,\n          placement = _this$state2.placement;\n      var projectParcels = getParcelOrientation(project.layout, hover, rotation);\n      if (!hover || placement) return false;\n      return projectParcels.some(function (parcel) {\n        return parcel.x === x && parcel.y === y;\n      });\n    };\n\n    _this.isPlaced = function (x, y) {\n      var project = _this.props.project;\n      var placement = _this.state.placement;\n      if (!placement) return null;\n      var projectParcels = getParcelOrientation(project.layout, placement.point, placement.rotation);\n      return projectParcels.some(function (parcel) {\n        return parcel.x === x && parcel.y === y;\n      });\n    };\n\n    _this.strokeLayer = function (x, y) {\n      var placed = _this.isPlaced(x, y);\n\n      if (_this.isHighlighted(x, y) || placed) {\n        return {\n          color: _this.isValid() || placed ? COLORS.selectedStroke : COLORS.indicatorStroke,\n          scale: 1.5\n        };\n      }\n\n      return null;\n    };\n\n    _this.highlightLayer = function (x, y) {\n      var placed = _this.isPlaced(x, y);\n\n      if (_this.isHighlighted(x, y) || placed) {\n        return {\n          color: _this.isValid() || placed ? COLORS.selected : COLORS.indicator,\n          scale: 1.2\n        };\n      }\n\n      return null;\n    };\n\n    _this.handleHover = function (x, y) {\n      _this.setState({\n        hover: {\n          x: x,\n          y: y\n        }\n      });\n    };\n\n    _this.handlePlacement = function (x, y) {\n      if (!_this.isValid()) return;\n\n      _this.setState({\n        placement: {\n          point: {\n            x: x,\n            y: y\n          },\n          rotation: _this.state.rotation\n        }\n      });\n    };\n\n    _this.handleSelectPlacement = function () {\n      var placement = _this.state.placement;\n      var onConfirmPlacement = _this.props.onConfirmPlacement;\n\n      var overlappedDeployment = _this.getOverlappedDeployemnt();\n\n      if (placement) {\n        overlappedDeployment ? onConfirmPlacement(placement, overlappedDeployment.id) : onConfirmPlacement(placement);\n      }\n    };\n\n    _this.handleRotate = function (direction) {\n      return function () {\n        var _this$state3 = _this.state,\n            rotation = _this$state3.rotation,\n            placement = _this$state3.placement;\n        if (placement) return;\n        var newRotation = ((ROTATION_ORDER.indexOf(rotation) + direction) % ROTATION_ORDER.length + ROTATION_ORDER.length) % ROTATION_ORDER.length;\n\n        _this.analytics.track('Publish to LAND atlas rotate', {\n          direction: direction\n        });\n\n        _this.setState({\n          rotation: ROTATION_ORDER[newRotation]\n        });\n      };\n    };\n\n    _this.handleLocateLand = function () {\n      var landTiles = _this.props.landTiles;\n      var currentLandId = _this.state.currentLandId;\n      var nextLand = locateNextLand(landTiles, currentLandId || '');\n\n      _this.analytics.track('Publish to LAND atlas locate');\n\n      _this.setState({\n        currentLandId: nextLand.id\n      });\n    };\n\n    _this.handleResetPlacement = function () {\n      _this.setState({\n        placement: null\n      });\n    };\n\n    _this.handleNoAuthorizedParcels = function () {\n      _this.props.onNoAuthorizedParcels();\n    };\n\n    _this.getOverlappedDeployemnt = function () {\n      var _this$props2 = _this.props,\n          deploymentsByCoord = _this$props2.deploymentsByCoord,\n          project = _this$props2.project;\n      var placement = _this.state.placement;\n\n      if (project && placement) {\n        var parcels = getParcelOrientation(project.layout, placement.point, placement.rotation);\n\n        var _iterator = _createForOfIteratorHelper(parcels),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var parcel = _step.value;\n            var deploymentInCoord = deploymentsByCoord[coordsToId(parcel.x, parcel.y)];\n\n            if (deploymentInCoord) {\n              return deploymentInCoord;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      return null;\n    };\n\n    _this.renderTool = function (icon, tooltip, clickHandler) {\n      return /*#__PURE__*/React.createElement(Popup, {\n        className: \"modal-tooltip\",\n        content: tooltip,\n        position: \"top center\",\n        trigger: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tool \".concat(icon),\n          onClick: clickHandler,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          name: icon,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }\n        })),\n        on: \"hover\",\n        inverted: true,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LandAtlas, [{\n    key: \"getBaseState\",\n    value: function getBaseState() {\n      var _this$props3 = this.props,\n          deployment = _this$props3.deployment,\n          landTiles = _this$props3.landTiles;\n      var coords = Object.keys(landTiles);\n      return {\n        placement: deployment ? deployment.placement : null,\n        hover: {\n          x: 0,\n          y: 0\n        },\n        rotation: deployment ? deployment.placement.rotation : 'north',\n        zoom: 1,\n        currentLandId: deployment ? coordsToId(deployment.placement.point.x, deployment.placement.point.y) : coords.length > 0 ? coords[0] : '0,0'\n      };\n    }\n  }, {\n    key: \"truncateTitle\",\n    value: function truncateTitle(input) {\n      var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n\n      if (input.length > max) {\n        return input.substring(0, max) + '...';\n      }\n\n      return input;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          media = _this$props4.media,\n          project = _this$props4.project,\n          landTiles = _this$props4.landTiles,\n          deployment = _this$props4.deployment;\n      var _this$state4 = this.state,\n          placement = _this$state4.placement,\n          rotation = _this$state4.rotation,\n          zoom = _this$state4.zoom,\n          currentLandId = _this$state4.currentLandId;\n      var hasPlacement = !!placement;\n      var parcelCount = Object.keys(landTiles).length;\n\n      var _ref2 = currentLandId ? idToCoords(currentLandId) : [0, 0],\n          _ref3 = _slicedToArray(_ref2, 2),\n          targetX = _ref3[0],\n          targetY = _ref3[1];\n\n      var target = {\n        x: targetX,\n        y: targetY\n      };\n      var overlappedDeployment = this.getOverlappedDeployemnt();\n      var conflictingDeployment = overlappedDeployment && deployment && overlappedDeployment.projectId && deployment.projectId && overlappedDeployment.projectId !== deployment.projectId ? overlappedDeployment : null;\n      var _project$layout = project.layout,\n          rows = _project$layout.rows,\n          cols = _project$layout.cols;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"LandAtlas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }\n      }, parcelCount === 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notice\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, t('deployment_modal.land.map.no_land_warning'), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"inline-action\",\n        onClick: this.handleNoAuthorizedParcels,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, t('deployment_modal.land.map.no_land_action'))), conflictingDeployment && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notice\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DCLIcon, {\n        name: \"warning sign\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }), t('deployment_modal.land.map.occupied_warning', {\n        name: conflictingDeployment.name\n      })), parcelCount !== 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: 'thumbnail' + (hasPlacement ? ' disable-rotate' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: media ? media[rotation] : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rotate anticlockwise\",\n        onClick: this.handleRotate(ANTICLOCKWISE_ROTATION),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"rotate-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rotate clockwise\",\n        onClick: this.handleRotate(CLOCKWISE_ROTATION),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"rotate-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"atlas-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Atlas, {\n        showControls: true,\n        onLocateLand: this.handleLocateLand,\n        layers: [this.strokeLayer, this.highlightLayer],\n        onHover: this.handleHover,\n        onClick: this.handlePlacement,\n        zoom: zoom,\n        x: target.x,\n        y: target.y,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"summary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }\n      }, hasPlacement ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(T, {\n        id: \"deployment_modal.land.map.placement_active\",\n        values: {\n          count: rows * cols,\n          x: placement.point.x,\n          y: placement.point.y\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"inline-action\",\n        onClick: this.handleResetPlacement,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }\n      }, \"Reset\")) : t('deployment_modal.land.map.placement_default')), /*#__PURE__*/React.createElement(Popup, {\n        className: \"publish-disabled modal-tooltip\",\n        content: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(T, {\n          id: \"deployment_modal.land.map.occupied_tooltip\",\n          values: {\n            name: conflictingDeployment ? conflictingDeployment.name : '',\n            br: /*#__PURE__*/React.createElement(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 96\n              }\n            })\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }\n        })),\n        position: \"top center\",\n        disabled: true,\n        trigger: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          primary: true,\n          size: \"small\",\n          disabled: !hasPlacement,\n          onClick: this.handleSelectPlacement,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }\n        }, t('deployment_modal.land.map.continue'))),\n        on: \"hover\",\n        inverted: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return LandAtlas;\n}(React.PureComponent);\n\nexport { LandAtlas as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/DeployModal/DeployToLand/LandAtlas/LandAtlas.tsx"],"names":["React","Button","Popup","Icon","DCLIcon","t","T","getAnalytics","Atlas","getParcelOrientation","idToCoords","coordsToId","locateNextLand","ROTATION_ORDER","CLOCKWISE_ROTATION","ANTICLOCKWISE_ROTATION","COLORS","Object","freeze","occupiedParcel","freeParcel","selected","selectedStroke","indicator","indicatorStroke","LandAtlas","state","getBaseState","analytics","isValid","props","project","landTiles","rotation","hover","projectParcels","layout","every","x","y","isHighlighted","placement","some","parcel","isPlaced","point","strokeLayer","placed","color","scale","highlightLayer","handleHover","setState","handlePlacement","handleSelectPlacement","onConfirmPlacement","overlappedDeployment","getOverlappedDeployemnt","id","handleRotate","direction","newRotation","indexOf","length","track","handleLocateLand","currentLandId","nextLand","handleResetPlacement","handleNoAuthorizedParcels","onNoAuthorizedParcels","deploymentsByCoord","parcels","deploymentInCoord","renderTool","icon","tooltip","clickHandler","deployment","coords","keys","zoom","input","max","substring","media","hasPlacement","parcelCount","targetX","targetY","target","conflictingDeployment","projectId","rows","cols","name","count","br","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nimport { Layer, Button, Popup, Icon as DCLIcon } from 'decentraland-ui'\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils'\n\nimport { Atlas } from 'components/Atlas'\nimport Icon from 'components/Icon'\nimport { IconName } from 'components/Icon/Icon.types'\nimport { Rotation, Coordinate } from 'modules/deployment/types'\nimport { getParcelOrientation } from 'modules/project/utils'\nimport { idToCoords, coordsToId, locateNextLand } from 'modules/land/utils'\nimport { Props, State } from './LandAtlas.types'\nimport './LandAtlas.css'\n\nconst ROTATION_ORDER: Rotation[] = ['north', 'east', 'south', 'west']\nconst CLOCKWISE_ROTATION = 1\nconst ANTICLOCKWISE_ROTATION = -1\n\nexport const COLORS = Object.freeze({\n  occupiedParcel: '#774642',\n  freeParcel: '#ff9990',\n  selected: '#ff9990',\n  selectedStroke: '#ff0044',\n  indicator: '#716b7a',\n  indicatorStroke: '#3a3541'\n})\n\nexport default class LandAtlas extends React.PureComponent<Props, State> {\n  state: State = this.getBaseState()\n\n  analytics = getAnalytics()\n\n  getBaseState(): State {\n    const { deployment, landTiles } = this.props\n    const coords = Object.keys(landTiles)\n    return {\n      placement: deployment ? deployment.placement : null,\n      hover: { x: 0, y: 0 },\n      rotation: deployment ? deployment.placement.rotation : 'north',\n      zoom: 1,\n      currentLandId: deployment\n        ? coordsToId(deployment.placement.point.x, deployment.placement.point.y)\n        : coords.length > 0\n        ? coords[0]\n        : '0,0'\n    }\n  }\n\n  isValid = () => {\n    const { project, landTiles } = this.props\n    const { rotation, hover } = this.state\n    const projectParcels = getParcelOrientation(project!.layout, hover, rotation)\n\n    if (!hover) return false\n\n    return projectParcels.every(({ x, y }) => !!landTiles[`${x},${y}`])\n  }\n\n  isHighlighted = (x: number, y: number) => {\n    const { project } = this.props\n    const { rotation, hover, placement } = this.state\n    const projectParcels = getParcelOrientation(project!.layout, hover, rotation)\n\n    if (!hover || placement) return false\n    return projectParcels.some(parcel => parcel.x === x && parcel.y === y)\n  }\n\n  isPlaced = (x: number, y: number) => {\n    const { project } = this.props\n    const { placement } = this.state\n\n    if (!placement) return null\n\n    const projectParcels = getParcelOrientation(project!.layout, placement.point, placement.rotation)\n    return projectParcels.some(parcel => parcel.x === x && parcel.y === y)\n  }\n\n  strokeLayer: Layer = (x: number, y: number) => {\n    const placed = this.isPlaced(x, y)\n    if (this.isHighlighted(x, y) || placed) {\n      return {\n        color: this.isValid() || placed ? COLORS.selectedStroke : COLORS.indicatorStroke,\n        scale: 1.5\n      }\n    }\n    return null\n  }\n\n  highlightLayer: Layer = (x: number, y: number) => {\n    const placed = this.isPlaced(x, y)\n    if (this.isHighlighted(x, y) || placed) {\n      return { color: this.isValid() || placed ? COLORS.selected : COLORS.indicator, scale: 1.2 }\n    }\n    return null\n  }\n\n  handleHover = (x: number, y: number) => {\n    this.setState({\n      hover: { x, y }\n    })\n  }\n\n  handlePlacement = (x: number, y: number) => {\n    if (!this.isValid()) return\n\n    this.setState({\n      placement: { point: { x, y }, rotation: this.state.rotation }\n    })\n  }\n\n  handleSelectPlacement = () => {\n    const { placement } = this.state\n    const { onConfirmPlacement } = this.props\n    const overlappedDeployment = this.getOverlappedDeployemnt()\n    if (placement) {\n      overlappedDeployment ? onConfirmPlacement(placement, overlappedDeployment.id) : onConfirmPlacement(placement)\n    }\n  }\n\n  handleRotate = (direction: 1 | -1) => () => {\n    const { rotation, placement } = this.state\n    if (placement) return\n    const newRotation =\n      (((ROTATION_ORDER.indexOf(rotation) + direction) % ROTATION_ORDER.length) + ROTATION_ORDER.length) % ROTATION_ORDER.length\n\n    this.analytics.track('Publish to LAND atlas rotate', { direction })\n\n    this.setState({ rotation: ROTATION_ORDER[newRotation] })\n  }\n\n  handleLocateLand = () => {\n    const { landTiles } = this.props\n    const { currentLandId } = this.state\n    const nextLand = locateNextLand(landTiles, currentLandId || '')\n\n    this.analytics.track('Publish to LAND atlas locate')\n\n    this.setState({\n      currentLandId: nextLand.id\n    })\n  }\n\n  handleResetPlacement = () => {\n    this.setState({\n      placement: null\n    })\n  }\n\n  handleNoAuthorizedParcels = () => {\n    this.props.onNoAuthorizedParcels()\n  }\n\n  truncateTitle(input: string, max: number = 10) {\n    if (input.length > max) {\n      return input.substring(0, max) + '...'\n    }\n    return input\n  }\n\n  getOverlappedDeployemnt = () => {\n    const { deploymentsByCoord, project } = this.props\n    const { placement } = this.state\n    if (project && placement) {\n      const parcels = getParcelOrientation(project.layout, placement.point, placement.rotation)\n      for (const parcel of parcels) {\n        const deploymentInCoord = deploymentsByCoord[coordsToId(parcel.x, parcel.y)]\n        if (deploymentInCoord) {\n          return deploymentInCoord\n        }\n      }\n    }\n    return null\n  }\n\n  renderTool = (icon: IconName, tooltip: string, clickHandler: () => void) => {\n    return (\n      <Popup\n        className=\"modal-tooltip\"\n        content={tooltip}\n        position=\"top center\"\n        trigger={\n          <div className={`tool ${icon}`} onClick={clickHandler}>\n            <Icon name={icon} />\n          </div>\n        }\n        on=\"hover\"\n        inverted\n      />\n    )\n  }\n\n  render() {\n    const { media, project, landTiles, deployment } = this.props\n    const { placement, rotation, zoom, currentLandId } = this.state\n    const hasPlacement = !!placement\n    const parcelCount = Object.keys(landTiles).length\n    const [targetX, targetY] = currentLandId ? idToCoords(currentLandId) : [0, 0]\n    const target: Coordinate = { x: targetX, y: targetY }\n    const overlappedDeployment = this.getOverlappedDeployemnt()\n    const conflictingDeployment =\n      overlappedDeployment &&\n      deployment &&\n      overlappedDeployment.projectId &&\n      deployment.projectId &&\n      overlappedDeployment.projectId !== deployment.projectId\n        ? overlappedDeployment\n        : null\n    const { rows, cols } = project.layout\n\n    return (\n      <div className=\"LandAtlas\">\n        {parcelCount === 0 && (\n          <div className=\"notice\">\n            {t('deployment_modal.land.map.no_land_warning')}\n            <span className=\"inline-action\" onClick={this.handleNoAuthorizedParcels}>\n              {t('deployment_modal.land.map.no_land_action')}\n            </span>\n          </div>\n        )}\n        {conflictingDeployment && (\n          <div className=\"notice\">\n            <DCLIcon name=\"warning sign\" />\n            {t('deployment_modal.land.map.occupied_warning', { name: conflictingDeployment.name })}\n          </div>\n        )}\n        {parcelCount !== 0 && (\n          <div className={'thumbnail' + (hasPlacement ? ' disable-rotate' : '')}>\n            <img src={media ? media[rotation] : ''} />\n            <div className=\"rotate anticlockwise\" onClick={this.handleRotate(ANTICLOCKWISE_ROTATION)}>\n              <Icon name=\"rotate-left\" />\n            </div>\n            <div className=\"rotate clockwise\" onClick={this.handleRotate(CLOCKWISE_ROTATION)}>\n              <Icon name=\"rotate-right\" />\n            </div>\n          </div>\n        )}\n        <div className=\"atlas-container\">\n          <Atlas\n            showControls\n            onLocateLand={this.handleLocateLand}\n            layers={[this.strokeLayer, this.highlightLayer]}\n            onHover={this.handleHover}\n            onClick={this.handlePlacement}\n            zoom={zoom}\n            x={target.x}\n            y={target.y}\n          />\n        </div>\n        <div className=\"actions\">\n          <div className=\"summary\">\n            {hasPlacement ? (\n              <span>\n                <T\n                  id=\"deployment_modal.land.map.placement_active\"\n                  values={{\n                    count: rows * cols,\n                    x: placement!.point.x,\n                    y: placement!.point.y\n                  }}\n                />\n                <span className=\"inline-action\" onClick={this.handleResetPlacement}>\n                  Reset\n                </span>\n              </span>\n            ) : (\n              t('deployment_modal.land.map.placement_default')\n            )}\n          </div>\n          <Popup\n            className=\"publish-disabled modal-tooltip\"\n            content={\n              <span>\n                <T\n                  id=\"deployment_modal.land.map.occupied_tooltip\"\n                  values={{ name: conflictingDeployment ? conflictingDeployment.name : '', br: <br /> }}\n                />\n              </span>\n            }\n            position=\"top center\"\n            disabled\n            trigger={\n              <span>\n                <Button primary size=\"small\" disabled={!hasPlacement} onClick={this.handleSelectPlacement}>\n                  {t('deployment_modal.land.map.continue')}\n                </Button>\n              </span>\n            }\n            on=\"hover\"\n            inverted\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}