{"ast":null,"code":"export var NavigationTab;\n\n(function (NavigationTab) {\n  NavigationTab[\"SCENES\"] = \"scenes\";\n  NavigationTab[\"LAND\"] = \"land\";\n  NavigationTab[\"COLLECTIONS\"] = \"collection\";\n  NavigationTab[\"NAMES\"] = \"names\";\n  NavigationTab[\"CURATION\"] = \"curation\";\n})(NavigationTab || (NavigationTab = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Navigation/Navigation.types.ts"],"names":["NavigationTab"],"mappings":"AAGA,WAAYA,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a","sourcesContent":["import { Dispatch } from 'redux'\nimport { CallHistoryMethodAction } from 'connected-react-router'\n\nexport enum NavigationTab {\n  SCENES = 'scenes',\n  LAND = 'land',\n  COLLECTIONS = 'collection',\n  NAMES = 'names',\n  CURATION = 'curation'\n}\n\nexport type Props = {\n  children?: React.ReactNode\n  activeTab?: NavigationTab\n  isFullscreen?: boolean\n  isCommitteeMember: boolean\n  onNavigate: (path: string) => void\n}\n\nexport type MapStateProps = Pick<Props, 'isCommitteeMember'>\nexport type MapDispatchProps = Pick<Props, 'onNavigate'>\nexport type MapDispatch = Dispatch<CallHistoryMethodAction>\n"]},"metadata":{},"sourceType":"module"}