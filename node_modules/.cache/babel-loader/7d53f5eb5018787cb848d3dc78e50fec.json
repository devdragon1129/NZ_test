{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Preview/Preview.tsx\";\nimport * as React from 'react';\nimport { DropTarget } from 'react-dnd';\nimport Lottie from 'react-lottie';\nimport { config } from 'config';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { ASSET_TYPE } from 'components/AssetCard/AssetCard.dnd';\nimport { PreviewType } from 'modules/editor/types';\nimport { convertToUnityKeyboardEvent } from 'modules/editor/utils';\nimport { previewTarget, collect } from './Preview.dnd';\nimport animationData from './loader.json';\nimport './Preview.css';\nvar editorWindow = window;\nvar unityDebugParams = config.get('UNITY_DEBUG_PARAMS');\nvar PUBLIC_URL = process.env.PUBLIC_URL;\nvar canvas = null;\nvar isDCLInitialized = false;\n\nvar Preview = /*#__PURE__*/function (_React$Component) {\n  _inherits(Preview, _React$Component);\n\n  function Preview() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Preview);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Preview)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.canvasContainer = React.createRef();\n\n    _this.moveCanvas = function () {\n      if (_this.canvasContainer.current && canvas) {\n        _this.canvasContainer.current.appendChild(canvas);\n      }\n    };\n\n    _this.subscribeKeyDownEvent = function () {\n      editorWindow.addEventListener('keydown', _this.handleKeyDownEvent);\n    };\n\n    _this.unsubscribeKeyDownEvent = function () {\n      editorWindow.removeEventListener('keydown', _this.handleKeyDownEvent);\n    };\n\n    _this.openEditor = function () {\n      var _this$props = _this.props,\n          isReadOnly = _this$props.isReadOnly,\n          type = _this$props.type;\n\n      _this.props.onOpenEditor({\n        isReadOnly: isReadOnly === true,\n        type: type || PreviewType.PROJECT\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Preview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (unityDebugParams) {\n        history.replaceState('', 'Unity Debug', \"?\".concat(unityDebugParams));\n      }\n\n      if (!isDCLInitialized) {\n        this.startEditor().catch(function (error) {\n          return console.error('Failed to start editor', error);\n        });\n      } else {\n        this.moveCanvas();\n        this.openEditor();\n        this.subscribeKeyDownEvent();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (canvas) {\n        document.getElementsByTagName('body')[0].appendChild(canvas);\n      }\n\n      this.unsubscribeKeyDownEvent();\n    }\n  }, {\n    key: \"handleKeyDownEvent\",\n    value: function handleKeyDownEvent(e) {\n      var unityEvt = convertToUnityKeyboardEvent(e);\n\n      if (unityEvt) {\n        editorWindow.editor.onKeyDown(unityEvt);\n      }\n    }\n  }, {\n    key: \"startEditor\",\n    value: function () {\n      var _startEditor = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.canvasContainer.current) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('Missing canvas container');\n\n              case 2:\n                _context.prev = 2;\n                isDCLInitialized = true;\n                window.devicePixelRatio = 1; // without this unity blows up majestically 💥🌈🦄🔥🤷🏼‍♂️\n\n                _context.next = 7;\n                return editorWindow.editor.initEngine(this.canvasContainer.current, PUBLIC_URL + '/unity/Build/unity.json');\n\n              case 7:\n                if (unityDebugParams) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 10;\n                return editorWindow.editor.getDCLCanvas();\n\n              case 10:\n                canvas = _context.sent;\n                canvas && canvas.classList.add('dcl-canvas');\n\n              case 12:\n                this.moveCanvas();\n                this.openEditor();\n                this.subscribeKeyDownEvent();\n                _context.next = 21;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](2);\n                isDCLInitialized = false;\n                console.error('Failed to load Preview', _context.t0);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 17]]);\n      }));\n\n      function startEditor() {\n        return _startEditor.apply(this, arguments);\n      }\n\n      return startEditor;\n    }()\n  }, {\n    key: \"getLoadingText\",\n    value: function getLoadingText() {\n      var isLoadingEditor = this.props.isLoadingEditor;\n\n      if (isLoadingEditor) {\n        return isLoadingEditor ? t('editor_preview.loading_unity') : null;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          isLoadingEditor = _this$props2.isLoadingEditor,\n          connectDropTarget = _this$props2.connectDropTarget;\n      var isLoadingResources = isLoadingEditor;\n      return connectDropTarget( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Preview-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }, isLoadingResources && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Lottie, {\n        height: 100,\n        width: 100,\n        options: {\n          loop: true,\n          autoplay: true,\n          animationData: animationData,\n          rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"progress-bar\",\n        className: \"progress ingame\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"full\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, this.getLoadingText())), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Preview \".concat(isLoadingResources ? 'loading' : ''),\n        id: \"preview-viewport\",\n        ref: this.canvasContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return Preview;\n}(React.Component);\n\nexport default DropTarget(ASSET_TYPE, previewTarget, collect)(Preview);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Preview/Preview.tsx"],"names":["React","DropTarget","Lottie","config","t","ASSET_TYPE","PreviewType","convertToUnityKeyboardEvent","previewTarget","collect","animationData","editorWindow","window","unityDebugParams","get","PUBLIC_URL","process","env","canvas","isDCLInitialized","Preview","canvasContainer","createRef","moveCanvas","current","appendChild","subscribeKeyDownEvent","addEventListener","handleKeyDownEvent","unsubscribeKeyDownEvent","removeEventListener","openEditor","props","isReadOnly","type","onOpenEditor","PROJECT","history","replaceState","startEditor","catch","error","console","document","getElementsByTagName","e","unityEvt","editor","onKeyDown","Error","devicePixelRatio","initEngine","getDCLCanvas","classList","add","isLoadingEditor","connectDropTarget","isLoadingResources","loop","autoplay","rendererSettings","preserveAspectRatio","getLoadingText","Component"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,SAASC,CAAT,QAAkB,mDAAlB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,2BAAT,QAA4C,sBAA5C;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuD,eAAvD;AAEA,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAO,eAAP;AAEA,IAAMC,YAAY,GAAGC,MAArB;AACA,IAAMC,gBAAgB,GAAGV,MAAM,CAACW,GAAP,CAAW,oBAAX,CAAzB;AACA,IAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYF,UAA/B;AAEA,IAAIG,MAAgC,GAAG,IAAvC;AACA,IAAIC,gBAAyB,GAAG,KAAhC;;IAEMC,O;;;;;;;;;;;;;;;UACJC,e,GAAkBrB,KAAK,CAACsB,SAAN,E;;UAuBlBC,U,GAAa,YAAM;AACjB,UAAI,MAAKF,eAAL,CAAqBG,OAArB,IAAgCN,MAApC,EAA4C;AAC1C,cAAKG,eAAL,CAAqBG,OAArB,CAA6BC,WAA7B,CAAyCP,MAAzC;AACD;AACF,K;;UAEDQ,qB,GAAwB,YAAM;AAC5Bf,MAAAA,YAAY,CAACgB,gBAAb,CAA8B,SAA9B,EAAyC,MAAKC,kBAA9C;AACD,K;;UAEDC,uB,GAA0B,YAAM;AAC9BlB,MAAAA,YAAY,CAACmB,mBAAb,CAAiC,SAAjC,EAA4C,MAAKF,kBAAjD;AACD,K;;UASDG,U,GAAa,YAAM;AAAA,wBACY,MAAKC,KADjB;AAAA,UACTC,UADS,eACTA,UADS;AAAA,UACGC,IADH,eACGA,IADH;;AAEjB,YAAKF,KAAL,CAAWG,YAAX,CAAwB;AAAEF,QAAAA,UAAU,EAAEA,UAAU,KAAK,IAA7B;AAAmCC,QAAAA,IAAI,EAAEA,IAAI,IAAI5B,WAAW,CAAC8B;AAA7D,OAAxB;AACD,K;;;;;;;wCA7CmB;AAClB,UAAIvB,gBAAJ,EAAsB;AACpBwB,QAAAA,OAAO,CAACC,YAAR,CAAqB,EAArB,EAAyB,aAAzB,aAA4CzB,gBAA5C;AACD;;AAED,UAAI,CAACM,gBAAL,EAAuB;AACrB,aAAKoB,WAAL,GAAmBC,KAAnB,CAAyB,UAAAC,KAAK;AAAA,iBAAIC,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC,CAAJ;AAAA,SAA9B;AACD,OAFD,MAEO;AACL,aAAKlB,UAAL;AACA,aAAKQ,UAAL;AACA,aAAKL,qBAAL;AACD;AACF;;;2CAEsB;AACrB,UAAIR,MAAJ,EAAY;AACVyB,QAAAA,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCnB,WAAzC,CAAqDP,MAArD;AACD;;AACD,WAAKW,uBAAL;AACD;;;uCAgBkBgB,C,EAAkB;AACnC,UAAMC,QAAQ,GAAGvC,2BAA2B,CAACsC,CAAD,CAA5C;;AACA,UAAIC,QAAJ,EAAc;AACZnC,QAAAA,YAAY,CAACoC,MAAb,CAAoBC,SAApB,CAA8BF,QAA9B;AACD;AACF;;;;;;;;;oBAQM,KAAKzB,eAAL,CAAqBG,O;;;;;sBAClB,IAAIyB,KAAJ,CAAU,0BAAV,C;;;;AAGN9B,gBAAAA,gBAAgB,GAAG,IAAnB;AACEP,gBAAAA,MAAD,CAAgBsC,gBAAhB,GAAmC,CAAnC,C,CAAqC;;;uBAChCvC,YAAY,CAACoC,MAAb,CAAoBI,UAApB,CAA+B,KAAK9B,eAAL,CAAqBG,OAApD,EAA6DT,UAAU,GAAG,yBAA1E,C;;;oBACDF,gB;;;;;;uBACYF,YAAY,CAACoC,MAAb,CAAoBK,YAApB,E;;;AAAflC,gBAAAA,M;AACAA,gBAAAA,MAAM,IAAIA,MAAM,CAACmC,SAAP,CAAiBC,GAAjB,CAAqB,YAArB,CAAV;;;AAGF,qBAAK/B,UAAL;AACA,qBAAKQ,UAAL;AAEA,qBAAKL,qBAAL;;;;;;;AAEAP,gBAAAA,gBAAgB,GAAG,KAAnB;AACAuB,gBAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd;;;;;;;;;;;;;;;;;;qCAIa;AAAA,UACPc,eADO,GACa,KAAKvB,KADlB,CACPuB,eADO;;AAEf,UAAIA,eAAJ,EAAqB;AACnB,eAAOA,eAAe,GAAGnD,CAAC,CAAC,8BAAD,CAAJ,GAAuC,IAA7D;AACD;;AACD,aAAO,IAAP;AACD;;;6BAEQ;AAAA,yBACwC,KAAK4B,KAD7C;AAAA,UACCuB,eADD,gBACCA,eADD;AAAA,UACkBC,iBADlB,gBACkBA,iBADlB;AAEP,UAAMC,kBAAkB,GAAGF,eAA3B;AAEA,aAAOC,iBAAiB,eACtB;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,kBAAkB,iBACjB;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAE,GADV;AAEE,QAAA,KAAK,EAAE,GAFT;AAGE,QAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,IADC;AAEPC,UAAAA,QAAQ,EAAE,IAFH;AAGPjD,UAAAA,aAAa,EAAEA,aAHR;AAIPkD,UAAAA,gBAAgB,EAAE;AAChBC,YAAAA,mBAAmB,EAAE;AADL;AAJX,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAaE;AAAK,QAAA,EAAE,EAAC,cAAR;AAAuB,QAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbF,eAgBE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKC,cAAL,EAA/B,CAhBF,CAFJ,eAqBE;AAAK,QAAA,SAAS,oBAAaL,kBAAkB,GAAG,SAAH,GAAe,EAA9C,CAAd;AAAkE,QAAA,EAAE,EAAC,kBAArE;AAAwF,QAAA,GAAG,EAAE,KAAKpC,eAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CADsB,CAAxB;AAyBD;;;;EA9GmBrB,KAAK,CAAC+D,S;;AAiH5B,eAAe9D,UAAU,CAAwBI,UAAxB,EAAoCG,aAApC,EAAmDC,OAAnD,CAAV,CAAsEW,OAAtE,CAAf","sourcesContent":["import * as React from 'react'\nimport { DropTarget } from 'react-dnd'\nimport Lottie from 'react-lottie'\nimport { config } from 'config'\n\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { ASSET_TYPE } from 'components/AssetCard/AssetCard.dnd'\nimport { PreviewType } from 'modules/editor/types'\nimport { convertToUnityKeyboardEvent } from 'modules/editor/utils'\nimport { previewTarget, collect, CollectedProps } from './Preview.dnd'\nimport { EditorWindow, Props, State } from './Preview.types'\nimport animationData from './loader.json'\nimport './Preview.css'\n\nconst editorWindow = window as EditorWindow\nconst unityDebugParams = config.get('UNITY_DEBUG_PARAMS')\nconst PUBLIC_URL = process.env.PUBLIC_URL\n\nlet canvas: HTMLCanvasElement | null = null\nlet isDCLInitialized: boolean = false\n\nclass Preview extends React.Component<Props & CollectedProps, State> {\n  canvasContainer = React.createRef<HTMLDivElement>()\n\n  componentDidMount() {\n    if (unityDebugParams) {\n      history.replaceState('', 'Unity Debug', `?${unityDebugParams}`)\n    }\n\n    if (!isDCLInitialized) {\n      this.startEditor().catch(error => console.error('Failed to start editor', error))\n    } else {\n      this.moveCanvas()\n      this.openEditor()\n      this.subscribeKeyDownEvent()\n    }\n  }\n\n  componentWillUnmount() {\n    if (canvas) {\n      document.getElementsByTagName('body')[0].appendChild(canvas)\n    }\n    this.unsubscribeKeyDownEvent()\n  }\n\n  moveCanvas = () => {\n    if (this.canvasContainer.current && canvas) {\n      this.canvasContainer.current.appendChild(canvas)\n    }\n  }\n\n  subscribeKeyDownEvent = () => {\n    editorWindow.addEventListener('keydown', this.handleKeyDownEvent)\n  }\n\n  unsubscribeKeyDownEvent = () => {\n    editorWindow.removeEventListener('keydown', this.handleKeyDownEvent)\n  }\n\n  handleKeyDownEvent(e: KeyboardEvent) {\n    const unityEvt = convertToUnityKeyboardEvent(e)\n    if (unityEvt) {\n      editorWindow.editor.onKeyDown(unityEvt)\n    }\n  }\n\n  openEditor = () => {\n    const { isReadOnly, type } = this.props\n    this.props.onOpenEditor({ isReadOnly: isReadOnly === true, type: type || PreviewType.PROJECT })\n  }\n\n  async startEditor() {\n    if (!this.canvasContainer.current) {\n      throw new Error('Missing canvas container')\n    }\n    try {\n      isDCLInitialized = true\n      ;(window as any).devicePixelRatio = 1 // without this unity blows up majestically 💥🌈🦄🔥🤷🏼‍♂️\n      await editorWindow.editor.initEngine(this.canvasContainer.current, PUBLIC_URL + '/unity/Build/unity.json')\n      if (!unityDebugParams) {\n        canvas = await editorWindow.editor.getDCLCanvas()\n        canvas && canvas.classList.add('dcl-canvas')\n      }\n\n      this.moveCanvas()\n      this.openEditor()\n\n      this.subscribeKeyDownEvent()\n    } catch (error) {\n      isDCLInitialized = false\n      console.error('Failed to load Preview', error)\n    }\n  }\n\n  getLoadingText() {\n    const { isLoadingEditor } = this.props\n    if (isLoadingEditor) {\n      return isLoadingEditor ? t('editor_preview.loading_unity') : null\n    }\n    return null\n  }\n\n  render() {\n    const { isLoadingEditor, connectDropTarget } = this.props\n    const isLoadingResources = isLoadingEditor\n\n    return connectDropTarget(\n      <div className=\"Preview-wrapper\">\n        {isLoadingResources && (\n          <div className=\"overlay\">\n            <Lottie\n              height={100}\n              width={100}\n              options={{\n                loop: true,\n                autoplay: true,\n                animationData: animationData,\n                rendererSettings: {\n                  preserveAspectRatio: 'xMidYMid slice'\n                }\n              }}\n            />\n            <div id=\"progress-bar\" className=\"progress ingame\">\n              <div className=\"full\"></div>\n            </div>\n            <div className=\"loading-text\">{this.getLoadingText()}</div>\n          </div>\n        )}\n        <div className={`Preview ${isLoadingResources ? 'loading' : ''}`} id=\"preview-viewport\" ref={this.canvasContainer} />\n      </div>\n    )\n  }\n}\n\nexport default DropTarget<Props, CollectedProps>(ASSET_TYPE, previewTarget, collect)(Preview)\n"]},"metadata":{},"sourceType":"module"}