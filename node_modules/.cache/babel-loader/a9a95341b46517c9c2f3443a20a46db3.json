{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/TopBar/TopBar.tsx\";\nimport * as React from 'react';\nimport { Header, Grid, Icon } from 'decentraland-ui';\nimport { IntercomWidget } from 'decentraland-dapps/dist/components/Intercom/IntercomWidget';\nimport DeploymentStatus from 'components/DeploymentStatus';\nimport ShortcutTooltip from 'components/ShortcutTooltip';\nimport Chip from 'components/Chip';\nimport OwnIcon from 'components/Icon';\nimport DeployButton from 'components/DeployButton';\nimport DeployContestButton from 'components/DeployContestButton';\nimport ShareButton from 'components/ShareButton';\nimport { locations } from 'routing/locations';\nimport { Gizmo } from 'modules/editor/types';\nimport { Shortcut } from 'modules/keyboard/types';\nimport './TopBar.css';\nvar widget = IntercomWidget.getInstance();\n\nvar TopBar = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(TopBar, _React$PureComponent);\n\n  function TopBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TopBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TopBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleMoveMode = function () {\n      var _this$props = _this.props,\n          gizmo = _this$props.gizmo,\n          onSetGizmo = _this$props.onSetGizmo;\n      onSetGizmo(gizmo === Gizmo.MOVE ? Gizmo.NONE : Gizmo.MOVE);\n    };\n\n    _this.handleRotateMode = function () {\n      var _this$props2 = _this.props,\n          gizmo = _this$props2.gizmo,\n          onSetGizmo = _this$props2.onSetGizmo;\n      onSetGizmo(gizmo === Gizmo.ROTATE ? Gizmo.NONE : Gizmo.ROTATE);\n    };\n\n    _this.handleScaleMode = function () {\n      var _this$props3 = _this.props,\n          gizmo = _this$props3.gizmo,\n          onSetGizmo = _this$props3.onSetGizmo;\n      onSetGizmo(gizmo === Gizmo.SCALE ? Gizmo.NONE : Gizmo.SCALE);\n    };\n\n    _this.handleTogglePreview = function () {\n      var _this$props4 = _this.props,\n          onTogglePreview = _this$props4.onTogglePreview,\n          isPreviewing = _this$props4.isPreviewing;\n      widget.unmount();\n      onTogglePreview(!isPreviewing);\n    };\n\n    _this.handleToggleSidebar = function () {\n      var _this$props5 = _this.props,\n          onToggleSidebar = _this$props5.onToggleSidebar,\n          isSidebarOpen = _this$props5.isSidebarOpen;\n      onToggleSidebar(!isSidebarOpen);\n    };\n\n    _this.handleTitleClick = function () {\n      var _this$props6 = _this.props,\n          isLoading = _this$props6.isLoading,\n          onOpenModal = _this$props6.onOpenModal;\n\n      if (!isLoading) {\n        onOpenModal('EditProjectModal');\n      }\n    };\n\n    _this.handleGoBack = function () {\n      var _this$props7 = _this.props,\n          currentProject = _this$props7.currentProject,\n          onNavigate = _this$props7.onNavigate,\n          onBack = _this$props7.onBack,\n          hasHistory = _this$props7.hasHistory;\n\n      if (hasHistory) {\n        onBack();\n      } else {\n        onNavigate(currentProject ? locations.sceneDetail(currentProject.id) : locations.root());\n      }\n    };\n\n    _this.handleExport = function () {\n      _this.props.onOpenModal('ExportModal', {\n        project: _this.props.currentProject\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TopBar, [{\n    key: \"isSceneLoading\",\n    value: function isSceneLoading() {\n      var _this$props8 = this.props,\n          metrics = _this$props8.metrics,\n          isLoading = _this$props8.isLoading;\n      return isLoading || metrics.entities > 0 && metrics.triangles === 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props9 = this.props,\n          gizmo = _this$props9.gizmo,\n          currentProject = _this$props9.currentProject,\n          currentPoolGroup = _this$props9.currentPoolGroup,\n          isPreviewing = _this$props9.isPreviewing,\n          isUploading = _this$props9.isUploading,\n          isSidebarOpen = _this$props9.isSidebarOpen,\n          selectedEntityIds = _this$props9.selectedEntityIds,\n          enabledTools = _this$props9.enabledTools,\n          isLoading = _this$props9.isLoading,\n          onReset = _this$props9.onReset,\n          onDelete = _this$props9.onDelete,\n          onDuplicate = _this$props9.onDuplicate;\n      return /*#__PURE__*/React.createElement(Grid, {\n        className: \"TopBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        mobile: 4,\n        tablet: 4,\n        computer: 4,\n        className: \"left-column\",\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        size: \"medium\",\n        className: \"project-title-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"go-back\",\n        onClick: this.handleGoBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"chevron left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      })), currentProject ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DeploymentStatus, {\n        projectId: currentProject.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"project-title \".concat(isLoading ? 'disabled' : ''),\n        onClick: this.handleTitleClick,\n        title: currentProject.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, currentProject.title), isUploading ? /*#__PURE__*/React.createElement(OwnIcon, {\n        name: \"cloud-upload\",\n        className: \"cloud-upload-indicator is-uploading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(OwnIcon, {\n        name: \"edit\",\n        className: \"edit-project-icon\",\n        onClick: this.handleTitleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      })) : null)), /*#__PURE__*/React.createElement(Grid.Column, {\n        mobile: 6,\n        tablet: 6,\n        computer: 7,\n        className: \"middle-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editor-actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"editor-modes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: Shortcut.MOVE,\n        position: \"bottom center\",\n        className: \"tool\",\n        popupClassName: \"top-bar-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        icon: \"move\",\n        isActive: gizmo === Gizmo.MOVE && selectedEntityIds.length > 0,\n        isDisabled: !enabledTools.move,\n        onClick: this.handleMoveMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: Shortcut.ROTATE,\n        position: \"bottom center\",\n        className: \"tool\",\n        popupClassName: \"top-bar-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        icon: \"rotate\",\n        isActive: gizmo === Gizmo.ROTATE && selectedEntityIds.length > 0,\n        isDisabled: !enabledTools.rotate,\n        onClick: this.handleRotateMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: Shortcut.SCALE,\n        position: \"bottom center\",\n        className: \"tool\",\n        popupClassName: \"top-bar-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        icon: \"scale\",\n        isActive: gizmo === Gizmo.SCALE && selectedEntityIds.length > 0,\n        isDisabled: !enabledTools.scale,\n        onClick: this.handleScaleMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: Shortcut.RESET_ITEM,\n        position: \"bottom center\",\n        className: \"tool\",\n        popupClassName: \"top-bar-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        icon: \"undo\",\n        isDisabled: !enabledTools.reset,\n        onClick: onReset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: Shortcut.DUPLICATE_ITEM,\n        position: \"bottom center\",\n        className: \"tool\",\n        popupClassName: \"top-bar-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        icon: \"duplicate\",\n        isDisabled: !enabledTools.duplicate,\n        onClick: onDuplicate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: Shortcut.DELETE_ITEM,\n        position: \"bottom center\",\n        className: \"tool\",\n        popupClassName: \"top-bar-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        icon: \"delete\",\n        isDisabled: !enabledTools.delete,\n        onClick: onDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }))))), /*#__PURE__*/React.createElement(Grid.Column, {\n        mobile: 6,\n        tablet: 6,\n        computer: 5,\n        className: \"right-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: Shortcut.PREVIEW,\n        position: \"bottom center\",\n        className: \"tool\",\n        popupClassName: \"top-bar-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        icon: \"preview\",\n        isActive: isPreviewing,\n        isDisabled: isLoading,\n        onClick: this.handleTogglePreview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: Shortcut.EXPORT_SCENE,\n        position: \"bottom center\",\n        className: \"tool\",\n        popupClassName: \"top-bar-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        icon: \"export\",\n        isDisabled: isLoading,\n        onClick: this.handleExport,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(ShortcutTooltip, {\n        shortcut: Shortcut.TOGGLE_SIDEBAR,\n        position: \"bottom center\",\n        className: \"tool\",\n        popupClassName: \"top-bar-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        icon: \"sidebar\",\n        isActive: isSidebarOpen,\n        onClick: this.handleToggleSidebar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"contest-button-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, !currentPoolGroup && /*#__PURE__*/React.createElement(ShareButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(DeployButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }), currentPoolGroup && /*#__PURE__*/React.createElement(DeployContestButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 36\n        }\n      })))));\n    }\n  }]);\n\n  return TopBar;\n}(React.PureComponent);\n\nexport { TopBar as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/TopBar/TopBar.tsx"],"names":["React","Header","Grid","Icon","IntercomWidget","DeploymentStatus","ShortcutTooltip","Chip","OwnIcon","DeployButton","DeployContestButton","ShareButton","locations","Gizmo","Shortcut","widget","getInstance","TopBar","handleMoveMode","props","gizmo","onSetGizmo","MOVE","NONE","handleRotateMode","ROTATE","handleScaleMode","SCALE","handleTogglePreview","onTogglePreview","isPreviewing","unmount","handleToggleSidebar","onToggleSidebar","isSidebarOpen","handleTitleClick","isLoading","onOpenModal","handleGoBack","currentProject","onNavigate","onBack","hasHistory","sceneDetail","id","root","handleExport","project","metrics","entities","triangles","currentPoolGroup","isUploading","selectedEntityIds","enabledTools","onReset","onDelete","onDuplicate","title","length","move","rotate","scale","RESET_ITEM","reset","DUPLICATE_ITEM","duplicate","DELETE_ITEM","delete","PREVIEW","EXPORT_SCENE","TOGGLE_SIDEBAR","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Header, Grid, Icon } from 'decentraland-ui'\nimport { IntercomWidget } from 'decentraland-dapps/dist/components/Intercom/IntercomWidget'\n\nimport DeploymentStatus from 'components/DeploymentStatus'\nimport ShortcutTooltip from 'components/ShortcutTooltip'\nimport Chip from 'components/Chip'\nimport OwnIcon from 'components/Icon'\nimport DeployButton from 'components/DeployButton'\nimport DeployContestButton from 'components/DeployContestButton'\nimport ShareButton from 'components/ShareButton'\nimport { locations } from 'routing/locations'\n\nimport { Gizmo } from 'modules/editor/types'\nimport { Shortcut } from 'modules/keyboard/types'\nimport { Props } from './TopBar.types'\nimport './TopBar.css'\n\nconst widget = IntercomWidget.getInstance()\n\nexport default class TopBar extends React.PureComponent<Props> {\n  handleMoveMode = () => {\n    const { gizmo, onSetGizmo } = this.props\n    onSetGizmo(gizmo === Gizmo.MOVE ? Gizmo.NONE : Gizmo.MOVE)\n  }\n\n  handleRotateMode = () => {\n    const { gizmo, onSetGizmo } = this.props\n    onSetGizmo(gizmo === Gizmo.ROTATE ? Gizmo.NONE : Gizmo.ROTATE)\n  }\n\n  handleScaleMode = () => {\n    const { gizmo, onSetGizmo } = this.props\n    onSetGizmo(gizmo === Gizmo.SCALE ? Gizmo.NONE : Gizmo.SCALE)\n  }\n\n  handleTogglePreview = () => {\n    const { onTogglePreview, isPreviewing } = this.props\n    widget.unmount()\n    onTogglePreview(!isPreviewing)\n  }\n\n  handleToggleSidebar = () => {\n    const { onToggleSidebar, isSidebarOpen } = this.props\n    onToggleSidebar(!isSidebarOpen)\n  }\n\n  handleTitleClick = () => {\n    const { isLoading, onOpenModal } = this.props\n    if (!isLoading) {\n      onOpenModal('EditProjectModal')\n    }\n  }\n\n  handleGoBack = () => {\n    const { currentProject, onNavigate, onBack, hasHistory } = this.props\n    if (hasHistory) {\n      onBack()\n    } else {\n      onNavigate(currentProject ? locations.sceneDetail(currentProject.id) : locations.root())\n    }\n  }\n\n  handleExport = () => {\n    this.props.onOpenModal('ExportModal', { project: this.props.currentProject })\n  }\n\n  isSceneLoading() {\n    const { metrics, isLoading } = this.props\n    return isLoading || (metrics.entities > 0 && metrics.triangles === 0)\n  }\n\n  render() {\n    const {\n      gizmo,\n      currentProject,\n      currentPoolGroup,\n      isPreviewing,\n      isUploading,\n      isSidebarOpen,\n      selectedEntityIds: selectedEntityIds,\n      enabledTools,\n      isLoading,\n      onReset,\n      onDelete,\n      onDuplicate\n    } = this.props\n\n    return (\n      <Grid className=\"TopBar\">\n        <Grid.Column mobile={4} tablet={4} computer={4} className=\"left-column\" verticalAlign=\"middle\">\n          <Header size=\"medium\" className=\"project-title-header\">\n            <div className=\"go-back\" onClick={this.handleGoBack}>\n              <Icon name=\"chevron left\" />\n            </div>\n            {currentProject ? (\n              <>\n                <DeploymentStatus projectId={currentProject.id} />\n                <div\n                  className={`project-title ${isLoading ? 'disabled' : ''}`}\n                  onClick={this.handleTitleClick}\n                  title={currentProject.title}\n                >\n                  {currentProject.title}\n                </div>\n                {isUploading ? (\n                  <OwnIcon name=\"cloud-upload\" className=\"cloud-upload-indicator is-uploading\" />\n                ) : (\n                  <OwnIcon name=\"edit\" className=\"edit-project-icon\" onClick={this.handleTitleClick} />\n                )}\n              </>\n            ) : null}\n          </Header>\n        </Grid.Column>\n        <Grid.Column mobile={6} tablet={6} computer={7} className=\"middle-column\">\n          <Grid.Row>\n            <div className=\"editor-actions\">\n              <span className=\"editor-modes\">\n                <ShortcutTooltip shortcut={Shortcut.MOVE} position=\"bottom center\" className=\"tool\" popupClassName=\"top-bar-popup\">\n                  <Chip\n                    icon=\"move\"\n                    isActive={gizmo === Gizmo.MOVE && selectedEntityIds.length > 0}\n                    isDisabled={!enabledTools.move}\n                    onClick={this.handleMoveMode}\n                  />\n                </ShortcutTooltip>\n                <ShortcutTooltip shortcut={Shortcut.ROTATE} position=\"bottom center\" className=\"tool\" popupClassName=\"top-bar-popup\">\n                  <Chip\n                    icon=\"rotate\"\n                    isActive={gizmo === Gizmo.ROTATE && selectedEntityIds.length > 0}\n                    isDisabled={!enabledTools.rotate}\n                    onClick={this.handleRotateMode}\n                  />\n                </ShortcutTooltip>\n                <ShortcutTooltip shortcut={Shortcut.SCALE} position=\"bottom center\" className=\"tool\" popupClassName=\"top-bar-popup\">\n                  <Chip\n                    icon=\"scale\"\n                    isActive={gizmo === Gizmo.SCALE && selectedEntityIds.length > 0}\n                    isDisabled={!enabledTools.scale}\n                    onClick={this.handleScaleMode}\n                  />\n                </ShortcutTooltip>\n              </span>\n              <ShortcutTooltip shortcut={Shortcut.RESET_ITEM} position=\"bottom center\" className=\"tool\" popupClassName=\"top-bar-popup\">\n                <Chip icon=\"undo\" isDisabled={!enabledTools.reset} onClick={onReset} />\n              </ShortcutTooltip>\n              <ShortcutTooltip shortcut={Shortcut.DUPLICATE_ITEM} position=\"bottom center\" className=\"tool\" popupClassName=\"top-bar-popup\">\n                <Chip icon=\"duplicate\" isDisabled={!enabledTools.duplicate} onClick={onDuplicate} />\n              </ShortcutTooltip>\n              <ShortcutTooltip shortcut={Shortcut.DELETE_ITEM} position=\"bottom center\" className=\"tool\" popupClassName=\"top-bar-popup\">\n                <Chip icon=\"delete\" isDisabled={!enabledTools.delete} onClick={onDelete} />\n              </ShortcutTooltip>\n            </div>\n          </Grid.Row>\n        </Grid.Column>\n        <Grid.Column mobile={6} tablet={6} computer={5} className=\"right-column\">\n          <Grid.Row>\n            <ShortcutTooltip shortcut={Shortcut.PREVIEW} position=\"bottom center\" className=\"tool\" popupClassName=\"top-bar-popup\">\n              <Chip icon=\"preview\" isActive={isPreviewing} isDisabled={isLoading} onClick={this.handleTogglePreview} />\n            </ShortcutTooltip>\n            <ShortcutTooltip shortcut={Shortcut.EXPORT_SCENE} position=\"bottom center\" className=\"tool\" popupClassName=\"top-bar-popup\">\n              <Chip icon=\"export\" isDisabled={isLoading} onClick={this.handleExport} />\n            </ShortcutTooltip>\n            <ShortcutTooltip shortcut={Shortcut.TOGGLE_SIDEBAR} position=\"bottom center\" className=\"tool\" popupClassName=\"top-bar-popup\">\n              <Chip icon=\"sidebar\" isActive={isSidebarOpen} onClick={this.handleToggleSidebar} />\n            </ShortcutTooltip>\n            <span className=\"contest-button-wrapper\">\n              {!currentPoolGroup && <ShareButton />}\n              <DeployButton />\n              {currentPoolGroup && <DeployContestButton />}\n            </span>\n          </Grid.Row>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}