{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _toConsumableArray = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.profileReducer = exports.INITIAL_STATE = void 0;\n\nvar reducer_1 = require(\"../loading/reducer\");\n\nvar actions_1 = require(\"./actions\");\n\nexports.INITIAL_STATE = {\n  data: {},\n  loading: [],\n  error: null\n};\n\nvar profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exports.INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions_1.SET_PROFILE_AVATAR_DESCRIPTION_REQUEST:\n    case actions_1.SET_PROFILE_AVATAR_ALIAS_REQUEST:\n    case actions_1.LOAD_PROFILE_REQUEST:\n      {\n        return Object.assign(Object.assign({}, state), {\n          loading: reducer_1.loadingReducer(state.loading, action),\n          error: null\n        });\n      }\n\n    case actions_1.SET_PROFILE_AVATAR_DESCRIPTION_FAILURE:\n    case actions_1.SET_PROFILE_AVATAR_ALIAS_FAILURE:\n    case actions_1.LOAD_PROFILE_FAILURE:\n      {\n        return Object.assign(Object.assign({}, state), {\n          loading: reducer_1.loadingReducer(state.loading, action),\n          error: action.payload.error\n        });\n      }\n\n    case actions_1.SET_PROFILE_AVATAR_ALIAS_SUCCESS:\n      {\n        var _action$payload = action.payload,\n            address = _action$payload.address,\n            alias = _action$payload.alias,\n            version = _action$payload.version;\n        var newAvatar = Object.assign(Object.assign({}, state.data[address].avatars[0]), {\n          hasClaimedName: true,\n          version: version,\n          name: alias\n        });\n        return Object.assign(Object.assign({}, state), {\n          data: Object.assign(Object.assign({}, state.data), _defineProperty({}, address, Object.assign(Object.assign({}, state.data[address]), {\n            avatars: [newAvatar].concat(_toConsumableArray(state.data[address].avatars.slice(1)))\n          }))),\n          loading: reducer_1.loadingReducer(state.loading, action)\n        });\n      }\n\n    case actions_1.SET_PROFILE_AVATAR_DESCRIPTION_SUCCESS:\n      {\n        var _action$payload2 = action.payload,\n            _address = _action$payload2.address,\n            description = _action$payload2.description,\n            _version = _action$payload2.version;\n\n        var _newAvatar = Object.assign(Object.assign({}, state.data[_address].avatars[0]), {\n          description: description,\n          version: _version\n        });\n\n        return Object.assign(Object.assign({}, state), {\n          data: Object.assign(Object.assign({}, state.data), _defineProperty({}, _address, Object.assign(Object.assign({}, state.data[_address]), {\n            avatars: [_newAvatar].concat(_toConsumableArray(state.data[_address].avatars.slice(1)))\n          }))),\n          loading: reducer_1.loadingReducer(state.loading, action)\n        });\n      }\n\n    case actions_1.LOAD_PROFILE_SUCCESS:\n      {\n        var _action$payload3 = action.payload,\n            _address2 = _action$payload3.address,\n            profile = _action$payload3.profile;\n        return Object.assign(Object.assign({}, state), {\n          data: Object.assign(Object.assign({}, state.data), _defineProperty({}, _address2, profile)),\n          loading: reducer_1.loadingReducer(state.loading, action)\n        });\n      }\n\n    case actions_1.CHANGE_PROFILE:\n      {\n        var _action$payload4 = action.payload,\n            _address3 = _action$payload4.address,\n            _profile = _action$payload4.profile;\n        return Object.assign(Object.assign({}, state), {\n          data: Object.assign(Object.assign({}, state.data), _defineProperty({}, _address3, Object.assign(Object.assign({}, state.data[_address3]), _profile)))\n        });\n      }\n\n    case actions_1.CLEAR_PROFILE_ERROR:\n      {\n        return Object.assign(Object.assign({}, state), {\n          error: null\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexports.profileReducer = profileReducer;","map":null,"metadata":{},"sourceType":"script"}