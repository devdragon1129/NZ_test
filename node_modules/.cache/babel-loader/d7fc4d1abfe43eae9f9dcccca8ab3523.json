{"ast":null,"code":"import { Rarity } from '@dcl/schemas';\nimport { ItemRarity } from 'modules/item/types';\nexport function fromRemoteItem(remoteItem) {\n  var _remoteItem$descripti;\n\n  var item = {\n    id: remoteItem.id,\n    name: remoteItem.name,\n    thumbnail: remoteItem.thumbnail,\n    owner: remoteItem.eth_address,\n    description: (_remoteItem$descripti = remoteItem.description) !== null && _remoteItem$descripti !== void 0 ? _remoteItem$descripti : '',\n    isPublished: remoteItem.is_published,\n    isApproved: remoteItem.is_approved,\n    inCatalyst: remoteItem.in_catalyst,\n    type: remoteItem.type,\n    data: remoteItem.data,\n    contents: remoteItem.contents,\n    blockchainContentHash: remoteItem.content_hash,\n    currentContentHash: remoteItem.local_content_hash,\n    catalystContentHash: remoteItem.catalyst_content_hash,\n    metrics: remoteItem.metrics,\n    createdAt: +new Date(remoteItem.created_at),\n    updatedAt: +new Date(remoteItem.created_at)\n  };\n  if (remoteItem.collection_id) item.collectionId = remoteItem.collection_id;\n  if (remoteItem.blockchain_item_id) item.tokenId = remoteItem.blockchain_item_id;\n  if (remoteItem.price) item.price = remoteItem.price;\n  if (remoteItem.urn) item.urn = remoteItem.urn;\n  if (remoteItem.beneficiary) item.beneficiary = remoteItem.beneficiary;\n  if (remoteItem.rarity) item.rarity = rarityToItemRarity(remoteItem.rarity);\n  if (remoteItem.total_supply !== null) item.totalSupply = remoteItem.total_supply; // 0 is false\n\n  return item;\n}\n\nfunction rarityToItemRarity(rarity) {\n  switch (rarity) {\n    case Rarity.UNIQUE:\n      return ItemRarity.UNIQUE;\n\n    case Rarity.MYTHIC:\n      return ItemRarity.MYTHIC;\n\n    case Rarity.LEGENDARY:\n      return ItemRarity.LEGENDARY;\n\n    case Rarity.EPIC:\n      return ItemRarity.EPIC;\n\n    case Rarity.RARE:\n      return ItemRarity.RARE;\n\n    case Rarity.UNCOMMON:\n      return ItemRarity.UNCOMMON;\n\n    case Rarity.COMMON:\n      return ItemRarity.COMMON;\n\n    default:\n      throw new Error('Unknown rarity');\n  }\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/lib/api/transformations.ts"],"names":["Rarity","ItemRarity","fromRemoteItem","remoteItem","item","id","name","thumbnail","owner","eth_address","description","isPublished","is_published","isApproved","is_approved","inCatalyst","in_catalyst","type","data","contents","blockchainContentHash","content_hash","currentContentHash","local_content_hash","catalystContentHash","catalyst_content_hash","metrics","createdAt","Date","created_at","updatedAt","collection_id","collectionId","blockchain_item_id","tokenId","price","urn","beneficiary","rarity","rarityToItemRarity","total_supply","totalSupply","UNIQUE","MYTHIC","LEGENDARY","EPIC","RARE","UNCOMMON","COMMON","Error"],"mappings":"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","sourcesContent":["import { RemoteItem } from '@dcl/builder-client'\nimport { Rarity } from '@dcl/schemas'\nimport { Item, ItemRarity, WearableData } from 'modules/item/types'\n\nexport function fromRemoteItem(remoteItem: RemoteItem): Item {\n  const item: Item = {\n    id: remoteItem.id,\n    name: remoteItem.name,\n    thumbnail: remoteItem.thumbnail,\n    owner: remoteItem.eth_address,\n    description: remoteItem.description ?? '',\n    isPublished: remoteItem.is_published,\n    isApproved: remoteItem.is_approved,\n    inCatalyst: remoteItem.in_catalyst,\n    type: remoteItem.type,\n    data: remoteItem.data as WearableData,\n    contents: remoteItem.contents,\n    blockchainContentHash: remoteItem.content_hash,\n    currentContentHash: remoteItem.local_content_hash,\n    catalystContentHash: remoteItem.catalyst_content_hash,\n    metrics: remoteItem.metrics,\n    createdAt: +new Date(remoteItem.created_at),\n    updatedAt: +new Date(remoteItem.created_at)\n  }\n\n  if (remoteItem.collection_id) item.collectionId = remoteItem.collection_id\n  if (remoteItem.blockchain_item_id) item.tokenId = remoteItem.blockchain_item_id\n  if (remoteItem.price) item.price = remoteItem.price\n  if (remoteItem.urn) item.urn = remoteItem.urn\n  if (remoteItem.beneficiary) item.beneficiary = remoteItem.beneficiary\n  if (remoteItem.rarity) item.rarity = rarityToItemRarity(remoteItem.rarity)\n  if (remoteItem.total_supply !== null) item.totalSupply = remoteItem.total_supply // 0 is false\n\n  return item\n}\n\nfunction rarityToItemRarity(rarity: Rarity): ItemRarity {\n  switch (rarity) {\n    case Rarity.UNIQUE:\n      return ItemRarity.UNIQUE\n    case Rarity.MYTHIC:\n      return ItemRarity.MYTHIC\n    case Rarity.LEGENDARY:\n      return ItemRarity.LEGENDARY\n    case Rarity.EPIC:\n      return ItemRarity.EPIC\n    case Rarity.RARE:\n      return ItemRarity.RARE\n    case Rarity.UNCOMMON:\n      return ItemRarity.UNCOMMON\n    case Rarity.COMMON:\n      return ItemRarity.COMMON\n    default:\n      throw new Error('Unknown rarity')\n  }\n}\n"]},"metadata":{},"sourceType":"module"}