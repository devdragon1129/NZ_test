{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _slicedToArray = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _templateObject;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar formats_1 = require(\"./formats\");\n\nvar limit_1 = require(\"./limit\");\n\nvar codegen_1 = require(\"ajv/dist/compile/codegen\");\n\nvar fullName = new codegen_1.Name(\"fullFormats\");\nvar fastName = new codegen_1.Name(\"fastFormats\");\n\nvar formatsPlugin = function formatsPlugin(ajv) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    keywords: true\n  };\n\n  if (Array.isArray(opts)) {\n    addFormats(ajv, opts, formats_1.fullFormats, fullName);\n    return ajv;\n  }\n\n  var _ref = opts.mode === \"fast\" ? [formats_1.fastFormats, fastName] : [formats_1.fullFormats, fullName],\n      _ref2 = _slicedToArray(_ref, 2),\n      formats = _ref2[0],\n      exportName = _ref2[1];\n\n  var list = opts.formats || formats_1.formatNames;\n  addFormats(ajv, list, formats, exportName);\n  if (opts.keywords) limit_1.default(ajv);\n  return ajv;\n};\n\nformatsPlugin.get = function (name) {\n  var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"full\";\n  var formats = mode === \"fast\" ? formats_1.fastFormats : formats_1.fullFormats;\n  var f = formats[name];\n  if (!f) throw new Error(\"Unknown format \\\"\".concat(name, \"\\\"\"));\n  return f;\n};\n\nfunction addFormats(ajv, list, fs, exportName) {\n  var _a;\n\n  var _b;\n\n  (_a = (_b = ajv.opts.code).formats) !== null && _a !== void 0 ? _a : _b.formats = codegen_1._(_templateObject || (_templateObject = _taggedTemplateLiteral([\"require(\\\"ajv-formats/dist/formats\\\").\", \"\"])), exportName);\n\n  var _iterator = _createForOfIteratorHelper(list),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var f = _step.value;\n      ajv.addFormat(f, fs[f]);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nmodule.exports = exports = formatsPlugin;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatsPlugin;","map":null,"metadata":{},"sourceType":"script"}