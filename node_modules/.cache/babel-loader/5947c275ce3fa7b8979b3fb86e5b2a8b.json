{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasSucceeded = exports.hasFailed = exports.isPending = exports.getTransactionOrigin = exports.getTransactionHref = exports.buildTransactionWithReceiptPayload = exports.buildTransactionPayload = exports.getTransactionHashFromAction = exports.getTransactionFromAction = exports.isTransactionAction = exports.buildActionRef = exports.TRANSACTION_ACTION_FLAG = void 0;\n\nvar chain_id_1 = require(\"@dcl/schemas/dist/dapps/chain-id\");\n\nvar types_1 = require(\"./types\"); // Special flag used to determine transaction hashes to be monitored\n\n\nexports.TRANSACTION_ACTION_FLAG = '_watch_tx';\n\nfunction buildActionRef(transaction) {\n  var actionType = transaction.actionType,\n      withReceipt = transaction.withReceipt,\n      payload = transaction.payload;\n  var buildFunction = withReceipt ? buildTransactionWithReceiptPayload : buildTransactionPayload;\n  return {\n    type: actionType,\n    payload: buildFunction(transaction.chainId, transaction.hash, payload)\n  };\n}\n\nexports.buildActionRef = buildActionRef;\n\nfunction isTransactionAction(action) {\n  return !!getTransactionFromAction(action);\n}\n\nexports.isTransactionAction = isTransactionAction;\n\nfunction getTransactionFromAction(action) {\n  return action.payload && action.payload[exports.TRANSACTION_ACTION_FLAG];\n}\n\nexports.getTransactionFromAction = getTransactionFromAction;\n\nfunction getTransactionHashFromAction(action) {\n  return getTransactionFromAction(action).hash;\n}\n\nexports.getTransactionHashFromAction = getTransactionHashFromAction;\n\nfunction buildTransactionPayload(chainId, hash) {\n  var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _defineProperty({}, exports.TRANSACTION_ACTION_FLAG, {\n    chainId: chainId,\n    hash: hash,\n    payload: payload\n  });\n}\n\nexports.buildTransactionPayload = buildTransactionPayload;\n\nfunction buildTransactionWithReceiptPayload(chainId, hash) {\n  var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var txPayload = buildTransactionPayload(chainId, hash, payload);\n  txPayload[exports.TRANSACTION_ACTION_FLAG].withReceipt = true;\n  return txPayload;\n}\n\nexports.buildTransactionWithReceiptPayload = buildTransactionWithReceiptPayload;\n\nfunction getTransactionHref(_ref2, network) {\n  var txHash = _ref2.txHash,\n      address = _ref2.address,\n      blockNumber = _ref2.blockNumber;\n  var pathname = address ? \"/address/\".concat(address) : blockNumber ? \"/block/\".concat(blockNumber) : \"/tx/\".concat(txHash);\n  return \"\".concat(getTransactionOrigin(network)).concat(pathname);\n}\n\nexports.getTransactionHref = getTransactionHref;\n\nfunction getTransactionOrigin() {\n  var chainId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : chain_id_1.ChainId.ETHEREUM_MAINNET;\n\n  switch (chainId) {\n    case chain_id_1.ChainId.ETHEREUM_ROPSTEN:\n      return 'https://ropsten.etherscan.io';\n\n    case chain_id_1.ChainId.ETHEREUM_RINKEBY:\n      return 'https://rinkeby.etherscan.io';\n\n    case chain_id_1.ChainId.ETHEREUM_GOERLI:\n      return 'https://goerli.etherscan.io';\n\n    case chain_id_1.ChainId.MATIC_MAINNET:\n      return 'https://explorer-mainnet.maticvigil.com';\n\n    case chain_id_1.ChainId.MATIC_MUMBAI:\n      return 'https://explorer-mumbai.maticvigil.com';\n\n    default:\n      return 'https://etherscan.io';\n  }\n}\n\nexports.getTransactionOrigin = getTransactionOrigin;\n\nfunction isPending(status) {\n  return !types_1.FINISHED_STATUS.includes(status);\n}\n\nexports.isPending = isPending;\n\nfunction hasFailed(status) {\n  return types_1.FAILED_STATUS.includes(status);\n}\n\nexports.hasFailed = hasFailed;\n\nfunction hasSucceeded(status) {\n  return types_1.SUCCESS_STATUS.includes(status);\n}\n\nexports.hasSucceeded = hasSucceeded;","map":null,"metadata":{},"sourceType":"script"}