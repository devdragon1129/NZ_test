{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatNumber = exports.formatDateTime = exports.formatDate = exports.distanceInWordsToNow = exports.toObjectByKey = exports.toObjectById = exports.insertScript = exports.isMobile = void 0;\n\nvar format_1 = __importDefault(require(\"date-fns/format\"));\n\nvar distance_in_words_to_now_1 = __importDefault(require(\"date-fns/distance_in_words_to_now\"));\n\nvar utils_1 = require(\"../modules/translation/utils\");\n\nfunction isMobile() {\n  // WARN: Super naive mobile device check.\n  // we're using it on low-stake checks, where failing to detect some browsers is not a big deal.\n  // If you need more specificity you may want to change this implementation.\n  var navigator = window.navigator;\n  return !!navigator && (/Mobi/i.test(navigator.userAgent) || /Android/i.test(navigator.userAgent));\n}\n\nexports.isMobile = isMobile;\n\nfunction insertScript(_a) {\n  var _a$type = _a.type,\n      type = _a$type === void 0 ? 'text/javascript' : _a$type,\n      _a$async = _a.async,\n      async = _a$async === void 0 ? true : _a$async,\n      props = __rest(_a, [\"type\", \"async\"]);\n\n  var script = document.createElement('script');\n  Object.assign(script, Object.assign({\n    type: type,\n    async: async\n  }, props)); // WARN: babel breaks on `{ async }`\n\n  document.body.appendChild(script);\n  return script;\n}\n\nexports.insertScript = insertScript;\n\nfunction toObjectById(values) {\n  var currentValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return toObjectByKey(values, currentValues, 'id');\n}\n\nexports.toObjectById = toObjectById;\n\nfunction toObjectByKey(values) {\n  var currentValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var key = arguments.length > 2 ? arguments[2] : undefined;\n  return values.reduce(function (obj, value) {\n    obj[value[key]] = value;\n    return obj;\n  }, Object.assign({}, currentValues));\n}\n\nexports.toObjectByKey = toObjectByKey;\n\nfunction distanceInWordsToNow(date) {\n  var addSuffix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return distance_in_words_to_now_1.default(date, {\n    addSuffix: addSuffix,\n    locale: utils_1.getCurrentLocale()\n  });\n}\n\nexports.distanceInWordsToNow = distanceInWordsToNow;\n\nfunction formatDate(date) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'MMMM Do, YYYY';\n  return format_1.default(date, format, {\n    locale: utils_1.getCurrentLocale()\n  });\n}\n\nexports.formatDate = formatDate;\n\nfunction formatDateTime(date) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'MMMM Do, YYYY - hh:mm aa';\n  return format_1.default(date, format, {\n    locale: utils_1.getCurrentLocale()\n  });\n}\n\nexports.formatDateTime = formatDateTime;\n\nfunction formatNumber() {\n  var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  return parseFloat((+amount).toFixed(digits)).toLocaleString();\n}\n\nexports.formatNumber = formatNumber;","map":null,"metadata":{},"sourceType":"script"}