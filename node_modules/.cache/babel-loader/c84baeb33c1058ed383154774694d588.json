{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncGeneratorDelegate = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\");\n\nvar _awaitAsyncGenerator = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\n\nvar dirBuilder = require('./dir');\n\nvar fileBuilder = require('./file');\n\nvar errCode = require('err-code');\n/**\n * @typedef {import('../types').File} File\n * @typedef {import('../types').Directory} Directory\n * @typedef {import('../types').DAGBuilder} DAGBuilder\n * @typedef {import('../types').Chunker} Chunker\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @param {any} thing\n * @returns {thing is Iterable<any>}\n */\n\n\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\n/**\n * @param {any} thing\n * @returns {thing is AsyncIterable<any>}\n */\n\n\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\n/**\n * @param {Uint8Array | AsyncIterable<Uint8Array> | Iterable<Uint8Array>} content\n * @returns {AsyncIterable<Uint8Array>}\n */\n\n\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return content;\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    } else if (isIterable(content)) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(content), _awaitAsyncGenerator), \"t0\", 1);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch (_unused) {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\n/**\n * @type {DAGBuilder}\n */\n\n\nfunction dagBuilder(_x, _x2, _x3) {\n  return _dagBuilder.apply(this, arguments);\n}\n\nfunction _dagBuilder() {\n  _dagBuilder = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(source, block, options) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, entry;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context5.prev = 2;\n            _iterator = _asyncIterator(source);\n\n          case 4:\n            _context5.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 6:\n            if (!(_iteratorAbruptCompletion = !(_step = _context5.sent).done)) {\n              _context5.next = 21;\n              break;\n            }\n\n            entry = _step.value;\n\n            if (entry.path) {\n              if (entry.path.substring(0, 2) === './') {\n                options.wrapWithDirectory = true;\n              }\n\n              entry.path = entry.path.split('/').filter(function (path) {\n                return path && path !== '.';\n              }).join('/');\n            }\n\n            if (!entry.content) {\n              _context5.next = 13;\n              break;\n            }\n\n            return _context5.delegateYield( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n              var chunker, chunkValidator, file;\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      /**\n                       * @type {Chunker}\n                       */\n                      chunker = void 0;\n\n                      if (typeof options.chunker === 'function') {\n                        chunker = options.chunker;\n                      } else if (options.chunker === 'rabin') {\n                        chunker = require('../chunker/rabin');\n                      } else {\n                        chunker = require('../chunker/fixed-size');\n                      }\n                      /**\n                       * @type {ChunkValidator}\n                       */\n\n\n                      chunkValidator = void 0;\n\n                      if (typeof options.chunkValidator === 'function') {\n                        chunkValidator = options.chunkValidator;\n                      } else {\n                        chunkValidator = require('./validate-chunks');\n                      }\n                      /** @type {File} */\n\n\n                      file = {\n                        path: entry.path,\n                        mtime: entry.mtime,\n                        mode: entry.mode,\n                        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n                      };\n                      _context3.next = 7;\n                      return function () {\n                        return fileBuilder(file, block, options);\n                      };\n\n                    case 7:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            })(), \"t0\", 11);\n\n          case 11:\n            _context5.next = 18;\n            break;\n\n          case 13:\n            if (!entry.path) {\n              _context5.next = 17;\n              break;\n            }\n\n            return _context5.delegateYield( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n              var dir;\n              return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      /** @type {Directory} */\n                      dir = {\n                        path: entry.path,\n                        mtime: entry.mtime,\n                        mode: entry.mode\n                      };\n                      _context4.next = 3;\n                      return function () {\n                        return dirBuilder(dir, block, options);\n                      };\n\n                    case 3:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            })(), \"t1\", 15);\n\n          case 15:\n            _context5.next = 18;\n            break;\n\n          case 17:\n            throw new Error('Import candidate must have content or path or both');\n\n          case 18:\n            _iteratorAbruptCompletion = false;\n            _context5.next = 4;\n            break;\n\n          case 21:\n            _context5.next = 27;\n            break;\n\n          case 23:\n            _context5.prev = 23;\n            _context5.t2 = _context5[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context5.t2;\n\n          case 27:\n            _context5.prev = 27;\n            _context5.prev = 28;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context5.next = 32;\n              break;\n            }\n\n            _context5.next = 32;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 32:\n            _context5.prev = 32;\n\n            if (!_didIteratorError) {\n              _context5.next = 35;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 35:\n            return _context5.finish(32);\n\n          case 36:\n            return _context5.finish(27);\n\n          case 37:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 23, 27, 37], [28,, 32, 36]]);\n  }));\n  return _dagBuilder.apply(this, arguments);\n}\n\nmodule.exports = dagBuilder;","map":null,"metadata":{},"sourceType":"script"}