{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _templateObject, _templateObject2;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codegen_1 = require(\"ajv/dist/compile/codegen\");\n\nvar TYPES = [\"undefined\", \"string\", \"number\", \"object\", \"function\", \"boolean\", \"symbol\"];\n\nfunction getDef() {\n  return {\n    keyword: \"typeof\",\n    schemaType: [\"string\", \"array\"],\n    code: function code(cxt) {\n      var data = cxt.data,\n          schema = cxt.schema,\n          schemaValue = cxt.schemaValue;\n      cxt.fail(typeof schema == \"string\" ? codegen_1._(_templateObject || (_templateObject = _taggedTemplateLiteral([\"typeof \", \" != \", \"\"])), data, schema) : codegen_1._(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \".indexOf(typeof \", \") < 0\"])), schemaValue, data));\n    },\n    metaSchema: {\n      anyOf: [{\n        type: \"string\",\n        enum: TYPES\n      }, {\n        type: \"array\",\n        items: {\n          type: \"string\",\n          enum: TYPES\n        }\n      }]\n    }\n  };\n}\n\nexports.default = getDef;\nmodule.exports = getDef;","map":null,"metadata":{},"sourceType":"script"}