{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Vector2 } from \"../Maths/math.vector\";\nimport { Texture } from \"../Materials/Textures/texture\";\nimport { PostProcess } from \"./postProcess\";\nimport \"../Shaders/vrDistortionCorrection.fragment\";\n/**\r\n * VRDistortionCorrectionPostProcess used for mobile VR\r\n */\n\nvar VRDistortionCorrectionPostProcess =\n/** @class */\nfunction (_super) {\n  __extends(VRDistortionCorrectionPostProcess, _super);\n  /**\r\n   * Initializes the VRDistortionCorrectionPostProcess\r\n   * @param name The name of the effect.\r\n   * @param camera The camera to apply the render pass to.\r\n   * @param isRightEye If this is for the right eye distortion\r\n   * @param vrMetrics All the required metrics for the VR camera\r\n   */\n\n\n  function VRDistortionCorrectionPostProcess(name, camera, isRightEye, vrMetrics) {\n    var _this = _super.call(this, name, \"vrDistortionCorrection\", ['LensCenter', 'Scale', 'ScaleIn', 'HmdWarpParam'], null, vrMetrics.postProcessScaleFactor, camera, Texture.BILINEAR_SAMPLINGMODE) || this;\n\n    _this._isRightEye = isRightEye;\n    _this._distortionFactors = vrMetrics.distortionK;\n    _this._postProcessScaleFactor = vrMetrics.postProcessScaleFactor;\n    _this._lensCenterOffset = vrMetrics.lensCenterOffset;\n    _this.adaptScaleToCurrentViewport = true;\n\n    _this.onSizeChangedObservable.add(function () {\n      _this._scaleIn = new Vector2(2, 2 / _this.aspectRatio);\n      _this._scaleFactor = new Vector2(.5 * (1 / _this._postProcessScaleFactor), .5 * (1 / _this._postProcessScaleFactor) * _this.aspectRatio);\n      _this._lensCenter = new Vector2(_this._isRightEye ? 0.5 - _this._lensCenterOffset * 0.5 : 0.5 + _this._lensCenterOffset * 0.5, 0.5);\n    });\n\n    _this.onApplyObservable.add(function (effect) {\n      effect.setFloat2(\"LensCenter\", _this._lensCenter.x, _this._lensCenter.y);\n      effect.setFloat2(\"Scale\", _this._scaleFactor.x, _this._scaleFactor.y);\n      effect.setFloat2(\"ScaleIn\", _this._scaleIn.x, _this._scaleIn.y);\n      effect.setFloat4(\"HmdWarpParam\", _this._distortionFactors[0], _this._distortionFactors[1], _this._distortionFactors[2], _this._distortionFactors[3]);\n    });\n\n    return _this;\n  }\n  /**\r\n   * Gets a string identifying the name of the class\r\n   * @returns \"VRDistortionCorrectionPostProcess\" string\r\n   */\n\n\n  VRDistortionCorrectionPostProcess.prototype.getClassName = function () {\n    return \"VRDistortionCorrectionPostProcess\";\n  };\n\n  return VRDistortionCorrectionPostProcess;\n}(PostProcess);\n\nexport { VRDistortionCorrectionPostProcess };","map":null,"metadata":{},"sourceType":"module"}