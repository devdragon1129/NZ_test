{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/opt/work/NZ_test/src/components/AuthorizationModal/AuthorizationModal.tsx\";\n\nimport React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Modal, Button, Form, Radio, Loader, Popup } from 'decentraland-ui';\nimport { getContractName } from 'decentraland-transactions';\nimport { ChainCheck, TransactionLink } from 'decentraland-dapps/dist/containers';\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { hasAuthorization } from 'decentraland-dapps/dist/modules/authorization/utils';\nimport { locations } from 'routing/locations';\nimport { getContractSymbol } from '../../modules/contract/utils';\nimport './AuthorizationModal.css';\n\nvar AuthorizationModal = function AuthorizationModal(props) {\n  var open = props.open,\n      authorization = props.authorization,\n      authorizations = props.authorizations,\n      isLoading = props.isLoading,\n      hasPendingTransaction = props.hasPendingTransaction,\n      onGrant = props.onGrant,\n      onRevoke = props.onRevoke,\n      onCancel = props.onCancel,\n      onProceed = props.onProceed;\n  var contractAddress = authorization.contractAddress,\n      authorizedAddress = authorization.authorizedAddress;\n  var isAuthorized = hasAuthorization(authorizations, authorization);\n  var contractName = getContractName(authorizedAddress);\n  var tokenSymbol = getContractSymbol(contractAddress);\n  var handleAuthorizationChange = useCallback(function (_, data) {\n    return data.checked ? onGrant(authorization) : onRevoke(authorization);\n  }, []);\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    size: \"small\",\n    className: \"AuthorizationModal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, t('authorization_modal.title', {\n    token: tokenSymbol\n  })), /*#__PURE__*/React.createElement(Modal.Description, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(T, {\n    id: \"authorization_modal.description\",\n    values: {\n      contract: contractName,\n      token: tokenSymbol\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authorization\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    className: hasPendingTransaction ? 'is-pending' : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    content: t('authorization_modal.pending_tx'),\n    position: \"top left\",\n    trigger: /*#__PURE__*/React.createElement(Link, {\n      to: locations.activity(),\n      className: \"loader-tooltip\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      active: true,\n      size: \"mini\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ChainCheck, {\n    chainId: authorization.chainId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, function (isEnabled) {\n    return /*#__PURE__*/React.createElement(Radio, {\n      checked: isAuthorized,\n      label: tokenSymbol,\n      onClick: handleAuthorizationChange,\n      disabled: isLoading || !isEnabled,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio-description secondary-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(T, {\n    id: \"authorization_modal.authorize\",\n    values: {\n      contract_link: /*#__PURE__*/React.createElement(TransactionLink, {\n        address: authorizedAddress,\n        txHash: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, tokenSymbol),\n      symbol: tokenSymbol\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, t('global.cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    loading: isLoading,\n    disabled: !isAuthorized,\n    onClick: onProceed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, t('global.proceed'))));\n};\n\nexport default React.memo(AuthorizationModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/AuthorizationModal/AuthorizationModal.tsx"],"names":["React","useCallback","Link","Modal","Button","Form","Radio","Loader","Popup","getContractName","ChainCheck","TransactionLink","t","T","hasAuthorization","locations","getContractSymbol","AuthorizationModal","props","open","authorization","authorizations","isLoading","hasPendingTransaction","onGrant","onRevoke","onCancel","onProceed","contractAddress","authorizedAddress","isAuthorized","contractName","tokenSymbol","handleAuthorizationChange","_","data","checked","token","contract","activity","chainId","isEnabled","contract_link","symbol","memo"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Modal, Button, Form, CheckboxProps, Radio, Loader, Popup } from 'decentraland-ui'\nimport { getContractName } from 'decentraland-transactions'\nimport { ChainCheck, TransactionLink } from 'decentraland-dapps/dist/containers'\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { hasAuthorization } from 'decentraland-dapps/dist/modules/authorization/utils'\nimport { locations } from 'routing/locations'\nimport { getContractSymbol } from '../../modules/contract/utils'\nimport { Props } from './AuthorizationModal.types'\nimport './AuthorizationModal.css'\n\nconst AuthorizationModal = (props: Props) => {\n  const { open, authorization, authorizations, isLoading, hasPendingTransaction, onGrant, onRevoke, onCancel, onProceed } = props\n  const { contractAddress, authorizedAddress } = authorization\n\n  const isAuthorized = hasAuthorization(authorizations, authorization)\n  const contractName = getContractName(authorizedAddress)\n  const tokenSymbol = getContractSymbol(contractAddress)\n\n  const handleAuthorizationChange = useCallback(\n    (_, data: CheckboxProps) => (data.checked ? onGrant(authorization) : onRevoke(authorization)),\n    []\n  )\n\n  return (\n    <Modal open={open} size=\"small\" className=\"AuthorizationModal\">\n      <Modal.Header>\n        {t('authorization_modal.title', {\n          token: tokenSymbol\n        })}\n      </Modal.Header>\n      <Modal.Description>\n        <T\n          id=\"authorization_modal.description\"\n          values={{\n            contract: contractName,\n            token: tokenSymbol\n          }}\n        />\n      </Modal.Description>\n      <Modal.Content>\n        <div className=\"authorization\">\n          <Form.Field className={hasPendingTransaction ? 'is-pending' : ''}>\n            <Popup\n              content={t('authorization_modal.pending_tx')}\n              position=\"top left\"\n              trigger={\n                <Link to={locations.activity()} className=\"loader-tooltip\">\n                  <Loader active size=\"mini\" />\n                </Link>\n              }\n            />\n            <ChainCheck chainId={authorization.chainId}>\n              {isEnabled => (\n                <Radio checked={isAuthorized} label={tokenSymbol} onClick={handleAuthorizationChange} disabled={isLoading || !isEnabled} />\n              )}\n            </ChainCheck>\n            <div className=\"radio-description secondary-text\">\n              <T\n                id=\"authorization_modal.authorize\"\n                values={{\n                  contract_link: (\n                    <TransactionLink address={authorizedAddress} txHash=\"\">\n                      {tokenSymbol}\n                    </TransactionLink>\n                  ),\n                  symbol: tokenSymbol\n                }}\n              />\n            </div>\n          </Form.Field>\n        </div>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onCancel}>{t('global.cancel')}</Button>\n        <Button primary loading={isLoading} disabled={!isAuthorized} onClick={onProceed}>\n          {t('global.proceed')}\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default React.memo(AuthorizationModal)\n"]},"metadata":{},"sourceType":"module"}