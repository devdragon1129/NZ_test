{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport * as React from 'react';\nimport equal from 'fast-deep-equal';\nimport { DEFAULT_ITEMS_PAGE_SIZE, DEFAULT_ITEMS_PAGE } from './CollectionProvider.types';\n\nvar CollectionProvider = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CollectionProvider, _React$PureComponent);\n\n  function CollectionProvider() {\n    _classCallCheck(this, CollectionProvider);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CollectionProvider).apply(this, arguments));\n  }\n\n  _createClass(CollectionProvider, [{\n    key: \"fetchCollectionItems\",\n    value: function fetchCollectionItems() {\n      var itemsPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ITEMS_PAGE;\n      var _this$props = this.props,\n          id = _this$props.id,\n          onFetchCollectionItems = _this$props.onFetchCollectionItems,\n          itemsPageSize = _this$props.itemsPageSize,\n          status = _this$props.status;\n\n      if (id) {\n        onFetchCollectionItems(id, {\n          page: itemsPage,\n          limit: itemsPageSize || DEFAULT_ITEMS_PAGE_SIZE,\n          status: status\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          onFetchCollection = _this$props2.onFetchCollection,\n          isConnected = _this$props2.isConnected,\n          itemsPage = _this$props2.itemsPage;\n\n      if (id && isConnected) {\n        onFetchCollection(id);\n        this.fetchCollectionItems(itemsPage);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          id = _this$props3.id,\n          isConnected = _this$props3.isConnected,\n          collection = _this$props3.collection,\n          itemsPage = _this$props3.itemsPage,\n          onFetchCollection = _this$props3.onFetchCollection;\n      var justFinishedConnecting = !prevProps.isConnected && isConnected;\n\n      if (id && justFinishedConnecting) {\n        onFetchCollection(id);\n        this.fetchCollectionItems(itemsPage);\n      }\n\n      if (id && id !== prevProps.id) {\n        // fetch collection if data is not available\n        if (!collection) {\n          onFetchCollection(id);\n        } // fetch collection items if the id changes\n\n\n        this.fetchCollectionItems(itemsPage);\n      } // logic to fetch the new pages requested\n\n\n      var hasChangedPage = !equal(itemsPage, prevProps.itemsPage);\n\n      if (id && itemsPage && hasChangedPage) {\n        var prevPages = prevProps.itemsPage;\n        this.fetchCollectionItems(Array.isArray(itemsPage) && Array.isArray(prevPages) ? itemsPage.filter(function (page) {\n          return !(prevPages !== null && prevPages !== void 0 && prevPages.includes(page));\n        }) : itemsPage);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          collection = _this$props4.collection,\n          paginatedCollections = _this$props4.paginatedCollections,\n          items = _this$props4.items,\n          paginatedItems = _this$props4.paginatedItems,\n          curation = _this$props4.curation,\n          itemCurations = _this$props4.itemCurations,\n          isLoading = _this$props4.isLoading,\n          children = _this$props4.children,\n          onFetchCollectionItems = _this$props4.onFetchCollectionItems;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n        collection: collection,\n        items: items,\n        paginatedItems: paginatedItems,\n        paginatedCollections: paginatedCollections,\n        curation: curation,\n        itemCurations: itemCurations,\n        isLoading: isLoading,\n        onFetchCollectionItemsPages: onFetchCollectionItems\n      }));\n    }\n  }]);\n\n  return CollectionProvider;\n}(React.PureComponent);\n\nexport { CollectionProvider as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/CollectionProvider/CollectionProvider.tsx"],"names":["React","equal","DEFAULT_ITEMS_PAGE_SIZE","DEFAULT_ITEMS_PAGE","CollectionProvider","itemsPage","props","id","onFetchCollectionItems","itemsPageSize","status","page","limit","onFetchCollection","isConnected","fetchCollectionItems","prevProps","collection","justFinishedConnecting","hasChangedPage","prevPages","Array","isArray","filter","includes","paginatedCollections","items","paginatedItems","curation","itemCurations","isLoading","children","onFetchCollectionItemsPages","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport equal from 'fast-deep-equal'\nimport { DEFAULT_ITEMS_PAGE_SIZE, DEFAULT_ITEMS_PAGE, Props } from './CollectionProvider.types'\n\nexport default class CollectionProvider extends React.PureComponent<Props> {\n  fetchCollectionItems(itemsPage: number | number[] = DEFAULT_ITEMS_PAGE) {\n    const { id, onFetchCollectionItems, itemsPageSize, status } = this.props\n    if (id) {\n      onFetchCollectionItems(id, { page: itemsPage, limit: itemsPageSize || DEFAULT_ITEMS_PAGE_SIZE, status })\n    }\n  }\n\n  componentDidMount() {\n    const { id, onFetchCollection, isConnected, itemsPage } = this.props\n    if (id && isConnected) {\n      onFetchCollection(id)\n      this.fetchCollectionItems(itemsPage)\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { id, isConnected, collection, itemsPage, onFetchCollection } = this.props\n    const justFinishedConnecting = !prevProps.isConnected && isConnected\n    if (id && justFinishedConnecting) {\n      onFetchCollection(id)\n      this.fetchCollectionItems(itemsPage)\n    }\n\n    if (id && id !== prevProps.id) {\n      // fetch collection if data is not available\n      if (!collection) {\n        onFetchCollection(id)\n      }\n      // fetch collection items if the id changes\n      this.fetchCollectionItems(itemsPage)\n    }\n\n    // logic to fetch the new pages requested\n    const hasChangedPage = !equal(itemsPage, prevProps.itemsPage)\n    if (id && itemsPage && hasChangedPage) {\n      const prevPages = prevProps.itemsPage\n      this.fetchCollectionItems(\n        Array.isArray(itemsPage) && Array.isArray(prevPages) ? itemsPage.filter(page => !prevPages?.includes(page)) : itemsPage\n      )\n    }\n  }\n\n  render() {\n    const {\n      collection,\n      paginatedCollections,\n      items,\n      paginatedItems,\n      curation,\n      itemCurations,\n      isLoading,\n      children,\n      onFetchCollectionItems\n    } = this.props\n    return (\n      <>\n        {children({\n          collection,\n          items,\n          paginatedItems,\n          paginatedCollections,\n          curation,\n          itemCurations,\n          isLoading,\n          onFetchCollectionItemsPages: onFetchCollectionItems\n        })}\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}