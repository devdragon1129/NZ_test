{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { getLoading, getError } from 'modules/collection/selectors';\nimport { SAVE_COLLECTION_REQUEST, saveCollectionRequest } from 'modules/collection/actions';\nimport CreateCollectionModal from './CreateCollectionModal';\n\nvar mapState = function mapState(state) {\n  return {\n    address: getAddress(state),\n    isLoading: isLoadingType(getLoading(state), SAVE_COLLECTION_REQUEST),\n    error: getError(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSubmit: function onSubmit(collection) {\n      return dispatch(saveCollectionRequest(collection));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CreateCollectionModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CreateCollectionModal/CreateCollectionModal.container.ts"],"names":["connect","getAddress","isLoadingType","getLoading","getError","SAVE_COLLECTION_REQUEST","saveCollectionRequest","CreateCollectionModal","mapState","state","address","isLoading","error","mapDispatch","dispatch","onSubmit","collection"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kDAA3B;AACA,SAASC,aAAT,QAA8B,mDAA9B;AAEA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,8BAArC;AACA,SAASC,uBAAT,EAAkCC,qBAAlC,QAA+D,4BAA/D;AAEA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,OAAO,EAAET,UAAU,CAACQ,KAAD,CADkC;AAErDE,IAAAA,SAAS,EAAET,aAAa,CAACC,UAAU,CAACM,KAAD,CAAX,EAAoBJ,uBAApB,CAF6B;AAGrDO,IAAAA,KAAK,EAAER,QAAQ,CAACK,KAAD;AAHsC,GAAtC;AAAA,CAAjB;;AAMA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,QAAQ,EAAE,kBAAAC,UAAU;AAAA,aAAIF,QAAQ,CAACR,qBAAqB,CAACU,UAAD,CAAtB,CAAZ;AAAA;AAD4C,GAA9C;AAAA,CAApB;;AAIA,eAAehB,OAAO,CAACQ,QAAD,EAAWK,WAAX,CAAP,CAA+BN,qBAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { RootState } from 'modules/common/types'\nimport { getLoading, getError } from 'modules/collection/selectors'\nimport { SAVE_COLLECTION_REQUEST, saveCollectionRequest } from 'modules/collection/actions'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './CreateCollectionModal.types'\nimport CreateCollectionModal from './CreateCollectionModal'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  address: getAddress(state),\n  isLoading: isLoadingType(getLoading(state), SAVE_COLLECTION_REQUEST),\n  error: getError(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSubmit: collection => dispatch(saveCollectionRequest(collection))\n})\n\nexport default connect(mapState, mapDispatch)(CreateCollectionModal)\n"]},"metadata":{},"sourceType":"module"}