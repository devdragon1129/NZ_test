{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PostProcess } from \"./postProcess\";\nimport \"../Shaders/anaglyph.fragment\";\nimport { _TypeStore } from '../Misc/typeStore';\n/**\r\n * Postprocess used to generate anaglyphic rendering\r\n */\n\nvar AnaglyphPostProcess =\n/** @class */\nfunction (_super) {\n  __extends(AnaglyphPostProcess, _super);\n  /**\r\n   * Creates a new AnaglyphPostProcess\r\n   * @param name defines postprocess name\r\n   * @param options defines creation options or target ratio scale\r\n   * @param rigCameras defines cameras using this postprocess\r\n   * @param samplingMode defines required sampling mode (BABYLON.Texture.NEAREST_SAMPLINGMODE by default)\r\n   * @param engine defines hosting engine\r\n   * @param reusable defines if the postprocess will be reused multiple times per frame\r\n   */\n\n\n  function AnaglyphPostProcess(name, options, rigCameras, samplingMode, engine, reusable) {\n    var _this = _super.call(this, name, \"anaglyph\", null, [\"leftSampler\"], options, rigCameras[1], samplingMode, engine, reusable) || this;\n\n    _this._passedProcess = rigCameras[0]._rigPostProcess;\n\n    _this.onApplyObservable.add(function (effect) {\n      effect.setTextureFromPostProcess(\"leftSampler\", _this._passedProcess);\n    });\n\n    return _this;\n  }\n  /**\r\n   * Gets a string identifying the name of the class\r\n   * @returns \"AnaglyphPostProcess\" string\r\n   */\n\n\n  AnaglyphPostProcess.prototype.getClassName = function () {\n    return \"AnaglyphPostProcess\";\n  };\n\n  return AnaglyphPostProcess;\n}(PostProcess);\n\nexport { AnaglyphPostProcess };\n_TypeStore.RegisteredTypes[\"BABYLON.AnaglyphPostProcess\"] = AnaglyphPostProcess;","map":null,"metadata":{},"sourceType":"module"}