{"ast":null,"code":"import _objectWithoutProperties from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/ProjectLayoutPicker/ProjectLayoutPicker.tsx\";\nimport * as React from 'react';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { MAX_AREA } from 'modules/template/utils';\nimport LayoutPicker from 'components/LayoutPicker';\n\nvar ProjectLayoutPicker = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ProjectLayoutPicker, _React$PureComponent);\n\n  function ProjectLayoutPicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectLayoutPicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectLayoutPicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      hasMaxError: false\n    };\n\n    _this.handleChange = function (rows, cols) {\n      var hasEmptyFields = !rows || !cols;\n      var hasMaxError = false;\n      var hasMinError = false;\n\n      if (!hasEmptyFields) {\n        hasMaxError = rows * cols > MAX_AREA;\n        hasMinError = rows < 1 || cols < 1;\n      }\n\n      var newLayout = {\n        rows: rows || 0,\n        cols: cols || 0,\n        hasError: hasMaxError || hasMinError || hasEmptyFields\n      };\n\n      _this.setState({\n        hasMaxError: hasMaxError\n      });\n\n      _this.props.onChange(newLayout);\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjectLayoutPicker, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          rows = _this$props.rows,\n          cols = _this$props.cols,\n          pickerProps = _objectWithoutProperties(_this$props, [\"rows\", \"cols\"]);\n\n      var hasMaxError = this.state.hasMaxError;\n      var errorMessage = hasMaxError ? t('project_layout_picker.max_area_error', {\n        area: MAX_AREA\n      }) : '';\n      return /*#__PURE__*/React.createElement(LayoutPicker, Object.assign({\n        rows: rows,\n        cols: cols,\n        errorMessage: errorMessage\n      }, pickerProps, {\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return ProjectLayoutPicker;\n}(React.PureComponent);\n\nexport { ProjectLayoutPicker as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ProjectLayoutPicker/ProjectLayoutPicker.tsx"],"names":["React","t","MAX_AREA","LayoutPicker","ProjectLayoutPicker","state","hasMaxError","handleChange","rows","cols","hasEmptyFields","hasMinError","newLayout","hasError","setState","props","onChange","pickerProps","errorMessage","area","PureComponent"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,CAAT,QAAkB,mDAAlB;AAEA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,OAAOC,YAAP,MAAyB,yBAAzB;;IAGqBC,mB;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE;AADP,K;;UAIRC,Y,GAAe,UAACC,IAAD,EAAeC,IAAf,EAAgC;AAC7C,UAAMC,cAAc,GAAG,CAACF,IAAD,IAAS,CAACC,IAAjC;AACA,UAAIH,WAAW,GAAG,KAAlB;AACA,UAAIK,WAAW,GAAG,KAAlB;;AAEA,UAAI,CAACD,cAAL,EAAqB;AACnBJ,QAAAA,WAAW,GAAGE,IAAI,GAAIC,IAAR,GAAgBP,QAA9B;AACAS,QAAAA,WAAW,GAAGH,IAAI,GAAI,CAAR,IAAaC,IAAI,GAAI,CAAnC;AACD;;AAED,UAAMG,SAAwB,GAAG;AAC/BJ,QAAAA,IAAI,EAAEA,IAAI,IAAI,CADiB;AAE/BC,QAAAA,IAAI,EAAEA,IAAI,IAAI,CAFiB;AAG/BI,QAAAA,QAAQ,EAAEP,WAAW,IAAIK,WAAf,IAA8BD;AAHT,OAAjC;;AAKA,YAAKI,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAXA;AAAF,OAAd;;AACA,YAAKS,KAAL,CAAWC,QAAX,CAAoBJ,SAApB;AACD,K;;;;;;;6BAEQ;AAAA,wBACgC,KAAKG,KADrC;AAAA,UACCP,IADD,eACCA,IADD;AAAA,UACOC,IADP,eACOA,IADP;AAAA,UACgBQ,WADhB;;AAAA,UAECX,WAFD,GAEiB,KAAKD,KAFtB,CAECC,WAFD;AAIP,UAAMY,YAAY,GAAGZ,WAAW,GAAGL,CAAC,CAAC,sCAAD,EAAyC;AAAEkB,QAAAA,IAAI,EAAEjB;AAAR,OAAzC,CAAJ,GAAmE,EAAnG;AACA,0BAAO,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAEM,IAApB;AAA0B,QAAA,IAAI,EAAEC,IAAhC;AAAsC,QAAA,YAAY,EAAES;AAApD,SAAsED,WAAtE;AAAmF,QAAA,QAAQ,EAAE,KAAKV,YAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EA9B8CP,KAAK,CAACoB,a;;SAAlChB,mB","sourcesContent":["import * as React from 'react'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\n\nimport { MAX_AREA } from 'modules/template/utils'\nimport { ProjectLayout } from 'modules/project/types'\nimport LayoutPicker from 'components/LayoutPicker'\nimport { Props, State } from './ProjectLayoutPicker.types'\n\nexport default class ProjectLayoutPicker extends React.PureComponent<Props, State> {\n  state = {\n    hasMaxError: false\n  }\n\n  handleChange = (rows: number, cols: number) => {\n    const hasEmptyFields = !rows || !cols\n    let hasMaxError = false\n    let hasMinError = false\n\n    if (!hasEmptyFields) {\n      hasMaxError = rows! * cols! > MAX_AREA\n      hasMinError = rows! < 1 || cols! < 1\n    }\n\n    const newLayout: ProjectLayout = {\n      rows: rows || 0,\n      cols: cols || 0,\n      hasError: hasMaxError || hasMinError || hasEmptyFields\n    }\n    this.setState({ hasMaxError })\n    this.props.onChange(newLayout)\n  }\n\n  render() {\n    const { rows, cols, ...pickerProps } = this.props\n    const { hasMaxError } = this.state\n\n    const errorMessage = hasMaxError ? t('project_layout_picker.max_area_error', { area: MAX_AREA }) : ''\n    return <LayoutPicker rows={rows} cols={cols} errorMessage={errorMessage} {...pickerProps} onChange={this.handleChange} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}