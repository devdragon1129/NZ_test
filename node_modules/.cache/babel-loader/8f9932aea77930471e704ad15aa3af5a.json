{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { action } from 'typesafe-actions';\nimport { buildTransactionPayload } from 'decentraland-dapps/dist/modules/transaction/utils';\n// Fetch collections\nexport var FETCH_COLLECTIONS_REQUEST = '[Request] Fetch Collections';\nexport var FETCH_COLLECTIONS_SUCCESS = '[Success] Fetch Collections';\nexport var FETCH_COLLECTIONS_FAILURE = '[Failure] Fetch Collections';\nexport var fetchCollectionsRequest = function fetchCollectionsRequest(address, params) {\n  return action(FETCH_COLLECTIONS_REQUEST, {\n    address: address,\n    params: params\n  });\n};\nexport var fetchCollectionsSuccess = function fetchCollectionsSuccess(collections, paginationStats) {\n  return action(FETCH_COLLECTIONS_SUCCESS, {\n    collections: collections,\n    paginationStats: paginationStats\n  });\n};\nexport var fetchCollectionsFailure = function fetchCollectionsFailure(error) {\n  return action(FETCH_COLLECTIONS_FAILURE, {\n    error: error\n  });\n};\n// Fetch collection\nexport var FETCH_COLLECTION_REQUEST = '[Request] Fetch Collection';\nexport var FETCH_COLLECTION_SUCCESS = '[Success] Fetch Collection';\nexport var FETCH_COLLECTION_FAILURE = '[Failure] Fetch Collection';\nexport var fetchCollectionRequest = function fetchCollectionRequest(id) {\n  return action(FETCH_COLLECTION_REQUEST, {\n    id: id\n  });\n};\nexport var fetchCollectionSuccess = function fetchCollectionSuccess(id, collection) {\n  return action(FETCH_COLLECTION_SUCCESS, {\n    id: id,\n    collection: collection\n  });\n};\nexport var fetchCollectionFailure = function fetchCollectionFailure(id, error) {\n  return action(FETCH_COLLECTION_FAILURE, {\n    id: id,\n    error: error\n  });\n};\n// Save collection\nexport var SAVE_COLLECTION_REQUEST = '[Request] Save Collection';\nexport var SAVE_COLLECTION_SUCCESS = '[Success] Save Collection';\nexport var SAVE_COLLECTION_FAILURE = '[Failure] Save Collection';\nexport var saveCollectionRequest = function saveCollectionRequest(collection) {\n  return action(SAVE_COLLECTION_REQUEST, {\n    collection: collection\n  });\n};\nexport var saveCollectionSuccess = function saveCollectionSuccess(collection) {\n  return action(SAVE_COLLECTION_SUCCESS, {\n    collection: collection\n  });\n};\nexport var saveCollectionFailure = function saveCollectionFailure(collection, error) {\n  return action(SAVE_COLLECTION_FAILURE, {\n    collection: collection,\n    error: error\n  });\n};\n// Delete collection\nexport var DELETE_COLLECTION_REQUEST = '[Request] Delete Collection';\nexport var DELETE_COLLECTION_SUCCESS = '[Success] Delete Collection';\nexport var DELETE_COLLECTION_FAILURE = '[Failure] Delete Collection';\nexport var deleteCollectionRequest = function deleteCollectionRequest(collection) {\n  return action(DELETE_COLLECTION_REQUEST, {\n    collection: collection\n  });\n};\nexport var deleteCollectionSuccess = function deleteCollectionSuccess(collection) {\n  return action(DELETE_COLLECTION_SUCCESS, {\n    collection: collection\n  });\n};\nexport var deleteCollectionFailure = function deleteCollectionFailure(collection, error) {\n  return action(DELETE_COLLECTION_FAILURE, {\n    collection: collection,\n    error: error\n  });\n};\n// Publish collection\nexport var PUBLISH_COLLECTION_REQUEST = '[Request] Publish Collection';\nexport var PUBLISH_COLLECTION_SUCCESS = '[Success] Publish Collection';\nexport var PUBLISH_COLLECTION_FAILURE = '[Failure] Publish Collection';\nexport var publishCollectionRequest = function publishCollectionRequest(collection, items, email) {\n  return action(PUBLISH_COLLECTION_REQUEST, {\n    collection: collection,\n    items: items,\n    email: email\n  });\n};\nexport var publishCollectionSuccess = function publishCollectionSuccess(collection, items, chainId, txHash) {\n  return action(PUBLISH_COLLECTION_SUCCESS, _objectSpread({\n    collection: collection,\n    items: items\n  }, buildTransactionPayload(chainId, txHash, {\n    collection: collection,\n    items: items\n  })));\n};\nexport var publishCollectionFailure = function publishCollectionFailure(collection, items, error) {\n  return action(PUBLISH_COLLECTION_FAILURE, {\n    collection: collection,\n    items: items,\n    error: error\n  });\n};\n// Mint collection tokens\nexport var MINT_COLLECTION_ITEMS_REQUEST = '[Request] Mint collection items';\nexport var MINT_COLLECTION_ITEMS_SUCCESS = '[Success] Mint collection items';\nexport var MINT_COLLECTION_ITEMS_FAILURE = '[Failure] Mint collection items';\nexport var mintCollectionItemsRequest = function mintCollectionItemsRequest(collection, mints) {\n  return action(MINT_COLLECTION_ITEMS_REQUEST, {\n    collection: collection,\n    mints: mints\n  });\n};\nexport var mintCollectionItemsSuccess = function mintCollectionItemsSuccess(collection, mints, chainId, txHash) {\n  return action(MINT_COLLECTION_ITEMS_SUCCESS, _objectSpread({\n    collection: collection,\n    mints: mints\n  }, buildTransactionPayload(chainId, txHash, {\n    collection: collection,\n    mints: mints\n  })));\n};\nexport var mintCollectionItemsFailure = function mintCollectionItemsFailure(collection, mints, error) {\n  return action(MINT_COLLECTION_ITEMS_FAILURE, {\n    collection: collection,\n    mints: mints,\n    error: error\n  });\n};\n// Set collection minters\nexport var SET_COLLECTION_MINTERS_REQUEST = '[Request] Set collection minters';\nexport var SET_COLLECTION_MINTERS_SUCCESS = '[Success] Set collection minters';\nexport var SET_COLLECTION_MINTERS_FAILURE = '[Failure] Set collection minters';\nexport var setCollectionMintersRequest = function setCollectionMintersRequest(collection, accessList) {\n  return action(SET_COLLECTION_MINTERS_REQUEST, {\n    collection: collection,\n    accessList: accessList\n  });\n};\nexport var setCollectionMintersSuccess = function setCollectionMintersSuccess(collection, minters, chainId, txHash) {\n  return action(SET_COLLECTION_MINTERS_SUCCESS, _objectSpread({\n    collection: collection,\n    minters: minters\n  }, buildTransactionPayload(chainId, txHash, {\n    collection: collection,\n    minters: minters\n  })));\n};\nexport var setCollectionMintersFailure = function setCollectionMintersFailure(collection, accessList, error) {\n  return action(SET_COLLECTION_MINTERS_FAILURE, {\n    collection: collection,\n    accessList: accessList,\n    error: error\n  });\n};\n// Set collection minters\nexport var SET_COLLECTION_MANAGERS_REQUEST = '[Request] Set collection managers';\nexport var SET_COLLECTION_MANAGERS_SUCCESS = '[Success] Set collection managers';\nexport var SET_COLLECTION_MANAGERS_FAILURE = '[Failure] Set collection managers';\nexport var setCollectionManagersRequest = function setCollectionManagersRequest(collection, accessList) {\n  return action(SET_COLLECTION_MANAGERS_REQUEST, {\n    collection: collection,\n    accessList: accessList\n  });\n};\nexport var setCollectionManagersSuccess = function setCollectionManagersSuccess(collection, managers, chainId, txHash) {\n  return action(SET_COLLECTION_MANAGERS_SUCCESS, _objectSpread({\n    collection: collection,\n    managers: managers\n  }, buildTransactionPayload(chainId, txHash, {\n    collection: collection,\n    managers: managers\n  })));\n};\nexport var setCollectionManagersFailure = function setCollectionManagersFailure(collection, accessList, error) {\n  return action(SET_COLLECTION_MANAGERS_FAILURE, {\n    collection: collection,\n    accessList: accessList,\n    error: error\n  });\n};\n// Approve collection\nexport var APPROVE_COLLECTION_REQUEST = '[Request] Approve collection';\nexport var APPROVE_COLLECTION_SUCCESS = '[Success] Approve collection';\nexport var APPROVE_COLLECTION_FAILURE = '[Failure] Approve collection';\nexport var approveCollectionRequest = function approveCollectionRequest(collection) {\n  return action(APPROVE_COLLECTION_REQUEST, {\n    collection: collection\n  });\n};\nexport var approveCollectionSuccess = function approveCollectionSuccess(collection, chainId, txHash) {\n  return action(APPROVE_COLLECTION_SUCCESS, _objectSpread({\n    collection: collection\n  }, buildTransactionPayload(chainId, txHash, {\n    collection: collection\n  })));\n};\nexport var approveCollectionFailure = function approveCollectionFailure(collection, error) {\n  return action(APPROVE_COLLECTION_FAILURE, {\n    collection: collection,\n    error: error\n  });\n};\n// Reject collection\nexport var REJECT_COLLECTION_REQUEST = '[Request] Reject collection';\nexport var REJECT_COLLECTION_SUCCESS = '[Success] Reject collection';\nexport var REJECT_COLLECTION_FAILURE = '[Failure] Reject collection';\nexport var rejectCollectionRequest = function rejectCollectionRequest(collection) {\n  return action(REJECT_COLLECTION_REQUEST, {\n    collection: collection\n  });\n};\nexport var rejectCollectionSuccess = function rejectCollectionSuccess(collection, chainId, txHash) {\n  return action(REJECT_COLLECTION_SUCCESS, _objectSpread({\n    collection: collection\n  }, buildTransactionPayload(chainId, txHash, {\n    collection: collection\n  })));\n};\nexport var rejectCollectionFailure = function rejectCollectionFailure(collection, error) {\n  return action(REJECT_COLLECTION_FAILURE, {\n    collection: collection,\n    error: error\n  });\n};\n// Approval Flow\nexport var INITIATE_APPROVAL_FLOW = 'Initiate Approval Flow';\nexport var initiateApprovalFlow = function initiateApprovalFlow(collection) {\n  return action(INITIATE_APPROVAL_FLOW, {\n    collection: collection\n  });\n};\n// TP Approval Flow\nexport var INITIATE_TP_APPROVAL_FLOW = 'Initiate TP Approval Flow';\nexport var FINISH_TP_APPROVAL_FLOW = 'Finish TP Approval Flow';\nexport var initiateTPApprovalFlow = function initiateTPApprovalFlow(collection) {\n  return action(INITIATE_TP_APPROVAL_FLOW, {\n    collection: collection\n  });\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/collection/actions.ts"],"names":["action","buildTransactionPayload","FETCH_COLLECTIONS_REQUEST","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","fetchCollectionsRequest","address","params","fetchCollectionsSuccess","collections","paginationStats","fetchCollectionsFailure","error","FETCH_COLLECTION_REQUEST","FETCH_COLLECTION_SUCCESS","FETCH_COLLECTION_FAILURE","fetchCollectionRequest","id","fetchCollectionSuccess","collection","fetchCollectionFailure","SAVE_COLLECTION_REQUEST","SAVE_COLLECTION_SUCCESS","SAVE_COLLECTION_FAILURE","saveCollectionRequest","saveCollectionSuccess","saveCollectionFailure","DELETE_COLLECTION_REQUEST","DELETE_COLLECTION_SUCCESS","DELETE_COLLECTION_FAILURE","deleteCollectionRequest","deleteCollectionSuccess","deleteCollectionFailure","PUBLISH_COLLECTION_REQUEST","PUBLISH_COLLECTION_SUCCESS","PUBLISH_COLLECTION_FAILURE","publishCollectionRequest","items","email","publishCollectionSuccess","chainId","txHash","publishCollectionFailure","MINT_COLLECTION_ITEMS_REQUEST","MINT_COLLECTION_ITEMS_SUCCESS","MINT_COLLECTION_ITEMS_FAILURE","mintCollectionItemsRequest","mints","mintCollectionItemsSuccess","mintCollectionItemsFailure","SET_COLLECTION_MINTERS_REQUEST","SET_COLLECTION_MINTERS_SUCCESS","SET_COLLECTION_MINTERS_FAILURE","setCollectionMintersRequest","accessList","setCollectionMintersSuccess","minters","setCollectionMintersFailure","SET_COLLECTION_MANAGERS_REQUEST","SET_COLLECTION_MANAGERS_SUCCESS","SET_COLLECTION_MANAGERS_FAILURE","setCollectionManagersRequest","setCollectionManagersSuccess","managers","setCollectionManagersFailure","APPROVE_COLLECTION_REQUEST","APPROVE_COLLECTION_SUCCESS","APPROVE_COLLECTION_FAILURE","approveCollectionRequest","approveCollectionSuccess","approveCollectionFailure","REJECT_COLLECTION_REQUEST","REJECT_COLLECTION_SUCCESS","REJECT_COLLECTION_FAILURE","rejectCollectionRequest","rejectCollectionSuccess","rejectCollectionFailure","INITIATE_APPROVAL_FLOW","initiateApprovalFlow","INITIATE_TP_APPROVAL_FLOW","FINISH_TP_APPROVAL_FLOW","initiateTPApprovalFlow"],"mappings":"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","sourcesContent":["import { action } from 'typesafe-actions'\nimport { ChainId } from '@dcl/schemas'\nimport { buildTransactionPayload } from 'decentraland-dapps/dist/modules/transaction/utils'\nimport { FetchCollectionsParams } from 'lib/api/builder'\nimport { PaginationStats } from 'lib/api/pagination'\nimport { Item } from 'modules/item/types'\nimport { Collection, Mint, Access } from './types'\n\n// Fetch collections\n\nexport const FETCH_COLLECTIONS_REQUEST = '[Request] Fetch Collections'\nexport const FETCH_COLLECTIONS_SUCCESS = '[Success] Fetch Collections'\nexport const FETCH_COLLECTIONS_FAILURE = '[Failure] Fetch Collections'\n\nexport const fetchCollectionsRequest = (address?: string, params?: FetchCollectionsParams) =>\n  action(FETCH_COLLECTIONS_REQUEST, { address, params })\nexport const fetchCollectionsSuccess = (collections: Collection[], paginationStats?: PaginationStats) =>\n  action(FETCH_COLLECTIONS_SUCCESS, { collections, paginationStats })\nexport const fetchCollectionsFailure = (error: string) => action(FETCH_COLLECTIONS_FAILURE, { error })\n\nexport type FetchCollectionsRequestAction = ReturnType<typeof fetchCollectionsRequest>\nexport type FetchCollectionsSuccessAction = ReturnType<typeof fetchCollectionsSuccess>\nexport type FetchCollectionsFailureAction = ReturnType<typeof fetchCollectionsFailure>\n\n// Fetch collection\n\nexport const FETCH_COLLECTION_REQUEST = '[Request] Fetch Collection'\nexport const FETCH_COLLECTION_SUCCESS = '[Success] Fetch Collection'\nexport const FETCH_COLLECTION_FAILURE = '[Failure] Fetch Collection'\n\nexport const fetchCollectionRequest = (id: string) => action(FETCH_COLLECTION_REQUEST, { id })\nexport const fetchCollectionSuccess = (id: string, collection: Collection) => action(FETCH_COLLECTION_SUCCESS, { id, collection })\nexport const fetchCollectionFailure = (id: string, error: string) => action(FETCH_COLLECTION_FAILURE, { id, error })\n\nexport type FetchCollectionRequestAction = ReturnType<typeof fetchCollectionRequest>\nexport type FetchCollectionSuccessAction = ReturnType<typeof fetchCollectionSuccess>\nexport type FetchCollectionFailureAction = ReturnType<typeof fetchCollectionFailure>\n\n// Save collection\n\nexport const SAVE_COLLECTION_REQUEST = '[Request] Save Collection'\nexport const SAVE_COLLECTION_SUCCESS = '[Success] Save Collection'\nexport const SAVE_COLLECTION_FAILURE = '[Failure] Save Collection'\n\nexport const saveCollectionRequest = (collection: Collection) => action(SAVE_COLLECTION_REQUEST, { collection })\nexport const saveCollectionSuccess = (collection: Collection) => action(SAVE_COLLECTION_SUCCESS, { collection })\nexport const saveCollectionFailure = (collection: Collection, error: string) => action(SAVE_COLLECTION_FAILURE, { collection, error })\n\nexport type SaveCollectionRequestAction = ReturnType<typeof saveCollectionRequest>\nexport type SaveCollectionSuccessAction = ReturnType<typeof saveCollectionSuccess>\nexport type SaveCollectionFailureAction = ReturnType<typeof saveCollectionFailure>\n\n// Delete collection\n\nexport const DELETE_COLLECTION_REQUEST = '[Request] Delete Collection'\nexport const DELETE_COLLECTION_SUCCESS = '[Success] Delete Collection'\nexport const DELETE_COLLECTION_FAILURE = '[Failure] Delete Collection'\n\nexport const deleteCollectionRequest = (collection: Collection) => action(DELETE_COLLECTION_REQUEST, { collection })\nexport const deleteCollectionSuccess = (collection: Collection) => action(DELETE_COLLECTION_SUCCESS, { collection })\nexport const deleteCollectionFailure = (collection: Collection, error: string) => action(DELETE_COLLECTION_FAILURE, { collection, error })\n\nexport type DeleteCollectionRequestAction = ReturnType<typeof deleteCollectionRequest>\nexport type DeleteCollectionSuccessAction = ReturnType<typeof deleteCollectionSuccess>\nexport type DeleteCollectionFailureAction = ReturnType<typeof deleteCollectionFailure>\n\n// Publish collection\n\nexport const PUBLISH_COLLECTION_REQUEST = '[Request] Publish Collection'\nexport const PUBLISH_COLLECTION_SUCCESS = '[Success] Publish Collection'\nexport const PUBLISH_COLLECTION_FAILURE = '[Failure] Publish Collection'\n\nexport const publishCollectionRequest = (collection: Collection, items: Item[], email: string) =>\n  action(PUBLISH_COLLECTION_REQUEST, { collection, items, email })\nexport const publishCollectionSuccess = (collection: Collection, items: Item[], chainId: ChainId, txHash: string) =>\n  action(PUBLISH_COLLECTION_SUCCESS, {\n    collection,\n    items,\n    ...buildTransactionPayload(chainId, txHash, { collection, items })\n  })\nexport const publishCollectionFailure = (collection: Collection, items: Item[], error: string) =>\n  action(PUBLISH_COLLECTION_FAILURE, { collection, items, error })\n\nexport type PublishCollectionRequestAction = ReturnType<typeof publishCollectionRequest>\nexport type PublishCollectionSuccessAction = ReturnType<typeof publishCollectionSuccess>\nexport type PublishCollectionFailureAction = ReturnType<typeof publishCollectionFailure>\n\n// Mint collection tokens\n\nexport const MINT_COLLECTION_ITEMS_REQUEST = '[Request] Mint collection items'\nexport const MINT_COLLECTION_ITEMS_SUCCESS = '[Success] Mint collection items'\nexport const MINT_COLLECTION_ITEMS_FAILURE = '[Failure] Mint collection items'\n\nexport const mintCollectionItemsRequest = (collection: Collection, mints: Mint[]) =>\n  action(MINT_COLLECTION_ITEMS_REQUEST, { collection, mints })\nexport const mintCollectionItemsSuccess = (collection: Collection, mints: Mint[], chainId: ChainId, txHash: string) =>\n  action(MINT_COLLECTION_ITEMS_SUCCESS, {\n    collection,\n    mints,\n    ...buildTransactionPayload(chainId, txHash, { collection, mints })\n  })\nexport const mintCollectionItemsFailure = (collection: Collection, mints: Mint[], error: string) =>\n  action(MINT_COLLECTION_ITEMS_FAILURE, { collection, mints, error })\n\nexport type MintCollectionItemsRequestAction = ReturnType<typeof mintCollectionItemsRequest>\nexport type MintCollectionItemsSuccessAction = ReturnType<typeof mintCollectionItemsSuccess>\nexport type MintCollectionItemsFailureAction = ReturnType<typeof mintCollectionItemsFailure>\n\n// Set collection minters\n\nexport const SET_COLLECTION_MINTERS_REQUEST = '[Request] Set collection minters'\nexport const SET_COLLECTION_MINTERS_SUCCESS = '[Success] Set collection minters'\nexport const SET_COLLECTION_MINTERS_FAILURE = '[Failure] Set collection minters'\n\nexport const setCollectionMintersRequest = (collection: Collection, accessList: Access[]) =>\n  action(SET_COLLECTION_MINTERS_REQUEST, { collection, accessList })\nexport const setCollectionMintersSuccess = (collection: Collection, minters: string[], chainId: ChainId, txHash: string) =>\n  action(SET_COLLECTION_MINTERS_SUCCESS, {\n    collection,\n    minters,\n    ...buildTransactionPayload(chainId, txHash, { collection, minters })\n  })\nexport const setCollectionMintersFailure = (collection: Collection, accessList: Access[], error: string) =>\n  action(SET_COLLECTION_MINTERS_FAILURE, { collection, accessList, error })\n\nexport type SetCollectionMintersRequestAction = ReturnType<typeof setCollectionMintersRequest>\nexport type SetCollectionMintersSuccessAction = ReturnType<typeof setCollectionMintersSuccess>\nexport type SetCollectionMintersFailureAction = ReturnType<typeof setCollectionMintersFailure>\n\n// Set collection minters\n\nexport const SET_COLLECTION_MANAGERS_REQUEST = '[Request] Set collection managers'\nexport const SET_COLLECTION_MANAGERS_SUCCESS = '[Success] Set collection managers'\nexport const SET_COLLECTION_MANAGERS_FAILURE = '[Failure] Set collection managers'\n\nexport const setCollectionManagersRequest = (collection: Collection, accessList: Access[]) =>\n  action(SET_COLLECTION_MANAGERS_REQUEST, { collection, accessList })\nexport const setCollectionManagersSuccess = (collection: Collection, managers: string[], chainId: ChainId, txHash: string) =>\n  action(SET_COLLECTION_MANAGERS_SUCCESS, {\n    collection,\n    managers,\n    ...buildTransactionPayload(chainId, txHash, { collection, managers })\n  })\nexport const setCollectionManagersFailure = (collection: Collection, accessList: Access[], error: string) =>\n  action(SET_COLLECTION_MANAGERS_FAILURE, { collection, accessList, error })\n\nexport type SetCollectionManagersRequestAction = ReturnType<typeof setCollectionManagersRequest>\nexport type SetCollectionManagersSuccessAction = ReturnType<typeof setCollectionManagersSuccess>\nexport type SetCollectionManagersFailureAction = ReturnType<typeof setCollectionManagersFailure>\n\n// Approve collection\n\nexport const APPROVE_COLLECTION_REQUEST = '[Request] Approve collection'\nexport const APPROVE_COLLECTION_SUCCESS = '[Success] Approve collection'\nexport const APPROVE_COLLECTION_FAILURE = '[Failure] Approve collection'\n\nexport const approveCollectionRequest = (collection: Collection) => action(APPROVE_COLLECTION_REQUEST, { collection })\nexport const approveCollectionSuccess = (collection: Collection, chainId: ChainId, txHash: string) =>\n  action(APPROVE_COLLECTION_SUCCESS, {\n    collection,\n    ...buildTransactionPayload(chainId, txHash, { collection })\n  })\nexport const approveCollectionFailure = (collection: Collection, error: string) => action(APPROVE_COLLECTION_FAILURE, { collection, error })\n\nexport type ApproveCollectionRequestAction = ReturnType<typeof approveCollectionRequest>\nexport type ApproveCollectionSuccessAction = ReturnType<typeof approveCollectionSuccess>\nexport type ApproveCollectionFailureAction = ReturnType<typeof approveCollectionFailure>\n\n// Reject collection\n\nexport const REJECT_COLLECTION_REQUEST = '[Request] Reject collection'\nexport const REJECT_COLLECTION_SUCCESS = '[Success] Reject collection'\nexport const REJECT_COLLECTION_FAILURE = '[Failure] Reject collection'\n\nexport const rejectCollectionRequest = (collection: Collection) => action(REJECT_COLLECTION_REQUEST, { collection })\nexport const rejectCollectionSuccess = (collection: Collection, chainId: ChainId, txHash: string) =>\n  action(REJECT_COLLECTION_SUCCESS, {\n    collection,\n    ...buildTransactionPayload(chainId, txHash, { collection })\n  })\nexport const rejectCollectionFailure = (collection: Collection, error: string) => action(REJECT_COLLECTION_FAILURE, { collection, error })\n\nexport type RejectCollectionRequestAction = ReturnType<typeof rejectCollectionRequest>\nexport type RejectCollectionSuccessAction = ReturnType<typeof rejectCollectionSuccess>\nexport type RejectCollectionFailureAction = ReturnType<typeof rejectCollectionFailure>\n\n// Approval Flow\nexport const INITIATE_APPROVAL_FLOW = 'Initiate Approval Flow'\n\nexport const initiateApprovalFlow = (collection: Collection) => action(INITIATE_APPROVAL_FLOW, { collection })\n\nexport type InitiateApprovalFlowAction = ReturnType<typeof initiateApprovalFlow>\n\n// TP Approval Flow\nexport const INITIATE_TP_APPROVAL_FLOW = 'Initiate TP Approval Flow'\nexport const FINISH_TP_APPROVAL_FLOW = 'Finish TP Approval Flow'\n\nexport const initiateTPApprovalFlow = (collection: Collection) => action(INITIATE_TP_APPROVAL_FLOW, { collection })\n\nexport type InitiateTPApprovalFlowAction = ReturnType<typeof initiateTPApprovalFlow>\n"]},"metadata":{},"sourceType":"module"}