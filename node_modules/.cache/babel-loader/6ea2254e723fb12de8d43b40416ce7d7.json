{"ast":null,"code":"\"use strict\";\n/*\n  This file is part of web3x.\n\n  web3x is free software: you can redistribute it and/or modify\n  it under the terms of the GNU Lesser General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  web3x is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public License\n  along with web3x.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _asyncToGenerator = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar events_1 = require(\"events\");\n\nvar util_1 = require(\"util\");\n\nvar Subscription = /*#__PURE__*/function (_events_1$EventEmitte) {\n  _inherits(Subscription, _events_1$EventEmitte);\n\n  function Subscription(type, subscription, params, provider, callback) {\n    var _this;\n\n    var subscribeImmediately = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n\n    _classCallCheck(this, Subscription);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Subscription).call(this));\n    _this.type = type;\n    _this.subscription = subscription;\n    _this.params = params;\n    _this.provider = provider;\n    _this.callback = callback;\n\n    if (subscribeImmediately) {\n      _this.subscribe();\n    }\n\n    return _this;\n  }\n\n  _createClass(Subscription, [{\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.id) {\n                  this.unsubscribe();\n                }\n\n                _context.prev = 1;\n\n                this.listener = function (params) {\n                  return _this2.notificationHandler(params);\n                };\n\n                this.provider.on('notification', this.listener);\n                _context.next = 6;\n                return this.provider.send(\"\".concat(this.type, \"_subscribe\"), [this.subscription].concat(_toConsumableArray(this.params)));\n\n              case 6:\n                this.id = _context.sent;\n\n                if (this.id) {\n                  _context.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Failed to subscribe to \".concat(this.subscription, \".\"));\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                this.emit('error', _context.t0, this);\n\n              case 14:\n                return _context.abrupt(\"return\", this);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 11]]);\n      }));\n\n      function subscribe() {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n  }, {\n    key: \"notificationHandler\",\n    value: function notificationHandler(params) {\n      var _this3 = this;\n\n      var subscription = params.subscription,\n          result = params.result;\n\n      if (subscription !== this.id) {\n        return;\n      }\n\n      if (result instanceof Error) {\n        this.unsubscribe();\n        this.emit('error', result, this);\n        return;\n      }\n\n      var resultArr = util_1.isArray(result) ? result : [result];\n      resultArr.forEach(function (resultItem) {\n        _this3.callback(resultItem, _this3);\n      });\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this.listener) {\n        this.provider.removeListener('notification', this.listener);\n      }\n\n      if (this.id) {\n        this.provider.send(\"\".concat(this.type, \"_unsubscribe\"), [this.id]);\n      }\n\n      this.id = undefined;\n      this.listener = undefined;\n    }\n  }]);\n\n  return Subscription;\n}(events_1.EventEmitter);\n\nexports.Subscription = Subscription;","map":null,"metadata":{},"sourceType":"script"}