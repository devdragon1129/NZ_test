{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\n\nvar path = require('path');\n\nvar os = require('os');\n\nvar uuid = require('uuid/v4');\n\nexports.filter = function (iterable, filterer) {\n  return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, value, keep;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(iterable);\n\n          case 4:\n            _context.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 6:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 18;\n              break;\n            }\n\n            value = _step.value;\n            _context.next = 10;\n            return _awaitAsyncGenerator(filterer(value));\n\n          case 10:\n            keep = _context.sent;\n\n            if (keep) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"continue\", 15);\n\n          case 13:\n            _context.next = 15;\n            return value;\n\n          case 15:\n            _iteratorAbruptCompletion = false;\n            _context.next = 4;\n            break;\n\n          case 18:\n            _context.next = 24;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 24:\n            _context.prev = 24;\n            _context.prev = 25;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 29;\n              break;\n            }\n\n            _context.next = 29;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 29:\n            _context.prev = 29;\n\n            if (!_didIteratorError) {\n              _context.next = 32;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 32:\n            return _context.finish(29);\n\n          case 33:\n            return _context.finish(24);\n\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 20, 24, 34], [25,, 29, 33]]);\n  }))();\n}; // Not just sort, because the sorter is given all the values and should return\n// them all sorted\n\n\nexports.sortAll = function (iterable, sorter) {\n  return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var values, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, value, _iterator5, _step5, _value;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            values = [];\n            _iteratorAbruptCompletion2 = false;\n            _didIteratorError2 = false;\n            _context2.prev = 3;\n            _iterator2 = _asyncIterator(iterable);\n\n          case 5:\n            _context2.next = 7;\n            return _awaitAsyncGenerator(_iterator2.next());\n\n          case 7:\n            if (!(_iteratorAbruptCompletion2 = !(_step2 = _context2.sent).done)) {\n              _context2.next = 13;\n              break;\n            }\n\n            value = _step2.value;\n            values.push(value);\n\n          case 10:\n            _iteratorAbruptCompletion2 = false;\n            _context2.next = 5;\n            break;\n\n          case 13:\n            _context2.next = 19;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](3);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context2.t0;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.prev = 20;\n\n            if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n              _context2.next = 24;\n              break;\n            }\n\n            _context2.next = 24;\n            return _awaitAsyncGenerator(_iterator2.return());\n\n          case 24:\n            _context2.prev = 24;\n\n            if (!_didIteratorError2) {\n              _context2.next = 27;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 27:\n            return _context2.finish(24);\n\n          case 28:\n            return _context2.finish(19);\n\n          case 29:\n            _context2.next = 31;\n            return _awaitAsyncGenerator(sorter(values));\n\n          case 31:\n            values = _context2.sent;\n            _iterator5 = _createForOfIteratorHelper(values);\n            _context2.prev = 33;\n\n            _iterator5.s();\n\n          case 35:\n            if ((_step5 = _iterator5.n()).done) {\n              _context2.next = 41;\n              break;\n            }\n\n            _value = _step5.value;\n            _context2.next = 39;\n            return _value;\n\n          case 39:\n            _context2.next = 35;\n            break;\n\n          case 41:\n            _context2.next = 46;\n            break;\n\n          case 43:\n            _context2.prev = 43;\n            _context2.t1 = _context2[\"catch\"](33);\n\n            _iterator5.e(_context2.t1);\n\n          case 46:\n            _context2.prev = 46;\n\n            _iterator5.f();\n\n            return _context2.finish(46);\n\n          case 49:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 15, 19, 29], [20,, 24, 28], [33, 43, 46, 49]]);\n  }))();\n};\n\nexports.take = function (iterable, n) {\n  return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var i, _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, value;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(n <= 0)) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 2:\n            i = 0;\n            _iteratorAbruptCompletion3 = false;\n            _didIteratorError3 = false;\n            _context3.prev = 5;\n            _iterator3 = _asyncIterator(iterable);\n\n          case 7:\n            _context3.next = 9;\n            return _awaitAsyncGenerator(_iterator3.next());\n\n          case 9:\n            if (!(_iteratorAbruptCompletion3 = !(_step3 = _context3.sent).done)) {\n              _context3.next = 19;\n              break;\n            }\n\n            value = _step3.value;\n            _context3.next = 13;\n            return value;\n\n          case 13:\n            i++;\n\n            if (!(i >= n)) {\n              _context3.next = 16;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 16:\n            _iteratorAbruptCompletion3 = false;\n            _context3.next = 7;\n            break;\n\n          case 19:\n            _context3.next = 25;\n            break;\n\n          case 21:\n            _context3.prev = 21;\n            _context3.t0 = _context3[\"catch\"](5);\n            _didIteratorError3 = true;\n            _iteratorError3 = _context3.t0;\n\n          case 25:\n            _context3.prev = 25;\n            _context3.prev = 26;\n\n            if (!(_iteratorAbruptCompletion3 && _iterator3.return != null)) {\n              _context3.next = 30;\n              break;\n            }\n\n            _context3.next = 30;\n            return _awaitAsyncGenerator(_iterator3.return());\n\n          case 30:\n            _context3.prev = 30;\n\n            if (!_didIteratorError3) {\n              _context3.next = 33;\n              break;\n            }\n\n            throw _iteratorError3;\n\n          case 33:\n            return _context3.finish(30);\n\n          case 34:\n            return _context3.finish(25);\n\n          case 35:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[5, 21, 25, 35], [26,, 30, 34]]);\n  }))();\n};\n\nexports.map = function (iterable, mapper) {\n  return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var _iteratorAbruptCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, value;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _iteratorAbruptCompletion4 = false;\n            _didIteratorError4 = false;\n            _context4.prev = 2;\n            _iterator4 = _asyncIterator(iterable);\n\n          case 4:\n            _context4.next = 6;\n            return _awaitAsyncGenerator(_iterator4.next());\n\n          case 6:\n            if (!(_iteratorAbruptCompletion4 = !(_step4 = _context4.sent).done)) {\n              _context4.next = 13;\n              break;\n            }\n\n            value = _step4.value;\n            _context4.next = 10;\n            return mapper(value);\n\n          case 10:\n            _iteratorAbruptCompletion4 = false;\n            _context4.next = 4;\n            break;\n\n          case 13:\n            _context4.next = 19;\n            break;\n\n          case 15:\n            _context4.prev = 15;\n            _context4.t0 = _context4[\"catch\"](2);\n            _didIteratorError4 = true;\n            _iteratorError4 = _context4.t0;\n\n          case 19:\n            _context4.prev = 19;\n            _context4.prev = 20;\n\n            if (!(_iteratorAbruptCompletion4 && _iterator4.return != null)) {\n              _context4.next = 24;\n              break;\n            }\n\n            _context4.next = 24;\n            return _awaitAsyncGenerator(_iterator4.return());\n\n          case 24:\n            _context4.prev = 24;\n\n            if (!_didIteratorError4) {\n              _context4.next = 27;\n              break;\n            }\n\n            throw _iteratorError4;\n\n          case 27:\n            return _context4.finish(24);\n\n          case 28:\n            return _context4.finish(19);\n\n          case 29:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[2, 15, 19, 29], [20,, 24, 28]]);\n  }))();\n};\n\nexports.replaceStartWith = function (s, r) {\n  var matcher = new RegExp('^' + r);\n  return s.replace(matcher, '');\n};\n\nexports.tmpdir = function () {\n  return path.join(os.tmpdir(), uuid());\n};","map":null,"metadata":{},"sourceType":"script"}