{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getDeploymentStatusByProjectId } from 'modules/deployment/selectors';\nimport { getData as getScenes } from 'modules/scene/selectors';\nimport { openModal } from 'modules/modal/actions';\nimport ProjectCard from './PoolCard';\n\nvar mapState = function mapState(state, ownProps) {\n  var pool = ownProps.pool;\n  var scene = getScenes(state)[pool.sceneId];\n  return {\n    items: scene ? scene.metrics.entities : 0,\n    deploymentStatus: getDeploymentStatusByProjectId(state)[ownProps.pool.id]\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onOpenModal: function onOpenModal(name, metadata) {\n      return dispatch(openModal(name, metadata));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(ProjectCard);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SceneListPage/PoolCard/PoolCard.container.ts"],"names":["connect","getDeploymentStatusByProjectId","getData","getScenes","openModal","ProjectCard","mapState","state","ownProps","pool","scene","sceneId","items","metrics","entities","deploymentStatus","id","mapDispatch","dispatch","onOpenModal","name","metadata"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAGA,SAASC,8BAAT,QAA+C,8BAA/C;AACA,SAASC,OAAO,IAAIC,SAApB,QAAqC,yBAArC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAGA,OAAOC,WAAP,MAAwB,YAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB,EAAyD;AAAA,MAChEC,IADgE,GACvDD,QADuD,CAChEC,IADgE;AAExE,MAAMC,KAAK,GAAGP,SAAS,CAACI,KAAD,CAAT,CAAiBE,IAAI,CAACE,OAAtB,CAAd;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEF,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAcC,QAAjB,GAA4B,CADnC;AAELC,IAAAA,gBAAgB,EAAEd,8BAA8B,CAACM,KAAD,CAA9B,CAAsCC,QAAQ,CAACC,IAAT,CAAcO,EAApD;AAFb,GAAP;AAID,CAPD;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,WAAW,EAAE,qBAACC,IAAD,EAAOC,QAAP;AAAA,aAAoBH,QAAQ,CAACd,SAAS,CAACgB,IAAD,EAAOC,QAAP,CAAV,CAA5B;AAAA;AADmD,GAA9C;AAAA,CAApB;;AAIA,eAAerB,OAAO,CAACM,QAAD,EAAWW,WAAX,CAAP,CAA+BZ,WAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\n\nimport { RootState } from 'modules/common/types'\nimport { getDeploymentStatusByProjectId } from 'modules/deployment/selectors'\nimport { getData as getScenes } from 'modules/scene/selectors'\nimport { openModal } from 'modules/modal/actions'\n\nimport { MapStateProps, MapDispatch, MapDispatchProps, OwnProps } from './PoolCard.types'\nimport ProjectCard from './PoolCard'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapStateProps => {\n  const { pool } = ownProps\n  const scene = getScenes(state)[pool.sceneId]\n  return {\n    items: scene ? scene.metrics.entities : 0,\n    deploymentStatus: getDeploymentStatusByProjectId(state)[ownProps.pool.id]\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onOpenModal: (name, metadata) => dispatch(openModal(name, metadata))\n})\n\nexport default connect(mapState, mapDispatch)(ProjectCard)\n"]},"metadata":{},"sourceType":"module"}