{"ast":null,"code":"\"use strict\";\n/*\n  This file is part of web3x.\n\n  web3x is free software: you can redistribute it and/or modify\n  it under the terms of the GNU Lesser General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  web3x is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public License\n  along with web3x.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar bn_js_1 = tslib_1.__importDefault(require(\"bn.js\"));\n\nvar number_to_bn_1 = require(\"./number-to-bn\");\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\n\n\nfunction isBN(object) {\n  return object instanceof bn_js_1.default || object && object.constructor && object.constructor.name === 'BN';\n}\n\nexports.isBN = isBN;\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} num, string, HEX string or BN\n * @return {BN} BN\n */\n\nfunction toBN(num) {\n  try {\n    return number_to_bn_1.numberToBN(num);\n  } catch (e) {\n    throw new Error(e + ' Given value: \"' + num + '\"');\n  }\n}\n\nexports.toBN = toBN;\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} num\n * @return {String}\n */\n\nfunction toTwosComplement(num) {\n  return '0x' + toBN(num).toTwos(256).toString(16, 64);\n}\n\nexports.toTwosComplement = toTwosComplement;","map":null,"metadata":{},"sourceType":"script"}