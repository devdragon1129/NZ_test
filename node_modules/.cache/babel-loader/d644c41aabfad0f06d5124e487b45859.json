{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\r\n * Groups all the scene component constants in one place to ease maintenance.\r\n * @hidden\r\n */\n\nvar SceneComponentConstants =\n/** @class */\nfunction () {\n  function SceneComponentConstants() {}\n\n  SceneComponentConstants.NAME_EFFECTLAYER = \"EffectLayer\";\n  SceneComponentConstants.NAME_LAYER = \"Layer\";\n  SceneComponentConstants.NAME_LENSFLARESYSTEM = \"LensFlareSystem\";\n  SceneComponentConstants.NAME_BOUNDINGBOXRENDERER = \"BoundingBoxRenderer\";\n  SceneComponentConstants.NAME_PARTICLESYSTEM = \"ParticleSystem\";\n  SceneComponentConstants.NAME_GAMEPAD = \"Gamepad\";\n  SceneComponentConstants.NAME_SIMPLIFICATIONQUEUE = \"SimplificationQueue\";\n  SceneComponentConstants.NAME_GEOMETRYBUFFERRENDERER = \"GeometryBufferRenderer\";\n  SceneComponentConstants.NAME_PREPASSRENDERER = \"PrePassRenderer\";\n  SceneComponentConstants.NAME_DEPTHRENDERER = \"DepthRenderer\";\n  SceneComponentConstants.NAME_POSTPROCESSRENDERPIPELINEMANAGER = \"PostProcessRenderPipelineManager\";\n  SceneComponentConstants.NAME_SPRITE = \"Sprite\";\n  SceneComponentConstants.NAME_SUBSURFACE = \"SubSurface\";\n  SceneComponentConstants.NAME_OUTLINERENDERER = \"Outline\";\n  SceneComponentConstants.NAME_PROCEDURALTEXTURE = \"ProceduralTexture\";\n  SceneComponentConstants.NAME_SHADOWGENERATOR = \"ShadowGenerator\";\n  SceneComponentConstants.NAME_OCTREE = \"Octree\";\n  SceneComponentConstants.NAME_PHYSICSENGINE = \"PhysicsEngine\";\n  SceneComponentConstants.NAME_AUDIO = \"Audio\";\n  SceneComponentConstants.STEP_ISREADYFORMESH_EFFECTLAYER = 0;\n  SceneComponentConstants.STEP_BEFOREEVALUATEACTIVEMESH_BOUNDINGBOXRENDERER = 0;\n  SceneComponentConstants.STEP_EVALUATESUBMESH_BOUNDINGBOXRENDERER = 0;\n  SceneComponentConstants.STEP_PREACTIVEMESH_BOUNDINGBOXRENDERER = 0;\n  SceneComponentConstants.STEP_CAMERADRAWRENDERTARGET_EFFECTLAYER = 1;\n  SceneComponentConstants.STEP_BEFORECAMERADRAW_EFFECTLAYER = 0;\n  SceneComponentConstants.STEP_BEFORECAMERADRAW_LAYER = 1;\n  SceneComponentConstants.STEP_BEFORECAMERADRAW_PREPASS = 2;\n  SceneComponentConstants.STEP_BEFORERENDERTARGETDRAW_LAYER = 0;\n  SceneComponentConstants.STEP_BEFORERENDERINGMESH_PREPASS = 0;\n  SceneComponentConstants.STEP_BEFORERENDERINGMESH_OUTLINE = 1;\n  SceneComponentConstants.STEP_AFTERRENDERINGMESH_PREPASS = 0;\n  SceneComponentConstants.STEP_AFTERRENDERINGMESH_OUTLINE = 1;\n  SceneComponentConstants.STEP_AFTERRENDERINGGROUPDRAW_EFFECTLAYER_DRAW = 0;\n  SceneComponentConstants.STEP_AFTERRENDERINGGROUPDRAW_BOUNDINGBOXRENDERER = 1;\n  SceneComponentConstants.STEP_BEFORECAMERAUPDATE_SIMPLIFICATIONQUEUE = 0;\n  SceneComponentConstants.STEP_BEFORECAMERAUPDATE_GAMEPAD = 1;\n  SceneComponentConstants.STEP_BEFORECLEAR_PROCEDURALTEXTURE = 0;\n  SceneComponentConstants.STEP_AFTERRENDERTARGETDRAW_LAYER = 0;\n  SceneComponentConstants.STEP_AFTERCAMERADRAW_EFFECTLAYER = 0;\n  SceneComponentConstants.STEP_AFTERCAMERADRAW_LENSFLARESYSTEM = 1;\n  SceneComponentConstants.STEP_AFTERCAMERADRAW_EFFECTLAYER_DRAW = 2;\n  SceneComponentConstants.STEP_AFTERCAMERADRAW_LAYER = 3;\n  SceneComponentConstants.STEP_AFTERCAMERADRAW_PREPASS = 4;\n  SceneComponentConstants.STEP_AFTERRENDER_AUDIO = 0;\n  SceneComponentConstants.STEP_GATHERRENDERTARGETS_DEPTHRENDERER = 0;\n  SceneComponentConstants.STEP_GATHERRENDERTARGETS_GEOMETRYBUFFERRENDERER = 1;\n  SceneComponentConstants.STEP_GATHERRENDERTARGETS_SHADOWGENERATOR = 2;\n  SceneComponentConstants.STEP_GATHERRENDERTARGETS_POSTPROCESSRENDERPIPELINEMANAGER = 3;\n  SceneComponentConstants.STEP_GATHERACTIVECAMERARENDERTARGETS_DEPTHRENDERER = 0;\n  SceneComponentConstants.STEP_BEFORECLEARSTAGE_PREPASS = 0;\n  SceneComponentConstants.STEP_POINTERMOVE_SPRITE = 0;\n  SceneComponentConstants.STEP_POINTERDOWN_SPRITE = 0;\n  SceneComponentConstants.STEP_POINTERUP_SPRITE = 0;\n  return SceneComponentConstants;\n}();\n\nexport { SceneComponentConstants };\n/**\r\n * Representation of a stage in the scene (Basically a list of ordered steps)\r\n * @hidden\r\n */\n\nvar Stage =\n/** @class */\nfunction (_super) {\n  __extends(Stage, _super);\n  /**\r\n   * Hide ctor from the rest of the world.\r\n   * @param items The items to add.\r\n   */\n\n\n  function Stage(items) {\n    return _super.apply(this, items) || this;\n  }\n  /**\r\n   * Creates a new Stage.\r\n   * @returns A new instance of a Stage\r\n   */\n\n\n  Stage.Create = function () {\n    return Object.create(Stage.prototype);\n  };\n  /**\r\n   * Registers a step in an ordered way in the targeted stage.\r\n   * @param index Defines the position to register the step in\r\n   * @param component Defines the component attached to the step\r\n   * @param action Defines the action to launch during the step\r\n   */\n\n\n  Stage.prototype.registerStep = function (index, component, action) {\n    var i = 0;\n    var maxIndex = Number.MAX_VALUE;\n\n    for (; i < this.length; i++) {\n      var step = this[i];\n      maxIndex = step.index;\n\n      if (index < maxIndex) {\n        break;\n      }\n    }\n\n    this.splice(i, 0, {\n      index: index,\n      component: component,\n      action: action.bind(component)\n    });\n  };\n  /**\r\n   * Clears all the steps from the stage.\r\n   */\n\n\n  Stage.prototype.clear = function () {\n    this.length = 0;\n  };\n\n  return Stage;\n}(Array);\n\nexport { Stage };","map":null,"metadata":{},"sourceType":"module"}