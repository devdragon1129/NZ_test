{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Atlas/Popup/Popup.tsx\";\nimport * as React from 'react';\nimport { Badge, Row, Section, Header } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { LandType } from 'modules/land/types';\nimport Profile from 'components/Profile';\nimport './Popup.css';\n\nvar Popup = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Popup, _React$PureComponent);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Popup).apply(this, arguments));\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          x = _this$props.x,\n          y = _this$props.y,\n          visible = _this$props.visible,\n          land = _this$props.land,\n          deployments = _this$props.deployments;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Popup\",\n        style: {\n          top: y,\n          left: x,\n          opacity: visible ? 1 : 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Section, {\n        className: \"land-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"name-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, land.name), land.type === LandType.PARCEL ? /*#__PURE__*/React.createElement(Badge, {\n        color: \"#37333D\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }), land.id) : null)), /*#__PURE__*/React.createElement(Section, {\n        className: \"owner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, t('land_page.owner')), /*#__PURE__*/React.createElement(Profile, {\n        address: land.owner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      })), land.operators.length > 0 ? /*#__PURE__*/React.createElement(Section, {\n        className: \"operators\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, t('land_page.operators')), land.operators.map(function (operator) {\n        return /*#__PURE__*/React.createElement(Profile, {\n          address: operator,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }\n        });\n      })) : null, /*#__PURE__*/React.createElement(Section, {\n        className: \"online-scenes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, t('land_page.online_scenes')), deployments.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, deployments.slice(0, 3).map(function (deployment) {\n        return /*#__PURE__*/React.createElement(Row, {\n          className: \"scene\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }\n        }, deployment.thumbnail ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"thumbnail\",\n          style: {\n            backgroundImage: \"url(\".concat(deployment.thumbnail, \")\")\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 43\n          }\n        }) : null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"title\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }\n        }, deployment.name));\n      }), deployments.length > 3 ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 41\n        }\n      }, \"+\", t('list.more', {\n        count: deployments.length - 3\n      })) : null) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"no-scenes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, t('land_page.none'))));\n    }\n  }]);\n\n  return Popup;\n}(React.PureComponent);\n\nexport { Popup as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Atlas/Popup/Popup.tsx"],"names":["React","Badge","Row","Section","Header","t","LandType","Profile","Popup","props","x","y","visible","land","deployments","top","left","opacity","name","type","PARCEL","id","owner","operators","length","map","operator","slice","deployment","thumbnail","backgroundImage","count","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Badge, Row, Section, Header } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { LandType } from 'modules/land/types'\nimport Profile from 'components/Profile'\nimport { Props } from './Popup.types'\nimport './Popup.css'\n\nexport default class Popup extends React.PureComponent<Props> {\n  render() {\n    const { x, y, visible, land, deployments } = this.props\n    return (\n      <div className=\"Popup\" style={{ top: y, left: x, opacity: visible ? 1 : 0 }}>\n        <Section className=\"land-name\">\n          <Row className=\"name-row\">\n            <span className=\"name\">{land.name}</span>\n            {land.type === LandType.PARCEL ? (\n              <Badge color=\"#37333D\">\n                <i className=\"pin\" />\n                {land.id}\n              </Badge>\n            ) : null}\n          </Row>\n        </Section>\n        <Section className=\"owner\">\n          <Header sub>{t('land_page.owner')}</Header>\n          <Profile address={land.owner} />\n        </Section>\n\n        {land.operators.length > 0 ? (\n          <Section className=\"operators\">\n            <Header sub>{t('land_page.operators')}</Header>\n            {land.operators.map(operator => (\n              <Profile address={operator} />\n            ))}\n          </Section>\n        ) : null}\n\n        <Section className=\"online-scenes\">\n          <Header sub>{t('land_page.online_scenes')}</Header>\n          {deployments.length > 0 ? (\n            <>\n              {deployments.slice(0, 3).map(deployment => (\n                <Row className=\"scene\">\n                  {deployment.thumbnail ? <div className=\"thumbnail\" style={{ backgroundImage: `url(${deployment.thumbnail})` }} /> : null}\n                  <div className=\"title\">{deployment.name}</div>\n                </Row>\n              ))}\n              {deployments.length > 3 ? <p>+{t('list.more', { count: deployments.length - 3 })}</p> : null}\n            </>\n          ) : (\n            <div className=\"no-scenes\">{t('land_page.none')}</div>\n          )}\n        </Section>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}