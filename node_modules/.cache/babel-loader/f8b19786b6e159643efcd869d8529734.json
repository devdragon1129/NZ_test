{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { CameraInputsManager } from \"./cameraInputsManager\";\nimport { FlyCameraMouseInput } from \"../Cameras/Inputs/flyCameraMouseInput\";\nimport { FlyCameraKeyboardInput } from \"../Cameras/Inputs/flyCameraKeyboardInput\";\n/**\r\n * Default Inputs manager for the FlyCamera.\r\n * It groups all the default supported inputs for ease of use.\r\n * @see https://doc.babylonjs.com/how_to/customizing_camera_inputs\r\n */\n\nvar FlyCameraInputsManager =\n/** @class */\nfunction (_super) {\n  __extends(FlyCameraInputsManager, _super);\n  /**\r\n   * Instantiates a new FlyCameraInputsManager.\r\n   * @param camera Defines the camera the inputs belong to.\r\n   */\n\n\n  function FlyCameraInputsManager(camera) {\n    return _super.call(this, camera) || this;\n  }\n  /**\r\n   * Add keyboard input support to the input manager.\r\n   * @returns the new FlyCameraKeyboardMoveInput().\r\n   */\n\n\n  FlyCameraInputsManager.prototype.addKeyboard = function () {\n    this.add(new FlyCameraKeyboardInput());\n    return this;\n  };\n  /**\r\n   * Add mouse input support to the input manager.\r\n   * @param touchEnabled Enable touch screen support.\r\n   * @returns the new FlyCameraMouseInput().\r\n   */\n\n\n  FlyCameraInputsManager.prototype.addMouse = function (touchEnabled) {\n    if (touchEnabled === void 0) {\n      touchEnabled = true;\n    }\n\n    this.add(new FlyCameraMouseInput(touchEnabled));\n    return this;\n  };\n\n  return FlyCameraInputsManager;\n}(CameraInputsManager);\n\nexport { FlyCameraInputsManager };","map":null,"metadata":{},"sourceType":"module"}