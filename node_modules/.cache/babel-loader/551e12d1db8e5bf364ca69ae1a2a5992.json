{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/AssetsEditor/SingleAssetEditor/SingleAssetEditor.tsx\";\nimport * as React from 'react';\nimport { Field, TagField, SelectField, Radio } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { rawMappingsToObjectURL, revokeMappingsObjectURL, isGround } from 'modules/asset/utils';\nimport { getContentsStorageUrl } from 'lib/api/builder';\nimport { CategoryName } from 'modules/ui/sidebar/utils';\nimport { getModelData, ThumbnailType } from 'lib/getModelData';\nimport Icon from 'components/Icon';\nimport './SingleAssetEditor.css';\nvar CATEGORY_OPTIONS = [{\n  key: 1,\n  text: CategoryName.DECORATIONS_CATEGORY,\n  value: CategoryName.DECORATIONS_CATEGORY\n}, {\n  key: 2,\n  text: CategoryName.FURNITURE,\n  value: CategoryName.FURNITURE\n}, {\n  key: 3,\n  text: CategoryName.NATURE_CATEGORY,\n  value: CategoryName.NATURE_CATEGORY\n}, {\n  key: 4,\n  text: CategoryName.STRUCTURES_CATEGORY,\n  value: CategoryName.STRUCTURES_CATEGORY\n}, {\n  key: 5,\n  text: CategoryName.TILES_CATEGORY,\n  value: CategoryName.TILES_CATEGORY\n}];\n\nvar SingleAssetEditor = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(SingleAssetEditor, _React$PureComponent);\n\n  function SingleAssetEditor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SingleAssetEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SingleAssetEditor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleCategoryChange = function (_, data) {\n      var asset = _this.props.asset;\n      var category = data.value;\n\n      _this.props.onChange(_objectSpread({}, asset, {\n        category: category\n      }));\n    };\n\n    _this.handleTagChange = function (_, data) {\n      var asset = _this.props.asset;\n      var tags = data.value;\n\n      _this.props.onChange(_objectSpread({}, asset, {\n        tags: tags\n      }));\n    };\n\n    _this.handleToggleGround = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var asset, hasGroundCategory, thumbnail, newAsset;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              asset = _this.props.asset;\n              hasGroundCategory = isGround(asset);\n\n              if (!hasGroundCategory) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 5;\n              return _this.handleGetThumbnail();\n\n            case 5:\n              _context.t0 = _context.sent;\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.next = 10;\n              return _this.handleGetThumbnail(true);\n\n            case 10:\n              _context.t0 = _context.sent;\n\n            case 11:\n              thumbnail = _context.t0;\n              newAsset = _objectSpread({}, asset, {\n                category: hasGroundCategory ? CategoryName.DECORATIONS_CATEGORY : CategoryName.GROUND_CATEGORY,\n                thumbnail: thumbnail\n              });\n\n              _this.props.onChange(newAsset);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleChangeName = function (event) {\n      var asset = _this.props.asset;\n\n      _this.props.onChange(_objectSpread({}, asset, {\n        name: event.currentTarget.value\n      }));\n    };\n\n    _this.handleGetThumbnail = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var ground,\n          asset,\n          mappings,\n          contentValues,\n          _yield$getModelData,\n          image,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              ground = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : false;\n              asset = _this.props.asset;\n              contentValues = Object.values(asset.contents);\n\n              if (typeof contentValues[0] !== 'string') {\n                mappings = rawMappingsToObjectURL(asset.contents);\n              } else {\n                mappings = Object.keys(asset.contents).reduce(function (acc, path) {\n                  acc[path] = getContentsStorageUrl(asset.contents[path]);\n                  return acc;\n                }, {});\n              }\n\n              _context2.next = 6;\n              return getModelData(mappings[asset.model], {\n                mappings: mappings,\n                thumbnailType: ground ? ThumbnailType.TOP : ThumbnailType.DEFAULT,\n                width: 256,\n                height: 256\n              });\n\n            case 6:\n              _yield$getModelData = _context2.sent;\n              image = _yield$getModelData.image;\n              revokeMappingsObjectURL(mappings);\n              return _context2.abrupt(\"return\", image);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(SingleAssetEditor, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          asset = _this$props.asset,\n          _this$props$errors = _this$props.errors,\n          errors = _this$props$errors === void 0 ? {} : _this$props$errors;\n      var hasGroundCategory = isGround(asset);\n      var categoryOptions = CATEGORY_OPTIONS;\n\n      if (hasGroundCategory) {\n        categoryOptions = [].concat(CATEGORY_OPTIONS, [{\n          key: CATEGORY_OPTIONS.length + 1,\n          text: CategoryName.GROUND_CATEGORY,\n          value: CategoryName.GROUND_CATEGORY\n        }]);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SingleAssetEditor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: asset.thumbnail,\n        className: hasGroundCategory ? 'ground' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"metric triangles\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"triangles\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }), asset.metrics.triangles, \" \", t('metrics.triangles')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"metric textures\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"textures\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }), asset.metrics.textures, \" \", t('metrics.textures')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"metric materials\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"geometries\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }), asset.metrics.materials, \" \", t('metrics.materials'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        label: t('asset_pack.edit_asset.name.label'),\n        placeholder: t('asset_pack.edit_asset.name.placeholder'),\n        value: asset.name,\n        onChange: this.handleChangeName,\n        error: !!errors.name,\n        message: errors.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(SelectField, {\n        label: t('asset_pack.edit_asset.category.label'),\n        options: categoryOptions,\n        onChange: this.handleCategoryChange,\n        defaultValue: CategoryName.DECORATIONS_CATEGORY,\n        value: asset.category,\n        disabled: hasGroundCategory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Radio, {\n        checked: hasGroundCategory,\n        label: t('asset_pack.edit_asset.ground.label'),\n        onClick: this.handleToggleGround,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TagField, {\n        label: t('asset_pack.edit_asset.tags.label'),\n        placeholder: t('asset_pack.edit_asset.tags.placeholder'),\n        onChange: this.handleTagChange,\n        value: asset.tags || [],\n        error: !!errors.tags,\n        message: errors.tags,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SingleAssetEditor;\n}(React.PureComponent);\n\nexport { SingleAssetEditor as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/AssetsEditor/SingleAssetEditor/SingleAssetEditor.tsx"],"names":["React","Field","TagField","SelectField","Radio","t","rawMappingsToObjectURL","revokeMappingsObjectURL","isGround","getContentsStorageUrl","CategoryName","getModelData","ThumbnailType","Icon","CATEGORY_OPTIONS","key","text","DECORATIONS_CATEGORY","value","FURNITURE","NATURE_CATEGORY","STRUCTURES_CATEGORY","TILES_CATEGORY","SingleAssetEditor","handleCategoryChange","_","data","asset","props","category","onChange","handleTagChange","tags","handleToggleGround","hasGroundCategory","handleGetThumbnail","thumbnail","newAsset","GROUND_CATEGORY","handleChangeName","event","name","currentTarget","ground","contentValues","Object","values","contents","mappings","keys","reduce","acc","path","model","thumbnailType","TOP","DEFAULT","width","height","image","errors","categoryOptions","length","metrics","triangles","textures","materials","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Field, TagField, SelectField, DropdownProps, Radio } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { rawMappingsToObjectURL, revokeMappingsObjectURL, isGround } from 'modules/asset/utils'\nimport { getContentsStorageUrl } from 'lib/api/builder'\nimport { CategoryName } from 'modules/ui/sidebar/utils'\nimport { RawAsset, Asset } from 'modules/asset/types'\nimport { getModelData, ThumbnailType } from 'lib/getModelData'\nimport Icon from 'components/Icon'\nimport { Props, State } from './SingleAssetEditor.types'\nimport './SingleAssetEditor.css'\n\nconst CATEGORY_OPTIONS = [\n  { key: 1, text: CategoryName.DECORATIONS_CATEGORY, value: CategoryName.DECORATIONS_CATEGORY },\n  { key: 2, text: CategoryName.FURNITURE, value: CategoryName.FURNITURE },\n  { key: 3, text: CategoryName.NATURE_CATEGORY, value: CategoryName.NATURE_CATEGORY },\n  { key: 4, text: CategoryName.STRUCTURES_CATEGORY, value: CategoryName.STRUCTURES_CATEGORY },\n  { key: 5, text: CategoryName.TILES_CATEGORY, value: CategoryName.TILES_CATEGORY }\n]\n\nexport default class SingleAssetEditor<T extends RawAsset | Asset> extends React.PureComponent<Props<T>, State> {\n  handleCategoryChange = (_: React.SyntheticEvent, data: DropdownProps) => {\n    const { asset } = this.props\n\n    const category = data.value as CategoryName\n    this.props.onChange({\n      ...asset,\n      category: category\n    })\n  }\n\n  handleTagChange = (_: React.SyntheticEvent, data: DropdownProps) => {\n    const { asset } = this.props\n    const tags = data.value as string[]\n\n    this.props.onChange({\n      ...asset,\n      tags\n    })\n  }\n\n  handleToggleGround = async () => {\n    const { asset } = this.props\n\n    const hasGroundCategory = isGround(asset)\n    const thumbnail = hasGroundCategory ? await this.handleGetThumbnail() : await this.handleGetThumbnail(true)\n    const newAsset = {\n      ...asset,\n      category: hasGroundCategory ? CategoryName.DECORATIONS_CATEGORY : CategoryName.GROUND_CATEGORY,\n      thumbnail\n    }\n\n    this.props.onChange(newAsset)\n  }\n\n  handleChangeName = (event: React.FormEvent<HTMLInputElement>) => {\n    const { asset } = this.props\n\n    this.props.onChange({\n      ...asset,\n      name: event.currentTarget.value\n    })\n  }\n\n  handleGetThumbnail = async (ground: boolean = false) => {\n    const { asset } = this.props\n\n    let mappings: Asset['contents'] | RawAsset['contents']\n    const contentValues = Object.values(asset.contents)\n\n    if (typeof contentValues[0] !== 'string') {\n      mappings = rawMappingsToObjectURL((asset as RawAsset).contents)\n    } else {\n      mappings = Object.keys((asset as Asset).contents).reduce<Asset['contents']>((acc, path) => {\n        acc[path] = getContentsStorageUrl(asset.contents[path] as string)\n        return acc\n      }, {})\n    }\n\n    const { image } = await getModelData(mappings[asset.model], {\n      mappings,\n      thumbnailType: ground ? ThumbnailType.TOP : ThumbnailType.DEFAULT,\n      width: 256,\n      height: 256\n    })\n    revokeMappingsObjectURL(mappings)\n\n    return image\n  }\n\n  render() {\n    const { asset, errors = {} } = this.props\n    const hasGroundCategory = isGround(asset)\n\n    let categoryOptions = CATEGORY_OPTIONS\n\n    if (hasGroundCategory) {\n      categoryOptions = [\n        ...CATEGORY_OPTIONS,\n        { key: CATEGORY_OPTIONS.length + 1, text: CategoryName.GROUND_CATEGORY, value: CategoryName.GROUND_CATEGORY }\n      ]\n    }\n\n    return (\n      <div className=\"SingleAssetEditor\">\n        <div className=\"left-column\">\n          <img src={asset.thumbnail} className={hasGroundCategory ? 'ground' : ''} />\n          <span className=\"metric triangles\">\n            <Icon name=\"triangles\" />\n            {asset.metrics.triangles} {t('metrics.triangles')}\n          </span>\n          <span className=\"metric textures\">\n            <Icon name=\"textures\" />\n            {asset.metrics.textures} {t('metrics.textures')}\n          </span>\n          <span className=\"metric materials\">\n            <Icon name=\"geometries\" />\n            {asset.metrics.materials} {t('metrics.materials')}\n          </span>\n        </div>\n        <div className=\"right-column\">\n          <Field\n            label={t('asset_pack.edit_asset.name.label')}\n            placeholder={t('asset_pack.edit_asset.name.placeholder')}\n            value={asset.name}\n            onChange={this.handleChangeName}\n            error={!!errors.name}\n            message={errors.name}\n          />\n          <SelectField\n            label={t('asset_pack.edit_asset.category.label')}\n            options={categoryOptions}\n            onChange={this.handleCategoryChange}\n            defaultValue={CategoryName.DECORATIONS_CATEGORY}\n            value={asset.category}\n            disabled={hasGroundCategory}\n          />\n          <Radio checked={hasGroundCategory} label={t('asset_pack.edit_asset.ground.label')} onClick={this.handleToggleGround} />\n          <TagField\n            label={t('asset_pack.edit_asset.tags.label')}\n            placeholder={t('asset_pack.edit_asset.tags.placeholder')}\n            onChange={this.handleTagChange}\n            value={asset.tags || []}\n            error={!!errors.tags}\n            message={errors.tags}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}