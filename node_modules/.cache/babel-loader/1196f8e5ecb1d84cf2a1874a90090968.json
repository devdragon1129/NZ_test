{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(tileSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleFetchTilesRequest);\n\nimport { config } from 'config';\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { Atlas } from 'decentraland-ui';\nimport { FETCH_TILES_REQUEST, fetchTilesSuccess, fetchTilesFailure } from './actions';\nexport var MARKETPLACE_URL = config.get('MARKETPLACE_URL', '');\nexport function tileSaga() {\n  return _regeneratorRuntime.wrap(function tileSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery(FETCH_TILES_REQUEST, handleFetchTilesRequest);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction handleFetchTilesRequest(_action) {\n  var tiles;\n  return _regeneratorRuntime.wrap(function handleFetchTilesRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(function () {\n            return Atlas.fetchTiles(MARKETPLACE_URL + '/tiles');\n          });\n\n        case 3:\n          tiles = _context2.sent;\n          _context2.next = 6;\n          return put(fetchTilesSuccess(tiles));\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put(fetchTilesFailure(_context2.t0.message));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/tile/sagas.ts"],"names":["tileSaga","handleFetchTilesRequest","config","takeEvery","call","put","Atlas","FETCH_TILES_REQUEST","fetchTilesSuccess","fetchTilesFailure","MARKETPLACE_URL","get","_action","fetchTiles","tiles","message"],"mappings":";;oDAOiBA,Q;qDAIPC,uB;;AAXV,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,KAAT,QAAiC,iBAAjC;AACA,SAASC,mBAAT,EAAuDC,iBAAvD,EAA0EC,iBAA1E,QAAmG,WAAnG;AAEA,OAAO,IAAMC,eAAe,GAAGR,MAAM,CAACS,GAAP,CAAW,iBAAX,EAA8B,EAA9B,CAAxB;AAEP,OAAO,SAAUX,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMG,SAAS,CAACI,mBAAD,EAAsBN,uBAAtB,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIP,SAAUA,uBAAV,CAAkCW,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE6C,iBAAMR,IAAI,CAAC;AAAA,mBAAME,KAAK,CAACO,UAAN,CAAiBH,eAAe,GAAG,QAAnC,CAAN;AAAA,WAAD,CAAV;;AAF7C;AAEUI,UAAAA,KAFV;AAAA;AAGI,iBAAMT,GAAG,CAACG,iBAAiB,CAACM,KAAD,CAAlB,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKI,iBAAMT,GAAG,CAACI,iBAAiB,CAAC,aAAMM,OAAP,CAAlB,CAAT;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { config } from 'config'\nimport { takeEvery, call, put } from 'redux-saga/effects'\nimport { Atlas, AtlasTile } from 'decentraland-ui'\nimport { FETCH_TILES_REQUEST, FetchTilesRequestAction, fetchTilesSuccess, fetchTilesFailure } from './actions'\n\nexport const MARKETPLACE_URL = config.get('MARKETPLACE_URL', '')\n\nexport function* tileSaga() {\n  yield takeEvery(FETCH_TILES_REQUEST, handleFetchTilesRequest)\n}\n\nfunction* handleFetchTilesRequest(_action: FetchTilesRequestAction) {\n  try {\n    const tiles: Record<string, AtlasTile> = yield call(() => Atlas.fetchTiles(MARKETPLACE_URL + '/tiles'))\n    yield put(fetchTilesSuccess(tiles))\n  } catch (error) {\n    yield put(fetchTilesFailure(error.message))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}