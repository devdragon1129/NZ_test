{"ast":null,"code":"'use strict';\n\nvar pull = require('pull-stream/pull');\n\nvar values = require('pull-stream/sources/values');\n\nvar filter = require('pull-stream/throughs/filter');\n\nvar map = require('pull-stream/throughs/map');\n\nvar cat = require('pull-cat'); // Logic to export a unixfs directory.\n\n\nmodule.exports = dirExporter;\n\nfunction dirExporter(cid, node, name, path, pathRest, resolve, size, dag, parent, depth, options) {\n  var accepts = pathRest[0];\n  var dir = {\n    name: name,\n    depth: depth,\n    path: path,\n    multihash: cid.buffer,\n    size: node.size,\n    type: 'dir'\n  }; // we are at the max depth so no need to descend into children\n\n  if (options.maxDepth && options.maxDepth <= depth) {\n    return values([dir]);\n  }\n\n  var streams = [pull(values(node.links), filter(function (item) {\n    return accepts === undefined || item.name === accepts;\n  }), map(function (link) {\n    return {\n      depth: depth + 1,\n      size: link.size,\n      name: link.name,\n      path: path + '/' + link.name,\n      multihash: link.cid.buffer,\n      linkName: link.name,\n      pathRest: pathRest.slice(1),\n      type: 'dir'\n    };\n  }), resolve)]; // place dir before if not specifying subtree\n\n  if (!pathRest.length || options.fullPath) {\n    streams.unshift(values([dir]));\n  }\n\n  return cat(streams);\n}","map":null,"metadata":{},"sourceType":"script"}