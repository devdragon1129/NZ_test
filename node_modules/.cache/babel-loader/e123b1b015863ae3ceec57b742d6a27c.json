{"ast":null,"code":"import _slicedToArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/opt/work/NZ_test/src/components/CollectionDetailPage/CollectionPublishButton/CollectionPublishButton.tsx\";\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Network } from '@dcl/schemas';\nimport { NetworkButton } from 'decentraland-dapps/dist/containers';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { Button, Popup } from 'decentraland-ui';\nimport { hasAuthorization } from 'decentraland-dapps/dist/modules/authorization/utils';\nimport { ContractName } from 'decentraland-transactions';\nimport { AuthorizationModal } from 'components/AuthorizationModal';\nimport { MAX_ITEMS } from 'modules/collection/constants';\nimport { isComplete } from 'modules/item/utils';\nimport { SyncStatus } from 'modules/item/types';\nimport { buildManaAuthorization } from 'lib/mana';\nimport UnderReview from './UnderReview';\n\nvar CollectionPublishButton = function CollectionPublishButton(props) {\n  var wallet = props.wallet,\n      collection = props.collection,\n      items = props.items,\n      authorizations = props.authorizations,\n      status = props.status,\n      hasPendingCuration = props.hasPendingCuration,\n      onPublish = props.onPublish,\n      onPush = props.onPush,\n      onInit = props.onInit;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuthModalOpen = _useState2[0],\n      setIsAuthModalOpen = _useState2[1];\n\n  useEffect(function () {\n    onInit();\n  }, []);\n  var hasExceededMaxItemsLimit = items.length > MAX_ITEMS;\n  var isPublishDisabled = useMemo(function () {\n    return items.length === 0 || !items.every(isComplete) || hasExceededMaxItemsLimit;\n  }, [items, hasExceededMaxItemsLimit]);\n\n  var getAuthorization = function getAuthorization() {\n    return buildManaAuthorization(wallet.address, wallet.networks.MATIC.chainId, ContractName.CollectionManager);\n  };\n\n  var handlePublish = function handlePublish() {\n    var hasAuth = hasAuthorization(authorizations, getAuthorization());\n    if (hasAuth) onPublish();\n    setIsAuthModalOpen(!hasAuth);\n  };\n\n  var handleAuthModalClose = function handleAuthModalClose() {\n    setIsAuthModalOpen(false);\n  };\n\n  var button;\n\n  if (collection.isPublished) {\n    if (collection.isApproved) {\n      if (hasPendingCuration) {\n        button = /*#__PURE__*/React.createElement(UnderReview, {\n          type: \"push\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 18\n          }\n        });\n      } else if (status === SyncStatus.UNSYNCED) {\n        button = /*#__PURE__*/React.createElement(Button, {\n          primary: true,\n          compact: true,\n          onClick: onPush,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }\n        }, t('collection_detail_page.push_changes'));\n      } else {\n        button = /*#__PURE__*/React.createElement(Button, {\n          secondary: true,\n          compact: true,\n          disabled: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        }, t('global.published'));\n      }\n    } else {\n      button = /*#__PURE__*/React.createElement(UnderReview, {\n        type: \"publish\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }\n      });\n    }\n  } else {\n    var publishButton = /*#__PURE__*/React.createElement(NetworkButton, {\n      disabled: isPublishDisabled,\n      primary: true,\n      compact: true,\n      onClick: handlePublish,\n      network: Network.MATIC,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, t('global.publish'));\n\n    if (isPublishDisabled) {\n      var reason;\n\n      if (items.length > MAX_ITEMS) {\n        reason = t('collection_detail_page.publish_reason_max_items', {\n          maxItems: MAX_ITEMS\n        });\n      } else if (items.length === 0) {\n        reason = t('collection_detail_page.publish_reason_no_items');\n      } else {\n        reason = t('collection_detail_page.publish_reason_items_not_complete');\n      }\n\n      button = /*#__PURE__*/React.createElement(Popup, {\n        content: reason,\n        position: \"top center\",\n        trigger: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"popup-button\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 20\n          }\n        }, publishButton),\n        hideOnScroll: true,\n        on: \"hover\",\n        inverted: true,\n        flowing: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      });\n    } else {\n      button = publishButton;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, button, /*#__PURE__*/React.createElement(AuthorizationModal, {\n    open: isAuthModalOpen,\n    authorization: getAuthorization(),\n    onProceed: handlePublish,\n    onCancel: handleAuthModalClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default React.memo(CollectionPublishButton);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/CollectionDetailPage/CollectionPublishButton/CollectionPublishButton.tsx"],"names":["React","useEffect","useMemo","useState","Network","NetworkButton","t","Button","Popup","hasAuthorization","ContractName","AuthorizationModal","MAX_ITEMS","isComplete","SyncStatus","buildManaAuthorization","UnderReview","CollectionPublishButton","props","wallet","collection","items","authorizations","status","hasPendingCuration","onPublish","onPush","onInit","isAuthModalOpen","setIsAuthModalOpen","hasExceededMaxItemsLimit","length","isPublishDisabled","every","getAuthorization","address","networks","MATIC","chainId","CollectionManager","handlePublish","hasAuth","handleAuthModalClose","button","isPublished","isApproved","UNSYNCED","publishButton","reason","maxItems","memo"],"mappings":"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","sourcesContent":["import React, { ReactNode, useEffect, useMemo, useState } from 'react'\nimport { Network } from '@dcl/schemas'\nimport { NetworkButton } from 'decentraland-dapps/dist/containers'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { Button, Popup } from 'decentraland-ui'\nimport { Authorization } from 'decentraland-dapps/dist/modules/authorization/types'\nimport { hasAuthorization } from 'decentraland-dapps/dist/modules/authorization/utils'\nimport { ContractName } from 'decentraland-transactions'\nimport { AuthorizationModal } from 'components/AuthorizationModal'\nimport { MAX_ITEMS } from 'modules/collection/constants'\nimport { isComplete } from 'modules/item/utils'\nimport { SyncStatus } from 'modules/item/types'\nimport { buildManaAuthorization } from 'lib/mana'\nimport { Props } from './CollectionPublishButton.types'\nimport UnderReview from './UnderReview'\n\nconst CollectionPublishButton = (props: Props) => {\n  const { wallet, collection, items, authorizations, status, hasPendingCuration, onPublish, onPush, onInit } = props\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false)\n\n  useEffect(() => {\n    onInit()\n  }, [])\n\n  const hasExceededMaxItemsLimit = items.length > MAX_ITEMS\n  const isPublishDisabled = useMemo(() => items.length === 0 || !items.every(isComplete) || hasExceededMaxItemsLimit, [\n    items,\n    hasExceededMaxItemsLimit\n  ])\n\n  const getAuthorization = (): Authorization => {\n    return buildManaAuthorization(wallet.address, wallet.networks.MATIC.chainId, ContractName.CollectionManager)\n  }\n\n  const handlePublish = () => {\n    const hasAuth = hasAuthorization(authorizations, getAuthorization())\n    if (hasAuth) onPublish()\n    setIsAuthModalOpen(!hasAuth)\n  }\n\n  const handleAuthModalClose = () => {\n    setIsAuthModalOpen(false)\n  }\n\n  let button: ReactNode\n\n  if (collection.isPublished) {\n    if (collection.isApproved) {\n      if (hasPendingCuration) {\n        button = <UnderReview type=\"push\" />\n      } else if (status === SyncStatus.UNSYNCED) {\n        button = (\n          <Button primary compact onClick={onPush}>\n            {t('collection_detail_page.push_changes')}\n          </Button>\n        )\n      } else {\n        button = (\n          <Button secondary compact disabled={true}>\n            {t('global.published')}\n          </Button>\n        )\n      }\n    } else {\n      button = <UnderReview type=\"publish\" />\n    }\n  } else {\n    const publishButton = (\n      <NetworkButton disabled={isPublishDisabled} primary compact onClick={handlePublish} network={Network.MATIC}>\n        {t('global.publish')}\n      </NetworkButton>\n    )\n\n    if (isPublishDisabled) {\n      let reason: string\n\n      if (items.length > MAX_ITEMS) {\n        reason = t('collection_detail_page.publish_reason_max_items', { maxItems: MAX_ITEMS })\n      } else if (items.length === 0) {\n        reason = t('collection_detail_page.publish_reason_no_items')\n      } else {\n        reason = t('collection_detail_page.publish_reason_items_not_complete')\n      }\n\n      button = (\n        <Popup\n          content={reason}\n          position=\"top center\"\n          trigger={<div className=\"popup-button\">{publishButton}</div>}\n          hideOnScroll={true}\n          on=\"hover\"\n          inverted\n          flowing={true}\n        />\n      )\n    } else {\n      button = publishButton\n    }\n  }\n\n  return (\n    <>\n      {button}\n      <AuthorizationModal\n        open={isAuthModalOpen}\n        authorization={getAuthorization()}\n        onProceed={handlePublish}\n        onCancel={handleAuthModalClose}\n      />\n    </>\n  )\n}\n\nexport default React.memo(CollectionPublishButton)\n"]},"metadata":{},"sourceType":"module"}