{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _reactComponentRef = require(\"@fluentui/react-component-ref\");\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n/**\n * A modal has a dimmer.\n */\n\n\nfunction ModalDimmer(props) {\n  var blurring = props.blurring,\n      children = props.children,\n      className = props.className,\n      centered = props.centered,\n      content = props.content,\n      inverted = props.inverted,\n      mountNode = props.mountNode,\n      scrolling = props.scrolling;\n\n  var ref = _react.default.useRef();\n\n  var classes = (0, _clsx.default)('ui', (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(!centered, 'top aligned'), 'page modals dimmer transition visible active', className);\n  var bodyClasses = (0, _clsx.default)('dimmable dimmed', (0, _lib.useKeyOnly)(blurring, 'blurring'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'));\n  var rest = (0, _lib.getUnhandledProps)(ModalDimmer, props);\n  var ElementType = (0, _lib.getElementType)(ModalDimmer, props);\n  (0, _lib.useClassNamesOnNode)(mountNode, bodyClasses);\n\n  _react.default.useEffect(function () {\n    if (ref.current && ref.current.style) {\n      ref.current.style.setProperty('display', 'flex', 'important');\n    }\n  }, []);\n\n  return /*#__PURE__*/_react.default.createElement(_reactComponentRef.Ref, {\n    innerRef: ref\n  }, /*#__PURE__*/_react.default.createElement(ElementType, (0, _extends2.default)({}, rest, {\n    className: classes\n  }), _lib.childrenUtils.isNil(children) ? content : children));\n}\n\nModalDimmer.handledProps = [\"as\", \"blurring\", \"centered\", \"children\", \"className\", \"content\", \"inverted\", \"mountNode\", \"scrolling\"];\nModalDimmer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _propTypes.default.elementType,\n\n  /** A dimmer can be blurred. */\n  blurring: _propTypes.default.bool,\n\n  /** Primary content. */\n  children: _propTypes.default.node,\n\n  /** Additional classes. */\n  className: _propTypes.default.string,\n\n  /** A dimmer can center its contents in the viewport. */\n  centered: _propTypes.default.bool,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A dimmer can be inverted. */\n  inverted: _propTypes.default.bool,\n\n  /** The node where the modal should mount. Defaults to document.body. */\n  mountNode: _propTypes.default.any,\n\n  /** A dimmer can make body scrollable. */\n  scrolling: _propTypes.default.bool\n} : {};\nModalDimmer.create = (0, _lib.createShorthandFactory)(ModalDimmer, function (content) {\n  return {\n    content: content\n  };\n});\nvar _default = ModalDimmer;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}