{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { AxesViewer } from \"../Debug/axesViewer\";\nimport { Vector3 } from \"../Maths/math.vector\";\nimport { Axis } from '../Maths/math.axis';\n/**\r\n     * The BoneAxesViewer will attach 3 axes to a specific bone of a specific mesh\r\n     * @see demo here: https://www.babylonjs-playground.com/#0DE8F4#8\r\n     */\n\nvar BoneAxesViewer =\n/** @class */\nfunction (_super) {\n  __extends(BoneAxesViewer, _super);\n  /**\r\n   * Creates a new BoneAxesViewer\r\n   * @param scene defines the hosting scene\r\n   * @param bone defines the target bone\r\n   * @param mesh defines the target mesh\r\n   * @param scaleLines defines a scaling factor for line length (1 by default)\r\n   */\n\n\n  function BoneAxesViewer(scene, bone, mesh, scaleLines) {\n    if (scaleLines === void 0) {\n      scaleLines = 1;\n    }\n\n    var _this = _super.call(this, scene, scaleLines) || this;\n    /** Gets current position */\n\n\n    _this.pos = Vector3.Zero();\n    /** Gets direction of X axis */\n\n    _this.xaxis = Vector3.Zero();\n    /** Gets direction of Y axis */\n\n    _this.yaxis = Vector3.Zero();\n    /** Gets direction of Z axis */\n\n    _this.zaxis = Vector3.Zero();\n    _this.mesh = mesh;\n    _this.bone = bone;\n    return _this;\n  }\n  /**\r\n   * Force the viewer to update\r\n   */\n\n\n  BoneAxesViewer.prototype.update = function () {\n    if (!this.mesh || !this.bone) {\n      return;\n    }\n\n    var bone = this.bone;\n\n    bone._markAsDirtyAndCompose();\n\n    bone.getAbsolutePositionToRef(this.mesh, this.pos);\n    bone.getDirectionToRef(Axis.X, this.mesh, this.xaxis);\n    bone.getDirectionToRef(Axis.Y, this.mesh, this.yaxis);\n    bone.getDirectionToRef(Axis.Z, this.mesh, this.zaxis);\n\n    _super.prototype.update.call(this, this.pos, this.xaxis, this.yaxis, this.zaxis);\n  };\n  /** Releases resources */\n\n\n  BoneAxesViewer.prototype.dispose = function () {\n    if (this.mesh) {\n      this.mesh = null;\n      this.bone = null;\n\n      _super.prototype.dispose.call(this);\n    }\n  };\n\n  return BoneAxesViewer;\n}(AxesViewer);\n\nexport { BoneAxesViewer };","map":null,"metadata":{},"sourceType":"module"}