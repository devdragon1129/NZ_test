{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(syncSaga);\n\nimport { takeLatest, select, put, call, takeEvery, take } from 'redux-saga/effects';\nimport { getData as getProjects, getCurrentProject } from 'modules/project/selectors';\nimport { getData as getScenes } from 'modules/scene/selectors';\nimport { CREATE_PROJECT, SET_PROJECT, DELETE_PROJECT, EDIT_PROJECT_THUMBNAIL } from 'modules/project/actions';\nimport { PROVISION_SCENE } from 'modules/scene/actions';\nimport { SAVE_PROJECT_REQUEST, saveProjectRequest, saveProjectSuccess, saveProjectFailure, sync, SYNC, RETRY_SYNC, deleteProjectSuccess, deleteProjectFailure, DELETE_PROJECT_REQUEST, deleteProjectRequest, SAVE_PROJECT_SUCCESS } from './actions';\nimport { getLocalProjectIds, getFailedProjectIds } from './selectors';\nimport { forEach, saveProject, saveThumbnail } from './utils';\nimport { isLoggedIn } from 'modules/identity/selectors';\nimport { LOGIN_SUCCESS } from 'modules/identity/actions';\nexport function syncSaga(builder) {\n  var _marked, _marked2, _marked3, _marked4, _marked5, _marked6, _marked7, _marked8, _marked9, _marked10, handleLoginSuccess, handleSync, handleRetrySync, handleSaveProjectRequest, handleSaveProjectSuccess, handleDeleteProjectRequest, handleCreateProject, handleSetProject, handleDeleteProject, handleProvisionScene;\n\n  return _regeneratorRuntime.wrap(function syncSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          handleProvisionScene = function _handleProvisionScene(action) {\n            var isLoggedInResult, project;\n            return _regeneratorRuntime.wrap(function handleProvisionScene$(_context10) {\n              while (1) {\n                switch (_context10.prev = _context10.next) {\n                  case 0:\n                    if (!action.payload.init) {\n                      _context10.next = 2;\n                      break;\n                    }\n\n                    return _context10.abrupt(\"return\");\n\n                  case 2:\n                    _context10.next = 4;\n                    return select(isLoggedIn);\n\n                  case 4:\n                    isLoggedInResult = _context10.sent;\n\n                    if (!isLoggedInResult) {\n                      _context10.next = 12;\n                      break;\n                    }\n\n                    _context10.next = 8;\n                    return select(getCurrentProject);\n\n                  case 8:\n                    project = _context10.sent;\n\n                    if (!project) {\n                      _context10.next = 12;\n                      break;\n                    }\n\n                    _context10.next = 12;\n                    return put(saveProjectRequest(project));\n\n                  case 12:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }\n            }, _marked10);\n          };\n\n          handleDeleteProject = function _handleDeleteProject(action) {\n            var isLoggedInResult;\n            return _regeneratorRuntime.wrap(function handleDeleteProject$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return select(isLoggedIn);\n\n                  case 2:\n                    isLoggedInResult = _context9.sent;\n\n                    if (!isLoggedInResult) {\n                      _context9.next = 6;\n                      break;\n                    }\n\n                    _context9.next = 6;\n                    return put(deleteProjectRequest(action.payload.project.id));\n\n                  case 6:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _marked9);\n          };\n\n          handleSetProject = function _handleSetProject(action) {\n            var isLoggedInResult;\n            return _regeneratorRuntime.wrap(function handleSetProject$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return select(isLoggedIn);\n\n                  case 2:\n                    isLoggedInResult = _context8.sent;\n\n                    if (!isLoggedInResult) {\n                      _context8.next = 6;\n                      break;\n                    }\n\n                    _context8.next = 6;\n                    return put(saveProjectRequest(action.payload.project));\n\n                  case 6:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, _marked8);\n          };\n\n          handleCreateProject = function _handleCreateProject(action) {\n            var isLoggedInResult;\n            return _regeneratorRuntime.wrap(function handleCreateProject$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return select(isLoggedIn);\n\n                  case 2:\n                    isLoggedInResult = _context7.sent;\n\n                    if (!isLoggedInResult) {\n                      _context7.next = 6;\n                      break;\n                    }\n\n                    _context7.next = 6;\n                    return put(saveProjectRequest(action.payload.project));\n\n                  case 6:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _marked7);\n          };\n\n          handleDeleteProjectRequest = function _handleDeleteProjectR(action) {\n            var id;\n            return _regeneratorRuntime.wrap(function handleDeleteProjectRequest$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    id = action.payload.id;\n                    _context6.prev = 1;\n                    _context6.next = 4;\n                    return call(function () {\n                      return builder.deleteProject(id);\n                    });\n\n                  case 4:\n                    _context6.next = 6;\n                    return put(deleteProjectSuccess(id));\n\n                  case 6:\n                    _context6.next = 12;\n                    break;\n\n                  case 8:\n                    _context6.prev = 8;\n                    _context6.t0 = _context6[\"catch\"](1);\n                    _context6.next = 12;\n                    return put(deleteProjectFailure(id, _context6.t0));\n\n                  case 12:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _marked6, null, [[1, 8]]);\n          };\n\n          handleSaveProjectSuccess = function _handleSaveProjectSuc(action) {\n            var projects, project, _action2;\n\n            return _regeneratorRuntime.wrap(function handleSaveProjectSuccess$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return select(getProjects);\n\n                  case 2:\n                    projects = _context5.sent;\n                    project = projects[action.payload.project.id];\n\n                    if (project) {\n                      _context5.next = 6;\n                      break;\n                    }\n\n                    return _context5.abrupt(\"return\");\n\n                  case 6:\n                    if (project.thumbnail) {\n                      _context5.next = 11;\n                      break;\n                    }\n\n                    _context5.next = 9;\n                    return take(EDIT_PROJECT_THUMBNAIL);\n\n                  case 9:\n                    _action2 = _context5.sent;\n                    project = _objectSpread({}, project, {\n                      thumbnail: _action2.payload.thumbnail\n                    });\n\n                  case 11:\n                    try {\n                      saveThumbnail(project.id, project, builder);\n                    } catch (e) {\n                      console.error(e);\n                    }\n\n                  case 12:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _marked5);\n          };\n\n          handleSaveProjectRequest = function _handleSaveProjectReq(action) {\n            var project, debounce, scenes, scene;\n            return _regeneratorRuntime.wrap(function handleSaveProjectRequest$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    project = action.payload.project;\n                    debounce = action.payload.debounce;\n                    _context4.next = 4;\n                    return select(getScenes);\n\n                  case 4:\n                    scenes = _context4.sent;\n                    scene = scenes[project.sceneId];\n                    _context4.prev = 6;\n                    _context4.next = 9;\n                    return call(function () {\n                      return saveProject(project.id, project, scene, builder, debounce);\n                    });\n\n                  case 9:\n                    _context4.next = 11;\n                    return put(saveProjectSuccess(project));\n\n                  case 11:\n                    _context4.next = 17;\n                    break;\n\n                  case 13:\n                    _context4.prev = 13;\n                    _context4.t0 = _context4[\"catch\"](6);\n                    _context4.next = 17;\n                    return put(saveProjectFailure(project, _context4.t0));\n\n                  case 17:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _marked4, null, [[6, 13]]);\n          };\n\n          handleRetrySync = function _handleRetrySync(_action) {\n            var failedProjectIds, projects;\n            return _regeneratorRuntime.wrap(function handleRetrySync$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return select(getFailedProjectIds);\n\n                  case 2:\n                    failedProjectIds = _context3.sent;\n                    _context3.next = 5;\n                    return select(getProjects);\n\n                  case 5:\n                    projects = _context3.sent;\n                    _context3.next = 8;\n                    return forEach(failedProjectIds, projects, function (project) {\n                      return saveProjectRequest(project);\n                    });\n\n                  case 8:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _marked3);\n          };\n\n          handleSync = function _handleSync(_action) {\n            var localProjectIds, projects;\n            return _regeneratorRuntime.wrap(function handleSync$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return select(getLocalProjectIds);\n\n                  case 2:\n                    localProjectIds = _context2.sent;\n                    _context2.next = 5;\n                    return select(getProjects);\n\n                  case 5:\n                    projects = _context2.sent;\n                    _context2.next = 8;\n                    return forEach(localProjectIds, projects, function (project) {\n                      return saveProjectRequest(project);\n                    });\n\n                  case 8:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _marked2);\n          };\n\n          handleLoginSuccess = function _handleLoginSuccess(_action) {\n            return _regeneratorRuntime.wrap(function handleLoginSuccess$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return put(sync());\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _marked);\n          };\n\n          _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleLoginSuccess), _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleSync), _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleRetrySync), _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleSaveProjectRequest), _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleSaveProjectSuccess), _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(handleDeleteProjectRequest), _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(handleCreateProject), _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(handleSetProject), _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(handleDeleteProject), _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(handleProvisionScene);\n          _context11.next = 13;\n          return takeLatest(LOGIN_SUCCESS, handleLoginSuccess);\n\n        case 13:\n          _context11.next = 15;\n          return takeLatest(SYNC, handleSync);\n\n        case 15:\n          _context11.next = 17;\n          return takeLatest(RETRY_SYNC, handleRetrySync);\n\n        case 17:\n          _context11.next = 19;\n          return takeEvery(SAVE_PROJECT_REQUEST, handleSaveProjectRequest);\n\n        case 19:\n          _context11.next = 21;\n          return takeLatest(DELETE_PROJECT_REQUEST, handleDeleteProjectRequest);\n\n        case 21:\n          _context11.next = 23;\n          return takeLatest(CREATE_PROJECT, handleCreateProject);\n\n        case 23:\n          _context11.next = 25;\n          return takeLatest(SET_PROJECT, handleSetProject);\n\n        case 25:\n          _context11.next = 27;\n          return takeLatest(DELETE_PROJECT, handleDeleteProject);\n\n        case 27:\n          _context11.next = 29;\n          return takeLatest(PROVISION_SCENE, handleProvisionScene);\n\n        case 29:\n          _context11.next = 31;\n          return takeLatest(SAVE_PROJECT_SUCCESS, handleSaveProjectSuccess);\n\n        case 31:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/sync/sagas.ts"],"names":["syncSaga","takeLatest","select","put","call","takeEvery","take","getData","getProjects","getCurrentProject","getScenes","CREATE_PROJECT","SET_PROJECT","DELETE_PROJECT","EDIT_PROJECT_THUMBNAIL","PROVISION_SCENE","SAVE_PROJECT_REQUEST","saveProjectRequest","saveProjectSuccess","saveProjectFailure","sync","SYNC","RETRY_SYNC","deleteProjectSuccess","deleteProjectFailure","DELETE_PROJECT_REQUEST","deleteProjectRequest","SAVE_PROJECT_SUCCESS","getLocalProjectIds","getFailedProjectIds","forEach","saveProject","saveThumbnail","isLoggedIn","LOGIN_SUCCESS","builder","handleLoginSuccess","handleSync","handleRetrySync","handleSaveProjectRequest","handleSaveProjectSuccess","handleDeleteProjectRequest","handleCreateProject","handleSetProject","handleDeleteProject","handleProvisionScene","action","payload","init","isLoggedInResult","project","id","deleteProject","projects","thumbnail","e","console","error","debounce","scenes","scene","sceneId","_action","failedProjectIds","localProjectIds"],"mappings":"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","sourcesContent":["import { takeLatest, select, put, call, takeEvery, take } from 'redux-saga/effects'\nimport { DataByKey } from 'decentraland-dapps/dist/lib/types'\n\nimport { getData as getProjects, getCurrentProject } from 'modules/project/selectors'\nimport { getData as getScenes } from 'modules/scene/selectors'\nimport { Project } from 'modules/project/types'\nimport {\n  CREATE_PROJECT,\n  CreateProjectAction,\n  SET_PROJECT,\n  SetProjectAction,\n  DELETE_PROJECT,\n  DeleteProjectAction,\n  EDIT_PROJECT_THUMBNAIL,\n  EditProjectThumbnailAction\n} from 'modules/project/actions'\nimport { PROVISION_SCENE, ProvisionSceneAction } from 'modules/scene/actions'\n\nimport {\n  SAVE_PROJECT_REQUEST,\n  saveProjectRequest,\n  SaveProjectRequestAction,\n  saveProjectSuccess,\n  saveProjectFailure,\n  sync,\n  SyncAction,\n  SYNC,\n  RETRY_SYNC,\n  RetrySyncAction,\n  DeleteProjectRequestAction,\n  deleteProjectSuccess,\n  deleteProjectFailure,\n  DELETE_PROJECT_REQUEST,\n  deleteProjectRequest,\n  SAVE_PROJECT_SUCCESS,\n  SaveProjectSuccessAction\n} from './actions'\nimport { getLocalProjectIds, getFailedProjectIds } from './selectors'\nimport { forEach, saveProject, saveThumbnail } from './utils'\nimport { BuilderAPI } from 'lib/api/builder'\nimport { isLoggedIn } from 'modules/identity/selectors'\nimport { LOGIN_SUCCESS, LoginSuccessAction } from 'modules/identity/actions'\n\nexport function* syncSaga(builder: BuilderAPI) {\n  yield takeLatest(LOGIN_SUCCESS, handleLoginSuccess)\n  yield takeLatest(SYNC, handleSync)\n  yield takeLatest(RETRY_SYNC, handleRetrySync)\n  yield takeEvery(SAVE_PROJECT_REQUEST, handleSaveProjectRequest)\n  yield takeLatest(DELETE_PROJECT_REQUEST, handleDeleteProjectRequest)\n  yield takeLatest(CREATE_PROJECT, handleCreateProject)\n  yield takeLatest(SET_PROJECT, handleSetProject)\n  yield takeLatest(DELETE_PROJECT, handleDeleteProject)\n  yield takeLatest(PROVISION_SCENE, handleProvisionScene)\n  yield takeLatest(SAVE_PROJECT_SUCCESS, handleSaveProjectSuccess)\n\n  function* handleLoginSuccess(_action: LoginSuccessAction) {\n    yield put(sync())\n  }\n\n  function* handleSync(_action: SyncAction) {\n    // sync projects\n    const localProjectIds: string[] = yield select(getLocalProjectIds)\n    const projects: DataByKey<Project> = yield select(getProjects)\n    yield forEach<Project>(localProjectIds, projects, project => saveProjectRequest(project))\n  }\n\n  function* handleRetrySync(_action: RetrySyncAction) {\n    // retry projects\n    const failedProjectIds: string[] = yield select(getFailedProjectIds)\n    const projects: DataByKey<Project> = yield select(getProjects)\n    yield forEach<Project>(failedProjectIds, projects, project => saveProjectRequest(project))\n  }\n\n  function* handleSaveProjectRequest(action: SaveProjectRequestAction) {\n    const project = action.payload.project\n    const debounce = action.payload.debounce\n    const scenes: ReturnType<typeof getScenes> = yield select(getScenes)\n    const scene = scenes[project.sceneId]\n\n    try {\n      yield call(() => saveProject(project.id, project, scene, builder, debounce))\n      yield put(saveProjectSuccess(project))\n    } catch (e) {\n      yield put(saveProjectFailure(project, e))\n    }\n  }\n\n  function* handleSaveProjectSuccess(action: SaveProjectSuccessAction) {\n    const projects: ReturnType<typeof getProjects> = yield select(getProjects)\n    let project = projects[action.payload.project.id]\n    if (!project) return\n    if (!project.thumbnail) {\n      const action: EditProjectThumbnailAction = yield take(EDIT_PROJECT_THUMBNAIL)\n      project = {\n        ...project,\n        thumbnail: action.payload.thumbnail\n      }\n    }\n    try {\n      saveThumbnail(project.id, project, builder)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  function* handleDeleteProjectRequest(action: DeleteProjectRequestAction) {\n    const { id } = action.payload\n    try {\n      yield call(() => builder.deleteProject(id))\n      yield put(deleteProjectSuccess(id))\n    } catch (e) {\n      yield put(deleteProjectFailure(id, e))\n    }\n  }\n\n  function* handleCreateProject(action: CreateProjectAction) {\n    const isLoggedInResult: boolean = yield select(isLoggedIn)\n    if (isLoggedInResult) {\n      yield put(saveProjectRequest(action.payload.project))\n    }\n  }\n\n  function* handleSetProject(action: SetProjectAction) {\n    const isLoggedInResult: boolean = yield select(isLoggedIn)\n    if (isLoggedInResult) {\n      yield put(saveProjectRequest(action.payload.project))\n    }\n  }\n\n  function* handleDeleteProject(action: DeleteProjectAction) {\n    const isLoggedInResult: boolean = yield select(isLoggedIn)\n    if (isLoggedInResult) {\n      yield put(deleteProjectRequest(action.payload.project.id))\n    }\n  }\n\n  function* handleProvisionScene(action: ProvisionSceneAction) {\n    if (action.payload.init) return\n    const isLoggedInResult: boolean = yield select(isLoggedIn)\n    if (isLoggedInResult) {\n      const project: Project | null = yield select(getCurrentProject)\n      if (project) {\n        yield put(saveProjectRequest(project))\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}