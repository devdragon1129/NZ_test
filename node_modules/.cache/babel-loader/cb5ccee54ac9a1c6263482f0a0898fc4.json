{"ast":null,"code":"import { Tools } from \"../../../Misc/tools\";\nimport { SceneComponentConstants } from \"../../../sceneComponent\";\n/**\r\n * Defines the Procedural Texture scene component responsible to manage any Procedural Texture\r\n * in a given scene.\r\n */\n\nvar ProceduralTextureSceneComponent =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of the component for the given scene\r\n   * @param scene Defines the scene to register the component in\r\n   */\n  function ProceduralTextureSceneComponent(scene) {\n    /**\r\n     * The component name helpfull to identify the component in the list of scene components.\r\n     */\n    this.name = SceneComponentConstants.NAME_PROCEDURALTEXTURE;\n    this.scene = scene;\n    this.scene.proceduralTextures = new Array();\n  }\n  /**\r\n   * Registers the component in a given scene\r\n   */\n\n\n  ProceduralTextureSceneComponent.prototype.register = function () {\n    this.scene._beforeClearStage.registerStep(SceneComponentConstants.STEP_BEFORECLEAR_PROCEDURALTEXTURE, this, this._beforeClear);\n  };\n  /**\r\n   * Rebuilds the elements related to this component in case of\r\n   * context lost for instance.\r\n   */\n\n\n  ProceduralTextureSceneComponent.prototype.rebuild = function () {// Nothing to do here.\n  };\n  /**\r\n   * Disposes the component and the associated ressources.\r\n   */\n\n\n  ProceduralTextureSceneComponent.prototype.dispose = function () {// Nothing to do here.\n  };\n\n  ProceduralTextureSceneComponent.prototype._beforeClear = function () {\n    if (this.scene.proceduralTexturesEnabled) {\n      Tools.StartPerformanceCounter(\"Procedural textures\", this.scene.proceduralTextures.length > 0);\n\n      for (var proceduralIndex = 0; proceduralIndex < this.scene.proceduralTextures.length; proceduralIndex++) {\n        var proceduralTexture = this.scene.proceduralTextures[proceduralIndex];\n\n        if (proceduralTexture._shouldRender()) {\n          proceduralTexture.render();\n        }\n      }\n\n      Tools.EndPerformanceCounter(\"Procedural textures\", this.scene.proceduralTextures.length > 0);\n    }\n  };\n\n  return ProceduralTextureSceneComponent;\n}();\n\nexport { ProceduralTextureSceneComponent };","map":null,"metadata":{},"sourceType":"module"}