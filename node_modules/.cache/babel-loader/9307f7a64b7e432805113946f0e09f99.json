{"ast":null,"code":"import { connect } from 'react-redux';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { rejectCollectionRequest, REJECT_COLLECTION_REQUEST } from 'modules/collection/actions';\nimport { getLoading as getLoadingCollection, hasPendingCurationTransaction } from 'modules/collection/selectors';\nimport { getLoading as getLoadingCuration } from 'modules/curations/collectionCuration/selectors';\nimport { rejectCollectionCurationRequest, REJECT_COLLECTION_CURATION_REQUEST } from 'modules/curations/collectionCuration/actions';\nimport RejectionModal from './RejectionModal';\n\nvar mapState = function mapState(state) {\n  return {\n    isLoading: isLoadingType(getLoadingCollection(state), REJECT_COLLECTION_REQUEST) || isLoadingType(getLoadingCuration(state), REJECT_COLLECTION_CURATION_REQUEST),\n    hasPendingTransaction: hasPendingCurationTransaction(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onReject: function onReject(collection) {\n      return dispatch(rejectCollectionRequest(collection));\n    },\n    onRejectCuration: function onRejectCuration(collection) {\n      return dispatch(rejectCollectionCurationRequest(collection));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(RejectionModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ItemEditorPage/TopPanel/RejectionModal/RejectionModal.container.ts"],"names":["connect","isLoadingType","rejectCollectionRequest","REJECT_COLLECTION_REQUEST","getLoading","getLoadingCollection","hasPendingCurationTransaction","getLoadingCuration","rejectCollectionCurationRequest","REJECT_COLLECTION_CURATION_REQUEST","RejectionModal","mapState","state","isLoading","hasPendingTransaction","mapDispatch","dispatch","onReject","collection","onRejectCuration"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,aAAT,QAA8B,mDAA9B;AACA,SAASC,uBAAT,EAAkCC,yBAAlC,QAAmE,4BAAnE;AACA,SAASC,UAAU,IAAIC,oBAAvB,EAA6CC,6BAA7C,QAAkF,8BAAlF;AACA,SAASF,UAAU,IAAIG,kBAAvB,QAAiD,gDAAjD;AACA,SAASC,+BAAT,EAA0CC,kCAA1C,QAAoF,8CAApF;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,SAAS,EACPZ,aAAa,CAACI,oBAAoB,CAACO,KAAD,CAArB,EAA8BT,yBAA9B,CAAb,IACAF,aAAa,CAACM,kBAAkB,CAACK,KAAD,CAAnB,EAA4BH,kCAA5B,CAHsC;AAIrDK,IAAAA,qBAAqB,EAAER,6BAA6B,CAACM,KAAD;AAJC,GAAtC;AAAA,CAAjB;;AAOA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,QAAQ,EAAE,kBAAAC,UAAU;AAAA,aAAIF,QAAQ,CAACd,uBAAuB,CAACgB,UAAD,CAAxB,CAAZ;AAAA,KAD4C;AAEhEC,IAAAA,gBAAgB,EAAE,0BAAAD,UAAU;AAAA,aAAIF,QAAQ,CAACR,+BAA+B,CAACU,UAAD,CAAhC,CAAZ;AAAA;AAFoC,GAA9C;AAAA,CAApB;;AAKA,eAAelB,OAAO,CAACW,QAAD,EAAWI,WAAX,CAAP,CAA+BL,cAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { RootState } from 'modules/common/types'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { rejectCollectionRequest, REJECT_COLLECTION_REQUEST } from 'modules/collection/actions'\nimport { getLoading as getLoadingCollection, hasPendingCurationTransaction } from 'modules/collection/selectors'\nimport { getLoading as getLoadingCuration } from 'modules/curations/collectionCuration/selectors'\nimport { rejectCollectionCurationRequest, REJECT_COLLECTION_CURATION_REQUEST } from 'modules/curations/collectionCuration/actions'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './RejectionModal.types'\nimport RejectionModal from './RejectionModal'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  isLoading:\n    isLoadingType(getLoadingCollection(state), REJECT_COLLECTION_REQUEST) ||\n    isLoadingType(getLoadingCuration(state), REJECT_COLLECTION_CURATION_REQUEST),\n  hasPendingTransaction: hasPendingCurationTransaction(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onReject: collection => dispatch(rejectCollectionRequest(collection)),\n  onRejectCuration: collection => dispatch(rejectCollectionCurationRequest(collection))\n})\n\nexport default connect(mapState, mapDispatch)(RejectionModal)\n"]},"metadata":{},"sourceType":"module"}