{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { WearableCategory } from '@dcl/schemas';\nimport { NO_CACHE_HEADERS } from 'lib/headers';\nimport { makeContentFile, getCID } from 'modules/deployment/utils';\nimport { ImageType } from './types';\nexport function isDataUrl(url) {\n  return url.startsWith('data:');\n}\nexport function dataURLToBlob(dataUrl) {\n  var arr = dataUrl.split(',');\n  var boxedMime = arr[0].match(/:(.*?);/);\n\n  if (boxedMime) {\n    var bstr = atob(arr[1]);\n    var n = bstr.length;\n    var u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    return new Blob([u8arr], {\n      type: boxedMime[1]\n    });\n  }\n\n  return null;\n}\nexport function objectURLToBlob(_x) {\n  return _objectURLToBlob.apply(this, arguments);\n}\n\nfunction _objectURLToBlob() {\n  _objectURLToBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(objectURL) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", fetch(objectURL, {\n              headers: NO_CACHE_HEADERS\n            }).then(function (res) {\n              return res.blob();\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _objectURLToBlob.apply(this, arguments);\n}\n\nexport function blobToCID(_x2, _x3) {\n  return _blobToCID.apply(this, arguments);\n}\n\nfunction _blobToCID() {\n  _blobToCID = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(blob, path) {\n    var file, cid;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return makeContentFile(path, blob);\n\n          case 2:\n            file = _context2.sent;\n            _context2.next = 5;\n            return getCID([file], false);\n\n          case 5:\n            cid = _context2.sent;\n            return _context2.abrupt(\"return\", cid);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _blobToCID.apply(this, arguments);\n}\n\nexport function isRemoteURL(url) {\n  return url.startsWith('http');\n}\nexport function blobToDataURL(_x4) {\n  return _blobToDataURL.apply(this, arguments);\n}\n/**\n * Converts an image blob of a wearable into a fixed 1024x1024 image encoded as data url.\n * This function also adds some padding according to the category of the wearable.\n *\n * @param blob - The blob of the image.\n * @param category - The category of the wearable.\n */\n\nfunction _blobToDataURL() {\n  _blobToDataURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(blob) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", new Promise(function (resolve) {\n              var reader = new FileReader();\n\n              reader.onload = function (e) {\n                resolve(e.target.result);\n              };\n\n              reader.readAsDataURL(blob);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _blobToDataURL.apply(this, arguments);\n}\n\nexport function convertImageIntoWearableThumbnail(_x5) {\n  return _convertImageIntoWearableThumbnail.apply(this, arguments);\n}\n/**\n * Returns the true type of an image by using the first two bytes of the image data.\n *\n * @param blob - The blob of the image.\n */\n\nfunction _convertImageIntoWearableThumbnail() {\n  _convertImageIntoWearableThumbnail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(blob) {\n    var category,\n        image,\n        promiseOfALoadedImage,\n        padding,\n        canvas,\n        ctx,\n        _args4 = arguments;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            category = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : WearableCategory.EYES;\n            // load blob into image\n            image = new Image();\n            promiseOfALoadedImage = new Promise(function (resolve) {\n              image.onload = function () {\n                return resolve(image);\n              };\n            });\n            _context4.next = 5;\n            return blobToDataURL(blob);\n\n          case 5:\n            image.src = _context4.sent;\n            _context4.next = 8;\n            return promiseOfALoadedImage;\n\n          case 8:\n            padding = 128;\n            _context4.t0 = category;\n            _context4.next = _context4.t0 === WearableCategory.EYEBROWS ? 12 : _context4.t0 === WearableCategory.MOUTH ? 14 : _context4.t0 === WearableCategory.EYES ? 16 : 18;\n            break;\n\n          case 12:\n            padding = 160;\n            return _context4.abrupt(\"break\", 18);\n\n          case 14:\n            padding = 160;\n            return _context4.abrupt(\"break\", 18);\n\n          case 16:\n            padding = 128;\n            return _context4.abrupt(\"break\", 18);\n\n          case 18:\n            // render image into canvas, with a padding from the top. This is to center the textures into the square thumbnail.\n            canvas = document.createElement('canvas');\n            canvas.width = 1024;\n            canvas.height = 1024;\n            canvas.style.visibility = 'hidden';\n            document.body.appendChild(canvas);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(image, 0, padding, canvas.width, canvas.height); // remove canvas\n\n            document.body.removeChild(canvas); // return image\n\n            return _context4.abrupt(\"return\", canvas.toDataURL());\n\n          case 27:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _convertImageIntoWearableThumbnail.apply(this, arguments);\n}\n\nexport function getImageType(_x6) {\n  return _getImageType.apply(this, arguments);\n}\n\nfunction _getImageType() {\n  _getImageType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(image) {\n    var dv, hexSixteenBytesValue;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.t0 = DataView;\n            _context5.next = 3;\n            return image.arrayBuffer();\n\n          case 3:\n            _context5.t1 = _context5.sent;\n            dv = new _context5.t0(_context5.t1, 0, 5);\n            hexSixteenBytesValue = dv.getUint8(0).toString(16) + dv.getUint8(1).toString(16);\n            _context5.t2 = hexSixteenBytesValue;\n            _context5.next = _context5.t2 === '8950' ? 9 : _context5.t2 === '4749' ? 10 : _context5.t2 === '424d' ? 11 : _context5.t2 === 'ffd8' ? 12 : 13;\n            break;\n\n          case 9:\n            return _context5.abrupt(\"return\", ImageType.PNG);\n\n          case 10:\n            return _context5.abrupt(\"return\", ImageType.GIF);\n\n          case 11:\n            return _context5.abrupt(\"return\", ImageType.BMP);\n\n          case 12:\n            return _context5.abrupt(\"return\", ImageType.JPEG);\n\n          case 13:\n            return _context5.abrupt(\"return\", ImageType.UNKNOWN);\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getImageType.apply(this, arguments);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/media/utils.ts"],"names":["WearableCategory","NO_CACHE_HEADERS","makeContentFile","getCID","ImageType","isDataUrl","url","startsWith","dataURLToBlob","dataUrl","arr","split","boxedMime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","type","objectURLToBlob","objectURL","fetch","headers","then","res","blob","blobToCID","path","file","cid","isRemoteURL","blobToDataURL","Promise","resolve","reader","FileReader","onload","e","target","result","readAsDataURL","convertImageIntoWearableThumbnail","category","EYES","image","Image","promiseOfALoadedImage","src","padding","EYEBROWS","MOUTH","canvas","document","createElement","width","height","style","visibility","body","appendChild","ctx","getContext","drawImage","removeChild","toDataURL","getImageType","DataView","arrayBuffer","dv","hexSixteenBytesValue","getUint8","toString","PNG","GIF","BMP","JPEG","UNKNOWN"],"mappings":"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","sourcesContent":["import { WearableCategory } from '@dcl/schemas'\nimport { NO_CACHE_HEADERS } from 'lib/headers'\nimport { makeContentFile, getCID } from 'modules/deployment/utils'\nimport { ImageType } from './types'\n\nexport function isDataUrl(url: string): boolean {\n  return url.startsWith('data:')\n}\n\nexport function dataURLToBlob(dataUrl: string): Blob | null {\n  const arr = dataUrl.split(',')\n  const boxedMime = arr[0].match(/:(.*?);/)\n  if (boxedMime) {\n    const bstr = atob(arr[1])\n    let n = bstr.length\n    const u8arr = new Uint8Array(n)\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n)\n    }\n\n    return new Blob([u8arr], { type: boxedMime[1] })\n  }\n  return null\n}\n\nexport async function objectURLToBlob(objectURL: string): Promise<Blob> {\n  return fetch(objectURL, { headers: NO_CACHE_HEADERS }).then(res => res.blob())\n}\n\nexport async function blobToCID(blob: Blob, path: string) {\n  const file = await makeContentFile(path, blob)\n  const cid = await getCID([file], false)\n  return cid\n}\n\nexport function isRemoteURL(url: string) {\n  return url.startsWith('http')\n}\n\nexport async function blobToDataURL(blob: Blob): Promise<string> {\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.onload = function(e) {\n      resolve((e!.target as any).result! as string)\n    }\n    reader.readAsDataURL(blob)\n  })\n}\n\n/**\n * Converts an image blob of a wearable into a fixed 1024x1024 image encoded as data url.\n * This function also adds some padding according to the category of the wearable.\n *\n * @param blob - The blob of the image.\n * @param category - The category of the wearable.\n */\nexport async function convertImageIntoWearableThumbnail(blob: Blob, category: WearableCategory = WearableCategory.EYES): Promise<string> {\n  // load blob into image\n  const image = new Image()\n\n  const promiseOfALoadedImage = new Promise(resolve => {\n    image.onload = () => resolve(image)\n  })\n  image.src = await blobToDataURL(blob)\n  await promiseOfALoadedImage\n\n  let padding = 128\n  switch (category) {\n    case WearableCategory.EYEBROWS:\n      padding = 160\n      break\n    case WearableCategory.MOUTH:\n      padding = 160\n      break\n    case WearableCategory.EYES:\n      padding = 128\n      break\n  }\n\n  // render image into canvas, with a padding from the top. This is to center the textures into the square thumbnail.\n  const canvas = document.createElement('canvas')\n  canvas.width = 1024\n  canvas.height = 1024\n  canvas.style.visibility = 'hidden'\n  document.body.appendChild(canvas)\n  const ctx = canvas.getContext('2d')!\n  ctx.drawImage(image, 0, padding, canvas.width, canvas.height)\n\n  // remove canvas\n  document.body.removeChild(canvas)\n\n  // return image\n  return canvas.toDataURL()\n}\n\n/**\n * Returns the true type of an image by using the first two bytes of the image data.\n *\n * @param blob - The blob of the image.\n */\nexport async function getImageType(image: Blob): Promise<ImageType> {\n  const dv = new DataView(await image.arrayBuffer(), 0, 5)\n  var hexSixteenBytesValue = dv.getUint8(0).toString(16) + dv.getUint8(1).toString(16)\n\n  switch (hexSixteenBytesValue) {\n    case '8950':\n      return ImageType.PNG\n    case '4749':\n      return ImageType.GIF\n    case '424d':\n      return ImageType.BMP\n    case 'ffd8':\n      return ImageType.JPEG\n    default:\n      return ImageType.UNKNOWN\n  }\n}\n"]},"metadata":{},"sourceType":"module"}