{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { connect } from 'react-redux';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { buildThirdPartyURN } from 'lib/urn';\nimport { getError, getLoading as getItemLoading } from 'modules/item/selectors';\nimport { saveItemRequest, SAVE_ITEM_REQUEST } from 'modules/item/actions';\nimport EditURNModal from '../EditURNModal';\n\nvar mapState = function mapState(state, ownProps) {\n  var item = ownProps.metadata.item;\n  return {\n    elementName: item.name,\n    urn: item.urn,\n    error: getError(state),\n    isLoading: isLoadingType(getItemLoading(state), SAVE_ITEM_REQUEST)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch, ownProps) {\n  return {\n    onSave: function onSave(urn) {\n      return dispatch(saveItemRequest(_objectSpread({}, ownProps.metadata.item, {\n        urn: urn\n      }), {}));\n    },\n    onBuildURN: function onBuildURN(decodedURN, tokenId) {\n      return buildThirdPartyURN(decodedURN.thirdPartyName, decodedURN.thirdPartyCollectionId, tokenId);\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditURNModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/EditURNModals/EditItemURNModal/EditItemURNModal.container.ts"],"names":["connect","isLoadingType","buildThirdPartyURN","getError","getLoading","getItemLoading","saveItemRequest","SAVE_ITEM_REQUEST","EditURNModal","mapState","state","ownProps","item","metadata","elementName","name","urn","error","isLoading","mapDispatch","dispatch","onSave","onBuildURN","decodedURN","tokenId","thirdPartyName","thirdPartyCollectionId"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,aAAT,QAA8B,mDAA9B;AACA,SAASC,kBAAT,QAAwD,SAAxD;AACA,SAASC,QAAT,EAAmBC,UAAU,IAAIC,cAAjC,QAAuD,wBAAvD;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,sBAAnD;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB,EAAyD;AAAA,MAChEC,IADgE,GACvDD,QAAQ,CAACE,QAD8C,CAChED,IADgE;AAExE,SAAO;AACLE,IAAAA,WAAW,EAAEF,IAAI,CAACG,IADb;AAELC,IAAAA,GAAG,EAAEJ,IAAI,CAACI,GAFL;AAGLC,IAAAA,KAAK,EAAEd,QAAQ,CAACO,KAAD,CAHV;AAILQ,IAAAA,SAAS,EAAEjB,aAAa,CAACI,cAAc,CAACK,KAAD,CAAf,EAAwBH,iBAAxB;AAJnB,GAAP;AAMD,CARD;;AAUA,IAAMY,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAwBT,QAAxB;AAAA,SAAkE;AACpFU,IAAAA,MAAM,EAAE,gBAACL,GAAD;AAAA,aAAiBI,QAAQ,CAACd,eAAe,mBAAMK,QAAQ,CAACE,QAAT,CAAkBD,IAAxB;AAA8BI,QAAAA,GAAG,EAAHA;AAA9B,UAAqC,EAArC,CAAhB,CAAzB;AAAA,KAD4E;AAEpFM,IAAAA,UAAU,EAAE,oBAACC,UAAD,EAAyDC,OAAzD;AAAA,aACVtB,kBAAkB,CAACqB,UAAU,CAACE,cAAZ,EAA4BF,UAAU,CAACG,sBAAvC,EAAgEF,OAAhE,CADR;AAAA;AAFwE,GAAlE;AAAA,CAApB;;AAMA,eAAexB,OAAO,CAACS,QAAD,EAAWU,WAAX,CAAP,CAA+BX,YAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { RootState } from 'modules/common/types'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { buildThirdPartyURN, DecodedURN, URNType } from 'lib/urn'\nimport { getError, getLoading as getItemLoading } from 'modules/item/selectors'\nimport { saveItemRequest, SAVE_ITEM_REQUEST } from 'modules/item/actions'\nimport { MapStateProps, MapDispatchProps, MapDispatch, OwnProps } from './EditItemURNModal.types'\nimport EditURNModal from '../EditURNModal'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapStateProps => {\n  const { item } = ownProps.metadata\n  return {\n    elementName: item.name,\n    urn: item.urn,\n    error: getError(state),\n    isLoading: isLoadingType(getItemLoading(state), SAVE_ITEM_REQUEST)\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch, ownProps: OwnProps): MapDispatchProps => ({\n  onSave: (urn: string) => dispatch(saveItemRequest({ ...ownProps.metadata.item, urn }, {})),\n  onBuildURN: (decodedURN: DecodedURN<URNType.COLLECTIONS_THIRDPARTY>, tokenId: string) =>\n    buildThirdPartyURN(decodedURN.thirdPartyName, decodedURN.thirdPartyCollectionId!, tokenId)\n})\n\nexport default connect(mapState, mapDispatch)(EditURNModal)\n"]},"metadata":{},"sourceType":"module"}