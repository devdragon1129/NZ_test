{"ast":null,"code":"import { connect } from 'react-redux';\nimport { fetchWeeklySceneStatsRequest, FETCH_WEEKLY_SCENE_STATS_REQUEST } from 'modules/stats/action';\nimport { getWeeklyStatsByDeploymentId, getLoading } from 'modules/stats/selectors';\nimport SceneStats from './SceneStats';\n\nvar mapState = function mapState(state, ownProps) {\n  return {\n    stats: getWeeklyStatsByDeploymentId(state)[ownProps.deployment.id],\n    isLoading: getLoading(state).some(function (action) {\n      return action.type === FETCH_WEEKLY_SCENE_STATS_REQUEST && action.payload.base === ownProps.deployment.base;\n    })\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onFetchStats: function onFetchStats(base) {\n      return dispatch(fetchWeeklySceneStatsRequest(base));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SceneStats);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SceneStats/SceneStats.container.ts"],"names":["connect","fetchWeeklySceneStatsRequest","FETCH_WEEKLY_SCENE_STATS_REQUEST","getWeeklyStatsByDeploymentId","getLoading","SceneStats","mapState","state","ownProps","stats","deployment","id","isLoading","some","action","type","payload","base","mapDispatch","dispatch","onFetchStats"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,4BAAT,EAA2EC,gCAA3E,QAAmH,sBAAnH;AACA,SAASC,4BAAT,EAAuCC,UAAvC,QAAyD,yBAAzD;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB;AAAA,SAA0D;AACzEC,IAAAA,KAAK,EAAEN,4BAA4B,CAACI,KAAD,CAA5B,CAAoCC,QAAQ,CAACE,UAAT,CAAoBC,EAAxD,CADkE;AAEzEC,IAAAA,SAAS,EAAER,UAAU,CAACG,KAAD,CAAV,CAAkBM,IAAlB,CACT,UAAAC,MAAM;AAAA,aACJA,MAAM,CAACC,IAAP,KAAgBb,gCAAhB,IACCY,MAAD,CAA+CE,OAA/C,CAAuDC,IAAvD,KAAgET,QAAQ,CAACE,UAAT,CAAoBO,IAFhF;AAAA,KADG;AAF8D,GAA1D;AAAA,CAAjB;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,YAAY,EAAE,sBAAAH,IAAI;AAAA,aAAIE,QAAQ,CAAClB,4BAA4B,CAACgB,IAAD,CAA7B,CAAZ;AAAA;AAD8C,GAA9C;AAAA,CAApB;;AAIA,eAAejB,OAAO,CAACM,QAAD,EAAWY,WAAX,CAAP,CAA+Bb,UAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { RootState } from 'modules/common/types'\nimport { fetchWeeklySceneStatsRequest, FetchWeeklySceneStatsRequestAction, FETCH_WEEKLY_SCENE_STATS_REQUEST } from 'modules/stats/action'\nimport { getWeeklyStatsByDeploymentId, getLoading } from 'modules/stats/selectors'\nimport { MapStateProps, MapDispatchProps, MapDispatch, OwnProps } from './SceneStats.types'\nimport SceneStats from './SceneStats'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapStateProps => ({\n  stats: getWeeklyStatsByDeploymentId(state)[ownProps.deployment.id],\n  isLoading: getLoading(state).some(\n    action =>\n      action.type === FETCH_WEEKLY_SCENE_STATS_REQUEST &&\n      (action as FetchWeeklySceneStatsRequestAction).payload.base === ownProps.deployment.base\n  )\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onFetchStats: base => dispatch(fetchWeeklySceneStatsRequest(base))\n})\n\nexport default connect(mapState, mapDispatch)(SceneStats)\n"]},"metadata":{},"sourceType":"module"}