{"ast":null,"code":"import { hasReviews } from 'modules/collection/utils';\nimport { CurationStatus } from '../types';\nexport var getCollectionCurationState = function getCollectionCurationState(collection, curation) {\n  if (collection.isApproved) {\n    if (!curation || curation.status === 'approved') {\n      return CurationStatus.APPROVED;\n    } else if (curation.status === 'rejected') {\n      return CurationStatus.REJECTED;\n    }\n  } else {\n    if (!curation && hasReviews(collection)) {\n      return CurationStatus.DISABLED;\n    } else if (curation && curation.status === 'rejected') {\n      return CurationStatus.REJECTED;\n    }\n  }\n\n  if (curation && curation.status === 'pending' && curation.assignee) {\n    return CurationStatus.UNDER_REVIEW;\n  }\n\n  return CurationStatus.TO_REVIEW;\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/curations/collectionCuration/utils.ts"],"names":["hasReviews","CurationStatus","getCollectionCurationState","collection","curation","isApproved","status","APPROVED","REJECTED","DISABLED","assignee","UNDER_REVIEW","TO_REVIEW"],"mappings":"AACA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,UAA/B;AAGA,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,UAAD,EAAyBC,QAAzB,EAAiE;AACzG,MAAID,UAAU,CAACE,UAAf,EAA2B;AACzB,QAAI,CAACD,QAAD,IAAaA,QAAQ,CAACE,MAAT,KAAoB,UAArC,EAAiD;AAC/C,aAAOL,cAAc,CAACM,QAAtB;AACD,KAFD,MAEO,IAAIH,QAAQ,CAACE,MAAT,KAAoB,UAAxB,EAAoC;AACzC,aAAOL,cAAc,CAACO,QAAtB;AACD;AACF,GAND,MAMO;AACL,QAAI,CAACJ,QAAD,IAAaJ,UAAU,CAACG,UAAD,CAA3B,EAAyC;AACvC,aAAOF,cAAc,CAACQ,QAAtB;AACD,KAFD,MAEO,IAAIL,QAAQ,IAAIA,QAAQ,CAACE,MAAT,KAAoB,UAApC,EAAgD;AACrD,aAAOL,cAAc,CAACO,QAAtB;AACD;AACF;;AACD,MAAIJ,QAAQ,IAAIA,QAAQ,CAACE,MAAT,KAAoB,SAAhC,IAA6CF,QAAQ,CAACM,QAA1D,EAAoE;AAClE,WAAOT,cAAc,CAACU,YAAtB;AACD;;AACD,SAAOV,cAAc,CAACW,SAAtB;AACD,CAlBM","sourcesContent":["import { Collection } from 'modules/collection/types'\nimport { hasReviews } from 'modules/collection/utils'\nimport { CurationStatus } from '../types'\nimport { CollectionCuration } from './types'\n\nexport const getCollectionCurationState = (collection: Collection, curation: CollectionCuration | null) => {\n  if (collection.isApproved) {\n    if (!curation || curation.status === 'approved') {\n      return CurationStatus.APPROVED\n    } else if (curation.status === 'rejected') {\n      return CurationStatus.REJECTED\n    }\n  } else {\n    if (!curation && hasReviews(collection)) {\n      return CurationStatus.DISABLED\n    } else if (curation && curation.status === 'rejected') {\n      return CurationStatus.REJECTED\n    }\n  }\n  if (curation && curation.status === 'pending' && curation.assignee) {\n    return CurationStatus.UNDER_REVIEW\n  }\n  return CurationStatus.TO_REVIEW\n}\n"]},"metadata":{},"sourceType":"module"}