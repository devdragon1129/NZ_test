{"ast":null,"code":"import { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors';\nimport { getData as getWallet } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { deleteCollectionRequest } from 'modules/collection/actions';\nimport { getName } from 'modules/profile/selectors';\nimport { openModal } from 'modules/modal/actions';\nimport { createCollectionForumPostRequest, CREATE_COLLECTION_FORUM_POST_REQUEST } from 'modules/forum/actions';\nimport { getLoading } from 'modules/collection/selectors';\nimport { getCollectionItems } from 'modules/item/selectors';\nimport CollectionContextMenu from './CollectionContextMenu';\n\nvar mapState = function mapState(state, ownProps) {\n  return {\n    wallet: getWallet(state),\n    items: getCollectionItems(state, ownProps.collection.id),\n    name: getName(state) || '',\n    isForumPostLoading: isLoadingType(getLoading(state), CREATE_COLLECTION_FORUM_POST_REQUEST)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onNavigate: function onNavigate(path) {\n      return dispatch(push(path));\n    },\n    onOpenModal: function onOpenModal(name, metadata) {\n      return dispatch(openModal(name, metadata));\n    },\n    onPostToForum: function onPostToForum(collection, forumPost) {\n      return dispatch(createCollectionForumPostRequest(collection, forumPost));\n    },\n    onDelete: function onDelete(collection) {\n      return dispatch(deleteCollectionRequest(collection));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CollectionContextMenu);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/CollectionDetailPage/CollectionContextMenu/CollectionContextMenu.container.ts"],"names":["connect","push","isLoadingType","getData","getWallet","deleteCollectionRequest","getName","openModal","createCollectionForumPostRequest","CREATE_COLLECTION_FORUM_POST_REQUEST","getLoading","getCollectionItems","CollectionContextMenu","mapState","state","ownProps","wallet","items","collection","id","name","isForumPostLoading","mapDispatch","dispatch","onNavigate","path","onOpenModal","metadata","onPostToForum","forumPost","onDelete"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,aAAT,QAA8B,mDAA9B;AACA,SAASC,OAAO,IAAIC,SAApB,QAAqC,kDAArC;AAEA,SAASC,uBAAT,QAAwC,4BAAxC;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,gCAAT,EAA2CC,oCAA3C,QAAuF,uBAAvF;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AAEA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAmBC,QAAnB;AAAA,SAA0D;AACzEC,IAAAA,MAAM,EAAEZ,SAAS,CAACU,KAAD,CADwD;AAEzEG,IAAAA,KAAK,EAAEN,kBAAkB,CAACG,KAAD,EAAQC,QAAQ,CAACG,UAAT,CAAoBC,EAA5B,CAFgD;AAGzEC,IAAAA,IAAI,EAAEd,OAAO,CAACQ,KAAD,CAAP,IAAkB,EAHiD;AAIzEO,IAAAA,kBAAkB,EAAEnB,aAAa,CAACQ,UAAU,CAACI,KAAD,CAAX,EAAoBL,oCAApB;AAJwC,GAA1D;AAAA,CAAjB;;AAOA,IAAMa,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,UAAU,EAAE,oBAAAC,IAAI;AAAA,aAAIF,QAAQ,CAACtB,IAAI,CAACwB,IAAD,CAAL,CAAZ;AAAA,KADgD;AAEhEC,IAAAA,WAAW,EAAE,qBAACN,IAAD,EAAOO,QAAP;AAAA,aAAoBJ,QAAQ,CAAChB,SAAS,CAACa,IAAD,EAAOO,QAAP,CAAV,CAA5B;AAAA,KAFmD;AAGhEC,IAAAA,aAAa,EAAE,uBAACV,UAAD,EAAaW,SAAb;AAAA,aAA2BN,QAAQ,CAACf,gCAAgC,CAACU,UAAD,EAAaW,SAAb,CAAjC,CAAnC;AAAA,KAHiD;AAIhEC,IAAAA,QAAQ,EAAE,kBAAAZ,UAAU;AAAA,aAAIK,QAAQ,CAAClB,uBAAuB,CAACa,UAAD,CAAxB,CAAZ;AAAA;AAJ4C,GAA9C;AAAA,CAApB;;AAOA,eAAelB,OAAO,CAACa,QAAD,EAAWS,WAAX,CAAP,CAA+BV,qBAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { isLoadingType } from 'decentraland-dapps/dist/modules/loading/selectors'\nimport { getData as getWallet } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { RootState } from 'modules/common/types'\nimport { deleteCollectionRequest } from 'modules/collection/actions'\nimport { getName } from 'modules/profile/selectors'\nimport { openModal } from 'modules/modal/actions'\nimport { createCollectionForumPostRequest, CREATE_COLLECTION_FORUM_POST_REQUEST } from 'modules/forum/actions'\nimport { getLoading } from 'modules/collection/selectors'\nimport { getCollectionItems } from 'modules/item/selectors'\nimport { MapDispatchProps, MapDispatch, MapStateProps, OwnProps } from './CollectionContextMenu.types'\nimport CollectionContextMenu from './CollectionContextMenu'\n\nconst mapState = (state: RootState, ownProps: OwnProps): MapStateProps => ({\n  wallet: getWallet(state)!,\n  items: getCollectionItems(state, ownProps.collection.id),\n  name: getName(state) || '',\n  isForumPostLoading: isLoadingType(getLoading(state), CREATE_COLLECTION_FORUM_POST_REQUEST)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onNavigate: path => dispatch(push(path)),\n  onOpenModal: (name, metadata) => dispatch(openModal(name, metadata)),\n  onPostToForum: (collection, forumPost) => dispatch(createCollectionForumPostRequest(collection, forumPost)),\n  onDelete: collection => dispatch(deleteCollectionRequest(collection))\n})\n\nexport default connect(mapState, mapDispatch)(CollectionContextMenu)\n"]},"metadata":{},"sourceType":"module"}