{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../Misc/typeStore';\n/**\r\n * Block used to blend normals\r\n */\n\nvar NormalBlendBlock =\n/** @class */\nfunction (_super) {\n  __extends(NormalBlendBlock, _super);\n  /**\r\n   * Creates a new NormalBlendBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function NormalBlendBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"normalMap0\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this.registerInput(\"normalMap1\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n\n    _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  NormalBlendBlock.prototype.getClassName = function () {\n    return \"NormalBlendBlock\";\n  };\n\n  Object.defineProperty(NormalBlendBlock.prototype, \"normalMap0\", {\n    /**\r\n     * Gets the first input component\r\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NormalBlendBlock.prototype, \"normalMap1\", {\n    /**\r\n     * Gets the second input component\r\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NormalBlendBlock.prototype, \"output\", {\n    /**\r\n     * Gets the output component\r\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  NormalBlendBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    var input0 = this._inputs[0];\n    var input1 = this._inputs[1];\n\n    var stepR = state._getFreeVariableName(\"stepR\");\n\n    var stepG = state._getFreeVariableName(\"stepG\");\n\n    state.compilationString += \"float \" + stepR + \" = step(0.5, \" + input0.associatedVariableName + \".r);\\r\\n\";\n    state.compilationString += \"float \" + stepG + \" = step(0.5, \" + input0.associatedVariableName + \".g);\\r\\n\";\n    state.compilationString += this._declareOutput(output, state) + \";\\r\\n\";\n    state.compilationString += output.associatedVariableName + \".r = (1.0 - \" + stepR + \") * \" + input0.associatedVariableName + \".r * \" + input1.associatedVariableName + \".r * 2.0 + \" + stepR + \" * (1.0 - \" + input0.associatedVariableName + \".r) * (1.0 - \" + input1.associatedVariableName + \".r) * 2.0;\\r\\n\";\n    state.compilationString += output.associatedVariableName + \".g = (1.0 - \" + stepG + \") * \" + input0.associatedVariableName + \".g * \" + input1.associatedVariableName + \".g * 2.0 + \" + stepG + \" * (1.0 - \" + input0.associatedVariableName + \".g) * (1.0 - \" + input1.associatedVariableName + \".g) * 2.0;\\r\\n\";\n    state.compilationString += output.associatedVariableName + \".b = \" + input0.associatedVariableName + \".b * \" + input1.associatedVariableName + \".b;\\r\\n\";\n    return this;\n  };\n\n  return NormalBlendBlock;\n}(NodeMaterialBlock);\n\nexport { NormalBlendBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.NormalBlendBlock\"] = NormalBlendBlock;","map":null,"metadata":{},"sourceType":"module"}