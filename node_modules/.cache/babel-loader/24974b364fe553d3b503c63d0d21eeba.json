{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/ShortcutTooltip/ShortcutTooltip.tsx\";\nimport * as React from 'react';\nimport { Popup } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { mapLabel, ShortcutRenderer } from 'modules/keyboard/utils';\nimport './ShortcutTooltip.css';\n\nvar ShortcutTextRenderer = /*#__PURE__*/function (_ShortcutRenderer) {\n  _inherits(ShortcutTextRenderer, _ShortcutRenderer);\n\n  function ShortcutTextRenderer() {\n    _classCallCheck(this, ShortcutTextRenderer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShortcutTextRenderer).apply(this, arguments));\n  }\n\n  _createClass(ShortcutTextRenderer, [{\n    key: \"renderShortcut\",\n    value: function renderShortcut(shortcut) {\n      var label = mapLabel(shortcut.value);\n      return label.length === 1 ? label.toUpperCase() : label;\n    }\n  }, {\n    key: \"renderPlus\",\n    value: function renderPlus() {\n      return '+';\n    }\n  }, {\n    key: \"renderOr\",\n    value: function renderOr() {\n      return t('global.or');\n    }\n  }, {\n    key: \"renderHold\",\n    value: function renderHold() {\n      return t('shortcuts.hold') + ' ';\n    }\n  }]);\n\n  return ShortcutTextRenderer;\n}(ShortcutRenderer);\n\nvar renderer = new ShortcutTextRenderer();\n\nvar ShortcutTooltip = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ShortcutTooltip, _React$PureComponent);\n\n  function ShortcutTooltip() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShortcutTooltip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShortcutTooltip)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderShortcutSequence = function (shortcutDefinition) {\n      if (shortcutDefinition.type === 'combination') {\n        return renderer.renderCombination(shortcutDefinition).join(' ');\n      }\n\n      if (shortcutDefinition.type === 'alternative') {\n        return renderer.renderAlternative(shortcutDefinition, true).join(' ');\n      }\n\n      return renderer.renderShortcut(shortcutDefinition);\n    };\n\n    return _this;\n  }\n\n  _createClass(ShortcutTooltip, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          shortcutDefinition = _this$props.shortcutDefinition,\n          children = _this$props.children,\n          position = _this$props.position,\n          className = _this$props.className,\n          popupClassName = _this$props.popupClassName,\n          onOpen = _this$props.onOpen,\n          onClose = _this$props.onClose;\n      var content = /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ShortcutTooltip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, shortcutDefinition.title), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sequence\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, \"(\", this.renderShortcutSequence(shortcutDefinition), \")\"));\n      return /*#__PURE__*/React.createElement(Popup, {\n        className: popupClassName,\n        content: content,\n        position: position,\n        onOpen: onOpen,\n        onClose: onClose,\n        trigger: /*#__PURE__*/React.createElement(\"span\", {\n          className: className,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 18\n          }\n        }, children),\n        on: \"hover\",\n        inverted: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ShortcutTooltip;\n}(React.PureComponent);\n\nShortcutTooltip.defaultProps = {\n  className: '',\n  popupClassName: '',\n  onOpen: function onOpen(_) {\n    /* noop */\n  },\n  onClose: function onClose(_) {\n    /* noop */\n  }\n};\nexport { ShortcutTooltip as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ShortcutTooltip/ShortcutTooltip.tsx"],"names":["React","Popup","t","mapLabel","ShortcutRenderer","ShortcutTextRenderer","shortcut","label","value","length","toUpperCase","renderer","ShortcutTooltip","renderShortcutSequence","shortcutDefinition","type","renderCombination","join","renderAlternative","renderShortcut","props","children","position","className","popupClassName","onOpen","onClose","content","title","PureComponent","defaultProps","_"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Popup } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\n\nimport { SimpleShortcut, ShortcutDefinition } from 'modules/keyboard/types'\nimport { mapLabel, ShortcutRenderer } from 'modules/keyboard/utils'\n\nimport { Props, DefaultProps } from './ShortcutTooltip.types'\nimport './ShortcutTooltip.css'\n\nclass ShortcutTextRenderer extends ShortcutRenderer {\n  renderShortcut(shortcut: SimpleShortcut) {\n    const label = mapLabel(shortcut.value)\n    return label.length === 1 ? label.toUpperCase() : label\n  }\n  renderPlus() {\n    return '+'\n  }\n  renderOr() {\n    return t('global.or')\n  }\n  renderHold() {\n    return t('shortcuts.hold') + ' '\n  }\n}\n\nconst renderer = new ShortcutTextRenderer()\n\nexport default class ShortcutTooltip extends React.PureComponent<Props> {\n  static defaultProps: DefaultProps = {\n    className: '',\n    popupClassName: '',\n    onOpen: (_: React.MouseEvent<HTMLElement>) => {\n      /* noop */\n    },\n    onClose: (_: React.MouseEvent<HTMLElement>) => {\n      /* noop */\n    }\n  }\n\n  renderShortcutSequence = (shortcutDefinition: ShortcutDefinition) => {\n    if (shortcutDefinition.type === 'combination') {\n      return renderer.renderCombination(shortcutDefinition).join(' ')\n    }\n\n    if (shortcutDefinition.type === 'alternative') {\n      return renderer.renderAlternative(shortcutDefinition, true).join(' ')\n    }\n\n    return renderer.renderShortcut(shortcutDefinition)\n  }\n\n  render() {\n    const { shortcutDefinition, children, position, className, popupClassName, onOpen, onClose } = this.props\n    const content = (\n      <span className=\"ShortcutTooltip\">\n        <span className=\"label\">{shortcutDefinition.title}</span>\n        <span className=\"sequence\">({this.renderShortcutSequence(shortcutDefinition)})</span>\n      </span>\n    )\n    return (\n      <Popup\n        className={popupClassName}\n        content={content}\n        position={position}\n        onOpen={onOpen}\n        onClose={onClose}\n        trigger={<span className={className}>{children}</span>}\n        on=\"hover\"\n        inverted\n      />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}