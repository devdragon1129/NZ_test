{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { loadingReducer } from 'decentraland-dapps/dist/modules/loading/reducer';\nimport { LOAD_POOL_GROUPS_REQUEST, LOAD_POOL_GROUPS_FAILURE, LOAD_POOL_GROUPS_SUCCESS } from './actions';\nvar INITIAL_STATE = {\n  data: {},\n  loading: [],\n  error: {}\n};\nexport var poolGroupReducer = function poolGroupReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_POOL_GROUPS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: loadingReducer(state.loading, action)\n      });\n\n    case LOAD_POOL_GROUPS_SUCCESS:\n      {\n        var poolGroups = action.payload.poolGroups;\n        return _objectSpread({}, state, {\n          data: _objectSpread({}, state.data, poolGroups),\n          loading: loadingReducer(state.loading, action)\n        });\n      }\n\n    case LOAD_POOL_GROUPS_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          loading: loadingReducer(state.loading, action)\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/poolGroup/reducer.ts"],"names":["loadingReducer","LOAD_POOL_GROUPS_REQUEST","LOAD_POOL_GROUPS_FAILURE","LOAD_POOL_GROUPS_SUCCESS","INITIAL_STATE","data","loading","error","poolGroupReducer","state","action","type","poolGroups","payload"],"mappings":";AAAA,SAAuBA,cAAvB,QAA6C,iDAA7C;AAIA,SAIEC,wBAJF,EAKEC,wBALF,EAMEC,wBANF,QAOO,WAPP;AAeA,IAAMC,aAA6B,GAAG;AACpCC,EAAAA,IAAI,EAAE,EAD8B;AAEpCC,EAAAA,OAAO,EAAE,EAF2B;AAGpCC,EAAAA,KAAK,EAAE;AAH6B,CAAtC;AAQA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAoE;AAAA,MAAnEC,KAAmE,uEAA3DL,aAA2D;AAAA,MAA5CM,MAA4C;;AAClG,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,wBAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,OAAO,EAAEN,cAAc,CAACS,KAAK,CAACH,OAAP,EAAgBI,MAAhB;AAFzB;;AAKF,SAAKP,wBAAL;AAA+B;AAAA,YACrBS,UADqB,GACNF,MAAM,CAACG,OADD,CACrBD,UADqB;AAE7B,iCACKH,KADL;AAEEJ,UAAAA,IAAI,oBACCI,KAAK,CAACJ,IADP,EAECO,UAFD,CAFN;AAMEN,UAAAA,OAAO,EAAEN,cAAc,CAACS,KAAK,CAACH,OAAP,EAAgBI,MAAhB;AANzB;AAQD;;AACD,SAAKR,wBAAL;AAA+B;AAC7B,iCACKO,KADL;AAEEH,UAAAA,OAAO,EAAEN,cAAc,CAACS,KAAK,CAACH,OAAP,EAAgBI,MAAhB;AAFzB;AAID;;AACD;AACE,aAAOD,KAAP;AAzBJ;AA2BD,CA5BM","sourcesContent":["import { LoadingState, loadingReducer } from 'decentraland-dapps/dist/modules/loading/reducer'\nimport { ModelById } from 'decentraland-dapps/dist/lib/types'\n\nimport { PoolGroup } from './types'\nimport {\n  LoadPoolGroupsRequestAction,\n  LoadPoolGroupsSuccessAction,\n  LoadPoolGroupsFailureAction,\n  LOAD_POOL_GROUPS_REQUEST,\n  LOAD_POOL_GROUPS_FAILURE,\n  LOAD_POOL_GROUPS_SUCCESS\n} from './actions'\n\nexport type PoolGroupState = {\n  data: ModelById<PoolGroup>\n  loading: LoadingState\n  error: Record<string, string>\n}\n\nconst INITIAL_STATE: PoolGroupState = {\n  data: {},\n  loading: [],\n  error: {}\n}\n\nexport type PoolGroupAction = LoadPoolGroupsRequestAction | LoadPoolGroupsSuccessAction | LoadPoolGroupsFailureAction\n\nexport const poolGroupReducer = (state = INITIAL_STATE, action: PoolGroupAction): PoolGroupState => {\n  switch (action.type) {\n    case LOAD_POOL_GROUPS_REQUEST:\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action)\n      }\n\n    case LOAD_POOL_GROUPS_SUCCESS: {\n      const { poolGroups } = action.payload\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...poolGroups\n        },\n        loading: loadingReducer(state.loading, action)\n      }\n    }\n    case LOAD_POOL_GROUPS_FAILURE: {\n      return {\n        ...state,\n        loading: loadingReducer(state.loading, action)\n      }\n    }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}