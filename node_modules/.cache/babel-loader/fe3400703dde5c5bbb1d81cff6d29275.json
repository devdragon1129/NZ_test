{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getCurrentProject } from 'modules/project/selectors';\nimport { getCurrentScene } from 'modules/scene/selectors';\nimport { editProject } from 'modules/project/actions';\nimport EditProjectModal from './EditProjectModal';\nimport { getCurrentDeploymentStatus } from 'modules/deployment/selectors'; // Both the current project and scenes are always present when this modal is rendered\n\nvar mapState = function mapState(state) {\n  return {\n    currentProject: getCurrentProject(state),\n    currentScene: getCurrentScene(state),\n    deploymentStatus: getCurrentDeploymentStatus(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSave: function onSave(id, project) {\n      return dispatch(editProject(id, project));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditProjectModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/EditProjectModal/EditProjectModal.container.ts"],"names":["connect","getCurrentProject","getCurrentScene","editProject","EditProjectModal","getCurrentDeploymentStatus","mapState","state","currentProject","currentScene","deploymentStatus","mapDispatch","dispatch","onSave","id","project"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAIA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAGA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,0BAAT,QAA2C,8BAA3C,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,cAAc,EAAEP,iBAAiB,CAACM,KAAD,CADoB;AAErDE,IAAAA,YAAY,EAAEP,eAAe,CAACK,KAAD,CAFwB;AAGrDG,IAAAA,gBAAgB,EAAEL,0BAA0B,CAACE,KAAD;AAHS,GAAtC;AAAA,CAAjB;;AAMA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,MAAM,EAAE,gBAACC,EAAD,EAAKC,OAAL;AAAA,aAAiBH,QAAQ,CAACT,WAAW,CAACW,EAAD,EAAKC,OAAL,CAAZ,CAAzB;AAAA;AADwD,GAA9C;AAAA,CAApB;;AAIA,eAAef,OAAO,CACpBM,QADoB,EAEpBK,WAFoB,CAAP,CAGbP,gBAHa,CAAf","sourcesContent":["import { connect } from 'react-redux'\n\nimport { RootState } from 'modules/common/types'\n\nimport { getCurrentProject } from 'modules/project/selectors'\nimport { getCurrentScene } from 'modules/scene/selectors'\nimport { editProject } from 'modules/project/actions'\n\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './EditProjectModal.types'\nimport EditProjectModal from './EditProjectModal'\nimport { getCurrentDeploymentStatus } from 'modules/deployment/selectors'\n\n// Both the current project and scenes are always present when this modal is rendered\nconst mapState = (state: RootState): MapStateProps => ({\n  currentProject: getCurrentProject(state)!,\n  currentScene: getCurrentScene(state)!,\n  deploymentStatus: getCurrentDeploymentStatus(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSave: (id, project) => dispatch(editProject(id, project))\n})\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(EditProjectModal)\n"]},"metadata":{},"sourceType":"module"}