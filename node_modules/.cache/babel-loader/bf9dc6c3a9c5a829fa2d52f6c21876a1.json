{"ast":null,"code":"import _toConsumableArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/opt/work/NZ_test/src/components/Atlas/Atlas.tsx\";\n\nimport React, { useCallback, useMemo, useState, useEffect, useRef } from 'react';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { Atlas as AtlasComponent } from 'decentraland-ui';\nimport { coordsToId, isCoords, idToCoords, getCenter, selectionBorderColorByRole } from 'modules/land/utils';\nimport { RoleType } from 'modules/land/types';\nimport { locations } from 'routing/locations';\nimport Popup from './Popup';\nimport Control from './Control';\nimport './Atlas.css';\n\nvar getCoords = function getCoords(x, y) {\n  return \"\".concat(x, \",\").concat(y);\n};\n\nvar Atlas = function Atlas(props) {\n  var landId = props.landId,\n      atlasTiles = props.atlasTiles,\n      landTiles = props.landTiles,\n      emptyTiles = props.emptyTiles,\n      showOwner = props.showOwner,\n      showOperator = props.showOperator,\n      showControls = props.showControls,\n      hasPopup = props.hasPopup,\n      className = props.className,\n      hasLink = props.hasLink,\n      onNavigate = props.onNavigate,\n      onLocateLand = props.onLocateLand;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPopup = _useState2[0],\n      setShowPopup = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hoveredLand = _useState4[0],\n      setHoveredLand = _useState4[1];\n\n  var _useState5 = useState(-1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mouseX = _useState6[0],\n      setMouseX = _useState6[1];\n\n  var _useState7 = useState(-1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mouseY = _useState8[0],\n      setMouseY = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      x = _useState10[0],\n      setX = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      y = _useState12[0],\n      setY = _useState12[1];\n\n  var _useState13 = useState(props.zoom || 1),\n      _useState14 = _slicedToArray(_useState13, 2),\n      zoom = _useState14[0],\n      setZoom = _useState14[1];\n\n  var timeout = useRef(null);\n  var isEstate = false;\n\n  if (landId) {\n    if (!isCoords(landId)) {\n      isEstate = true;\n    } else if (landId in landTiles) {\n      var tile = landTiles[landId];\n\n      if (!isCoords(tile.land.id)) {\n        isEstate = true;\n      }\n    }\n  }\n\n  var selection = useMemo(function () {\n    if (!landId) {\n      return new Set();\n    } else if (!isEstate) {\n      return new Set([landId]);\n    } else {\n      return Object.keys(landTiles).reduce(function (set, coords) {\n        var tile = landTiles[coords];\n\n        if (tile.land.id === landId) {\n          set.add(coords);\n        }\n\n        return set;\n      }, new Set());\n    }\n  }, [landTiles, landId, isEstate]);\n\n  var _useMemo = useMemo(function () {\n    return landId ? !isEstate ? idToCoords(landId) : getCenter(Array.from(selection).map(function (id) {\n      var _idToCoords = idToCoords(id),\n          _idToCoords2 = _slicedToArray(_idToCoords, 2),\n          x = _idToCoords2[0],\n          y = _idToCoords2[1];\n\n      return {\n        x: x,\n        y: y\n      };\n    })) : [props.x, props.y];\n  }, [landId, isEstate, selection]),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      landX = _useMemo2[0],\n      landY = _useMemo2[1];\n\n  var shouldShowLayer = function shouldShowLayer(tile, showOwner, showOperator) {\n    return !!tile && (showOwner && tile.land.role === RoleType.OWNER || showOperator && tile.land.role === RoleType.OPERATOR);\n  };\n\n  var landLayer = useCallback(function (x, y) {\n    var id = coordsToId(x, y);\n    var tile = landTiles[id];\n\n    if (shouldShowLayer(tile, showOwner, showOperator)) {\n      return tile || null;\n    }\n\n    return null;\n  }, [landTiles, showOwner, showOperator]);\n  var unoccupiedLayer = useCallback(function (x, y) {\n    var id = coordsToId(x, y);\n    var tile = landTiles[id];\n\n    if (shouldShowLayer(tile, showOwner, showOperator)) {\n      return emptyTiles[id] || null;\n    }\n\n    return null;\n  }, [emptyTiles, landTiles, showOwner, showOperator]);\n  var handleHover = useCallback(function (x, y) {\n    if (!hasPopup) return;\n\n    if (selection.has(getCoords(x, y))) {\n      setShowPopup(false);\n      return;\n    }\n\n    var id = coordsToId(x, y);\n    var tile = landTiles[id];\n\n    if (tile && !showPopup) {\n      setShowPopup(true);\n      setHoveredLand(tile.land);\n      setMouseX(-1);\n      setMouseY(-1);\n    } else if (tile && tile.land !== hoveredLand) {\n      setHoveredLand(tile.land);\n      setMouseX(-1);\n      setMouseY(-1);\n    } else if (!tile && showPopup) {\n      setShowPopup(false);\n    }\n  }, [hoveredLand, showPopup, landTiles]);\n  var handleClick = useCallback(function (x, y) {\n    if (!hasLink) return;\n    var id = coordsToId(x, y);\n\n    if (id in landTiles && !selection.has(id)) {\n      var land = landTiles[id].land;\n      setShowPopup(false);\n      onNavigate(locations.landDetail(land.id));\n    }\n  }, [landTiles, selection, onNavigate, hasLink]);\n  var handleLocateLand = useCallback(function () {\n    if (onLocateLand) {\n      onLocateLand();\n    }\n  }, [onLocateLand]);\n  var handleZoomOut = useCallback(function () {\n    setZoom(zoom - 0.5);\n  }, [zoom, setZoom]);\n  var handleZoomIn = useCallback(function () {\n    setZoom(zoom + 0.5);\n  }, [zoom, setZoom]); // fade effect\n\n  useEffect(function () {\n    if (!showPopup) {\n      timeout.current = setTimeout(function () {\n        return setHoveredLand(null);\n      }, 250);\n    } else if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n  }, [showPopup]); // mouse move\n\n  useEffect(function () {\n    function handleMouseMove(event) {\n      if (showPopup && mouseX === -1 && mouseY === -1) {\n        setMouseX(event.offsetX);\n        setMouseY(event.offsetY);\n        setX(event.offsetX);\n        setY(event.offsetY);\n      }\n    }\n\n    if (hasPopup) {\n      document.addEventListener('mousemove', handleMouseMove);\n    }\n\n    return function () {\n      if (hasPopup) {\n        document.removeEventListener('mousemove', handleMouseMove);\n      }\n    };\n  }, [hasPopup, showPopup, mouseX, mouseY]); // classes\n\n  var classes = [];\n\n  if (className) {\n    classes.push(className);\n  }\n\n  if (hoveredLand) {\n    classes.push('clickable');\n  }\n\n  var selectionLayers = [];\n\n  if (selection.size > 0) {\n    var isSelected = function isSelected(x, y) {\n      var id = coordsToId(x, y);\n      return selection.has(id) && id in landTiles;\n    };\n\n    var getRole = function getRole(x, y) {\n      var id = coordsToId(x, y);\n      var tile = landTiles[id];\n      return tile.land.role;\n    };\n\n    var selectionBorderLayer = function selectionBorderLayer(x, y) {\n      return isSelected(x, y) ? {\n        color: selectionBorderColorByRole[getRole(x, y)],\n        scale: 1.2\n      } : null;\n    };\n\n    var selectionLandLayer = function selectionLandLayer(x, y) {\n      return isSelected(x, y) ? landLayer(x, y) : null;\n    };\n\n    var selectionUnoccupiedLayer = function selectionUnoccupiedLayer(x, y) {\n      return isSelected(x, y) ? unoccupiedLayer(x, y) : null;\n    };\n\n    selectionLayers = [selectionBorderLayer, selectionLandLayer, selectionUnoccupiedLayer];\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AtlasComponent, Object.assign({\n    onHover: handleHover,\n    onClick: handleClick\n  }, props, {\n    zoom: zoom,\n    x: props.x || landX,\n    y: props.y || landY,\n    maxX: 163,\n    maxY: 158,\n    className: classes.join(' '),\n    tiles: atlasTiles,\n    layers: [landLayer, unoccupiedLayer].concat(_toConsumableArray(selectionLayers), _toConsumableArray(props.layers || [])),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  })), hoveredLand ? /*#__PURE__*/React.createElement(Popup, {\n    x: x,\n    y: y,\n    visible: showPopup,\n    land: hoveredLand,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 22\n    }\n  }) : null, showControls ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dcl atlas-control-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    content: t('atlas.locate_land'),\n    icon: \"locate-land\",\n    onClick: handleLocateLand,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    content: t('atlas.zoom_out'),\n    icon: \"atlas-zoom-out\",\n    onClick: handleZoomOut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Control, {\n    content: t('atlas.zoom_in'),\n    icon: \"atlas-zoom-in\",\n    onClick: handleZoomIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }))) : null);\n};\n\nAtlas.defaultProps = {\n  showOperator: true,\n  showOwner: true,\n  hasPopup: false,\n  hasLink: true\n};\nexport default Atlas;","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Atlas/Atlas.tsx"],"names":["React","useCallback","useMemo","useState","useEffect","useRef","t","Atlas","AtlasComponent","coordsToId","isCoords","idToCoords","getCenter","selectionBorderColorByRole","RoleType","locations","Popup","Control","getCoords","x","y","props","landId","atlasTiles","landTiles","emptyTiles","showOwner","showOperator","showControls","hasPopup","className","hasLink","onNavigate","onLocateLand","showPopup","setShowPopup","hoveredLand","setHoveredLand","mouseX","setMouseX","mouseY","setMouseY","setX","setY","zoom","setZoom","timeout","isEstate","tile","land","id","selection","Set","Object","keys","reduce","set","coords","add","Array","from","map","landX","landY","shouldShowLayer","role","OWNER","OPERATOR","landLayer","unoccupiedLayer","handleHover","has","handleClick","landDetail","handleLocateLand","handleZoomOut","handleZoomIn","current","setTimeout","clearTimeout","handleMouseMove","event","offsetX","offsetY","document","addEventListener","removeEventListener","classes","push","selectionLayers","size","isSelected","getRole","selectionBorderLayer","color","scale","selectionLandLayer","selectionUnoccupiedLayer","join","layers","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState, useEffect, useRef } from 'react'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { Atlas as AtlasComponent, Layer } from 'decentraland-ui'\nimport { coordsToId, isCoords, idToCoords, getCenter, selectionBorderColorByRole } from 'modules/land/utils'\nimport { RoleType, Land, LandTile } from 'modules/land/types'\nimport { locations } from 'routing/locations'\nimport Popup from './Popup'\nimport Control from './Control'\nimport { Props } from './Atlas.types'\nimport './Atlas.css'\n\nconst getCoords = (x: number | string, y: number | string) => `${x},${y}`\n\nconst Atlas: React.FC<Props> = props => {\n  const {\n    landId,\n    atlasTiles,\n    landTiles,\n    emptyTiles,\n    showOwner,\n    showOperator,\n    showControls,\n    hasPopup,\n    className,\n    hasLink,\n    onNavigate,\n    onLocateLand\n  } = props\n\n  const [showPopup, setShowPopup] = useState(false)\n  const [hoveredLand, setHoveredLand] = useState<Land | null>(null)\n  const [mouseX, setMouseX] = useState(-1)\n  const [mouseY, setMouseY] = useState(-1)\n  const [x, setX] = useState(0)\n  const [y, setY] = useState(0)\n  const [zoom, setZoom] = useState<number>(props.zoom || 1)\n  const timeout = useRef<NodeJS.Timer | null>(null)\n\n  let isEstate = false\n  if (landId) {\n    if (!isCoords(landId)) {\n      isEstate = true\n    } else if (landId in landTiles) {\n      const tile = landTiles[landId]\n      if (!isCoords(tile.land.id)) {\n        isEstate = true\n      }\n    }\n  }\n\n  const selection = useMemo(() => {\n    if (!landId) {\n      return new Set<string>()\n    } else if (!isEstate) {\n      return new Set([landId])\n    } else {\n      return Object.keys(landTiles).reduce((set, coords) => {\n        const tile = landTiles[coords]\n        if (tile.land.id === landId) {\n          set.add(coords)\n        }\n        return set\n      }, new Set<string>())\n    }\n  }, [landTiles, landId, isEstate])\n\n  const [landX, landY] = useMemo(\n    () =>\n      landId\n        ? !isEstate\n          ? idToCoords(landId)\n          : getCenter(\n              Array.from(selection).map(id => {\n                const [x, y] = idToCoords(id)\n                return { x, y }\n              })\n            )\n        : [props.x, props.y],\n    [landId, isEstate, selection]\n  )\n\n  const shouldShowLayer = (tile?: LandTile, showOwner?: boolean, showOperator?: boolean) => {\n    return !!tile && ((showOwner && tile.land.role === RoleType.OWNER) || (showOperator && tile.land.role === RoleType.OPERATOR))\n  }\n\n  const landLayer: Layer = useCallback(\n    (x, y) => {\n      const id = coordsToId(x, y)\n      const tile = landTiles[id]\n      if (shouldShowLayer(tile, showOwner, showOperator)) {\n        return tile || null\n      }\n      return null\n    },\n    [landTiles, showOwner, showOperator]\n  )\n\n  const unoccupiedLayer: Layer = useCallback(\n    (x, y) => {\n      const id = coordsToId(x, y)\n      const tile = landTiles[id]\n      if (shouldShowLayer(tile, showOwner, showOperator)) {\n        return emptyTiles[id] || null\n      }\n      return null\n    },\n    [emptyTiles, landTiles, showOwner, showOperator]\n  )\n\n  const handleHover = useCallback(\n    (x: number, y: number) => {\n      if (!hasPopup) return\n      if (selection.has(getCoords(x, y))) {\n        setShowPopup(false)\n        return\n      }\n      const id = coordsToId(x, y)\n      const tile = landTiles[id]\n      if (tile && !showPopup) {\n        setShowPopup(true)\n        setHoveredLand(tile.land)\n        setMouseX(-1)\n        setMouseY(-1)\n      } else if (tile && tile.land !== hoveredLand) {\n        setHoveredLand(tile.land)\n        setMouseX(-1)\n        setMouseY(-1)\n      } else if (!tile && showPopup) {\n        setShowPopup(false)\n      }\n    },\n    [hoveredLand, showPopup, landTiles]\n  )\n\n  const handleClick = useCallback(\n    (x: number, y: number) => {\n      if (!hasLink) return\n      const id = coordsToId(x, y)\n      if (id in landTiles && !selection.has(id)) {\n        const { land } = landTiles[id]\n        setShowPopup(false)\n        onNavigate(locations.landDetail(land.id))\n      }\n    },\n    [landTiles, selection, onNavigate, hasLink]\n  )\n\n  const handleLocateLand = useCallback(() => {\n    if (onLocateLand) {\n      onLocateLand()\n    }\n  }, [onLocateLand])\n\n  const handleZoomOut = useCallback(() => {\n    setZoom(zoom - 0.5)\n  }, [zoom, setZoom])\n\n  const handleZoomIn = useCallback(() => {\n    setZoom(zoom + 0.5)\n  }, [zoom, setZoom])\n\n  // fade effect\n  useEffect(() => {\n    if (!showPopup) {\n      timeout.current = setTimeout(() => setHoveredLand(null), 250)\n    } else if (timeout.current) {\n      clearTimeout(timeout.current)\n      timeout.current = null\n    }\n  }, [showPopup])\n\n  // mouse move\n  useEffect(() => {\n    function handleMouseMove(event: MouseEvent) {\n      if (showPopup && mouseX === -1 && mouseY === -1) {\n        setMouseX(event.offsetX)\n        setMouseY(event.offsetY)\n        setX(event.offsetX)\n        setY(event.offsetY)\n      }\n    }\n    if (hasPopup) {\n      document.addEventListener('mousemove', handleMouseMove)\n    }\n    return () => {\n      if (hasPopup) {\n        document.removeEventListener('mousemove', handleMouseMove)\n      }\n    }\n  }, [hasPopup, showPopup, mouseX, mouseY])\n\n  // classes\n  const classes: string[] = []\n  if (className) {\n    classes.push(className)\n  }\n  if (hoveredLand) {\n    classes.push('clickable')\n  }\n\n  let selectionLayers: Layer[] = []\n  if (selection.size > 0) {\n    const isSelected = (x: number, y: number) => {\n      const id = coordsToId(x, y)\n      return selection.has(id) && id in landTiles\n    }\n    const getRole = (x: number, y: number) => {\n      const id = coordsToId(x, y)\n      const tile = landTiles[id]\n      return tile.land.role\n    }\n    const selectionBorderLayer: Layer = (x, y) =>\n      isSelected(x, y) ? { color: selectionBorderColorByRole[getRole(x, y)], scale: 1.2 } : null\n    const selectionLandLayer: Layer = (x, y) => (isSelected(x, y) ? landLayer(x, y) : null)\n    const selectionUnoccupiedLayer: Layer = (x, y) => (isSelected(x, y) ? unoccupiedLayer(x, y) : null)\n    selectionLayers = [selectionBorderLayer, selectionLandLayer, selectionUnoccupiedLayer]\n  }\n\n  return (\n    <>\n      <AtlasComponent\n        onHover={handleHover}\n        onClick={handleClick}\n        {...props}\n        zoom={zoom}\n        x={props.x || landX}\n        y={props.y || landY}\n        maxX={163}\n        maxY={158}\n        className={classes.join(' ')}\n        tiles={atlasTiles}\n        layers={[landLayer, unoccupiedLayer, ...selectionLayers, ...(props.layers || [])]}\n      />\n      {hoveredLand ? <Popup x={x} y={y} visible={showPopup} land={hoveredLand} /> : null}\n      {showControls ? (\n        <div className=\"dcl atlas-control-container\">\n          <Control content={t('atlas.locate_land')} icon=\"locate-land\" onClick={handleLocateLand} />\n          <div className=\"control-group\">\n            <Control content={t('atlas.zoom_out')} icon=\"atlas-zoom-out\" onClick={handleZoomOut} />\n            <Control content={t('atlas.zoom_in')} icon=\"atlas-zoom-in\" onClick={handleZoomIn} />\n          </div>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nAtlas.defaultProps = {\n  showOperator: true,\n  showOwner: true,\n  hasPopup: false,\n  hasLink: true\n}\n\nexport default Atlas\n"]},"metadata":{},"sourceType":"module"}