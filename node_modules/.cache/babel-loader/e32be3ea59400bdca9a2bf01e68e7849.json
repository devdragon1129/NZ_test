{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseAPI = void 0;\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar httpClient = axios_1.default.create();\n\nvar BaseAPI = /*#__PURE__*/function () {\n  function BaseAPI(url) {\n    _classCallCheck(this, BaseAPI);\n\n    this.url = url;\n  }\n\n  _createClass(BaseAPI, [{\n    key: \"request\",\n    value: function request(method, path) {\n      var _this = this;\n\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var axiosRequestConfig = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var options = Object.assign(Object.assign({}, axiosRequestConfig), {\n        method: method,\n        url: this.getUrl(path)\n      });\n\n      if (params) {\n        if (method === 'get') {\n          options.params = params;\n        } else {\n          options.data = params;\n        }\n      }\n\n      return httpClient.request(options).then(function (axiosResponse) {\n        var _this$parseResponse = _this.parseResponse(axiosResponse),\n            ok = _this$parseResponse.ok,\n            data = _this$parseResponse.data,\n            error = _this$parseResponse.error;\n\n        return !ok || error ? Promise.reject({\n          message: error,\n          data: data\n        }) : data;\n      }).catch(function (error) {\n        console.warn(\"[API] HTTP request failed: \".concat(error.message || ''), error);\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(path) {\n      return \"\".concat(this.url).concat(path);\n    }\n  }, {\n    key: \"parseResponse\",\n    value: function parseResponse(axiosResponse) {\n      var response = axiosResponse.data;\n\n      if (typeof response.ok === 'boolean') {\n        return response;\n      }\n\n      return {\n        ok: true,\n        data: response,\n        error: ''\n      };\n    }\n  }]);\n\n  return BaseAPI;\n}();\n\nexports.BaseAPI = BaseAPI;","map":null,"metadata":{},"sourceType":"script"}