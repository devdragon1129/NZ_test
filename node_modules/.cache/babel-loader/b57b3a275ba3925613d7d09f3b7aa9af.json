{"ast":null,"code":"import { timeData } from './time-data.generated';\n/**\n * Returns the best matching date time pattern if a date time skeleton\n * pattern is provided with a locale. Follows the Unicode specification:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#table-mapping-requested-time-skeletons-to-patterns\n * @param skeleton date time skeleton pattern that possibly includes j, J or C\n * @param locale\n */\n\nexport function getBestPattern(skeleton, locale) {\n  var skeletonCopy = '';\n\n  for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {\n    var patternChar = skeleton.charAt(patternPos);\n\n    if (patternChar === 'j') {\n      var extraLength = 0;\n\n      while (patternPos + 1 < skeleton.length && skeleton.charAt(patternPos + 1) === patternChar) {\n        extraLength++;\n        patternPos++;\n      }\n\n      var hourLen = 1 + (extraLength & 1);\n      var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);\n      var dayPeriodChar = 'a';\n      var hourChar = getDefaultHourSymbolFromLocale(locale);\n\n      if (hourChar == 'H' || hourChar == 'k') {\n        dayPeriodLen = 0;\n      }\n\n      while (dayPeriodLen-- > 0) {\n        skeletonCopy += dayPeriodChar;\n      }\n\n      while (hourLen-- > 0) {\n        skeletonCopy = hourChar + skeletonCopy;\n      }\n    } else if (patternChar === 'J') {\n      skeletonCopy += 'H';\n    } else {\n      skeletonCopy += patternChar;\n    }\n  }\n\n  return skeletonCopy;\n}\n/**\n * Maps the [hour cycle type](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle)\n * of the given `locale` to the corresponding time pattern.\n * @param locale\n */\n\nfunction getDefaultHourSymbolFromLocale(locale) {\n  var hourCycle = locale.hourCycle;\n\n  if (hourCycle === undefined && // @ts-ignore hourCycle(s) is not identified yet\n  locale.hourCycles && // @ts-ignore\n  locale.hourCycles.length) {\n    // @ts-ignore\n    hourCycle = locale.hourCycles[0];\n  }\n\n  if (hourCycle) {\n    switch (hourCycle) {\n      case 'h24':\n        return 'k';\n\n      case 'h23':\n        return 'H';\n\n      case 'h12':\n        return 'h';\n\n      case 'h11':\n        return 'K';\n\n      default:\n        throw new Error('Invalid hourCycle');\n    }\n  } // TODO: Once hourCycle is fully supported remove the following with data generation\n\n\n  var languageTag = locale.language;\n  var regionTag;\n\n  if (languageTag !== 'root') {\n    regionTag = locale.maximize().region;\n  }\n\n  var hourCycles = timeData[regionTag || ''] || timeData[languageTag || ''] || timeData[\"\".concat(languageTag, \"-001\")] || timeData['001'];\n  return hourCycles[0];\n}","map":null,"metadata":{},"sourceType":"module"}