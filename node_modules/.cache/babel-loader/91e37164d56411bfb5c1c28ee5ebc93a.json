{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _colorByRole, _emptyColorByRole, _selectionBorderColor, _hoverFillByRole, _hoverStrokeByRole;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { Color } from 'decentraland-ui';\nimport { Address } from 'web3x/address';\nimport { config } from 'config';\nimport { getEth } from 'modules/wallet/utils';\nimport { LAND_REGISTRY_ADDRESS, ESTATE_REGISTRY_ADDRESS } from 'modules/common/contracts';\nimport { EstateRegistry } from 'contracts/EstateRegistry';\nimport { LANDRegistry } from 'contracts/LANDRegistry';\nimport { isZero } from 'lib/address';\nimport { LandType, RoleType } from './types';\nexport var LAND_POOL_ADDRESS = '0xDc13378daFca7Fe2306368A16BCFac38c80BfCAD';\nexport var MAX_PARCELS_PER_TX = 20;\nexport var SEPARATOR = ',';\nexport var coordsToId = function coordsToId(x, y) {\n  return x + SEPARATOR + y;\n};\nexport var idToCoords = function idToCoords(id) {\n  return id.split(SEPARATOR).map(function (coord) {\n    return +coord;\n  });\n};\nexport var isCoords = function isCoords(id) {\n  return id.includes(SEPARATOR);\n};\nexport var getCoords = function getCoords(land) {\n  return land.type === LandType.PARCEL ? {\n    x: land.x,\n    y: land.y\n  } : {\n    x: land.parcels[0].x,\n    y: land.parcels[0].y\n  };\n};\nexport var getCenter = function getCenter(selection) {\n  var xs = _toConsumableArray(new Set(selection.map(function (coords) {\n    return coords.x;\n  }).sort()));\n\n  var ys = _toConsumableArray(new Set(selection.map(function (coords) {\n    return coords.y;\n  }).sort()));\n\n  var x = xs[xs.length / 2 | 0];\n  var y = ys[ys.length / 2 | 0];\n  return [x, y];\n};\nexport var colorByRole = (_colorByRole = {}, _defineProperty(_colorByRole, RoleType.OWNER, Color.SUMMER_RED), _defineProperty(_colorByRole, RoleType.OPERATOR, Color.LUISXVI_VIOLET), _colorByRole);\nexport var emptyColorByRole = (_emptyColorByRole = {}, _defineProperty(_emptyColorByRole, RoleType.OWNER, '#ab2039'), _defineProperty(_emptyColorByRole, RoleType.OPERATOR, '#8f1d9b'), _emptyColorByRole);\nexport var selectionBorderColorByRole = (_selectionBorderColor = {}, _defineProperty(_selectionBorderColor, RoleType.OWNER, '#ff8199'), _defineProperty(_selectionBorderColor, RoleType.OPERATOR, '#d742e8'), _selectionBorderColor);\nexport var hoverFillByRole = (_hoverFillByRole = {}, _defineProperty(_hoverFillByRole, RoleType.OWNER, '#ff8199'), _defineProperty(_hoverFillByRole, RoleType.OPERATOR, '#d742e8'), _hoverFillByRole);\nexport var hoverStrokeByRole = (_hoverStrokeByRole = {}, _defineProperty(_hoverStrokeByRole, RoleType.OWNER, '#fcc6d1'), _defineProperty(_hoverStrokeByRole, RoleType.OPERATOR, '#ef5eff'), _hoverStrokeByRole);\nexport var getSelection = function getSelection(land) {\n  return land.type === LandType.PARCEL ? [{\n    x: land.x,\n    y: land.y\n  }] : land.parcels.map(function (parcel) {\n    return {\n      x: parcel.x,\n      y: parcel.y\n    };\n  });\n};\nexport var getUpdateOperator = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(land) {\n    var eth, landRegistry, tokenId, updateOperator, address, estateRegistry, _updateOperator, _address;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getEth();\n\n          case 2:\n            eth = _context.sent;\n            _context.prev = 3;\n            _context.t0 = land.type;\n            _context.next = _context.t0 === LandType.PARCEL ? 7 : _context.t0 === LandType.ESTATE ? 16 : 22;\n            break;\n\n          case 7:\n            landRegistry = new LANDRegistry(eth, Address.fromString(LAND_REGISTRY_ADDRESS));\n            _context.next = 10;\n            return landRegistry.methods.encodeTokenId(land.x, land.y).call();\n\n          case 10:\n            tokenId = _context.sent;\n            _context.next = 13;\n            return landRegistry.methods.updateOperator(tokenId).call();\n\n          case 13:\n            updateOperator = _context.sent;\n            address = updateOperator.toString();\n            return _context.abrupt(\"return\", isZero(address) ? null : address);\n\n          case 16:\n            estateRegistry = new EstateRegistry(eth, Address.fromString(ESTATE_REGISTRY_ADDRESS));\n            _context.next = 19;\n            return estateRegistry.methods.updateOperator(land.id).call();\n\n          case 19:\n            _updateOperator = _context.sent;\n            _address = _updateOperator.toString();\n            return _context.abrupt(\"return\", isZero(_address) ? null : _address);\n\n          case 22:\n            return _context.abrupt(\"return\", null);\n\n          case 23:\n            _context.next = 28;\n            break;\n\n          case 25:\n            _context.prev = 25;\n            _context.t1 = _context[\"catch\"](3);\n            return _context.abrupt(\"return\", null);\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 25]]);\n  }));\n\n  return function getUpdateOperator(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var areEqualCoords = function areEqualCoords(coord1, coord2) {\n  return coord1.x === coord2.x && coord1.y === coord2.y;\n};\nexport var getCoordMatcher = function getCoordMatcher(coord1) {\n  return function (coord2) {\n    return areEqualCoords(coord1, coord2);\n  };\n};\nexport var getNeighbourMatcher = function getNeighbourMatcher(coord1) {\n  return function (coord2) {\n    return coord1.x === coord2.x && (coord1.y === coord2.y + 1 || coord1.y === coord2.y - 1) || coord1.y === coord2.y && (coord1.x === coord2.x + 1 || coord1.x === coord2.x - 1);\n  };\n};\nexport function hasNeighbour(coord, all) {\n  return all.some(getNeighbourMatcher(coord));\n}\nexport function getNeighbours(coord, all) {\n  return all.filter(getNeighbourMatcher(coord));\n}\n\nvar visit = function visit(coord) {\n  var all = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [coord];\n  var visited = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var isVisited = visited.some(getCoordMatcher(coord));\n\n  if (!isVisited) {\n    visited.push(coord);\n    var neighbours = getNeighbours(coord, all);\n\n    var _iterator = _createForOfIteratorHelper(neighbours),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var neighbour = _step.value;\n        visit(neighbour, all, visited);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return visited;\n};\n\nexport var areConnected = function areConnected(coords) {\n  if (coords.length === 0) {\n    return false;\n  }\n\n  var visited = visit(coords[0], coords);\n  return visited.length === coords.length;\n};\nexport var getDiff = function getDiff(a, b) {\n  return b.filter(function (coord) {\n    return !a.some(getCoordMatcher(coord));\n  });\n};\nexport var getCoordsToAdd = function getCoordsToAdd(original, modified) {\n  return getDiff(original, modified);\n};\nexport var getCoordsToRemove = function getCoordsToRemove(original, modified) {\n  return getDiff(modified, original);\n};\nexport var splitCoords = function splitCoords(coords) {\n  var xs = [];\n  var ys = [];\n\n  var _iterator2 = _createForOfIteratorHelper(coords),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var coord = _step2.value;\n      xs.push(coord.x);\n      ys.push(coord.y);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return [xs, ys];\n};\nexport var buildMetadata = function buildMetadata(name) {\n  var description = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return \"0,\\\"\".concat(name.replace(/\"/g, '\\\\\"'), \"\\\",\\\"\").concat(description.replace(/\"/g, '\\\\\"'), \"\\\",\");\n};\nexport function locateNextLand(landTiles, currentLandId) {\n  var landIds = Object.keys(landTiles);\n  var landIndex = landIds.indexOf(currentLandId);\n  var index = landIndex === -1 ? 0 : landIndex;\n  var nextIndex = ((index + 1) % landIds.length + landIds.length) % landIds.length;\n  var nextLandId = landIds[nextIndex];\n  return landTiles[nextLandId].land;\n}\nexport function getExplorerURL(x, y) {\n  var EXPLORER_URL = config.get('EXPLORER_URL', '');\n  return \"\".concat(EXPLORER_URL, \"?position=\").concat(coordsToId(x, y));\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/land/utils.ts"],"names":["Color","Address","config","getEth","LAND_REGISTRY_ADDRESS","ESTATE_REGISTRY_ADDRESS","EstateRegistry","LANDRegistry","isZero","LandType","RoleType","LAND_POOL_ADDRESS","MAX_PARCELS_PER_TX","SEPARATOR","coordsToId","x","y","idToCoords","id","split","map","coord","isCoords","includes","getCoords","land","type","PARCEL","parcels","getCenter","selection","xs","Set","coords","sort","ys","length","colorByRole","OWNER","SUMMER_RED","OPERATOR","LUISXVI_VIOLET","emptyColorByRole","selectionBorderColorByRole","hoverFillByRole","hoverStrokeByRole","getSelection","parcel","getUpdateOperator","eth","ESTATE","landRegistry","fromString","methods","encodeTokenId","call","tokenId","updateOperator","address","toString","estateRegistry","areEqualCoords","coord1","coord2","getCoordMatcher","getNeighbourMatcher","hasNeighbour","all","some","getNeighbours","filter","visit","visited","isVisited","push","neighbours","neighbour","areConnected","getDiff","a","b","getCoordsToAdd","original","modified","getCoordsToRemove","splitCoords","buildMetadata","name","description","replace","locateNextLand","landTiles","currentLandId","landIds","Object","keys","landIndex","indexOf","index","nextIndex","nextLandId","getExplorerURL","EXPLORER_URL","get"],"mappings":"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","sourcesContent":["import { Coord } from 'react-tile-map'\nimport { Color } from 'decentraland-ui'\nimport { Eth } from 'web3x/eth'\nimport { Address } from 'web3x/address'\nimport { config } from 'config'\nimport { getEth } from 'modules/wallet/utils'\nimport { LAND_REGISTRY_ADDRESS, ESTATE_REGISTRY_ADDRESS } from 'modules/common/contracts'\nimport { EstateRegistry } from 'contracts/EstateRegistry'\nimport { LANDRegistry } from 'contracts/LANDRegistry'\nimport { isZero } from 'lib/address'\nimport { Land, LandTile, LandType, RoleType } from './types'\n\nexport const LAND_POOL_ADDRESS = '0xDc13378daFca7Fe2306368A16BCFac38c80BfCAD'\nexport const MAX_PARCELS_PER_TX = 20\nexport const SEPARATOR = ','\n\nexport const coordsToId = (x: string | number, y: string | number) => x + SEPARATOR + y\n\nexport const idToCoords = (id: string) => id.split(SEPARATOR).map(coord => +coord) as [number, number]\n\nexport const isCoords = (id: string) => id.includes(SEPARATOR)\n\nexport const getCoords = (land: Land): Coord =>\n  land.type === LandType.PARCEL ? { x: land.x!, y: land.y! } : { x: land.parcels![0].x!, y: land.parcels![0].y! }\n\nexport const getCenter = (selection: { x: number; y: number }[]) => {\n  const xs = [...new Set(selection.map(coords => coords.x).sort())]\n  const ys = [...new Set(selection.map(coords => coords.y).sort())]\n  const x = xs[(xs.length / 2) | 0]\n  const y = ys[(ys.length / 2) | 0]\n  return [x, y]\n}\n\nexport const colorByRole: Record<RoleType, string> = {\n  [RoleType.OWNER]: Color.SUMMER_RED,\n  [RoleType.OPERATOR]: Color.LUISXVI_VIOLET\n}\n\nexport const emptyColorByRole: Record<RoleType, string> = {\n  [RoleType.OWNER]: '#ab2039',\n  [RoleType.OPERATOR]: '#8f1d9b'\n}\n\nexport const selectionBorderColorByRole: Record<RoleType, string> = {\n  [RoleType.OWNER]: '#ff8199',\n  [RoleType.OPERATOR]: '#d742e8'\n}\n\nexport const hoverFillByRole = {\n  [RoleType.OWNER]: '#ff8199',\n  [RoleType.OPERATOR]: '#d742e8'\n}\n\nexport const hoverStrokeByRole = {\n  [RoleType.OWNER]: '#fcc6d1',\n  [RoleType.OPERATOR]: '#ef5eff'\n}\n\nexport const getSelection = (land: Land) =>\n  land.type === LandType.PARCEL ? [{ x: land.x!, y: land.y! }] : land.parcels!.map(parcel => ({ x: parcel.x, y: parcel.y }))\n\nexport const getUpdateOperator = async (land: Land) => {\n  const eth: Eth = await getEth()\n\n  try {\n    switch (land.type) {\n      case LandType.PARCEL: {\n        const landRegistry = new LANDRegistry(eth, Address.fromString(LAND_REGISTRY_ADDRESS))\n        const tokenId = await landRegistry.methods.encodeTokenId(land.x!, land.y!).call()\n        const updateOperator = await landRegistry.methods.updateOperator(tokenId).call()\n        const address = updateOperator.toString()\n        return isZero(address) ? null : address\n      }\n\n      case LandType.ESTATE: {\n        const estateRegistry = new EstateRegistry(eth, Address.fromString(ESTATE_REGISTRY_ADDRESS))\n        const updateOperator = await estateRegistry.methods.updateOperator(land.id).call()\n        const address = updateOperator.toString()\n        return isZero(address) ? null : address\n      }\n      default:\n        return null\n    }\n  } catch (error) {\n    return null\n  }\n}\n\nexport const areEqualCoords = (coord1: Coord, coord2: Coord) => coord1.x === coord2.x && coord1.y === coord2.y\n\nexport const getCoordMatcher = (coord1: Coord) => (coord2: Coord) => areEqualCoords(coord1, coord2)\n\nexport const getNeighbourMatcher = (coord1: Coord) => (coord2: Coord) =>\n  (coord1.x === coord2.x && (coord1.y === coord2.y + 1 || coord1.y === coord2.y - 1)) ||\n  (coord1.y === coord2.y && (coord1.x === coord2.x + 1 || coord1.x === coord2.x - 1))\n\nexport function hasNeighbour(coord: Coord, all: Coord[]) {\n  return all.some(getNeighbourMatcher(coord))\n}\n\nexport function getNeighbours(coord: Coord, all: Coord[]) {\n  return all.filter(getNeighbourMatcher(coord))\n}\n\nconst visit = (coord: Coord, all: Coord[] = [coord], visited: Coord[] = []) => {\n  const isVisited = visited.some(getCoordMatcher(coord))\n\n  if (!isVisited) {\n    visited.push(coord)\n    const neighbours = getNeighbours(coord, all)\n    for (const neighbour of neighbours) {\n      visit(neighbour, all, visited)\n    }\n  }\n  return visited\n}\n\nexport const areConnected = (coords: Coord[]) => {\n  if (coords.length === 0) {\n    return false\n  }\n  const visited = visit(coords[0], coords)\n  return visited.length === coords.length\n}\n\nexport const getDiff = (a: Coord[], b: Coord[]) => {\n  return b.filter(coord => !a.some(getCoordMatcher(coord)))\n}\n\nexport const getCoordsToAdd = (original: Coord[], modified: Coord[]) => getDiff(original, modified)\nexport const getCoordsToRemove = (original: Coord[], modified: Coord[]) => getDiff(modified, original)\n\nexport const splitCoords = (coords: Coord[]): [number[], number[]] => {\n  const xs: number[] = []\n  const ys: number[] = []\n  for (const coord of coords) {\n    xs.push(coord.x)\n    ys.push(coord.y)\n  }\n\n  return [xs, ys]\n}\n\nexport const buildMetadata = (name: string, description = '') => {\n  return `0,\"${name.replace(/\"/g, '\\\\\"')}\",\"${description.replace(/\"/g, '\\\\\"')}\",`\n}\n\nexport function locateNextLand(landTiles: Record<string, LandTile>, currentLandId: string) {\n  const landIds = Object.keys(landTiles)\n\n  const landIndex = landIds.indexOf(currentLandId)\n  const index = landIndex === -1 ? 0 : landIndex\n  const nextIndex = (((index + 1) % landIds.length) + landIds.length) % landIds.length\n\n  const nextLandId = landIds[nextIndex]\n  return landTiles[nextLandId]!.land\n}\n\nexport function getExplorerURL(x: string | number, y: string | number) {\n  const EXPLORER_URL = config.get('EXPLORER_URL', '')\n  return `${EXPLORER_URL}?position=${coordsToId(x, y)}`\n}\n"]},"metadata":{},"sourceType":"module"}