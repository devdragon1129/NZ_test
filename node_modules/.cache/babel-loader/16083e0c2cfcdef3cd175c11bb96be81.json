{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/SettingsPage/SettingsPage.tsx\";\nimport * as React from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { Grid, Blockie, Loader, Row, Field, Dropdown, Button, Section, Header } from 'decentraland-ui';\nimport { isMobile } from 'decentraland-dapps/dist/lib/utils';\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Profile from 'components/Profile';\nimport LoggedInDetailPage from 'components/LoggedInDetailPage';\nimport SignInRequired from 'components/SignInRequired';\nimport { shorten, isValid } from 'lib/address';\nimport { LandType } from 'modules/land/types';\nimport './SettingsPage.css';\n\nvar SettingsPage = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(SettingsPage, _React$PureComponent);\n\n  function SettingsPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SettingsPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SettingsPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.timeoutId = null;\n    _this.state = {\n      hasCopiedText: false,\n      type: LandType.PARCEL,\n      managerAddress: ''\n    };\n\n    _this.handleOnCopy = function () {\n      if (_this.timeoutId) {\n        clearTimeout(_this.timeoutId);\n      }\n\n      _this.setState({\n        hasCopiedText: true\n      });\n\n      _this.timeoutId = setTimeout(function () {\n        _this.timeoutId = null;\n\n        _this.setState({\n          hasCopiedText: false\n        });\n      }, 1200);\n    };\n\n    _this.handleAddressChange = function (_event, data) {\n      _this.setState({\n        managerAddress: data.value\n      });\n    };\n\n    _this.handleTypeChange = function (_event, data) {\n      _this.setState({\n        type: data.value\n      });\n    };\n\n    _this.handleAddAuthorization = function () {\n      var onSetUpdateManager = _this.props.onSetUpdateManager;\n      var _this$state = _this.state,\n          managerAddress = _this$state.managerAddress,\n          type = _this$state.type;\n      onSetUpdateManager(managerAddress, type, true);\n    };\n\n    return _this;\n  }\n\n  _createClass(SettingsPage, [{\n    key: \"renderPage\",\n    value: function renderPage() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          authorizations = _this$props.authorizations,\n          wallet = _this$props.wallet,\n          onSetUpdateManager = _this$props.onSetUpdateManager;\n      var _this$state2 = this.state,\n          hasCopiedText = _this$state2.hasCopiedText,\n          managerAddress = _this$state2.managerAddress,\n          type = _this$state2.type;\n      var isValidAddress = isValid(managerAddress);\n      return /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, wallet === null ? /*#__PURE__*/React.createElement(Loader, {\n        size: \"big\",\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        computer: 4,\n        mobile: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left-column secondary-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, t('global.address'))), /*#__PURE__*/React.createElement(Grid.Column, {\n        computer: 12,\n        mobile: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blockie-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Blockie, {\n        seed: wallet.address,\n        scale: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"address-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, isMobile() ? shorten(wallet.address) : wallet.address), /*#__PURE__*/React.createElement(CopyToClipboard, {\n        text: wallet.address,\n        onCopy: this.handleOnCopy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }, hasCopiedText ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }\n      }, t('settings_page.copied')) : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }\n      }, t('settings_page.copy_address')))))), /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        computer: 4,\n        mobile: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left-column secondary-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, t('settings_page.authorizations'))), /*#__PURE__*/React.createElement(Grid.Column, {\n        computer: 12,\n        mobile: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Section, {\n        className: \"authoziations-disclaimer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, t('settings_page.disclaimer', {\n        emphasis: /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 62\n          }\n        }, t('settings_page.emphasis'))\n      })), /*#__PURE__*/React.createElement(Row, {\n        className: \"authorization-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(T, {\n        id: \"settings_page.authorization_action\",\n        values: {\n          address: /*#__PURE__*/React.createElement(Field, {\n            value: managerAddress,\n            onChange: this.handleAddressChange,\n            placeholder: \"0x...\",\n            error: managerAddress.length > 0 && !isValidAddress,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }\n          }),\n          type: /*#__PURE__*/React.createElement(Dropdown, {\n            options: [{\n              text: 'Parcels',\n              value: LandType.PARCEL\n            }, {\n              text: 'Estates',\n              value: LandType.ESTATE\n            }],\n            value: type,\n            onChange: this.handleTypeChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        primary: true,\n        disabled: managerAddress.length === 0 || !isValidAddress,\n        onClick: this.handleAddAuthorization,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }, t('global.submit'))), authorizations.length > 0 ? /*#__PURE__*/React.createElement(Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, t('settings_page.authorizations_title')), authorizations.map(function (authorization) {\n        return /*#__PURE__*/React.createElement(Row, {\n          className: \"authorization\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(T, {\n          id: \"settings_page.authorization\",\n          values: {\n            address: /*#__PURE__*/React.createElement(Profile, {\n              address: authorization.address,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 38\n              }\n            }),\n            type: /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 31\n              }\n            }, \"\\xA0\", /*#__PURE__*/React.createElement(\"strong\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 39\n              }\n            }, t(\"global.\".concat(authorization.type, \"_plural\"))), \"\\xA0\")\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          basic: true,\n          onClick: function onClick() {\n            return onSetUpdateManager(authorization.address, authorization.type, false);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }\n        }, t('global.revoke')));\n      })) : null))));\n    }\n  }, {\n    key: \"renderLogin\",\n    value: function renderLogin() {\n      return /*#__PURE__*/React.createElement(SignInRequired, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        active: true,\n        size: \"huge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(LoggedInDetailPage, {\n        className: \"SettingsPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 12\n        }\n      }, this.renderPage());\n    }\n  }]);\n\n  return SettingsPage;\n}(React.PureComponent);\n\nexport { SettingsPage as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SettingsPage/SettingsPage.tsx"],"names":["React","CopyToClipboard","Grid","Blockie","Loader","Row","Field","Dropdown","Button","Section","Header","isMobile","t","T","Profile","LoggedInDetailPage","SignInRequired","shorten","isValid","LandType","SettingsPage","timeoutId","state","hasCopiedText","type","PARCEL","managerAddress","handleOnCopy","clearTimeout","setState","setTimeout","handleAddressChange","_event","data","value","handleTypeChange","handleAddAuthorization","onSetUpdateManager","props","authorizations","wallet","isValidAddress","address","emphasis","length","text","ESTATE","map","authorization","renderPage","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport { Grid, Blockie, Loader, Row, Field, InputOnChangeData, Dropdown, Button, Section, DropdownProps, Header } from 'decentraland-ui'\nimport { isMobile } from 'decentraland-dapps/dist/lib/utils'\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils'\n\nimport Profile from 'components/Profile'\nimport LoggedInDetailPage from 'components/LoggedInDetailPage'\nimport SignInRequired from 'components/SignInRequired'\nimport { shorten, isValid } from 'lib/address'\nimport { LandType } from 'modules/land/types'\nimport { Props, State } from './SettingsPage.types'\nimport './SettingsPage.css'\n\nexport default class SettingsPage extends React.PureComponent<Props, State> {\n  timeoutId: NodeJS.Timer | null = null\n\n  state: State = {\n    hasCopiedText: false,\n    type: LandType.PARCEL,\n    managerAddress: ''\n  }\n\n  handleOnCopy = () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId)\n    }\n    this.setState({ hasCopiedText: true })\n    this.timeoutId = setTimeout(() => {\n      this.timeoutId = null\n      this.setState({ hasCopiedText: false })\n    }, 1200)\n  }\n\n  handleAddressChange = (_event: React.ChangeEvent<HTMLInputElement>, data: InputOnChangeData) => {\n    this.setState({ managerAddress: data.value })\n  }\n\n  handleTypeChange = (_event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\n    this.setState({ type: data.value as LandType })\n  }\n\n  handleAddAuthorization = () => {\n    const { onSetUpdateManager } = this.props\n    const { managerAddress, type } = this.state\n    onSetUpdateManager(managerAddress, type, true)\n  }\n\n  renderPage() {\n    const { authorizations, wallet, onSetUpdateManager } = this.props\n    const { hasCopiedText, managerAddress, type } = this.state\n\n    const isValidAddress = isValid(managerAddress)\n\n    return (\n      <Grid>\n        {wallet === null ? (\n          <Loader size=\"big\" active />\n        ) : (\n          <>\n            <Grid.Row>\n              <Grid.Column computer={4} mobile={16}>\n                <div className=\"left-column secondary-text\">{t('global.address')}</div>\n              </Grid.Column>\n              <Grid.Column computer={12} mobile={16}>\n                <div className=\"blockie-container\">\n                  <Blockie seed={wallet.address} scale={12} />\n                </div>\n                <div className=\"address-container\">\n                  <div className=\"address\">{isMobile() ? shorten(wallet.address!) : wallet.address}</div>\n                  <CopyToClipboard text={wallet.address} onCopy={this.handleOnCopy}>\n                    {hasCopiedText ? (\n                      <span>{t('settings_page.copied')}</span>\n                    ) : (\n                      <span className=\"link\">{t('settings_page.copy_address')}</span>\n                    )}\n                  </CopyToClipboard>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row>\n              <Grid.Column computer={4} mobile={16}>\n                <div className=\"left-column secondary-text\">{t('settings_page.authorizations')}</div>\n              </Grid.Column>\n              <Grid.Column computer={12} mobile={16}>\n                <Section className=\"authoziations-disclaimer\">\n                  {t('settings_page.disclaimer', { emphasis: <strong>{t('settings_page.emphasis')}</strong> })}\n                </Section>\n                <Row className=\"authorization-action\">\n                  <T\n                    id=\"settings_page.authorization_action\"\n                    values={{\n                      address: (\n                        <Field\n                          value={managerAddress}\n                          onChange={this.handleAddressChange}\n                          placeholder=\"0x...\"\n                          error={managerAddress.length > 0 && !isValidAddress}\n                        />\n                      ),\n                      type: (\n                        <Dropdown\n                          options={[\n                            {\n                              text: 'Parcels',\n                              value: LandType.PARCEL\n                            },\n                            {\n                              text: 'Estates',\n                              value: LandType.ESTATE\n                            }\n                          ]}\n                          value={type}\n                          onChange={this.handleTypeChange}\n                        ></Dropdown>\n                      )\n                    }}\n                  ></T>\n\n                  <Button\n                    size=\"small\"\n                    primary\n                    disabled={managerAddress.length === 0 || !isValidAddress}\n                    onClick={this.handleAddAuthorization}\n                  >\n                    {t('global.submit')}\n                  </Button>\n                </Row>\n\n                {authorizations.length > 0 ? (\n                  <Section>\n                    <Header sub>{t('settings_page.authorizations_title')}</Header>\n                    {authorizations.map(authorization => (\n                      <Row className=\"authorization\">\n                        <T\n                          id=\"settings_page.authorization\"\n                          values={{\n                            address: <Profile address={authorization.address} />,\n                            type: (\n                              <span>\n                                &nbsp;<strong>{t(`global.${authorization.type}_plural`)}</strong>&nbsp;\n                              </span>\n                            )\n                          }}\n                        />\n                        <Button basic onClick={() => onSetUpdateManager(authorization.address, authorization.type, false)}>\n                          {t('global.revoke')}\n                        </Button>\n                      </Row>\n                    ))}\n                  </Section>\n                ) : null}\n              </Grid.Column>\n            </Grid.Row>\n          </>\n        )}\n      </Grid>\n    )\n  }\n\n  renderLogin() {\n    return <SignInRequired />\n  }\n\n  renderLoading() {\n    return (\n      <div className=\"center\">\n        <Loader active size=\"huge\" />\n      </div>\n    )\n  }\n\n  render() {\n    return <LoggedInDetailPage className=\"SettingsPage\">{this.renderPage()}</LoggedInDetailPage>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}