{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar sequences = {};\nvar DEFAULTS = {\n  timestamp: function timestamp() {\n    return function () {\n      return Date.now();\n    };\n  },\n  datetime: function datetime() {\n    return function () {\n      return new Date().toISOString();\n    };\n  },\n  date: function date() {\n    return function () {\n      return new Date().toISOString().slice(0, 10);\n    };\n  },\n  time: function time() {\n    return function () {\n      return new Date().toISOString().slice(11);\n    };\n  },\n  random: function random() {\n    return function () {\n      return Math.random();\n    };\n  },\n  randomint: function randomint(args) {\n    var _a;\n\n    var max = (_a = args === null || args === void 0 ? void 0 : args.max) !== null && _a !== void 0 ? _a : 2;\n    return function () {\n      return Math.floor(Math.random() * max);\n    };\n  },\n  seq: function seq(args) {\n    var _a;\n\n    var name = (_a = args === null || args === void 0 ? void 0 : args.name) !== null && _a !== void 0 ? _a : \"\";\n    sequences[name] || (sequences[name] = 0);\n    return function () {\n      return sequences[name]++;\n    };\n  }\n};\nvar getDef = Object.assign(_getDef, {\n  DEFAULTS: DEFAULTS\n});\n\nfunction _getDef() {\n  return {\n    keyword: \"dynamicDefaults\",\n    type: \"object\",\n    schemaType: [\"string\", \"object\"],\n    modifying: true,\n    valid: true,\n    compile: function compile(schema, _parentSchema, it) {\n      if (!it.opts.useDefaults || it.compositeRule) return function () {\n        return true;\n      };\n      var fs = {};\n\n      for (var key in schema) {\n        fs[key] = getDefault(schema[key]);\n      }\n\n      var empty = it.opts.useDefaults === \"empty\";\n      return function (data) {\n        for (var prop in schema) {\n          if (data[prop] === undefined || empty && (data[prop] === null || data[prop] === \"\")) {\n            data[prop] = fs[prop]();\n          }\n        }\n\n        return true;\n      };\n    },\n    metaSchema: {\n      type: \"object\",\n      additionalProperties: {\n        anyOf: [{\n          type: \"string\"\n        }, {\n          type: \"object\",\n          additionalProperties: false,\n          required: [\"func\", \"args\"],\n          properties: {\n            func: {\n              type: \"string\"\n            },\n            args: {\n              type: \"object\"\n            }\n          }\n        }]\n      }\n    }\n  };\n}\n\nfunction getDefault(d) {\n  return typeof d == \"object\" ? getObjDefault(d) : getStrDefault(d);\n}\n\nfunction getObjDefault(_ref) {\n  var func = _ref.func,\n      args = _ref.args;\n  var def = DEFAULTS[func];\n  assertDefined(func, def);\n  return def(args);\n}\n\nfunction getStrDefault() {\n  var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var def = DEFAULTS[d];\n  assertDefined(d, def);\n  return def();\n}\n\nfunction assertDefined(name, def) {\n  if (!def) throw new Error(\"invalid \\\"dynamicDefaults\\\" keyword property value: \".concat(name));\n}\n\nexports.default = getDef;\nmodule.exports = getDef;","map":null,"metadata":{},"sourceType":"script"}