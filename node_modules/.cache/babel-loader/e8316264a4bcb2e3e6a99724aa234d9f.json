{"ast":null,"code":"import { connect } from 'react-redux';\nimport { openModal } from 'modules/modal/actions';\nimport { getError as getWalletError, isConnecting } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport WalletSignIn from './WalletSignIn';\n\nvar mapState = function mapState(state) {\n  return {\n    isConnecting: isConnecting(state),\n    hasError: !!getWalletError(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onOpenModal: function onOpenModal(name, metadata) {\n      return dispatch(openModal(name, metadata));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(WalletSignIn);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SideBar/WalletSignIn/WalletSignIn.container.ts"],"names":["connect","openModal","getError","getWalletError","isConnecting","WalletSignIn","mapState","state","hasError","mapDispatch","dispatch","onOpenModal","name","metadata"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAGA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,QAAQ,IAAIC,cAArB,EAAqCC,YAArC,QAAyD,kDAAzD;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDH,IAAAA,YAAY,EAAEA,YAAY,CAACG,KAAD,CAD2B;AAErDC,IAAAA,QAAQ,EAAE,CAAC,CAACL,cAAc,CAACI,KAAD;AAF2B,GAAtC;AAAA,CAAjB;;AAKA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,WAAW,EAAE,qBAACC,IAAD,EAAOC,QAAP;AAAA,aAAoBH,QAAQ,CAACT,SAAS,CAACW,IAAD,EAAOC,QAAP,CAAV,CAA5B;AAAA;AADmD,GAA9C;AAAA,CAApB;;AAIA,eAAeb,OAAO,CAACM,QAAD,EAAWG,WAAX,CAAP,CAA+BJ,YAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\n\nimport { RootState } from 'modules/common/types'\nimport { openModal } from 'modules/modal/actions'\nimport { getError as getWalletError, isConnecting } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './WalletSignIn.types'\nimport WalletSignIn from './WalletSignIn'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  isConnecting: isConnecting(state),\n  hasError: !!getWalletError(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onOpenModal: (name, metadata) => dispatch(openModal(name, metadata))\n})\n\nexport default connect(mapState, mapDispatch)(WalletSignIn)\n"]},"metadata":{},"sourceType":"module"}