{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/SyncToast/SyncToast.tsx\";\nimport * as React from 'react';\nimport { Close, Button } from 'decentraland-ui';\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils';\nimport './SyncToast.css';\nexport var SYNC_SIGN_IN_EVENT = 'Sign in from sync toast';\n\nvar SyncToast = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(SyncToast, _React$PureComponent);\n\n  function SyncToast() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SyncToast);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SyncToast)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSynced: false\n    };\n    _this.analytics = getAnalytics();\n\n    _this.handleRetry = function () {\n      var onRetry = _this.props.onRetry;\n      onRetry();\n    };\n\n    _this.handleLogin = function () {\n      _this.analytics.track(SYNC_SIGN_IN_EVENT);\n\n      _this.props.onOpenModal('WalletLoginModal');\n    };\n\n    return _this;\n  }\n\n  _createClass(SyncToast, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.syncCount > 0 && this.props.syncCount === 0) {\n        this.setState({\n          isSynced: false\n        });\n      } else if (nextProps.syncCount === 0 && this.props.syncCount > 0) {\n        this.setState({\n          isSynced: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          syncCount = _this$props.syncCount,\n          errorCount = _this$props.errorCount,\n          projectCount = _this$props.projectCount,\n          didDismissSignInToast = _this$props.didDismissSignInToast,\n          didDismissSyncedToast = _this$props.didDismissSyncedToast,\n          isLoggedIn = _this$props.isLoggedIn,\n          onDismissSignInToast = _this$props.onDismissSignInToast,\n          onDismissSyncedToast = _this$props.onDismissSyncedToast;\n      var isSynced = this.state.isSynced;\n      var showSynced = isSynced && !didDismissSyncedToast;\n      var showSignIn = !isLoggedIn && !didDismissSignInToast && projectCount > 0;\n\n      if (syncCount > 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"SyncToast\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"message\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }\n        }, t('sync.loading')));\n      } else if (errorCount > 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"SyncToast\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"message\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"error-indicator\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }), t('sync.error', {\n          errorCount: errorCount\n        }), /*#__PURE__*/React.createElement(Button, {\n          basic: true,\n          onClick: this.handleRetry,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }\n        }, t('sync.retry'))));\n      } else if (showSynced) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"SyncToast\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"message\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }\n        }, t('sync.success'), /*#__PURE__*/React.createElement(Close, {\n          small: true,\n          onClick: onDismissSyncedToast,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }\n        })));\n      } else if (showSignIn) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"SyncToast\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"message\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(T, {\n          id: \"toasts.localstorage\",\n          values: {\n            sign_in: /*#__PURE__*/React.createElement(\"span\", {\n              className: \"sign-in\",\n              onClick: this.handleLogin,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }\n            }, \"\\xA0\", t('global.sign_in'), \"\\xA0\")\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Close, {\n          small: true,\n          onClick: onDismissSignInToast,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      return null;\n    }\n  }]);\n\n  return SyncToast;\n}(React.PureComponent);\n\nexport { SyncToast as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SyncToast/SyncToast.tsx"],"names":["React","Close","Button","t","T","getAnalytics","SYNC_SIGN_IN_EVENT","SyncToast","state","isSynced","analytics","handleRetry","onRetry","props","handleLogin","track","onOpenModal","nextProps","syncCount","setState","errorCount","projectCount","didDismissSignInToast","didDismissSyncedToast","isLoggedIn","onDismissSignInToast","onDismissSyncedToast","showSynced","showSignIn","sign_in","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nimport { Close, Button } from 'decentraland-ui'\nimport { t, T } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { getAnalytics } from 'decentraland-dapps/dist/modules/analytics/utils'\n\nimport { Props, State } from './SyncToast.types'\nimport './SyncToast.css'\n\nexport const SYNC_SIGN_IN_EVENT = 'Sign in from sync toast'\n\nexport default class SyncToast extends React.PureComponent<Props, State> {\n  state: State = {\n    isSynced: false\n  }\n\n  analytics = getAnalytics()\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.syncCount > 0 && this.props.syncCount === 0) {\n      this.setState({ isSynced: false })\n    } else if (nextProps.syncCount === 0 && this.props.syncCount > 0) {\n      this.setState({ isSynced: true })\n    }\n  }\n\n  handleRetry = () => {\n    const { onRetry } = this.props\n    onRetry()\n  }\n\n  handleLogin = () => {\n    this.analytics.track(SYNC_SIGN_IN_EVENT)\n    this.props.onOpenModal('WalletLoginModal')\n  }\n\n  render() {\n    const {\n      syncCount,\n      errorCount,\n      projectCount,\n      didDismissSignInToast,\n      didDismissSyncedToast,\n      isLoggedIn,\n      onDismissSignInToast,\n      onDismissSyncedToast\n    } = this.props\n    const { isSynced } = this.state\n\n    const showSynced = isSynced && !didDismissSyncedToast\n    const showSignIn = !isLoggedIn && !didDismissSignInToast && projectCount > 0\n\n    if (syncCount > 0) {\n      return (\n        <div className=\"SyncToast\">\n          <div className=\"message\">{t('sync.loading')}</div>\n        </div>\n      )\n    } else if (errorCount > 0) {\n      return (\n        <div className=\"SyncToast\">\n          <div className=\"message\">\n            <div className=\"error-indicator\" />\n            {t('sync.error', { errorCount })}\n            <Button basic onClick={this.handleRetry}>\n              {t('sync.retry')}\n            </Button>\n          </div>\n        </div>\n      )\n    } else if (showSynced) {\n      return (\n        <div className=\"SyncToast\">\n          <div className=\"message\">\n            {t('sync.success')}\n            <Close small onClick={onDismissSyncedToast} />\n          </div>\n        </div>\n      )\n    } else if (showSignIn) {\n      return (\n        <div className=\"SyncToast\">\n          <div className=\"message\">\n            <T\n              id=\"toasts.localstorage\"\n              values={{\n                sign_in: (\n                  <span className=\"sign-in\" onClick={this.handleLogin}>\n                    &nbsp;{t('global.sign_in')}&nbsp;\n                  </span>\n                )\n              }}\n            />\n            <Close small onClick={onDismissSignInToast} />\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"module"}