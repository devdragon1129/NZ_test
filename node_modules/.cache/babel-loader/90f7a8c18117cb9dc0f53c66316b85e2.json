{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar keywords_1 = __importDefault(require(\"./keywords\"));\n\nvar ajvKeywords = function ajvKeywords(ajv, keyword) {\n  if (Array.isArray(keyword)) {\n    var _iterator = _createForOfIteratorHelper(keyword),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var k = _step.value;\n        get(k)(ajv);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return ajv;\n  }\n\n  if (keyword) {\n    get(keyword)(ajv);\n    return ajv;\n  }\n\n  for (keyword in keywords_1.default) {\n    get(keyword)(ajv);\n  }\n\n  return ajv;\n};\n\najvKeywords.get = get;\n\nfunction get(keyword) {\n  var defFunc = keywords_1.default[keyword];\n  if (!defFunc) throw new Error(\"Unknown keyword \" + keyword);\n  return defFunc;\n}\n\nexports.default = ajvKeywords;\nmodule.exports = ajvKeywords; // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\nmodule.exports.default = ajvKeywords;","map":null,"metadata":{},"sourceType":"script"}