{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/LandTransferPage/LandTransferPage.tsx\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Field, Form, Row, Button, Section } from 'decentraland-ui';\nimport { Network } from '@dcl/schemas';\nimport { NetworkButton } from 'decentraland-dapps/dist/containers';\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport LandAction from 'components/LandAction';\nimport LandProviderPage from 'components/LandProviderPage';\nimport { RoleType } from 'modules/land/types';\nimport { locations } from 'routing/locations';\nimport { isValid, isEqual } from 'lib/address';\nimport './LandTransferPage.css';\n\nvar LandTransferPage = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(LandTransferPage, _React$PureComponent);\n\n  function LandTransferPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LandTransferPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LandTransferPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      address: '',\n      isValid: true\n    };\n\n    _this.handleChange = function (_event, data) {\n      _this.setState({\n        isValid: !data.value || isValid(data.value),\n        address: data.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LandTransferPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onTransfer = this.props.onTransfer;\n      var _this$state = this.state,\n          address = _this$state.address,\n          isValid = _this$state.isValid;\n      return /*#__PURE__*/React.createElement(LandProviderPage, {\n        className: \"LandTransferPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, function (land) {\n        var message;\n        var isOwner = isEqual(land.owner, address);\n\n        if (isOwner) {\n          message = t('transfer_page.same_owner');\n        } else if (!isValid) {\n          message = t('transfer_page.invalid_address');\n        }\n\n        return /*#__PURE__*/React.createElement(LandAction, {\n          land: land,\n          title: t('transfer_page.title'),\n          subtitle: /*#__PURE__*/React.createElement(T, {\n            id: \"transfer_page.subtitle\",\n            values: {\n              name: /*#__PURE__*/React.createElement(\"strong\", {\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 72\n                }\n              }, land.name)\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }\n          }),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          onSubmit: function onSubmit() {\n            return onTransfer(land, address);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          label: \"Address\",\n          type: \"address\",\n          value: address,\n          onChange: _this2.handleChange,\n          placeholder: \"0x...\",\n          error: !isValid || isOwner,\n          message: message,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Section, {\n          className: \"disclaimer\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"danger-text\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(T, {\n          id: \"transfer_page.disclaimer\",\n          values: {\n            br: /*#__PURE__*/React.createElement(\"br\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 68\n              }\n            })\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        }))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          className: \"cancel\",\n          to: locations.landDetail(land.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }\n        }, t('global.cancel'))), /*#__PURE__*/React.createElement(NetworkButton, {\n          type: \"submit\",\n          primary: true,\n          disabled: !address || !isValid || land.role !== RoleType.OWNER || isEqual(land.owner, address),\n          network: Network.ETHEREUM,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }\n        }, t('global.submit')))));\n      });\n    }\n  }]);\n\n  return LandTransferPage;\n}(React.PureComponent);\n\nexport { LandTransferPage as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/LandTransferPage/LandTransferPage.tsx"],"names":["React","Link","Field","Form","Row","Button","Section","Network","NetworkButton","T","t","LandAction","LandProviderPage","RoleType","locations","isValid","isEqual","LandTransferPage","state","address","handleChange","_event","data","setState","value","onTransfer","props","land","message","isOwner","owner","name","br","landDetail","id","role","OWNER","ETHEREUM","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,EAAmCC,IAAnC,EAAyCC,GAAzC,EAA8CC,MAA9C,EAAsDC,OAAtD,QAAqE,iBAArE;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,SAASC,CAAT,EAAYC,CAAZ,QAAqB,mDAArB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,aAAjC;AAEA,OAAO,wBAAP;;IAEqBC,gB;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH;AAENJ,MAAAA,OAAO,EAAE;AAFH,K;;UAKRK,Y,GAAe,UAACC,MAAD,EAA8CC,IAA9C,EAA0E;AACvF,YAAKC,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE,CAACO,IAAI,CAACE,KAAN,IAAeT,OAAO,CAACO,IAAI,CAACE,KAAN,CAAjC;AAA+CL,QAAAA,OAAO,EAAEG,IAAI,CAACE;AAA7D,OAAd;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,UACCC,UADD,GACgB,KAAKC,KADrB,CACCD,UADD;AAAA,wBAEsB,KAAKP,KAF3B;AAAA,UAECC,OAFD,eAECA,OAFD;AAAA,UAEUJ,OAFV,eAEUA,OAFV;AAGP,0BACE,oBAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAAAY,IAAI,EAAI;AACP,YAAIC,OAAJ;AACA,YAAMC,OAAO,GAAGb,OAAO,CAACW,IAAI,CAACG,KAAN,EAAaX,OAAb,CAAvB;;AACA,YAAIU,OAAJ,EAAa;AACXD,UAAAA,OAAO,GAAGlB,CAAC,CAAC,0BAAD,CAAX;AACD,SAFD,MAEO,IAAI,CAACK,OAAL,EAAc;AACnBa,UAAAA,OAAO,GAAGlB,CAAC,CAAC,+BAAD,CAAX;AACD;;AACD,4BACE,oBAAC,UAAD;AACE,UAAA,IAAI,EAAEiB,IADR;AAEE,UAAA,KAAK,EAAEjB,CAAC,CAAC,qBAAD,CAFV;AAGE,UAAA,QAAQ,eAAE,oBAAC,CAAD;AAAG,YAAA,EAAE,EAAC,wBAAN;AAA+B,YAAA,MAAM,EAAE;AAAEqB,cAAAA,IAAI,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAASJ,IAAI,CAACI,IAAd;AAAR,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKE,oBAAC,IAAD;AAAM,UAAA,QAAQ,EAAE;AAAA,mBAAMN,UAAU,CAACE,IAAD,EAAOR,OAAP,CAAhB;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,IAAI,EAAC,SAFP;AAGE,UAAA,KAAK,EAAEA,OAHT;AAIE,UAAA,QAAQ,EAAE,MAAI,CAACC,YAJjB;AAKE,UAAA,WAAW,EAAC,OALd;AAME,UAAA,KAAK,EAAE,CAACL,OAAD,IAAYc,OANrB;AAOE,UAAA,OAAO,EAAED,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAUE,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,CAAD;AAAG,UAAA,EAAE,EAAC,0BAAN;AAAiC,UAAA,MAAM,EAAE;AAAEI,YAAAA,EAAE,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CAVF,eAeE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAyB,UAAA,EAAE,EAAElB,SAAS,CAACmB,UAAV,CAAqBN,IAAI,CAACO,EAA1B,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASxB,CAAC,CAAC,eAAD,CAAV,CADF,CADF,eAIE,oBAAC,aAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,QAAQ,EAAE,CAACS,OAAD,IAAY,CAACJ,OAAb,IAAwBY,IAAI,CAACQ,IAAL,KAActB,QAAQ,CAACuB,KAA/C,IAAwDpB,OAAO,CAACW,IAAI,CAACG,KAAN,EAAaX,OAAb,CAH3E;AAIE,UAAA,OAAO,EAAEZ,OAAO,CAAC8B,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMG3B,CAAC,CAAC,eAAD,CANJ,CAJF,CAfF,CALF,CADF;AAqCD,OA9CH,CADF;AAkDD;;;;EA/D2CV,KAAK,CAACsC,a;;SAA/BrB,gB","sourcesContent":["import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Field, InputOnChangeData, Form, Row, Button, Section } from 'decentraland-ui'\nimport { Network } from '@dcl/schemas'\nimport { NetworkButton } from 'decentraland-dapps/dist/containers'\nimport { T, t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport LandAction from 'components/LandAction'\nimport LandProviderPage from 'components/LandProviderPage'\nimport { RoleType } from 'modules/land/types'\nimport { locations } from 'routing/locations'\nimport { isValid, isEqual } from 'lib/address'\nimport { Props, State } from './LandTransferPage.types'\nimport './LandTransferPage.css'\n\nexport default class LandTransferPage extends React.PureComponent<Props, State> {\n  state = {\n    address: '',\n    isValid: true\n  }\n\n  handleChange = (_event: React.ChangeEvent<HTMLInputElement>, data: InputOnChangeData) => {\n    this.setState({ isValid: !data.value || isValid(data.value), address: data.value })\n  }\n\n  render() {\n    const { onTransfer } = this.props\n    const { address, isValid } = this.state\n    return (\n      <LandProviderPage className=\"LandTransferPage\">\n        {land => {\n          let message\n          const isOwner = isEqual(land.owner, address)\n          if (isOwner) {\n            message = t('transfer_page.same_owner')\n          } else if (!isValid) {\n            message = t('transfer_page.invalid_address')\n          }\n          return (\n            <LandAction\n              land={land}\n              title={t('transfer_page.title')}\n              subtitle={<T id=\"transfer_page.subtitle\" values={{ name: <strong>{land.name}</strong> }} />}\n            >\n              <Form onSubmit={() => onTransfer(land, address)}>\n                <Field\n                  label=\"Address\"\n                  type=\"address\"\n                  value={address}\n                  onChange={this.handleChange}\n                  placeholder=\"0x...\"\n                  error={!isValid || isOwner}\n                  message={message}\n                />\n                <Section className=\"disclaimer\">\n                  <p className=\"danger-text\">\n                    <T id=\"transfer_page.disclaimer\" values={{ br: <br /> }} />\n                  </p>\n                </Section>\n                <Row>\n                  <Link className=\"cancel\" to={locations.landDetail(land.id)}>\n                    <Button>{t('global.cancel')}</Button>\n                  </Link>\n                  <NetworkButton\n                    type=\"submit\"\n                    primary\n                    disabled={!address || !isValid || land.role !== RoleType.OWNER || isEqual(land.owner, address)}\n                    network={Network.ETHEREUM}\n                  >\n                    {t('global.submit')}\n                  </NetworkButton>\n                </Row>\n              </Form>\n            </LandAction>\n          )\n        }}\n      </LandProviderPage>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}