{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { getData as getDeployments } from 'modules/deployment/selectors';\nexport var getState = function getState(state) {\n  return state.stats;\n};\nexport var getData = function getData(state) {\n  return getState(state).data;\n};\nexport var getLoading = function getLoading(state) {\n  return getState(state).loading;\n};\nexport var getError = function getError(state) {\n  return getState(state).error;\n};\nexport var getWeeklyStatsByDeploymentId = createSelector(getDeployments, getData, function (deployments, data) {\n  return Object.values(deployments).reduce(function (obj, deployment) {\n    obj[deployment.id] = deployment.base in data.weekly ? data.weekly[deployment.base] : null;\n    return obj;\n  }, {});\n});","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/stats/selectors.ts"],"names":["createSelector","getData","getDeployments","getState","state","stats","data","getLoading","loading","getError","error","getWeeklyStatsByDeploymentId","deployments","Object","values","reduce","obj","deployment","id","base","weekly"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,SAASC,OAAO,IAAIC,cAApB,QAA0C,8BAA1C;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsBA,KAAK,CAACC,KAA5B;AAAA,CAAjB;AACP,OAAO,IAAMJ,OAAO,GAAG,SAAVA,OAAU,CAACG,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBE,IAAtC;AAAA,CAAhB;AACP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACH,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBI,OAAtC;AAAA,CAAnB;AACP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACL,KAAD;AAAA,SAAsBD,QAAQ,CAACC,KAAD,CAAR,CAAgBM,KAAtC;AAAA,CAAjB;AACP,OAAO,IAAMC,4BAA4B,GAAGX,cAAc,CAKxDE,cALwD,EAKxCD,OALwC,EAK/B,UAACW,WAAD,EAAcN,IAAd;AAAA,SACzBO,MAAM,CAACC,MAAP,CAAcF,WAAd,EAA2BG,MAA3B,CAAkC,UAACC,GAAD,EAAMC,UAAN,EAAqB;AACrDD,IAAAA,GAAG,CAACC,UAAU,CAACC,EAAZ,CAAH,GAAqBD,UAAU,CAACE,IAAX,IAAmBb,IAAI,CAACc,MAAxB,GAAiCd,IAAI,CAACc,MAAL,CAAYH,UAAU,CAACE,IAAvB,CAAjC,GAAgE,IAArF;AACA,WAAOH,GAAP;AACD,GAHD,EAGG,EAHH,CADyB;AAAA,CAL+B,CAAnD","sourcesContent":["import { createSelector } from 'reselect'\nimport { RootState } from 'modules/common/types'\nimport { getData as getDeployments } from 'modules/deployment/selectors'\nimport { DeploymentState } from 'modules/deployment/reducer'\nimport { StatsState } from './reducer'\nimport { WeeklyStats } from './types'\n\nexport const getState = (state: RootState) => state.stats\nexport const getData = (state: RootState) => getState(state).data\nexport const getLoading = (state: RootState) => getState(state).loading\nexport const getError = (state: RootState) => getState(state).error\nexport const getWeeklyStatsByDeploymentId = createSelector<\n  RootState,\n  DeploymentState['data'],\n  StatsState['data'],\n  Record<string, WeeklyStats | null>\n>(getDeployments, getData, (deployments, data) =>\n  Object.values(deployments).reduce((obj, deployment) => {\n    obj[deployment.id] = deployment.base in data.weekly ? data.weekly[deployment.base] : null\n    return obj\n  }, {} as Record<string, WeeklyStats | null>)\n)\n"]},"metadata":{},"sourceType":"module"}