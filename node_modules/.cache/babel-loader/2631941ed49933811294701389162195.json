{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../Misc/typeStore';\nimport { Vector2 } from '../../../Maths/math.vector';\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator\";\n/**\r\n * Block used to remap a float from a range to a new one\r\n */\n\nvar RemapBlock =\n/** @class */\nfunction (_super) {\n  __extends(RemapBlock, _super);\n  /**\r\n   * Creates a new RemapBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function RemapBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n    /**\r\n     * Gets or sets the source range\r\n     */\n\n\n    _this.sourceRange = new Vector2(-1, 1);\n    /**\r\n     * Gets or sets the target range\r\n     */\n\n    _this.targetRange = new Vector2(0, 1);\n\n    _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n\n    _this.registerInput(\"sourceMin\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    _this.registerInput(\"sourceMax\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    _this.registerInput(\"targetMin\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    _this.registerInput(\"targetMax\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  RemapBlock.prototype.getClassName = function () {\n    return \"RemapBlock\";\n  };\n\n  Object.defineProperty(RemapBlock.prototype, \"input\", {\n    /**\r\n     * Gets the input component\r\n     */\n    get: function get() {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemapBlock.prototype, \"sourceMin\", {\n    /**\r\n     * Gets the source min input component\r\n     */\n    get: function get() {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemapBlock.prototype, \"sourceMax\", {\n    /**\r\n     * Gets the source max input component\r\n     */\n    get: function get() {\n      return this._inputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemapBlock.prototype, \"targetMin\", {\n    /**\r\n     * Gets the target min input component\r\n     */\n    get: function get() {\n      return this._inputs[3];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemapBlock.prototype, \"targetMax\", {\n    /**\r\n     * Gets the target max input component\r\n     */\n    get: function get() {\n      return this._inputs[4];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemapBlock.prototype, \"output\", {\n    /**\r\n     * Gets the output component\r\n     */\n    get: function get() {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RemapBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    var sourceMin = this.sourceMin.isConnected ? this.sourceMin.associatedVariableName : this._writeFloat(this.sourceRange.x);\n    var sourceMax = this.sourceMax.isConnected ? this.sourceMax.associatedVariableName : this._writeFloat(this.sourceRange.y);\n    var targetMin = this.targetMin.isConnected ? this.targetMin.associatedVariableName : this._writeFloat(this.targetRange.x);\n    var targetMax = this.targetMax.isConnected ? this.targetMax.associatedVariableName : this._writeFloat(this.targetRange.y);\n    state.compilationString += this._declareOutput(output, state) + (\" = \" + targetMin + \" + (\" + this._inputs[0].associatedVariableName + \" - \" + sourceMin + \") * (\" + targetMax + \" - \" + targetMin + \") / (\" + sourceMax + \" - \" + sourceMin + \");\\r\\n\");\n    return this;\n  };\n\n  RemapBlock.prototype._dumpPropertiesCode = function () {\n    var codeString = this._codeVariableName + \".sourceRange = new BABYLON.Vector2(\" + this.sourceRange.x + \", \" + this.sourceRange.y + \");\\r\\n\";\n    codeString += this._codeVariableName + \".targetRange = new BABYLON.Vector2(\" + this.targetRange.x + \", \" + this.targetRange.y + \");\\r\\n\";\n    return codeString;\n  };\n\n  RemapBlock.prototype.serialize = function () {\n    var serializationObject = _super.prototype.serialize.call(this);\n\n    serializationObject.sourceRange = this.sourceRange.asArray();\n    serializationObject.targetRange = this.targetRange.asArray();\n    return serializationObject;\n  };\n\n  RemapBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n    _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n\n    this.sourceRange = Vector2.FromArray(serializationObject.sourceRange);\n    this.targetRange = Vector2.FromArray(serializationObject.targetRange);\n  };\n\n  __decorate([editableInPropertyPage(\"From\", PropertyTypeForEdition.Vector2)], RemapBlock.prototype, \"sourceRange\", void 0);\n\n  __decorate([editableInPropertyPage(\"To\", PropertyTypeForEdition.Vector2)], RemapBlock.prototype, \"targetRange\", void 0);\n\n  return RemapBlock;\n}(NodeMaterialBlock);\n\nexport { RemapBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.RemapBlock\"] = RemapBlock;","map":null,"metadata":{},"sourceType":"module"}