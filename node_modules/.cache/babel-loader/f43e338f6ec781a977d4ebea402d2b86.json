{"ast":null,"code":"export var EditAssetPackView;\n\n(function (EditAssetPackView) {\n  EditAssetPackView[EditAssetPackView[\"IMPORT\"] = 0] = \"IMPORT\";\n  EditAssetPackView[EditAssetPackView[\"EDIT_ASSETS\"] = 1] = \"EDIT_ASSETS\";\n  EditAssetPackView[EditAssetPackView[\"EDIT_ASSET_PACK\"] = 2] = \"EDIT_ASSET_PACK\";\n  EditAssetPackView[EditAssetPackView[\"PROGRESS\"] = 3] = \"PROGRESS\";\n  EditAssetPackView[EditAssetPackView[\"SUCCESS\"] = 4] = \"SUCCESS\";\n  EditAssetPackView[EditAssetPackView[\"EXIT\"] = 5] = \"EXIT\";\n  EditAssetPackView[EditAssetPackView[\"CONFIRM_DELETE\"] = 6] = \"CONFIRM_DELETE\";\n})(EditAssetPackView || (EditAssetPackView = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/EditAssetPackModal/EditAssetPackModal.types.ts"],"names":["EditAssetPackView"],"mappings":"AAYA,WAAYA,iBAAZ;;WAAYA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;GAAAA,iB,KAAAA,iB","sourcesContent":["import { Dispatch } from 'redux'\nimport { FullAssetPack, MixedAssetPack } from 'modules/assetPack/types'\nimport { ModalProps } from 'decentraland-dapps/dist/providers/ModalProvider/ModalProvider.types'\nimport {\n  saveAssetPackRequest,\n  SaveAssetPackRequestAction,\n  deleteAssetPackRequest,\n  DeleteAssetPackRequestAction\n} from 'modules/assetPack/actions'\nimport { AssetPackState } from 'modules/assetPack/reducer'\nimport { Project } from 'modules/project/types'\n\nexport enum EditAssetPackView {\n  IMPORT,\n  EDIT_ASSETS,\n  EDIT_ASSET_PACK,\n  PROGRESS,\n  SUCCESS,\n  EXIT,\n  CONFIRM_DELETE\n}\n\nexport type State = {\n  view: EditAssetPackView\n  back: EditAssetPackView\n  assetPack: MixedAssetPack\n  editingAsset: string | null\n  ignoredAssets: string[]\n  isDirty: boolean\n}\n\nexport type Props = ModalProps & {\n  project: Project | null\n  progress: AssetPackState['progress']\n  error: AssetPackState['error']\n  assetPack: FullAssetPack | undefined\n  ethAddress?: string\n  isLoading: boolean\n  onCreateAssetPack: typeof saveAssetPackRequest\n  onDeleteAssetPack: typeof deleteAssetPackRequest\n}\n\nexport type OwnProps = Pick<Props, 'metadata'>\nexport type MapStateProps = Pick<Props, 'project' | 'progress' | 'error' | 'assetPack' | 'ethAddress' | 'isLoading'>\nexport type MapDispatchProps = Pick<Props, 'onCreateAssetPack' | 'onDeleteAssetPack'>\nexport type MapDispatch = Dispatch<SaveAssetPackRequestAction | DeleteAssetPackRequestAction>\n"]},"metadata":{},"sourceType":"module"}