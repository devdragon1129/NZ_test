{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Blockie = void 0;\n\nvar React = __importStar(require(\"react\"));\n\nvar blockies = __importStar(require(\"ethereum-blockies/blockies\"));\n\nrequire(\"./Blockie.css\");\n\nvar Blockie =\n/** @class */\nfunction (_super) {\n  __extends(Blockie, _super);\n\n  function Blockie() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.canvas = React.createRef();\n    return _this;\n  }\n\n  Blockie.prototype.componentDidMount = function () {\n    this.draw();\n  };\n\n  Blockie.prototype.componentDidUpdate = function () {\n    this.draw();\n  };\n\n  Blockie.prototype.getOpts = function () {\n    var _a = this.props,\n        seed = _a.seed,\n        color = _a.color,\n        spotcolor = _a.spotcolor,\n        bgcolor = _a.bgcolor,\n        size = _a.size,\n        scale = _a.scale;\n    return {\n      seed: seed ? seed.toLowerCase() : '',\n      color: color,\n      spotcolor: spotcolor,\n      bgcolor: bgcolor,\n      size: size,\n      scale: scale\n    };\n  };\n\n  Blockie.prototype.draw = function () {\n    if (!this.canvas || !this.canvas.current) {\n      return 'ðŸ¦„';\n    }\n\n    var _a = this.props,\n        size = _a.size,\n        scale = _a.scale;\n    var ctx = this.canvas.current.getContext('2d');\n    ctx.clearRect(0, 0, size * scale, size * scale);\n    blockies.render(this.getOpts(), this.canvas.current);\n  };\n\n  Blockie.prototype.render = function () {\n    var _a = this.props,\n        size = _a.size,\n        scale = _a.scale,\n        children = _a.children,\n        className = _a.className;\n    var classes = \"dcl blockie \".concat(className).trim();\n\n    if (scale * size <= 16) {\n      classes += ' mini';\n    } else if (scale * size <= 24) {\n      classes += ' tiny';\n    } else if (scale * size <= 36) {\n      classes += ' small';\n    }\n\n    var canvas = React.createElement(\"canvas\", {\n      className: classes,\n      ref: this.canvas\n    });\n\n    if (children) {\n      return React.createElement(\"span\", {\n        className: \"dcl blockie-wrapper\"\n      }, canvas, React.createElement(\"span\", {\n        className: \"dcl blockie-children\"\n      }, children));\n    }\n\n    return canvas;\n  };\n\n  Blockie.defaultProps = {\n    color: '#e449c2',\n    bgcolor: '#3149de',\n    spotcolor: '#e449c2',\n    size: 6,\n    scale: 6,\n    className: ''\n  };\n  return Blockie;\n}(React.PureComponent);\n\nexports.Blockie = Blockie;","map":null,"metadata":{},"sourceType":"script"}