{"ast":null,"code":"import { connect } from 'react-redux';\nimport { setEmote, setBaseWearable, setBodyShape, setEyeColor, setHairColor, setSkinColor, fetchBaseWearablesRequest } from 'modules/editor/actions';\nimport { getEmote, getSelectedBaseWearablesByBodyShape, getBodyShape, getEyeColor, getHairColor, getSkinColor, getVisibleItems } from 'modules/editor/selectors';\nimport CenterPanel from './CenterPanel';\n\nvar mapState = function mapState(state) {\n  var bodyShape = getBodyShape(state);\n  var selectedBaseWearablesByBodyShape = getSelectedBaseWearablesByBodyShape(state);\n  return {\n    bodyShape: bodyShape,\n    selectedBaseWearables: selectedBaseWearablesByBodyShape ? selectedBaseWearablesByBodyShape[bodyShape] : null,\n    skinColor: getSkinColor(state),\n    eyeColor: getEyeColor(state),\n    hairColor: getHairColor(state),\n    emote: getEmote(state),\n    visibleItems: getVisibleItems(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSetBodyShape: function onSetBodyShape(bodyShape) {\n      return dispatch(setBodyShape(bodyShape));\n    },\n    onSetAvatarAnimation: function onSetAvatarAnimation(animation) {\n      return dispatch(setEmote(animation));\n    },\n    onSetSkinColor: function onSetSkinColor(color) {\n      return dispatch(setSkinColor(color));\n    },\n    onSetEyeColor: function onSetEyeColor(color) {\n      return dispatch(setEyeColor(color));\n    },\n    onSetHairColor: function onSetHairColor(color) {\n      return dispatch(setHairColor(color));\n    },\n    onSetBaseWearable: function onSetBaseWearable(category, bodyShape, wearable) {\n      return dispatch(setBaseWearable(category, bodyShape, wearable));\n    },\n    onFetchBaseWearables: function onFetchBaseWearables() {\n      return dispatch(fetchBaseWearablesRequest());\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CenterPanel);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ItemEditorPage/CenterPanel/CenterPanel.container.ts"],"names":["connect","setEmote","setBaseWearable","setBodyShape","setEyeColor","setHairColor","setSkinColor","fetchBaseWearablesRequest","getEmote","getSelectedBaseWearablesByBodyShape","getBodyShape","getEyeColor","getHairColor","getSkinColor","getVisibleItems","CenterPanel","mapState","state","bodyShape","selectedBaseWearablesByBodyShape","selectedBaseWearables","skinColor","eyeColor","hairColor","emote","visibleItems","mapDispatch","dispatch","onSetBodyShape","onSetAvatarAnimation","animation","onSetSkinColor","color","onSetEyeColor","onSetHairColor","onSetBaseWearable","category","wearable","onFetchBaseWearables"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SACEC,QADF,EAEEC,eAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,yBAPF,QAQO,wBARP;AASA,SACEC,QADF,EAEEC,mCAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,eAPF,QAQO,0BARP;AAUA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAqC;AACpD,MAAMC,SAAS,GAAGR,YAAY,CAACO,KAAD,CAA9B;AACA,MAAME,gCAAgC,GAAGV,mCAAmC,CAACQ,KAAD,CAA5E;AACA,SAAO;AACLC,IAAAA,SAAS,EAATA,SADK;AAELE,IAAAA,qBAAqB,EAAED,gCAAgC,GAAGA,gCAAgC,CAACD,SAAD,CAAnC,GAAiD,IAFnG;AAGLG,IAAAA,SAAS,EAAER,YAAY,CAACI,KAAD,CAHlB;AAILK,IAAAA,QAAQ,EAAEX,WAAW,CAACM,KAAD,CAJhB;AAKLM,IAAAA,SAAS,EAAEX,YAAY,CAACK,KAAD,CALlB;AAMLO,IAAAA,KAAK,EAAEhB,QAAQ,CAACS,KAAD,CANV;AAOLQ,IAAAA,YAAY,EAAEX,eAAe,CAACG,KAAD;AAPxB,GAAP;AASD,CAZD;;AAcA,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,cAAc,EAAE,wBAAAV,SAAS;AAAA,aAAIS,QAAQ,CAACxB,YAAY,CAACe,SAAD,CAAb,CAAZ;AAAA,KADuC;AAEhEW,IAAAA,oBAAoB,EAAE,8BAAAC,SAAS;AAAA,aAAIH,QAAQ,CAAC1B,QAAQ,CAAC6B,SAAD,CAAT,CAAZ;AAAA,KAFiC;AAGhEC,IAAAA,cAAc,EAAE,wBAAAC,KAAK;AAAA,aAAIL,QAAQ,CAACrB,YAAY,CAAC0B,KAAD,CAAb,CAAZ;AAAA,KAH2C;AAIhEC,IAAAA,aAAa,EAAE,uBAAAD,KAAK;AAAA,aAAIL,QAAQ,CAACvB,WAAW,CAAC4B,KAAD,CAAZ,CAAZ;AAAA,KAJ4C;AAKhEE,IAAAA,cAAc,EAAE,wBAAAF,KAAK;AAAA,aAAIL,QAAQ,CAACtB,YAAY,CAAC2B,KAAD,CAAb,CAAZ;AAAA,KAL2C;AAMhEG,IAAAA,iBAAiB,EAAE,2BAACC,QAAD,EAAWlB,SAAX,EAAsBmB,QAAtB;AAAA,aAAmCV,QAAQ,CAACzB,eAAe,CAACkC,QAAD,EAAWlB,SAAX,EAAsBmB,QAAtB,CAAhB,CAA3C;AAAA,KAN6C;AAOhEC,IAAAA,oBAAoB,EAAE;AAAA,aAAMX,QAAQ,CAACpB,yBAAyB,EAA1B,CAAd;AAAA;AAP0C,GAA9C;AAAA,CAApB;;AAUA,eAAeP,OAAO,CAACgB,QAAD,EAAWU,WAAX,CAAP,CAA+BX,WAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { RootState } from 'modules/common/types'\nimport {\n  setEmote,\n  setBaseWearable,\n  setBodyShape,\n  setEyeColor,\n  setHairColor,\n  setSkinColor,\n  fetchBaseWearablesRequest\n} from 'modules/editor/actions'\nimport {\n  getEmote,\n  getSelectedBaseWearablesByBodyShape,\n  getBodyShape,\n  getEyeColor,\n  getHairColor,\n  getSkinColor,\n  getVisibleItems\n} from 'modules/editor/selectors'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './CenterPanel.types'\nimport CenterPanel from './CenterPanel'\n\nconst mapState = (state: RootState): MapStateProps => {\n  const bodyShape = getBodyShape(state)\n  const selectedBaseWearablesByBodyShape = getSelectedBaseWearablesByBodyShape(state)\n  return {\n    bodyShape,\n    selectedBaseWearables: selectedBaseWearablesByBodyShape ? selectedBaseWearablesByBodyShape[bodyShape] : null,\n    skinColor: getSkinColor(state),\n    eyeColor: getEyeColor(state),\n    hairColor: getHairColor(state),\n    emote: getEmote(state),\n    visibleItems: getVisibleItems(state)\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSetBodyShape: bodyShape => dispatch(setBodyShape(bodyShape)),\n  onSetAvatarAnimation: animation => dispatch(setEmote(animation)),\n  onSetSkinColor: color => dispatch(setSkinColor(color)),\n  onSetEyeColor: color => dispatch(setEyeColor(color)),\n  onSetHairColor: color => dispatch(setHairColor(color)),\n  onSetBaseWearable: (category, bodyShape, wearable) => dispatch(setBaseWearable(category, bodyShape, wearable)),\n  onFetchBaseWearables: () => dispatch(fetchBaseWearablesRequest())\n})\n\nexport default connect(mapState, mapDispatch)(CenterPanel)\n"]},"metadata":{},"sourceType":"module"}