{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authorizationSaga = exports.createAuthorizationSaga = void 0;\n\nvar effects_1 = require(\"redux-saga/effects\");\n\nvar multicall_1 = require(\"@0xsequence/multicall\");\n\nvar ethers_1 = require(\"ethers\");\n\nvar decentraland_transactions_1 = require(\"decentraland-transactions\");\n\nvar eth_1 = require(\"../../lib/eth\");\n\nvar utils_1 = require(\"./utils\");\n\nvar actions_1 = require(\"./actions\");\n\nvar types_1 = require(\"./types\");\n\nvar utils_2 = require(\"../wallet/utils\");\n\nfunction createAuthorizationSaga() {\n  var _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleFetchAuthorizationsRequest),\n      _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleGrantTokenRequest),\n      _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleRevokeTokenRequest);\n\n  return /*#__PURE__*/_regeneratorRuntime.mark(function authorizationSaga() {\n    return _regeneratorRuntime.wrap(function authorizationSaga$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return effects_1.takeEvery(actions_1.FETCH_AUTHORIZATIONS_REQUEST, handleFetchAuthorizationsRequest);\n\n          case 2:\n            _context.next = 4;\n            return effects_1.takeEvery(actions_1.GRANT_TOKEN_REQUEST, handleGrantTokenRequest);\n\n          case 4:\n            _context.next = 6;\n            return effects_1.takeEvery(actions_1.REVOKE_TOKEN_REQUEST, handleRevokeTokenRequest);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, authorizationSaga);\n  });\n\n  function handleFetchAuthorizationsRequest(action) {\n    var _this = this;\n\n    var authorizations, promises, multicallProviders, _iterator, _step, _loop, authorizationsToStore;\n\n    return _regeneratorRuntime.wrap(function handleFetchAuthorizationsRequest$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            authorizations = action.payload.authorizations;\n            _context4.prev = 1;\n            promises = [];\n            multicallProviders = {};\n            _iterator = _createForOfIteratorHelper(authorizations);\n            _context4.prev = 5;\n            _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n              var authorization, chainId, provider, ethersProvider, multicallProvider, erc20, erc721;\n              return _regeneratorRuntime.wrap(function _loop$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      authorization = _step.value;\n\n                      if (utils_1.isValidType(authorization.type)) {\n                        _context3.next = 3;\n                        break;\n                      }\n\n                      throw new Error(\"Invalid authorization type \".concat(authorization.type));\n\n                    case 3:\n                      chainId = authorization.chainId;\n\n                      if (multicallProviders[chainId]) {\n                        _context3.next = 11;\n                        break;\n                      }\n\n                      _context3.next = 7;\n                      return effects_1.call(function () {\n                        return eth_1.getNetworkProvider(chainId);\n                      });\n\n                    case 7:\n                      provider = _context3.sent;\n                      ethersProvider = new ethers_1.providers.Web3Provider(provider);\n                      multicallProvider = new multicall_1.providers.MulticallProvider(ethersProvider);\n                      multicallProviders[chainId] = multicallProvider;\n\n                    case 11:\n                      _context3.t0 = authorization.type;\n                      _context3.next = _context3.t0 === types_1.AuthorizationType.ALLOWANCE ? 14 : _context3.t0 === types_1.AuthorizationType.APPROVAL ? 17 : 20;\n                      break;\n\n                    case 14:\n                      erc20 = new ethers_1.Contract(authorization.contractAddress, ['function allowance(address owner, address spender) view returns (uint256)'], multicallProviders[chainId]);\n                      promises.push( // @ts-ignore\n                      erc20.allowance(authorization.address, authorization.authorizedAddress).then(function (allowance) {\n                        return allowance.gt(0) ? authorization : null;\n                      }).catch(function (error) {\n                        console.warn(\"Error fetching allowance\", authorization, error);\n                        return null;\n                      }));\n                      return _context3.abrupt(\"break\", 20);\n\n                    case 17:\n                      erc721 = new ethers_1.Contract(authorization.contractAddress, ['function isApprovedForAll(address owner, address operator) view returns (bool)'], multicallProviders[chainId]);\n                      promises.push( // @ts-ignore\n                      erc721.isApprovedForAll(authorization.address, authorization.authorizedAddress).then(function (isApproved) {\n                        return isApproved ? authorization : null;\n                      }).catch(function (error) {\n                        console.warn(\"Error fetching approval\", authorization, error);\n                        return null;\n                      }));\n                      return _context3.abrupt(\"break\", 20);\n\n                    case 20:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _loop);\n            });\n\n            _iterator.s();\n\n          case 8:\n            if ((_step = _iterator.n()).done) {\n              _context4.next = 12;\n              break;\n            }\n\n            return _context4.delegateYield(_loop(), \"t0\", 10);\n\n          case 10:\n            _context4.next = 8;\n            break;\n\n          case 12:\n            _context4.next = 17;\n            break;\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t1 = _context4[\"catch\"](5);\n\n            _iterator.e(_context4.t1);\n\n          case 17:\n            _context4.prev = 17;\n\n            _iterator.f();\n\n            return _context4.finish(17);\n\n          case 20:\n            _context4.next = 22;\n            return effects_1.call(function () {\n              return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                var results;\n                return _regeneratorRuntime.wrap(function _callee$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return Promise.all(promises);\n\n                      case 2:\n                        results = _context2.sent;\n                        return _context2.abrupt(\"return\", results.filter(function (result) {\n                          return !!result;\n                        }));\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n            });\n\n          case 22:\n            authorizationsToStore = _context4.sent;\n            _context4.next = 25;\n            return effects_1.put(actions_1.fetchAuthorizationsSuccess(authorizationsToStore));\n\n          case 25:\n            _context4.next = 31;\n            break;\n\n          case 27:\n            _context4.prev = 27;\n            _context4.t2 = _context4[\"catch\"](1);\n            _context4.next = 31;\n            return effects_1.put(actions_1.fetchAuthorizationsFailure(authorizations, _context4.t2.message));\n\n          case 31:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _marked, null, [[1, 27], [5, 14, 17, 20]]);\n  }\n\n  function handleGrantTokenRequest(action) {\n    var authorization, txHash;\n    return _regeneratorRuntime.wrap(function handleGrantTokenRequest$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            authorization = action.payload.authorization;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return effects_1.call(function () {\n              return changeAuthorization(authorization, types_1.AuthorizationAction.GRANT);\n            });\n\n          case 4:\n            txHash = _context5.sent;\n            _context5.next = 7;\n            return effects_1.put(actions_1.grantTokenSuccess(authorization, authorization.chainId, txHash));\n\n          case 7:\n            _context5.next = 13;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](1);\n            _context5.next = 13;\n            return effects_1.put(actions_1.grantTokenFailure(authorization, _context5.t0.message));\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _marked2, null, [[1, 9]]);\n  }\n\n  function handleRevokeTokenRequest(action) {\n    var authorization, txHash;\n    return _regeneratorRuntime.wrap(function handleRevokeTokenRequest$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            authorization = action.payload.authorization;\n            _context6.prev = 1;\n            _context6.next = 4;\n            return effects_1.call(function () {\n              return changeAuthorization(authorization, types_1.AuthorizationAction.REVOKE);\n            });\n\n          case 4:\n            txHash = _context6.sent;\n            _context6.next = 7;\n            return effects_1.put(actions_1.revokeTokenSuccess(authorization, authorization.chainId, txHash));\n\n          case 7:\n            _context6.next = 13;\n            break;\n\n          case 9:\n            _context6.prev = 9;\n            _context6.t0 = _context6[\"catch\"](1);\n            _context6.next = 13;\n            return effects_1.put(actions_1.revokeTokenFailure(authorization, _context6.t0.message));\n\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _marked3, null, [[1, 9]]);\n  }\n\n  function changeAuthorization(authorization, action) {\n    return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var contract, amount, isApproved;\n      return _regeneratorRuntime.wrap(function _callee2$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (utils_1.isValidType(authorization.type)) {\n                _context7.next = 2;\n                break;\n              }\n\n              throw new Error(\"Invalid authorization type \".concat(authorization.type));\n\n            case 2:\n              contract = Object.assign(Object.assign({}, decentraland_transactions_1.getContract(authorization.contractName, authorization.chainId)), {\n                address: authorization.contractAddress\n              });\n              _context7.t0 = authorization.type;\n              _context7.next = _context7.t0 === types_1.AuthorizationType.ALLOWANCE ? 6 : _context7.t0 === types_1.AuthorizationType.APPROVAL ? 8 : 10;\n              break;\n\n            case 6:\n              amount = action === types_1.AuthorizationAction.GRANT ? utils_1.getTokenAmountToApprove().toString() : '0';\n              return _context7.abrupt(\"return\", utils_2.sendTransaction(contract, function (erc20) {\n                return erc20.approve(authorization.authorizedAddress, amount);\n              }));\n\n            case 8:\n              isApproved = action === types_1.AuthorizationAction.GRANT;\n              return _context7.abrupt(\"return\", utils_2.sendTransaction(contract, function (erc712) {\n                return erc712.setApprovalForAll(authorization.authorizedAddress, isApproved);\n              }));\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  }\n}\n\nexports.createAuthorizationSaga = createAuthorizationSaga;\nexports.authorizationSaga = createAuthorizationSaga();","map":null,"metadata":{},"sourceType":"script"}