{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { NO_CACHE_HEADERS } from 'lib/headers';\nimport { getDimensions } from 'lib/layout';\nexport function getProjectDimensions(project) {\n  var _project$layout = project.layout,\n      rows = _project$layout.rows,\n      cols = _project$layout.cols;\n  return getDimensions(rows, cols);\n}\nexport function didUpdateLayout(update, project) {\n  var res = false;\n\n  if (update.layout && project.layout) {\n    if (update.layout.rows && update.layout.rows !== project.layout.rows) {\n      res = true;\n    }\n\n    if (update.layout.cols && update.layout.cols !== project.layout.cols) {\n      res = true;\n    }\n  }\n\n  return res;\n}\nexport function getParcelOrientation(layout, point, rotation) {\n  var rows = layout.rows,\n      cols = layout.cols;\n  var parcels = [];\n\n  switch (rotation) {\n    case 'north':\n      {\n        for (var x = point.x; x < point.x + cols; x++) {\n          for (var y = point.y; y < point.y + rows; y++) {\n            var parcel = {\n              x: x,\n              y: y\n            };\n            parcels.push(parcel);\n          }\n        }\n\n        break;\n      }\n\n    case 'east':\n      {\n        for (var _x = point.x; _x < point.x + rows; _x++) {\n          for (var _y = point.y; _y < point.y + cols; _y++) {\n            parcels.push({\n              x: _x,\n              y: _y\n            });\n          }\n        }\n\n        break;\n      }\n\n    case 'south':\n      {\n        for (var _x2 = point.x; _x2 > point.x - cols; _x2--) {\n          for (var _y2 = point.y; _y2 > point.y - rows; _y2--) {\n            parcels.push({\n              x: _x2,\n              y: _y2\n            });\n          }\n        }\n\n        break;\n      }\n\n    case 'west':\n      {\n        for (var _x3 = point.x; _x3 > point.x - rows; _x3--) {\n          for (var _y3 = point.y; _y3 > point.y - cols; _y3--) {\n            parcels.push({\n              x: _x3,\n              y: _y3\n            });\n          }\n        }\n\n        break;\n      }\n  }\n\n  return parcels;\n}\nexport function getImageAsDataUrl(_x4) {\n  return _getImageAsDataUrl.apply(this, arguments);\n}\n\nfunction _getImageAsDataUrl() {\n  _getImageAsDataUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var reader, res, blob, out;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            reader = new FileReader();\n            _context.next = 3;\n            return fetch(url, {\n              headers: NO_CACHE_HEADERS\n            });\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.blob();\n\n          case 6:\n            blob = _context.sent;\n            out = new Promise(function (resolve, reject) {\n              reader.onload = function () {\n                return resolve(reader.result);\n              };\n\n              reader.onerror = function (e) {\n                return reject(e);\n              };\n            });\n            reader.readAsDataURL(blob);\n            return _context.abrupt(\"return\", out);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getImageAsDataUrl.apply(this, arguments);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/project/utils.ts"],"names":["NO_CACHE_HEADERS","getDimensions","getProjectDimensions","project","layout","rows","cols","didUpdateLayout","update","res","getParcelOrientation","point","rotation","parcels","x","y","parcel","push","getImageAsDataUrl","url","reader","FileReader","fetch","headers","blob","out","Promise","resolve","reject","onload","result","onerror","e","readAsDataURL"],"mappings":"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","sourcesContent":["import { Project, Layout } from 'modules/project/types'\nimport { Coordinate, Rotation } from 'modules/deployment/types'\nimport { NO_CACHE_HEADERS } from 'lib/headers'\nimport { getDimensions } from 'lib/layout'\n\nexport function getProjectDimensions(project: Project): string {\n  const { rows, cols } = project.layout\n  return getDimensions(rows, cols)\n}\n\nexport function didUpdateLayout(update: Partial<Project>, project: Project): boolean {\n  let res: boolean = false\n\n  if (update.layout && project.layout) {\n    if (update.layout.rows && update.layout.rows !== project.layout.rows) {\n      res = true\n    }\n\n    if (update.layout.cols && update.layout.cols !== project.layout.cols) {\n      res = true\n    }\n  }\n\n  return res\n}\n\nexport function getParcelOrientation(layout: Layout, point: Coordinate, rotation: Rotation): Coordinate[] {\n  const { rows, cols } = layout\n  const parcels: Coordinate[] = []\n\n  switch (rotation) {\n    case 'north': {\n      for (let x = point.x; x < point.x + cols; x++) {\n        for (let y = point.y; y < point.y + rows; y++) {\n          const parcel = { x, y }\n          parcels.push(parcel)\n        }\n      }\n      break\n    }\n    case 'east': {\n      for (let x = point.x; x < point.x + rows; x++) {\n        for (let y = point.y; y < point.y + cols; y++) {\n          parcels.push({ x, y })\n        }\n      }\n      break\n    }\n    case 'south': {\n      for (let x = point.x; x > point.x - cols; x--) {\n        for (let y = point.y; y > point.y - rows; y--) {\n          parcels.push({ x, y })\n        }\n      }\n      break\n    }\n    case 'west': {\n      for (let x = point.x; x > point.x - rows; x--) {\n        for (let y = point.y; y > point.y - cols; y--) {\n          parcels.push({ x, y })\n        }\n      }\n      break\n    }\n  }\n\n  return parcels\n}\n\nexport async function getImageAsDataUrl(url: string): Promise<string> {\n  const reader = new FileReader()\n  const res = await fetch(url, { headers: NO_CACHE_HEADERS })\n  const blob = await res.blob()\n\n  const out = new Promise<string>((resolve, reject) => {\n    reader.onload = () => resolve(reader.result as string)\n    reader.onerror = e => reject(e)\n  })\n\n  reader.readAsDataURL(blob)\n\n  return out\n}\n"]},"metadata":{},"sourceType":"module"}