{"ast":null,"code":"export var CollectionType;\n\n(function (CollectionType) {\n  CollectionType[\"DECENTRALAND\"] = \"decentraland\";\n  CollectionType[\"THIRD_PARTY\"] = \"third_party\";\n})(CollectionType || (CollectionType = {}));\n\nexport var RoleType;\n\n(function (RoleType) {\n  RoleType[\"MANAGER\"] = \"manager\";\n  RoleType[\"MINTER\"] = \"minter\";\n})(RoleType || (RoleType = {}));\n\nexport var COLLECTION_NAME_MAX_LENGTH = 32;\nexport var TP_COLLECTION_NAME_MAX_LENGTH = 42;","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/collection/types.ts"],"names":["CollectionType","RoleType","COLLECTION_NAME_MAX_LENGTH","TP_COLLECTION_NAME_MAX_LENGTH"],"mappings":"AAqBA,WAAYA,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAKZ,WAAYC,QAAZ;;WAAYA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;GAAAA,Q,KAAAA,Q;;AAiBZ,OAAO,IAAMC,0BAA0B,GAAG,EAAnC;AACP,OAAO,IAAMC,6BAA6B,GAAG,EAAtC","sourcesContent":["import { Item } from 'modules/item/types'\n\nexport type Collection = {\n  id: string\n  name: string\n  owner: string\n  contractAddress?: string\n  urn: string\n  salt?: string\n  isPublished: boolean\n  isApproved: boolean\n  itemCount?: number\n  minters: string[]\n  managers: string[]\n  forumLink?: string\n  lock?: number\n  reviewedAt?: number\n  createdAt: number\n  updatedAt: number\n}\n\nexport enum CollectionType {\n  DECENTRALAND = 'decentraland',\n  THIRD_PARTY = 'third_party'\n}\n\nexport enum RoleType {\n  MANAGER = 'manager',\n  MINTER = 'minter'\n}\n\nexport type Mint = {\n  address: string\n  amount: number\n  item: Item\n}\n\nexport type Access = {\n  address: string\n  hasAccess: boolean\n  collection: Collection\n}\n\nexport const COLLECTION_NAME_MAX_LENGTH = 32\nexport const TP_COLLECTION_NAME_MAX_LENGTH = 42\n"]},"metadata":{},"sourceType":"module"}