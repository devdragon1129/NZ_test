{"ast":null,"code":"import { connect } from 'react-redux';\nimport { push, replace } from 'connected-react-router';\nimport { getLandId } from 'modules/location/selectors';\nimport { openModal } from 'modules/modal/actions';\nimport { getParcelsAvailableToBuildEstates, getDeploymentsByCoord, getLandTiles } from 'modules/land/selectors';\nimport { getENSForLand } from 'modules/ens/selectors';\nimport { getData as getProjects } from 'modules/project/selectors';\nimport LandDetailPage from './LandDetailPage';\n\nvar mapState = function mapState(state) {\n  var landId = getLandId(state) || '';\n  return {\n    ensList: getENSForLand(state, landId),\n    parcelsAvailableToBuildEstates: getParcelsAvailableToBuildEstates(state),\n    deploymentsByCoord: getDeploymentsByCoord(state),\n    landTiles: getLandTiles(state),\n    projects: getProjects(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onNavigate: function onNavigate(path) {\n      return dispatch(push(path));\n    },\n    onReplace: function onReplace(path) {\n      return dispatch(replace(path));\n    },\n    onOpenModal: function onOpenModal(name, metadata) {\n      return dispatch(openModal(name, metadata));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(LandDetailPage);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/LandDetailPage/LandDetailPage.container.ts"],"names":["connect","push","replace","getLandId","openModal","getParcelsAvailableToBuildEstates","getDeploymentsByCoord","getLandTiles","getENSForLand","getData","getProjects","LandDetailPage","mapState","state","landId","ensList","parcelsAvailableToBuildEstates","deploymentsByCoord","landTiles","projects","mapDispatch","dispatch","onNavigate","path","onReplace","onOpenModal","name","metadata"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,wBAA9B;AAEA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,iCAAT,EAA4CC,qBAA5C,EAAmEC,YAAnE,QAAuF,wBAAvF;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,2BAAvC;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAqC;AACpD,MAAMC,MAAM,GAAGX,SAAS,CAACU,KAAD,CAAT,IAAoB,EAAnC;AACA,SAAO;AACLE,IAAAA,OAAO,EAAEP,aAAa,CAACK,KAAD,EAAQC,MAAR,CADjB;AAELE,IAAAA,8BAA8B,EAAEX,iCAAiC,CAACQ,KAAD,CAF5D;AAGLI,IAAAA,kBAAkB,EAAEX,qBAAqB,CAACO,KAAD,CAHpC;AAILK,IAAAA,SAAS,EAAEX,YAAY,CAACM,KAAD,CAJlB;AAKLM,IAAAA,QAAQ,EAAET,WAAW,CAACG,KAAD;AALhB,GAAP;AAOD,CATD;;AAWA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,UAAU,EAAE,oBAAAC,IAAI;AAAA,aAAIF,QAAQ,CAACpB,IAAI,CAACsB,IAAD,CAAL,CAAZ;AAAA,KADgD;AAEhEC,IAAAA,SAAS,EAAE,mBAAAD,IAAI;AAAA,aAAIF,QAAQ,CAACnB,OAAO,CAACqB,IAAD,CAAR,CAAZ;AAAA,KAFiD;AAGhEE,IAAAA,WAAW,EAAE,qBAACC,IAAD,EAAOC,QAAP;AAAA,aAAoBN,QAAQ,CAACjB,SAAS,CAACsB,IAAD,EAAOC,QAAP,CAAV,CAA5B;AAAA;AAHmD,GAA9C;AAAA,CAApB;;AAMA,eAAe3B,OAAO,CAACY,QAAD,EAAWQ,WAAX,CAAP,CAA+BT,cAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { push, replace } from 'connected-react-router'\nimport { RootState } from 'modules/common/types'\nimport { getLandId } from 'modules/location/selectors'\nimport { openModal } from 'modules/modal/actions'\nimport { getParcelsAvailableToBuildEstates, getDeploymentsByCoord, getLandTiles } from 'modules/land/selectors'\nimport { getENSForLand } from 'modules/ens/selectors'\nimport { getData as getProjects } from 'modules/project/selectors'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './LandDetailPage.types'\nimport LandDetailPage from './LandDetailPage'\n\nconst mapState = (state: RootState): MapStateProps => {\n  const landId = getLandId(state) || ''\n  return {\n    ensList: getENSForLand(state, landId),\n    parcelsAvailableToBuildEstates: getParcelsAvailableToBuildEstates(state),\n    deploymentsByCoord: getDeploymentsByCoord(state),\n    landTiles: getLandTiles(state),\n    projects: getProjects(state)\n  }\n}\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onNavigate: path => dispatch(push(path)),\n  onReplace: path => dispatch(replace(path)),\n  onOpenModal: (name, metadata) => dispatch(openModal(name, metadata))\n})\n\nexport default connect(mapState, mapDispatch)(LandDetailPage)\n"]},"metadata":{},"sourceType":"module"}