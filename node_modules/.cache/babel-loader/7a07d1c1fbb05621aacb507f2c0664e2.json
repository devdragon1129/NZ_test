{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { saveAssetPackRequest } from 'modules/assetPack/actions';\nimport { getProgress, getError, isLoading } from 'modules/assetPack/selectors';\nimport { getCurrentProject } from 'modules/project/selectors';\nimport { getSidebarAssetPacks } from 'modules/ui/sidebar/selectors';\nimport { isLoggedIn } from 'modules/identity/selectors';\nimport { openModal } from 'modules/modal/actions';\nimport CustomLayoutModal from './CreateAssetPackModal';\n\nvar mapState = function mapState(state) {\n  return {\n    project: getCurrentProject(state),\n    assetPacks: getSidebarAssetPacks(state),\n    progress: getProgress(state),\n    ethAddress: getAddress(state),\n    error: getError(state),\n    isLoggedIn: isLoggedIn(state),\n    isLoading: isLoading(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onCreateAssetPack: function onCreateAssetPack(assetPack, contents) {\n      return dispatch(saveAssetPackRequest(assetPack, contents));\n    },\n    onOpenModal: function onOpenModal(name, metadata) {\n      return dispatch(openModal(name, metadata));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(CustomLayoutModal);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CreateAssetPackModal/CreateAssetPackModal.container.ts"],"names":["connect","getAddress","saveAssetPackRequest","getProgress","getError","isLoading","getCurrentProject","getSidebarAssetPacks","isLoggedIn","openModal","CustomLayoutModal","mapState","state","project","assetPacks","progress","ethAddress","error","mapDispatch","dispatch","onCreateAssetPack","assetPack","contents","onOpenModal","name","metadata"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,kDAA3B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,6BAAjD;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,OAAOC,iBAAP,MAA8B,wBAA9B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,OAAO,EAAEP,iBAAiB,CAACM,KAAD,CAD2B;AAErDE,IAAAA,UAAU,EAAEP,oBAAoB,CAACK,KAAD,CAFqB;AAGrDG,IAAAA,QAAQ,EAAEZ,WAAW,CAACS,KAAD,CAHgC;AAIrDI,IAAAA,UAAU,EAAEf,UAAU,CAACW,KAAD,CAJ+B;AAKrDK,IAAAA,KAAK,EAAEb,QAAQ,CAACQ,KAAD,CALsC;AAMrDJ,IAAAA,UAAU,EAAEA,UAAU,CAACI,KAAD,CAN+B;AAOrDP,IAAAA,SAAS,EAAEA,SAAS,CAACO,KAAD;AAPiC,GAAtC;AAAA,CAAjB;;AAUA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,iBAAiB,EAAE,2BAACC,SAAD,EAAYC,QAAZ;AAAA,aAAyBH,QAAQ,CAACjB,oBAAoB,CAACmB,SAAD,EAAYC,QAAZ,CAArB,CAAjC;AAAA,KAD6C;AAEhEC,IAAAA,WAAW,EAAE,qBAACC,IAAD,EAAOC,QAAP;AAAA,aAAoBN,QAAQ,CAACV,SAAS,CAACe,IAAD,EAAOC,QAAP,CAAV,CAA5B;AAAA;AAFmD,GAA9C;AAAA,CAApB;;AAKA,eAAezB,OAAO,CAACW,QAAD,EAAWO,WAAX,CAAP,CAA+BR,iBAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { RootState } from 'modules/common/types'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\nimport { saveAssetPackRequest } from 'modules/assetPack/actions'\nimport { getProgress, getError, isLoading } from 'modules/assetPack/selectors'\nimport { getCurrentProject } from 'modules/project/selectors'\nimport { getSidebarAssetPacks } from 'modules/ui/sidebar/selectors'\nimport { isLoggedIn } from 'modules/identity/selectors'\nimport { openModal } from 'modules/modal/actions'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './CreateAssetPackModal.types'\nimport CustomLayoutModal from './CreateAssetPackModal'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  project: getCurrentProject(state),\n  assetPacks: getSidebarAssetPacks(state),\n  progress: getProgress(state),\n  ethAddress: getAddress(state),\n  error: getError(state),\n  isLoggedIn: isLoggedIn(state),\n  isLoading: isLoading(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onCreateAssetPack: (assetPack, contents) => dispatch(saveAssetPackRequest(assetPack, contents)),\n  onOpenModal: (name, metadata) => dispatch(openModal(name, metadata))\n})\n\nexport default connect(mapState, mapDispatch)(CustomLayoutModal)\n"]},"metadata":{},"sourceType":"module"}