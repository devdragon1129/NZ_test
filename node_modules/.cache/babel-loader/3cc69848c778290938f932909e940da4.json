{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/opt/work/NZ_test/src/components/ThirdPartyCollectionDetailPage/CollectionPublishButton/CollectionPublishButton.tsx\";\n\nimport React, { useMemo, useCallback } from 'react';\nimport { Button, Popup } from 'decentraland-ui';\nimport { Network } from '@dcl/schemas';\nimport { NetworkButton } from 'decentraland-dapps/dist/containers';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { SyncStatus } from 'modules/item/types';\nimport { isAllowedToPushChanges } from 'modules/item/utils';\nimport { CurationStatus } from 'modules/curations/types';\nimport { PublishButtonAction } from './CollectionPublishButton.types';\nexport var getTPButtonActionLabel = function getTPButtonActionLabel(buttonAction) {\n  switch (buttonAction) {\n    case PublishButtonAction.PUSH_CHANGES:\n      return t('third_party_collection_detail_page.push_changes');\n\n    case PublishButtonAction.PUBLISH_AND_PUSH_CHANGES:\n      return t('third_party_collection_detail_page.publish_and_push_changes');\n\n    default:\n      return t('third_party_collection_detail_page.publish');\n  }\n};\n\nvar CollectionPublishButton = function CollectionPublishButton(props) {\n  var collection = props.collection,\n      items = props.items,\n      slots = props.slots,\n      onClick = props.onClick,\n      itemsStatus = props.itemsStatus,\n      itemCurations = props.itemCurations,\n      isLoadingItemCurations = props.isLoadingItemCurations;\n  var buttonAction = useMemo(function () {\n    var action = PublishButtonAction.NONE;\n\n    var _items$reduce = items.reduce(function (acc, item) {\n      var status = itemsStatus[item.id];\n\n      if (status === SyncStatus.UNPUBLISHED) {\n        acc.willPublish = true;\n      } else if (isAllowedToPushChanges(item, status, itemCurations.find(function (itemCuration) {\n        return itemCuration.itemId === item.id && itemCuration.status === CurationStatus.PENDING;\n      }))) {\n        acc.willPushChanges = true;\n      }\n\n      return acc;\n    }, {\n      willPublish: false,\n      willPushChanges: false\n    }),\n        willPublish = _items$reduce.willPublish,\n        willPushChanges = _items$reduce.willPushChanges;\n\n    var isJustPushingChanges = willPushChanges && !willPublish;\n    var isJustPublishing = willPublish && !willPushChanges;\n    var isPublishingAndPushing = willPushChanges && willPublish;\n\n    if (isJustPushingChanges) {\n      action = PublishButtonAction.PUSH_CHANGES;\n    } else if (isJustPublishing) {\n      action = PublishButtonAction.PUBLISH;\n    } else if (isPublishingAndPushing) {\n      action = PublishButtonAction.PUBLISH_AND_PUSH_CHANGES;\n    }\n\n    return action;\n  }, [itemsStatus]);\n  var handleOnClick = useCallback(function () {\n    var itemIds = items.map(function (item) {\n      return item.id;\n    });\n    onClick(collection.id, itemIds, buttonAction);\n  }, [collection, items, buttonAction]);\n  var itemsTryingToPublish = useMemo(function () {\n    return items.filter(function (item) {\n      return !(itemCurations !== null && itemCurations !== void 0 && itemCurations.find(function (itemCuration) {\n        return itemCuration.itemId === item.id;\n      }));\n    }).length;\n  }, [items, itemCurations]);\n  var underReviewButtonLabel = useMemo(function () {\n    switch (buttonAction) {\n      case PublishButtonAction.PUBLISH:\n        if (itemsTryingToPublish) {\n          return t('third_party_collection_detail_page.cant_publish_items', {\n            count: itemsTryingToPublish\n          });\n        }\n\n        return t('third_party_collection_detail_page.cant_publish');\n\n      case PublishButtonAction.PUBLISH_AND_PUSH_CHANGES:\n        return t('third_party_collection_detail_page.cant_publish_and_push_changes', {\n          count: itemsTryingToPublish\n        });\n\n      default:\n        return t('third_party_collection_detail_page.cant_publish');\n    }\n  }, [buttonAction, itemsTryingToPublish]);\n  var hasPendingItemCurations = itemCurations && !!itemCurations.find(function (ic) {\n    return ic.status === CurationStatus.PENDING;\n  });\n  var isTryingToPublish = [PublishButtonAction.PUBLISH, PublishButtonAction.PUBLISH_AND_PUSH_CHANGES].includes(buttonAction);\n  var hasEnoughSlots = slots >= items.length;\n  return !isLoadingItemCurations && hasPendingItemCurations && (isTryingToPublish || buttonAction === PublishButtonAction.NONE) ? /*#__PURE__*/React.createElement(Popup, {\n    content: underReviewButtonLabel,\n    position: \"bottom center\",\n    trigger: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"popup-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      secondary: true,\n      compact: true,\n      disabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, t('collection_detail_page.under_review'))),\n    hideOnScroll: true,\n    on: \"hover\",\n    inverted: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Popup, {\n    content: t('third_party_collection_detail_page.exceeds_available_slots'),\n    position: \"bottom center\",\n    trigger: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"popup-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NetworkButton, {\n      loading: isLoadingItemCurations,\n      disabled: isTryingToPublish && (slots === 0 || !hasEnoughSlots) || items.length === 0 || buttonAction === PublishButtonAction.NONE,\n      primary: true,\n      compact: true,\n      onClick: handleOnClick,\n      network: Network.MATIC,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, getTPButtonActionLabel(buttonAction))),\n    hideOnScroll: true,\n    disabled: !isTryingToPublish || isTryingToPublish && hasEnoughSlots,\n    on: \"hover\",\n    inverted: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default React.memo(CollectionPublishButton);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/ThirdPartyCollectionDetailPage/CollectionPublishButton/CollectionPublishButton.tsx"],"names":["React","useMemo","useCallback","Button","Popup","Network","NetworkButton","t","SyncStatus","isAllowedToPushChanges","CurationStatus","PublishButtonAction","getTPButtonActionLabel","buttonAction","PUSH_CHANGES","PUBLISH_AND_PUSH_CHANGES","CollectionPublishButton","props","collection","items","slots","onClick","itemsStatus","itemCurations","isLoadingItemCurations","action","NONE","reduce","acc","item","status","id","UNPUBLISHED","willPublish","find","itemCuration","itemId","PENDING","willPushChanges","isJustPushingChanges","isJustPublishing","isPublishingAndPushing","PUBLISH","handleOnClick","itemIds","map","itemsTryingToPublish","filter","length","underReviewButtonLabel","count","hasPendingItemCurations","ic","isTryingToPublish","includes","hasEnoughSlots","MATIC","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,WAAzB,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,SAASC,CAAT,QAAkB,mDAAlB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAAgBC,mBAAhB,QAA2C,iCAA3C;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,YAAD,EAAuC;AAC3E,UAAQA,YAAR;AACE,SAAKF,mBAAmB,CAACG,YAAzB;AACE,aAAOP,CAAC,CAAC,iDAAD,CAAR;;AACF,SAAKI,mBAAmB,CAACI,wBAAzB;AACE,aAAOR,CAAC,CAAC,6DAAD,CAAR;;AACF;AACE,aAAOA,CAAC,CAAC,4CAAD,CAAR;AANJ;AAQD,CATM;;AAWP,IAAMS,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAkB;AAAA,MACxCC,UADwC,GACkDD,KADlD,CACxCC,UADwC;AAAA,MAC5BC,KAD4B,GACkDF,KADlD,CAC5BE,KAD4B;AAAA,MACrBC,KADqB,GACkDH,KADlD,CACrBG,KADqB;AAAA,MACdC,OADc,GACkDJ,KADlD,CACdI,OADc;AAAA,MACLC,WADK,GACkDL,KADlD,CACLK,WADK;AAAA,MACQC,aADR,GACkDN,KADlD,CACQM,aADR;AAAA,MACuBC,sBADvB,GACkDP,KADlD,CACuBO,sBADvB;AAGhD,MAAMX,YAAY,GAAGZ,OAAO,CAAC,YAAM;AACjC,QAAIwB,MAAM,GAAGd,mBAAmB,CAACe,IAAjC;;AADiC,wBAEQP,KAAK,CAACQ,MAAN,CACvC,UAACC,GAAD,EAAMC,IAAN,EAAe;AACb,UAAMC,MAAM,GAAGR,WAAW,CAACO,IAAI,CAACE,EAAN,CAA1B;;AACA,UAAID,MAAM,KAAKtB,UAAU,CAACwB,WAA1B,EAAuC;AACrCJ,QAAAA,GAAG,CAACK,WAAJ,GAAkB,IAAlB;AACD,OAFD,MAEO,IACLxB,sBAAsB,CACpBoB,IADoB,EAEpBC,MAFoB,EAGpBP,aAAa,CAACW,IAAd,CAAmB,UAAAC,YAAY;AAAA,eAAIA,YAAY,CAACC,MAAb,KAAwBP,IAAI,CAACE,EAA7B,IAAmCI,YAAY,CAACL,MAAb,KAAwBpB,cAAc,CAAC2B,OAA9E;AAAA,OAA/B,CAHoB,CADjB,EAML;AACAT,QAAAA,GAAG,CAACU,eAAJ,GAAsB,IAAtB;AACD;;AACD,aAAOV,GAAP;AACD,KAfsC,EAgBvC;AACEK,MAAAA,WAAW,EAAE,KADf;AAEEK,MAAAA,eAAe,EAAE;AAFnB,KAhBuC,CAFR;AAAA,QAEzBL,WAFyB,iBAEzBA,WAFyB;AAAA,QAEZK,eAFY,iBAEZA,eAFY;;AAuBjC,QAAMC,oBAAoB,GAAGD,eAAe,IAAI,CAACL,WAAjD;AACA,QAAMO,gBAAgB,GAAGP,WAAW,IAAI,CAACK,eAAzC;AACA,QAAMG,sBAAsB,GAAGH,eAAe,IAAIL,WAAlD;;AACA,QAAIM,oBAAJ,EAA0B;AACxBd,MAAAA,MAAM,GAAGd,mBAAmB,CAACG,YAA7B;AACD,KAFD,MAEO,IAAI0B,gBAAJ,EAAsB;AAC3Bf,MAAAA,MAAM,GAAGd,mBAAmB,CAAC+B,OAA7B;AACD,KAFM,MAEA,IAAID,sBAAJ,EAA4B;AACjChB,MAAAA,MAAM,GAAGd,mBAAmB,CAACI,wBAA7B;AACD;;AACD,WAAOU,MAAP;AACD,GAlC2B,EAkCzB,CAACH,WAAD,CAlCyB,CAA5B;AAoCA,MAAMqB,aAAa,GAAGzC,WAAW,CAAC,YAAM;AACtC,QAAM0C,OAAO,GAAGzB,KAAK,CAAC0B,GAAN,CAAU,UAAAhB,IAAI;AAAA,aAAIA,IAAI,CAACE,EAAT;AAAA,KAAd,CAAhB;AACAV,IAAAA,OAAO,CAACH,UAAU,CAACa,EAAZ,EAAgBa,OAAhB,EAAyB/B,YAAzB,CAAP;AACD,GAHgC,EAG9B,CAACK,UAAD,EAAaC,KAAb,EAAoBN,YAApB,CAH8B,CAAjC;AAKA,MAAMiC,oBAAoB,GAAG7C,OAAO,CAClC;AAAA,WAAMkB,KAAK,CAAC4B,MAAN,CAAa,UAAAlB,IAAI;AAAA,aAAI,EAACN,aAAD,aAACA,aAAD,eAACA,aAAa,CAAEW,IAAf,CAAoB,UAAAC,YAAY;AAAA,eAAIA,YAAY,CAACC,MAAb,KAAwBP,IAAI,CAACE,EAAjC;AAAA,OAAhC,CAAD,CAAJ;AAAA,KAAjB,EAA4FiB,MAAlG;AAAA,GADkC,EAElC,CAAC7B,KAAD,EAAQI,aAAR,CAFkC,CAApC;AAKA,MAAM0B,sBAAsB,GAAGhD,OAAO,CAAC,YAAM;AAC3C,YAAQY,YAAR;AACE,WAAKF,mBAAmB,CAAC+B,OAAzB;AACE,YAAII,oBAAJ,EAA0B;AACxB,iBAAOvC,CAAC,CAAC,uDAAD,EAA0D;AAAE2C,YAAAA,KAAK,EAAEJ;AAAT,WAA1D,CAAR;AACD;;AACD,eAAOvC,CAAC,CAAC,iDAAD,CAAR;;AACF,WAAKI,mBAAmB,CAACI,wBAAzB;AACE,eAAOR,CAAC,CAAC,kEAAD,EAAqE;AAAE2C,UAAAA,KAAK,EAAEJ;AAAT,SAArE,CAAR;;AACF;AACE,eAAOvC,CAAC,CAAC,iDAAD,CAAR;AATJ;AAWD,GAZqC,EAYnC,CAACM,YAAD,EAAeiC,oBAAf,CAZmC,CAAtC;AAcA,MAAMK,uBAAuB,GAAG5B,aAAa,IAAI,CAAC,CAACA,aAAa,CAACW,IAAd,CAAmB,UAAAkB,EAAE;AAAA,WAAIA,EAAE,CAACtB,MAAH,KAAcpB,cAAc,CAAC2B,OAAjC;AAAA,GAArB,CAAnD;AACA,MAAMgB,iBAAiB,GAAG,CAAC1C,mBAAmB,CAAC+B,OAArB,EAA8B/B,mBAAmB,CAACI,wBAAlD,EAA4EuC,QAA5E,CAAqFzC,YAArF,CAA1B;AACA,MAAM0C,cAAc,GAAGnC,KAAK,IAAID,KAAK,CAAC6B,MAAtC;AAEA,SAAO,CAACxB,sBAAD,IAA2B2B,uBAA3B,KAAuDE,iBAAiB,IAAIxC,YAAY,KAAKF,mBAAmB,CAACe,IAAjH,iBACL,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEuB,sBADX;AAEE,IAAA,QAAQ,EAAC,eAFX;AAGE,IAAA,OAAO,eACL;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,OAAO,MAAzB;AAA0B,MAAA,QAAQ,EAAE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1C,CAAC,CAAC,qCAAD,CADJ,CADF,CAJJ;AAUE,IAAA,YAAY,EAAE,IAVhB;AAWE,IAAA,EAAE,EAAC,OAXL;AAYE,IAAA,QAAQ,MAZV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAgBL,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEA,CAAC,CAAC,4DAAD,CADZ;AAEE,IAAA,QAAQ,EAAC,eAFX;AAGE,IAAA,OAAO,eACL;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAEiB,sBADX;AAEE,MAAA,QAAQ,EACL6B,iBAAiB,KAAKjC,KAAK,KAAK,CAAV,IAAe,CAACmC,cAArB,CAAlB,IAA2DpC,KAAK,CAAC6B,MAAN,KAAiB,CAA5E,IAAiFnC,YAAY,KAAKF,mBAAmB,CAACe,IAH1H;AAKE,MAAA,OAAO,MALT;AAME,MAAA,OAAO,MANT;AAOE,MAAA,OAAO,EAAEiB,aAPX;AAQE,MAAA,OAAO,EAAEtC,OAAO,CAACmD,KARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG5C,sBAAsB,CAACC,YAAD,CAVzB,CADF,CAJJ;AAmBE,IAAA,YAAY,EAAE,IAnBhB;AAoBE,IAAA,QAAQ,EAAE,CAACwC,iBAAD,IAAuBA,iBAAiB,IAAIE,cApBxD;AAqBE,IAAA,EAAE,EAAC,OArBL;AAsBE,IAAA,QAAQ,MAtBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF;AAyCD,CA5GD;;AA8GA,eAAevD,KAAK,CAACyD,IAAN,CAAWzC,uBAAX,CAAf","sourcesContent":["import React, { useMemo, useCallback } from 'react'\nimport { Button, Popup } from 'decentraland-ui'\nimport { Network } from '@dcl/schemas'\nimport { NetworkButton } from 'decentraland-dapps/dist/containers'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { SyncStatus } from 'modules/item/types'\nimport { isAllowedToPushChanges } from 'modules/item/utils'\nimport { CurationStatus } from 'modules/curations/types'\nimport { Props, PublishButtonAction } from './CollectionPublishButton.types'\n\nexport const getTPButtonActionLabel = (buttonAction: PublishButtonAction) => {\n  switch (buttonAction) {\n    case PublishButtonAction.PUSH_CHANGES:\n      return t('third_party_collection_detail_page.push_changes')\n    case PublishButtonAction.PUBLISH_AND_PUSH_CHANGES:\n      return t('third_party_collection_detail_page.publish_and_push_changes')\n    default:\n      return t('third_party_collection_detail_page.publish')\n  }\n}\n\nconst CollectionPublishButton = (props: Props) => {\n  const { collection, items, slots, onClick, itemsStatus, itemCurations, isLoadingItemCurations } = props\n\n  const buttonAction = useMemo(() => {\n    let action = PublishButtonAction.NONE\n    const { willPublish, willPushChanges } = items.reduce(\n      (acc, item) => {\n        const status = itemsStatus[item.id]\n        if (status === SyncStatus.UNPUBLISHED) {\n          acc.willPublish = true\n        } else if (\n          isAllowedToPushChanges(\n            item,\n            status,\n            itemCurations.find(itemCuration => itemCuration.itemId === item.id && itemCuration.status === CurationStatus.PENDING)\n          )\n        ) {\n          acc.willPushChanges = true\n        }\n        return acc\n      },\n      {\n        willPublish: false,\n        willPushChanges: false\n      }\n    )\n    const isJustPushingChanges = willPushChanges && !willPublish\n    const isJustPublishing = willPublish && !willPushChanges\n    const isPublishingAndPushing = willPushChanges && willPublish\n    if (isJustPushingChanges) {\n      action = PublishButtonAction.PUSH_CHANGES\n    } else if (isJustPublishing) {\n      action = PublishButtonAction.PUBLISH\n    } else if (isPublishingAndPushing) {\n      action = PublishButtonAction.PUBLISH_AND_PUSH_CHANGES\n    }\n    return action\n  }, [itemsStatus])\n\n  const handleOnClick = useCallback(() => {\n    const itemIds = items.map(item => item.id)\n    onClick(collection.id, itemIds, buttonAction)\n  }, [collection, items, buttonAction])\n\n  const itemsTryingToPublish = useMemo(\n    () => items.filter(item => !itemCurations?.find(itemCuration => itemCuration.itemId === item.id)).length,\n    [items, itemCurations]\n  )\n\n  const underReviewButtonLabel = useMemo(() => {\n    switch (buttonAction) {\n      case PublishButtonAction.PUBLISH:\n        if (itemsTryingToPublish) {\n          return t('third_party_collection_detail_page.cant_publish_items', { count: itemsTryingToPublish })\n        }\n        return t('third_party_collection_detail_page.cant_publish')\n      case PublishButtonAction.PUBLISH_AND_PUSH_CHANGES:\n        return t('third_party_collection_detail_page.cant_publish_and_push_changes', { count: itemsTryingToPublish })\n      default:\n        return t('third_party_collection_detail_page.cant_publish')\n    }\n  }, [buttonAction, itemsTryingToPublish])\n\n  const hasPendingItemCurations = itemCurations && !!itemCurations.find(ic => ic.status === CurationStatus.PENDING)\n  const isTryingToPublish = [PublishButtonAction.PUBLISH, PublishButtonAction.PUBLISH_AND_PUSH_CHANGES].includes(buttonAction)\n  const hasEnoughSlots = slots >= items.length\n\n  return !isLoadingItemCurations && hasPendingItemCurations && (isTryingToPublish || buttonAction === PublishButtonAction.NONE) ? (\n    <Popup\n      content={underReviewButtonLabel}\n      position=\"bottom center\"\n      trigger={\n        <div className=\"popup-button\">\n          <Button secondary compact disabled={true}>\n            {t('collection_detail_page.under_review')}\n          </Button>\n        </div>\n      }\n      hideOnScroll={true}\n      on=\"hover\"\n      inverted\n    />\n  ) : (\n    <Popup\n      content={t('third_party_collection_detail_page.exceeds_available_slots')}\n      position=\"bottom center\"\n      trigger={\n        <div className=\"popup-button\">\n          <NetworkButton\n            loading={isLoadingItemCurations}\n            disabled={\n              (isTryingToPublish && (slots === 0 || !hasEnoughSlots)) || items.length === 0 || buttonAction === PublishButtonAction.NONE\n            }\n            primary\n            compact\n            onClick={handleOnClick}\n            network={Network.MATIC}\n          >\n            {getTPButtonActionLabel(buttonAction)}\n          </NetworkButton>\n        </div>\n      }\n      hideOnScroll={true}\n      disabled={!isTryingToPublish || (isTryingToPublish && hasEnoughSlots)}\n      on=\"hover\"\n      inverted\n    />\n  )\n}\n\nexport default React.memo(CollectionPublishButton)\n"]},"metadata":{},"sourceType":"module"}