{"ast":null,"code":"/**\r\n * The engine store class is responsible to hold all the instances of Engine and Scene created\r\n * during the life time of the application.\r\n */\nvar EngineStore =\n/** @class */\nfunction () {\n  function EngineStore() {}\n\n  Object.defineProperty(EngineStore, \"LastCreatedEngine\", {\n    /**\r\n     * Gets the latest created engine\r\n     */\n    get: function get() {\n      if (this.Instances.length === 0) {\n        return null;\n      }\n\n      return this.Instances[this.Instances.length - 1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EngineStore, \"LastCreatedScene\", {\n    /**\r\n     * Gets the latest created scene\r\n     */\n    get: function get() {\n      return this._LastCreatedScene;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** Gets the list of created engines */\n\n  EngineStore.Instances = new Array();\n  /** @hidden */\n\n  EngineStore._LastCreatedScene = null;\n  /**\r\n   * Gets or sets a global variable indicating if fallback texture must be used when a texture cannot be loaded\r\n   * @ignorenaming\r\n   */\n\n  EngineStore.UseFallbackTexture = true;\n  /**\r\n   * Texture content used if a texture cannot loaded\r\n   * @ignorenaming\r\n   */\n\n  EngineStore.FallbackTexture = \"\";\n  return EngineStore;\n}();\n\nexport { EngineStore };","map":null,"metadata":{},"sourceType":"module"}