{"ast":null,"code":"\"use strict\"; /// <reference types=\"node\" />\n\nvar _regeneratorRuntime = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _awaitAsyncGenerator = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashV1 = exports.hashV0 = void 0;\n\nvar crypto = __importStar(require(\"crypto\"));\n\nvar multiformats = __importStar(require(\"multiformats\"));\n\nvar ipfs_unixfs_importer_1 = require(\"ipfs-unixfs-importer\");\n/**\n * Calculates a Qm prefixed hash for Decentraland (NOT CIDv0) from a readable stream\n *\n * @public\n * @deprecated use hashV1 instead, this function exists for backwards compatibility reasons.\n */\n\n\nfunction hashV0(_x) {\n  return _hashV.apply(this, arguments);\n}\n\nfunction _hashV() {\n  _hashV = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(stream) {\n    var hash, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            hash = crypto.createHash(\"sha256\");\n\n            if (!(stream instanceof Uint8Array)) {\n              _context.next = 5;\n              break;\n            }\n\n            hash.update(stream);\n            _context.next = 37;\n            break;\n\n          case 5:\n            if (!(Symbol.asyncIterator in stream)) {\n              _context.next = 36;\n              break;\n            }\n\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 8;\n            _iterator = _asyncIterator(stream);\n\n          case 10:\n            _context.next = 12;\n            return _iterator.next();\n\n          case 12:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 18;\n              break;\n            }\n\n            chunk = _step.value;\n            hash.update(chunk);\n\n          case 15:\n            _iteratorAbruptCompletion = false;\n            _context.next = 10;\n            break;\n\n          case 18:\n            _context.next = 24;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](8);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 24:\n            _context.prev = 24;\n            _context.prev = 25;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 29;\n              break;\n            }\n\n            _context.next = 29;\n            return _iterator.return();\n\n          case 29:\n            _context.prev = 29;\n\n            if (!_didIteratorError) {\n              _context.next = 32;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 32:\n            return _context.finish(29);\n\n          case 33:\n            return _context.finish(24);\n\n          case 34:\n            _context.next = 37;\n            break;\n\n          case 36:\n            throw new Error(\"Invalid value provided to hashStreamV0. Expected AsyncGenerator<Uint8Array> | AsyncIterable<Uint8Array> | Uint8Array\");\n\n          case 37:\n            return _context.abrupt(\"return\", multiformats.CID.createV0(multiformats.digest.create(0x12, hash.digest())).toString());\n\n          case 38:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[8, 20, 24, 34], [25,, 29, 33]]);\n  }));\n  return _hashV.apply(this, arguments);\n}\n\nexports.hashV0 = hashV0;\n/**\n * Calculates a CIDv1 from a readable stream\n * @public\n */\n\nfunction hashV1(_x2) {\n  return _hashV2.apply(this, arguments);\n}\n\nfunction _hashV2() {\n  _hashV2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(content) {\n    var block, lastCid, wrap, _wrap, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, cid, _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _cid;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _wrap = function _wrap3() {\n              _wrap = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return content;\n\n                      case 2:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              return _wrap.apply(this, arguments);\n            };\n\n            wrap = function _wrap2() {\n              return _wrap.apply(this, arguments);\n            };\n\n            block = {\n              get: function get(cid) {\n                return Promise.reject(new Error(\"unexpected block API get for \".concat(cid)));\n              },\n              put: function put() {\n                return Promise.reject(new Error(\"unexpected block API put\"));\n              }\n            };\n\n            if (!(content instanceof Uint8Array)) {\n              _context3.next = 34;\n              break;\n            }\n\n            _iteratorAbruptCompletion2 = false;\n            _didIteratorError2 = false;\n            _context3.prev = 6;\n            _iterator2 = _asyncIterator((0, ipfs_unixfs_importer_1.importer)([{\n              content: wrap()\n            }], block, {\n              cidVersion: 1,\n              onlyHash: true,\n              rawLeaves: true\n            }));\n\n          case 8:\n            _context3.next = 10;\n            return _iterator2.next();\n\n          case 10:\n            if (!(_iteratorAbruptCompletion2 = !(_step2 = _context3.sent).done)) {\n              _context3.next = 16;\n              break;\n            }\n\n            cid = _step2.value.cid;\n            lastCid = cid;\n\n          case 13:\n            _iteratorAbruptCompletion2 = false;\n            _context3.next = 8;\n            break;\n\n          case 16:\n            _context3.next = 22;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](6);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context3.t0;\n\n          case 22:\n            _context3.prev = 22;\n            _context3.prev = 23;\n\n            if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n              _context3.next = 27;\n              break;\n            }\n\n            _context3.next = 27;\n            return _iterator2.return();\n\n          case 27:\n            _context3.prev = 27;\n\n            if (!_didIteratorError2) {\n              _context3.next = 30;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 30:\n            return _context3.finish(27);\n\n          case 31:\n            return _context3.finish(22);\n\n          case 32:\n            _context3.next = 66;\n            break;\n\n          case 34:\n            if (!(Symbol.asyncIterator in content)) {\n              _context3.next = 65;\n              break;\n            }\n\n            _iteratorAbruptCompletion3 = false;\n            _didIteratorError3 = false;\n            _context3.prev = 37;\n            _iterator3 = _asyncIterator((0, ipfs_unixfs_importer_1.importer)([{\n              content: content\n            }], block, {\n              cidVersion: 1,\n              onlyHash: true,\n              rawLeaves: true\n            }));\n\n          case 39:\n            _context3.next = 41;\n            return _iterator3.next();\n\n          case 41:\n            if (!(_iteratorAbruptCompletion3 = !(_step3 = _context3.sent).done)) {\n              _context3.next = 47;\n              break;\n            }\n\n            _cid = _step3.value.cid;\n            lastCid = _cid;\n\n          case 44:\n            _iteratorAbruptCompletion3 = false;\n            _context3.next = 39;\n            break;\n\n          case 47:\n            _context3.next = 53;\n            break;\n\n          case 49:\n            _context3.prev = 49;\n            _context3.t1 = _context3[\"catch\"](37);\n            _didIteratorError3 = true;\n            _iteratorError3 = _context3.t1;\n\n          case 53:\n            _context3.prev = 53;\n            _context3.prev = 54;\n\n            if (!(_iteratorAbruptCompletion3 && _iterator3.return != null)) {\n              _context3.next = 58;\n              break;\n            }\n\n            _context3.next = 58;\n            return _iterator3.return();\n\n          case 58:\n            _context3.prev = 58;\n\n            if (!_didIteratorError3) {\n              _context3.next = 61;\n              break;\n            }\n\n            throw _iteratorError3;\n\n          case 61:\n            return _context3.finish(58);\n\n          case 62:\n            return _context3.finish(53);\n\n          case 63:\n            _context3.next = 66;\n            break;\n\n          case 65:\n            throw new Error(\"Invalid value provided to hashStreamV1. Expected AsyncGenerator<Uint8Array> | AsyncIterable<Uint8Array> | Uint8Array\");\n\n          case 66:\n            return _context3.abrupt(\"return\", \"\".concat(lastCid));\n\n          case 67:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[6, 18, 22, 32], [23,, 27, 31], [37, 49, 53, 63], [54,, 58, 62]]);\n  }));\n  return _hashV2.apply(this, arguments);\n}\n\nexports.hashV1 = hashV1;","map":null,"metadata":{},"sourceType":"script"}