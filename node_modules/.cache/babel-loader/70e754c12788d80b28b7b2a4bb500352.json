{"ast":null,"code":"import { action } from 'typesafe-actions';\n// Deploy to LAND pool\nexport var DEPLOY_TO_POOL_REQUEST = '[Request] Deploy to LAND pool';\nexport var DEPLOY_TO_POOL_SUCCESS = '[Success] Deploy to LAND pool';\nexport var DEPLOY_TO_POOL_FAILURE = '[Failure] Deploy to LAND pool';\nexport var deployToPoolRequest = function deployToPoolRequest(projectId) {\n  var additionalInfo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return action(DEPLOY_TO_POOL_REQUEST, {\n    projectId: projectId,\n    additionalInfo: additionalInfo\n  });\n};\nexport var deployToPoolSuccess = function deployToPoolSuccess(images) {\n  return action(DEPLOY_TO_POOL_SUCCESS, {\n    images: images\n  });\n};\nexport var deployToPoolFailure = function deployToPoolFailure(error) {\n  return action(DEPLOY_TO_POOL_FAILURE, {\n    error: error\n  });\n};\n// Deploy to LAND\nexport var DEPLOY_TO_LAND_REQUEST = '[Request] Deploy to LAND';\nexport var DEPLOY_TO_LAND_SUCCESS = '[Success] Deploy to LAND';\nexport var DEPLOY_TO_LAND_FAILURE = '[Failure] Deploy to LAND';\nexport var deployToLandRequest = function deployToLandRequest(projectId, placement, overrideDeploymentId) {\n  return action(DEPLOY_TO_LAND_REQUEST, {\n    projectId: projectId,\n    placement: placement,\n    overrideDeploymentId: overrideDeploymentId\n  });\n};\nexport var deployToLandSuccess = function deployToLandSuccess(deployment, overrideDeploymentId) {\n  return action(DEPLOY_TO_LAND_SUCCESS, {\n    deployment: deployment,\n    overrideDeploymentId: overrideDeploymentId\n  });\n};\nexport var deployToLandFailure = function deployToLandFailure(error) {\n  return action(DEPLOY_TO_LAND_FAILURE, {\n    error: error\n  });\n};\n// Clear LAND deployment\nexport var CLEAR_DEPLOYMENT_REQUEST = '[Request] Clear Deployment';\nexport var CLEAR_DEPLOYMENT_SUCCESS = '[Success] Clear Deployment';\nexport var CLEAR_DEPLOYMENT_FAILURE = '[Failure] Clear Deployment';\nexport var clearDeploymentRequest = function clearDeploymentRequest(deploymentId) {\n  return action(CLEAR_DEPLOYMENT_REQUEST, {\n    deploymentId: deploymentId\n  });\n};\nexport var clearDeploymentSuccess = function clearDeploymentSuccess(deploymentId) {\n  return action(CLEAR_DEPLOYMENT_SUCCESS, {\n    deploymentId: deploymentId\n  });\n};\nexport var clearDeploymentFailure = function clearDeploymentFailure(deploymentId, error) {\n  return action(CLEAR_DEPLOYMENT_FAILURE, {\n    deploymentId: deploymentId,\n    error: error\n  });\n};\n// Set progress\nexport var SET_PROGRESS = 'Set Deployment progress';\nexport var setProgress = function setProgress(stage, value) {\n  return action(SET_PROGRESS, {\n    stage: stage,\n    value: value\n  });\n};\n// Fetch deployments\nexport var FETCH_DEPLOYMENTS_REQUEST = '[Request] Fetch deployments';\nexport var FETCH_DEPLOYMENTS_SUCCESS = '[Success] Fetch deployments';\nexport var FETCH_DEPLOYMENTS_FAILURE = '[Failure] Fetch deployments';\nexport var fetchDeploymentsRequest = function fetchDeploymentsRequest(coords) {\n  return action(FETCH_DEPLOYMENTS_REQUEST, {\n    coords: coords\n  });\n};\nexport var fetchDeploymentsSuccess = function fetchDeploymentsSuccess(coords, deployments) {\n  return action(FETCH_DEPLOYMENTS_SUCCESS, {\n    coords: coords,\n    deployments: deployments\n  });\n};\nexport var fetchDeploymentsFailure = function fetchDeploymentsFailure(coords, error) {\n  return action(FETCH_DEPLOYMENTS_FAILURE, {\n    coords: coords,\n    error: error\n  });\n};","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/deployment/actions.ts"],"names":["action","DEPLOY_TO_POOL_REQUEST","DEPLOY_TO_POOL_SUCCESS","DEPLOY_TO_POOL_FAILURE","deployToPoolRequest","projectId","additionalInfo","deployToPoolSuccess","images","deployToPoolFailure","error","DEPLOY_TO_LAND_REQUEST","DEPLOY_TO_LAND_SUCCESS","DEPLOY_TO_LAND_FAILURE","deployToLandRequest","placement","overrideDeploymentId","deployToLandSuccess","deployment","deployToLandFailure","CLEAR_DEPLOYMENT_REQUEST","CLEAR_DEPLOYMENT_SUCCESS","CLEAR_DEPLOYMENT_FAILURE","clearDeploymentRequest","deploymentId","clearDeploymentSuccess","clearDeploymentFailure","SET_PROGRESS","setProgress","stage","value","FETCH_DEPLOYMENTS_REQUEST","FETCH_DEPLOYMENTS_SUCCESS","FETCH_DEPLOYMENTS_FAILURE","fetchDeploymentsRequest","coords","fetchDeploymentsSuccess","deployments","fetchDeploymentsFailure"],"mappings":"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","sourcesContent":["import { action } from 'typesafe-actions'\nimport { Placement, Deployment } from 'modules/deployment/types'\nimport { ProgressStage } from './types'\nimport { PoolDeploymentAdditionalFields } from 'lib/api/builder'\n\n// Deploy to LAND pool\nexport const DEPLOY_TO_POOL_REQUEST = '[Request] Deploy to LAND pool'\nexport const DEPLOY_TO_POOL_SUCCESS = '[Success] Deploy to LAND pool'\nexport const DEPLOY_TO_POOL_FAILURE = '[Failure] Deploy to LAND pool'\n\nexport const deployToPoolRequest = (projectId: string, additionalInfo: PoolDeploymentAdditionalFields | null = null) =>\n  action(DEPLOY_TO_POOL_REQUEST, { projectId, additionalInfo })\nexport const deployToPoolSuccess = (images: string) => action(DEPLOY_TO_POOL_SUCCESS, { images })\nexport const deployToPoolFailure = (error: string) => action(DEPLOY_TO_POOL_FAILURE, { error })\n\nexport type DeployToPoolRequestAction = ReturnType<typeof deployToPoolRequest>\nexport type DeployToPoolSuccessAction = ReturnType<typeof deployToPoolSuccess>\nexport type DeployToPoolFailureAction = ReturnType<typeof deployToPoolFailure>\n\n// Deploy to LAND\n\nexport const DEPLOY_TO_LAND_REQUEST = '[Request] Deploy to LAND'\nexport const DEPLOY_TO_LAND_SUCCESS = '[Success] Deploy to LAND'\nexport const DEPLOY_TO_LAND_FAILURE = '[Failure] Deploy to LAND'\n\nexport const deployToLandRequest = (projectId: string, placement: Placement, overrideDeploymentId?: string) =>\n  action(DEPLOY_TO_LAND_REQUEST, { projectId, placement, overrideDeploymentId })\nexport const deployToLandSuccess = (deployment: Deployment, overrideDeploymentId?: string) =>\n  action(DEPLOY_TO_LAND_SUCCESS, { deployment, overrideDeploymentId })\nexport const deployToLandFailure = (error: string) => action(DEPLOY_TO_LAND_FAILURE, { error })\n\nexport type DeployToLandRequestAction = ReturnType<typeof deployToLandRequest>\nexport type DeployToLandSuccessAction = ReturnType<typeof deployToLandSuccess>\nexport type DeployToLandFailureAction = ReturnType<typeof deployToLandFailure>\n\n// Clear LAND deployment\n\nexport const CLEAR_DEPLOYMENT_REQUEST = '[Request] Clear Deployment'\nexport const CLEAR_DEPLOYMENT_SUCCESS = '[Success] Clear Deployment'\nexport const CLEAR_DEPLOYMENT_FAILURE = '[Failure] Clear Deployment'\n\nexport const clearDeploymentRequest = (deploymentId: string) => action(CLEAR_DEPLOYMENT_REQUEST, { deploymentId })\nexport const clearDeploymentSuccess = (deploymentId: string) => action(CLEAR_DEPLOYMENT_SUCCESS, { deploymentId })\nexport const clearDeploymentFailure = (deploymentId: string, error: string) => action(CLEAR_DEPLOYMENT_FAILURE, { deploymentId, error })\n\nexport type ClearDeploymentRequestAction = ReturnType<typeof clearDeploymentRequest>\nexport type ClearDeploymentSuccessAction = ReturnType<typeof clearDeploymentSuccess>\nexport type ClearDeploymentFailureAction = ReturnType<typeof clearDeploymentFailure>\n\n// Set progress\n\nexport const SET_PROGRESS = 'Set Deployment progress'\nexport const setProgress = (stage: ProgressStage, value: number) => action(SET_PROGRESS, { stage, value })\nexport type SetProgressAction = ReturnType<typeof setProgress>\n\n// Fetch deployments\nexport const FETCH_DEPLOYMENTS_REQUEST = '[Request] Fetch deployments'\nexport const FETCH_DEPLOYMENTS_SUCCESS = '[Success] Fetch deployments'\nexport const FETCH_DEPLOYMENTS_FAILURE = '[Failure] Fetch deployments'\n\nexport const fetchDeploymentsRequest = (coords: string[]) => action(FETCH_DEPLOYMENTS_REQUEST, { coords })\nexport const fetchDeploymentsSuccess = (coords: string[], deployments: Deployment[]) =>\n  action(FETCH_DEPLOYMENTS_SUCCESS, { coords, deployments })\nexport const fetchDeploymentsFailure = (coords: string[], error: string) => action(FETCH_DEPLOYMENTS_FAILURE, { coords, error })\n\nexport type FetchDeploymentsRequestAction = ReturnType<typeof fetchDeploymentsRequest>\nexport type FetchDeploymentsSuccessAction = ReturnType<typeof fetchDeploymentsSuccess>\nexport type FetchDeploymentsFailureAction = ReturnType<typeof fetchDeploymentsFailure>\n"]},"metadata":{},"sourceType":"module"}