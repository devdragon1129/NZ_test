{"ast":null,"code":"import { WearableCategory } from '@dcl/schemas';\nimport { ThumbnailType } from 'lib/getModelData';\nimport { InvalidContentPath, InvalidEnumValue } from 'modules/item/errors';\nexport var getThumbnailType = function getThumbnailType(category) {\n  switch (category) {\n    case WearableCategory.EYEBROWS:\n    case WearableCategory.EYES:\n    case WearableCategory.MASK:\n    case WearableCategory.MOUTH:\n    case WearableCategory.SKIN:\n      return ThumbnailType.FRONT;\n\n    default:\n      return ThumbnailType.DEFAULT;\n  }\n};\nexport function validatePath(path, assetJson, contents) {\n  if (assetJson[path] && !(assetJson[path] in contents)) {\n    throw new InvalidContentPath(assetJson[path], path);\n  }\n}\nexport function validateEnum(name, assetJson) {\n  var values = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var value = assetJson[name];\n\n  if (value && !values.includes(value)) {\n    throw new InvalidEnumValue(value, values, name);\n  }\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/CreateSingleItemModal/utils.ts"],"names":["WearableCategory","ThumbnailType","InvalidContentPath","InvalidEnumValue","getThumbnailType","category","EYEBROWS","EYES","MASK","MOUTH","SKIN","FRONT","DEFAULT","validatePath","path","assetJson","contents","validateEnum","name","values","value","includes"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,cAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,qBAArD;AAGA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAgC;AAC9D,UAAQA,QAAR;AACE,SAAKL,gBAAgB,CAACM,QAAtB;AACA,SAAKN,gBAAgB,CAACO,IAAtB;AACA,SAAKP,gBAAgB,CAACQ,IAAtB;AACA,SAAKR,gBAAgB,CAACS,KAAtB;AACA,SAAKT,gBAAgB,CAACU,IAAtB;AACE,aAAOT,aAAa,CAACU,KAArB;;AACF;AACE,aAAOV,aAAa,CAACW,OAArB;AARJ;AAUD,CAXM;AAaP,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAAiDC,SAAjD,EAA2EC,QAA3E,EAA2G;AAChH,MAAID,SAAS,CAACD,IAAD,CAAT,IAAmB,EAAEC,SAAS,CAACD,IAAD,CAAT,IAAoBE,QAAtB,CAAvB,EAAwD;AACtD,UAAM,IAAId,kBAAJ,CAAuBa,SAAS,CAACD,IAAD,CAAhC,EAAyCA,IAAzC,CAAN;AACD;AACF;AAED,OAAO,SAASG,YAAT,CAAsBC,IAAtB,EAAiDH,SAAjD,EAA+F;AAAA,MAApBI,MAAoB,uEAAJ,EAAI;AACpG,MAAMC,KAAK,GAAGL,SAAS,CAACG,IAAD,CAAvB;;AACA,MAAIE,KAAK,IAAI,CAACD,MAAM,CAACE,QAAP,CAAgBD,KAAhB,CAAd,EAAsC;AACpC,UAAM,IAAIjB,gBAAJ,CAAqBiB,KAArB,EAA6BD,MAA7B,EAAqCD,IAArC,CAAN;AACD;AACF","sourcesContent":["import { WearableCategory } from '@dcl/schemas'\nimport { ThumbnailType } from 'lib/getModelData'\nimport { InvalidContentPath, InvalidEnumValue } from 'modules/item/errors'\nimport { ItemAssetJson } from './CreateSingleItemModal.types'\n\nexport const getThumbnailType = (category: WearableCategory) => {\n  switch (category) {\n    case WearableCategory.EYEBROWS:\n    case WearableCategory.EYES:\n    case WearableCategory.MASK:\n    case WearableCategory.MOUTH:\n    case WearableCategory.SKIN:\n      return ThumbnailType.FRONT\n    default:\n      return ThumbnailType.DEFAULT\n  }\n}\n\nexport function validatePath(path: keyof ItemAssetJson, assetJson: ItemAssetJson, contents: Record<string, Blob>) {\n  if (assetJson[path] && !(assetJson[path]! in contents)) {\n    throw new InvalidContentPath(assetJson[path]!, path)\n  }\n}\n\nexport function validateEnum(name: keyof ItemAssetJson, assetJson: ItemAssetJson, values: any[] = []) {\n  const value = assetJson[name]\n  if (value && !values.includes(value)) {\n    throw new InvalidEnumValue(value!, values, name)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}