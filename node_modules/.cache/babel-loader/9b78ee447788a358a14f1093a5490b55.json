{"ast":null,"code":"import { connect } from 'react-redux';\nimport { getSelectedCategory, getSelectedAssetPack, getSearch } from 'modules/ui/sidebar/selectors';\nimport { selectCategory, selectAssetPack, searchAssets } from 'modules/ui/sidebar/actions';\nimport { openModal } from 'modules/modal/actions';\nimport SidebarHeader from './SidebarHeader';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\n\nvar mapState = function mapState(state) {\n  return {\n    selectedAssetPack: getSelectedAssetPack(state),\n    selectedCategory: getSelectedCategory(state),\n    ethAddress: getAddress(state),\n    search: getSearch(state)\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onSelectCategory: function onSelectCategory(category) {\n      return dispatch(selectCategory(category));\n    },\n    onSelectAssetPack: function onSelectAssetPack(assetPackId) {\n      return dispatch(selectAssetPack(assetPackId));\n    },\n    onSearch: function onSearch(search) {\n      return dispatch(searchAssets(search));\n    },\n    onEditAssetPack: function onEditAssetPack(assetPackId) {\n      return dispatch(openModal('EditAssetPackModal', {\n        assetPackId: assetPackId\n      }));\n    },\n    onCreateAssetPack: function onCreateAssetPack() {\n      return dispatch(openModal('CreateAssetPackModal'));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SidebarHeader);","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/SideBar/SidebarHeader/SidebarHeader.container.ts"],"names":["connect","getSelectedCategory","getSelectedAssetPack","getSearch","selectCategory","selectAssetPack","searchAssets","openModal","SidebarHeader","getAddress","mapState","state","selectedAssetPack","selectedCategory","ethAddress","search","mapDispatch","dispatch","onSelectCategory","category","onSelectAssetPack","assetPackId","onSearch","onEditAssetPack","onCreateAssetPack"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAGA,SAASC,mBAAT,EAA8BC,oBAA9B,EAAoDC,SAApD,QAAqE,8BAArE;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,YAA1C,QAA8D,4BAA9D;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,kDAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAsC;AACrDC,IAAAA,iBAAiB,EAAEV,oBAAoB,CAACS,KAAD,CADc;AAErDE,IAAAA,gBAAgB,EAAEZ,mBAAmB,CAACU,KAAD,CAFgB;AAGrDG,IAAAA,UAAU,EAAEL,UAAU,CAACE,KAAD,CAH+B;AAIrDI,IAAAA,MAAM,EAAEZ,SAAS,CAACQ,KAAD;AAJoC,GAAtC;AAAA,CAAjB;;AAOA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAA8C;AAChEC,IAAAA,gBAAgB,EAAE,0BAAAC,QAAQ;AAAA,aAAIF,QAAQ,CAACb,cAAc,CAACe,QAAD,CAAf,CAAZ;AAAA,KADsC;AAEhEC,IAAAA,iBAAiB,EAAE,2BAAAC,WAAW;AAAA,aAAIJ,QAAQ,CAACZ,eAAe,CAACgB,WAAD,CAAhB,CAAZ;AAAA,KAFkC;AAGhEC,IAAAA,QAAQ,EAAE,kBAAAP,MAAM;AAAA,aAAIE,QAAQ,CAACX,YAAY,CAACS,MAAD,CAAb,CAAZ;AAAA,KAHgD;AAIhEQ,IAAAA,eAAe,EAAE,yBAACF,WAAD;AAAA,aAAyBJ,QAAQ,CAACV,SAAS,CAAC,oBAAD,EAAuB;AAAEc,QAAAA,WAAW,EAAXA;AAAF,OAAvB,CAAV,CAAjC;AAAA,KAJ+C;AAKhEG,IAAAA,iBAAiB,EAAE;AAAA,aAAMP,QAAQ,CAACV,SAAS,CAAC,sBAAD,CAAV,CAAd;AAAA;AAL6C,GAA9C;AAAA,CAApB;;AAQA,eAAeP,OAAO,CAACU,QAAD,EAAWM,WAAX,CAAP,CAA+BR,aAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux'\n\nimport { RootState } from 'modules/common/types'\nimport { getSelectedCategory, getSelectedAssetPack, getSearch } from 'modules/ui/sidebar/selectors'\nimport { selectCategory, selectAssetPack, searchAssets } from 'modules/ui/sidebar/actions'\nimport { openModal } from 'modules/modal/actions'\nimport { MapStateProps, MapDispatchProps, MapDispatch } from './SidebarHeader.types'\nimport SidebarHeader from './SidebarHeader'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\n\nconst mapState = (state: RootState): MapStateProps => ({\n  selectedAssetPack: getSelectedAssetPack(state),\n  selectedCategory: getSelectedCategory(state),\n  ethAddress: getAddress(state),\n  search: getSearch(state)\n})\n\nconst mapDispatch = (dispatch: MapDispatch): MapDispatchProps => ({\n  onSelectCategory: category => dispatch(selectCategory(category)),\n  onSelectAssetPack: assetPackId => dispatch(selectAssetPack(assetPackId)),\n  onSearch: search => dispatch(searchAssets(search)),\n  onEditAssetPack: (assetPackId: string) => dispatch(openModal('EditAssetPackModal', { assetPackId })),\n  onCreateAssetPack: () => dispatch(openModal('CreateAssetPackModal'))\n})\n\nexport default connect(mapState, mapDispatch)(SidebarHeader)\n"]},"metadata":{},"sourceType":"module"}