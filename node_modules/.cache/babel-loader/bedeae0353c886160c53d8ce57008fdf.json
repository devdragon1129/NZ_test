{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseWearable = void 0;\n\nvar validation_1 = require(\"../../validation\");\n\nvar wearable_category_1 = require(\"../../dapps/wearable-category\");\n\nvar i18n_1 = require(\"./i18n\");\n\nvar representation_1 = require(\"./representation\");\n\nvar metrics_1 = require(\"./metrics\");\n\nvar displayable_1 = require(\"../shared/displayable\");\n/** @alpha */\n\n\nvar BaseWearable;\n\n(function (BaseWearable) {\n  BaseWearable.schema = {\n    type: 'object',\n    properties: _objectSpread({}, displayable_1.displayableProperties, {\n      id: {\n        type: 'string'\n      },\n      descriptions: {\n        type: 'array',\n        items: i18n_1.I18N.schema,\n        minItems: 1\n      },\n      names: {\n        type: 'array',\n        items: i18n_1.I18N.schema,\n        minItems: 1\n      },\n      data: {\n        type: 'object',\n        properties: {\n          replaces: {\n            type: 'array',\n            items: wearable_category_1.WearableCategory.schema\n          },\n          hides: {\n            type: 'array',\n            items: wearable_category_1.WearableCategory.schema\n          },\n          tags: {\n            type: 'array',\n            items: {\n              type: 'string',\n              minLength: 1\n            }\n          },\n          representations: {\n            type: 'array',\n            items: representation_1.WearableRepresentation.schema,\n            minItems: 1\n          },\n          category: wearable_category_1.WearableCategory.schema\n        },\n        additionalProperties: false,\n        required: ['replaces', 'hides', 'tags', 'representations', 'category']\n      },\n      thumbnail: {\n        type: 'string'\n      },\n      image: {\n        type: 'string'\n      },\n      metrics: _objectSpread({}, metrics_1.Metrics.schema, {\n        nullable: true\n      })\n    }),\n    additionalProperties: false,\n    required: ['id', 'descriptions', 'names', 'data', 'thumbnail', 'image']\n  }; // Returns true only if there are no entries with the same locale\n\n  BaseWearable.validateDuplicatedLocales = function (i18ns) {\n    return i18ns.every(function (_ref, index) {\n      var code = _ref.code;\n      return i18ns.findIndex(function (i18n) {\n        return i18n.code === code;\n      }) === index;\n    });\n  };\n\n  var schemaValidator = (0, validation_1.generateValidator)(BaseWearable.schema);\n\n  BaseWearable.validate = function (wearable) {\n    return schemaValidator(wearable) && BaseWearable.validateDuplicatedLocales(wearable.descriptions) && BaseWearable.validateDuplicatedLocales(wearable.names);\n  };\n})(BaseWearable = exports.BaseWearable || (exports.BaseWearable = {}));","map":null,"metadata":{},"sourceType":"script"}