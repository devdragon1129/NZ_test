{"ast":null,"code":"import _toConsumableArray from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/MintItemsModal/MintItemsModal.tsx\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\nimport { ModalNavigation, ModalActions, Form, Button, Row } from 'decentraland-ui';\nimport { Network } from '@dcl/schemas';\nimport { NetworkButton } from 'decentraland-dapps/dist/containers';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport { canMintItem, MAX_NFTS_PER_MINT } from 'modules/item/utils';\nimport ItemDropdown from 'components/ItemDropdown';\nimport MintableItem from './MintableItem';\nimport './MintItemsModal.css';\n\nvar MintItemsModal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MintItemsModal, _React$PureComponent);\n\n  function MintItemsModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MintItemsModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MintItemsModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _this.getInitialState();\n\n    _this.handleMintsChange = function (item, mints) {\n      var itemMints = _this.state.itemMints;\n\n      _this.setState({\n        itemMints: _objectSpread({}, itemMints, _defineProperty({}, item.id, mints)),\n        error: null\n      });\n    };\n\n    _this.handleMintItems = function () {\n      var collection = _this.props.collection;\n      var itemMints = _this.state.itemMints;\n      var mints = [];\n      var total = 0;\n\n      for (var _i = 0, _Object$values = Object.values(itemMints); _i < _Object$values.length; _i++) {\n        var itemMint = _Object$values[_i];\n\n        var _iterator = _createForOfIteratorHelper(itemMint),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var mint = _step.value;\n\n            if (_this.isValidMint(mint)) {\n              mints.push(mint);\n              total += mint.amount;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      if (total > MAX_NFTS_PER_MINT) {\n        _this.setState({\n          error: t('mint_items_modal.limit_reached', {\n            max: MAX_NFTS_PER_MINT\n          })\n        });\n\n        return;\n      } else {\n        _this.setState({\n          error: null\n        });\n      }\n\n      if (mints.length > 0) {\n        _this.props.onMint(collection, mints);\n      }\n    };\n\n    _this.handleAddItems = function (item) {\n      var _this$state = _this.state,\n          items = _this$state.items,\n          itemMints = _this$state.itemMints;\n\n      _this.setState({\n        items: [].concat(_toConsumableArray(items), [item]),\n        itemMints: _objectSpread({}, itemMints, _defineProperty({}, item.id, _this.buildMints(item)))\n      });\n    };\n\n    _this.filterAddableItems = function (item) {\n      var _this$props = _this.props,\n          collection = _this$props.collection,\n          items = _this$props.items,\n          ethAddress = _this$props.ethAddress;\n      var selectedItems = _this.state.items;\n      var itemBelongsToCollection = item.collectionId === collection.id;\n      var itemIsNotAlreadySelected = !selectedItems.some(function (_item) {\n        return _item.id === item.id;\n      });\n      return itemBelongsToCollection && !items.some(function (_item) {\n        return _item.id === item.id && canMintItem(collection, item, ethAddress);\n      }) && itemIsNotAlreadySelected;\n    };\n\n    return _this;\n  }\n\n  _createClass(MintItemsModal, [{\n    key: \"getInitialState\",\n    value: function getInitialState() {\n      var items = this.props.items;\n      var itemMints = {};\n\n      var _iterator2 = _createForOfIteratorHelper(items),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n          itemMints[item.id] = this.buildMints(item);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return {\n        items: [],\n        itemMints: itemMints,\n        error: null\n      };\n    }\n  }, {\n    key: \"buildMints\",\n    value: function buildMints(item) {\n      return [{\n        item: item\n      }];\n    }\n  }, {\n    key: \"isValidMint\",\n    value: function isValidMint(mint) {\n      return !!mint.address && mint.amount && mint.amount > 0;\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      return Object.values(this.state.itemMints).every(function (mints) {\n        return mints.every(function (mint) {\n          return !mint.amount || !mint.address;\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          collection = _this$props2.collection,\n          totalCollectionItems = _this$props2.totalCollectionItems,\n          isLoading = _this$props2.isLoading,\n          hasUnsyncedItems = _this$props2.hasUnsyncedItems,\n          onClose = _this$props2.onClose;\n      var _this$state2 = this.state,\n          itemMints = _this$state2.itemMints,\n          error = _this$state2.error;\n      var items = this.props.items.concat(this.state.items);\n      var isEmpty = items.length === 0;\n      var isFull = items.length === totalCollectionItems;\n      var isDisabled = this.isDisabled();\n      return /*#__PURE__*/React.createElement(Modal, {\n        className: \"MintItemsModal\",\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalNavigation, {\n        title: t('mint_items_modal.title'),\n        onClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, hasUnsyncedItems(items) && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"unsynced-warning danger-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 39\n        }\n      }, t('mint_items_modal.unsynced_warning')), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, isEmpty ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, t('mint_items_modal.no_items', {\n        name: collection.name\n      })) : items.map(function (item) {\n        return /*#__PURE__*/React.createElement(MintableItem, {\n          key: item.id,\n          item: item,\n          mints: itemMints[item.id],\n          onChange: _this2.handleMintsChange,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }\n        });\n      }), isFull ? null : /*#__PURE__*/React.createElement(ItemDropdown, {\n        placeholder: t('mint_items_modal.add_item'),\n        onChange: this.handleAddItems,\n        filter: this.filterAddableItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ModalActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, isEmpty ? /*#__PURE__*/React.createElement(Button, {\n        secondary: true,\n        fluid: true,\n        onClick: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, t('global.cancel')) : /*#__PURE__*/React.createElement(NetworkButton, {\n        primary: true,\n        onClick: this.handleMintItems,\n        loading: isLoading,\n        disabled: isDisabled || !!error,\n        network: Network.MATIC,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, t('global.mint'))), error ? /*#__PURE__*/React.createElement(Row, {\n        className: \"error\",\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"danger-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, error)) : null)));\n    }\n  }]);\n\n  return MintItemsModal;\n}(React.PureComponent);\n\nexport { MintItemsModal as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/MintItemsModal/MintItemsModal.tsx"],"names":["React","ModalNavigation","ModalActions","Form","Button","Row","Network","NetworkButton","t","Modal","canMintItem","MAX_NFTS_PER_MINT","ItemDropdown","MintableItem","MintItemsModal","state","getInitialState","handleMintsChange","item","mints","itemMints","setState","id","error","handleMintItems","collection","props","total","Object","values","itemMint","mint","isValidMint","push","amount","max","length","onMint","handleAddItems","items","buildMints","filterAddableItems","ethAddress","selectedItems","itemBelongsToCollection","collectionId","itemIsNotAlreadySelected","some","_item","address","every","totalCollectionItems","isLoading","hasUnsyncedItems","onClose","concat","isEmpty","isFull","isDisabled","name","map","MATIC","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { ModalNavigation, ModalActions, Form, Button, Row } from 'decentraland-ui'\nimport { Network } from '@dcl/schemas'\nimport { NetworkButton } from 'decentraland-dapps/dist/containers'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport { canMintItem, MAX_NFTS_PER_MINT } from 'modules/item/utils'\nimport { Item } from 'modules/item/types'\nimport { Mint } from 'modules/collection/types'\nimport ItemDropdown from 'components/ItemDropdown'\nimport { Props, State, ItemMints } from './MintItemsModal.types'\nimport MintableItem from './MintableItem'\n\nimport './MintItemsModal.css'\n\nexport default class MintItemsModal extends React.PureComponent<Props, State> {\n  state: State = this.getInitialState()\n\n  getInitialState(): State {\n    const { items } = this.props\n    const itemMints: ItemMints = {}\n    for (const item of items) {\n      itemMints[item.id] = this.buildMints(item)\n    }\n    return { items: [], itemMints, error: null }\n  }\n\n  buildMints(item: Item): Partial<Mint>[] {\n    return [{ item }]\n  }\n\n  handleMintsChange = (item: Item, mints: Partial<Mint>[]) => {\n    const { itemMints } = this.state\n    this.setState({\n      itemMints: {\n        ...itemMints,\n        [item.id]: mints\n      },\n      error: null\n    })\n  }\n\n  handleMintItems = () => {\n    const { collection } = this.props\n    const { itemMints } = this.state\n    const mints: Mint[] = []\n\n    let total = 0\n    for (const itemMint of Object.values(itemMints)) {\n      for (const mint of itemMint) {\n        if (this.isValidMint(mint)) {\n          mints.push(mint as Mint)\n          total += mint.amount!\n        }\n      }\n    }\n\n    if (total > MAX_NFTS_PER_MINT) {\n      this.setState({ error: t('mint_items_modal.limit_reached', { max: MAX_NFTS_PER_MINT }) })\n      return\n    } else {\n      this.setState({ error: null })\n    }\n\n    if (mints.length > 0) {\n      this.props.onMint(collection, mints)\n    }\n  }\n\n  handleAddItems = (item: Item) => {\n    const { items, itemMints } = this.state\n    this.setState({\n      items: [...items, item],\n      itemMints: {\n        ...itemMints,\n        [item.id]: this.buildMints(item)\n      }\n    })\n  }\n\n  isValidMint(mint: Partial<Mint>) {\n    return !!mint.address && mint.amount && mint.amount > 0\n  }\n\n  isDisabled() {\n    return Object.values(this.state.itemMints).every(mints => mints.every(mint => !mint.amount || !mint.address))\n  }\n\n  filterAddableItems = (item: Item) => {\n    const { collection, items, ethAddress } = this.props\n    const { items: selectedItems } = this.state\n\n    const itemBelongsToCollection = item.collectionId === collection.id\n    const itemIsNotAlreadySelected = !selectedItems.some(_item => _item.id === item.id)\n\n    return (\n      itemBelongsToCollection &&\n      !items.some(_item => _item.id === item.id && canMintItem(collection, item, ethAddress)) &&\n      itemIsNotAlreadySelected\n    )\n  }\n\n  render() {\n    const { collection, totalCollectionItems, isLoading, hasUnsyncedItems, onClose } = this.props\n    const { itemMints, error } = this.state\n\n    const items = this.props.items.concat(this.state.items)\n\n    const isEmpty = items.length === 0\n    const isFull = items.length === totalCollectionItems\n    const isDisabled = this.isDisabled()\n\n    return (\n      <Modal className=\"MintItemsModal\" onClose={onClose}>\n        <ModalNavigation title={t('mint_items_modal.title')} onClose={onClose} />\n        <Modal.Content>\n          {hasUnsyncedItems(items) && <p className=\"unsynced-warning danger-text\">{t('mint_items_modal.unsynced_warning')}</p>}\n          <Form>\n            {isEmpty ? (\n              <div className=\"empty\">{t('mint_items_modal.no_items', { name: collection.name })}</div>\n            ) : (\n              items.map(item => <MintableItem key={item.id} item={item} mints={itemMints[item.id]} onChange={this.handleMintsChange} />)\n            )}\n            {isFull ? null : (\n              <ItemDropdown placeholder={t('mint_items_modal.add_item')} onChange={this.handleAddItems} filter={this.filterAddableItems} />\n            )}\n            <ModalActions>\n              {isEmpty ? (\n                <Button secondary fluid onClick={onClose}>\n                  {t('global.cancel')}\n                </Button>\n              ) : (\n                <NetworkButton\n                  primary\n                  onClick={this.handleMintItems}\n                  loading={isLoading}\n                  disabled={isDisabled || !!error}\n                  network={Network.MATIC}\n                >\n                  {t('global.mint')}\n                </NetworkButton>\n              )}\n            </ModalActions>\n            {error ? (\n              <Row className=\"error\" align=\"right\">\n                <p className=\"danger-text\">{error}</p>\n              </Row>\n            ) : null}\n          </Form>\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}