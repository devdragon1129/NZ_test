{"ast":null,"code":"import _objectSpread from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(analyticsSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handlePublishTPItemSuccess),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleOpenEditor),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleNewItem),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleDeleteItem),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(handleToggleSnapToGrid),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdateTransfrom),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(handleDeployToPoolSuccess),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(handleDeployToLandSuccess),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(handleClearDeploymentSuccess),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(handleSearchAssets),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(handleSync),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(handleConnectWalletSuccess),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(handleSaveAssetPackSuccess),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(handleDeleteAssetPackSuccess),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(handleSaveAssetPackFailure),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(handleDeleteAssetPackFailure);\n\nimport { LOCATION_CHANGE } from 'connected-react-router';\nimport { takeLatest, select, takeEvery } from 'redux-saga/effects';\nimport { getAnalytics, trackConnectWallet } from 'decentraland-dapps/dist/modules/analytics/utils';\nimport { CONNECT_WALLET_SUCCESS } from 'decentraland-dapps/dist/modules/wallet/actions';\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors';\nimport { OPEN_EDITOR, TOGGLE_SNAP_TO_GRID } from 'modules/editor/actions';\nimport { getCurrentProject } from 'modules/project/selectors';\nimport { ADD_ITEM, DUPLICATE_ITEM, DELETE_ITEM, SET_GROUND, UPDATE_TRANSFORM } from 'modules/scene/actions';\nimport { DEPLOY_TO_POOL_SUCCESS, DEPLOY_TO_LAND_SUCCESS, CLEAR_DEPLOYMENT_SUCCESS } from 'modules/deployment/actions';\nimport { SEARCH_ASSETS } from 'modules/ui/sidebar/actions';\nimport { getSideBarCategories, getSearch } from 'modules/ui/sidebar/selectors';\nimport { trimAsset } from './track';\nimport { SYNC } from 'modules/sync/actions';\nimport { getLocalProjectIds } from 'modules/sync/selectors';\nimport { SAVE_ASSET_PACK_SUCCESS, DELETE_ASSET_PACK_SUCCESS, SAVE_ASSET_PACK_FAILURE, DELETE_ASSET_PACK_FAILURE } from 'modules/assetPack/actions';\nimport { LOGIN_SUCCESS } from 'modules/identity/actions';\nimport { PUBLISH_THIRD_PARTY_ITEMS_SUCCESS } from 'modules/thirdParty/actions';\nexport function analyticsSaga() {\n  return _regeneratorRuntime.wrap(function analyticsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest(OPEN_EDITOR, handleOpenEditor);\n\n        case 2:\n          _context.next = 4;\n          return takeLatest(ADD_ITEM, handleNewItem);\n\n        case 4:\n          _context.next = 6;\n          return takeLatest(DUPLICATE_ITEM, handleNewItem);\n\n        case 6:\n          _context.next = 8;\n          return takeLatest(SET_GROUND, handleNewItem);\n\n        case 8:\n          _context.next = 10;\n          return takeLatest(DELETE_ITEM, handleDeleteItem);\n\n        case 10:\n          _context.next = 12;\n          return takeLatest(TOGGLE_SNAP_TO_GRID, handleToggleSnapToGrid);\n\n        case 12:\n          _context.next = 14;\n          return takeLatest(UPDATE_TRANSFORM, handleUpdateTransfrom);\n\n        case 14:\n          _context.next = 16;\n          return takeLatest(CONNECT_WALLET_SUCCESS, handleConnectWallet);\n\n        case 16:\n          _context.next = 18;\n          return takeLatest(DEPLOY_TO_POOL_SUCCESS, handleDeployToPoolSuccess);\n\n        case 18:\n          _context.next = 20;\n          return takeLatest(DEPLOY_TO_LAND_SUCCESS, handleDeployToLandSuccess);\n\n        case 20:\n          _context.next = 22;\n          return takeLatest(CLEAR_DEPLOYMENT_SUCCESS, handleClearDeploymentSuccess);\n\n        case 22:\n          _context.next = 24;\n          return takeLatest(SEARCH_ASSETS, handleSearchAssets);\n\n        case 24:\n          _context.next = 26;\n          return takeLatest(SYNC, handleSync);\n\n        case 26:\n          _context.next = 28;\n          return takeLatest(CONNECT_WALLET_SUCCESS, handleConnectWalletSuccess);\n\n        case 28:\n          _context.next = 30;\n          return takeEvery(LOCATION_CHANGE, handleLocationChange);\n\n        case 30:\n          _context.next = 32;\n          return takeLatest(LOGIN_SUCCESS, handleLoginSuccess);\n\n        case 32:\n          _context.next = 34;\n          return takeLatest(SAVE_ASSET_PACK_SUCCESS, handleSaveAssetPackSuccess);\n\n        case 34:\n          _context.next = 36;\n          return takeLatest(DELETE_ASSET_PACK_SUCCESS, handleDeleteAssetPackSuccess);\n\n        case 36:\n          _context.next = 38;\n          return takeLatest(SAVE_ASSET_PACK_FAILURE, handleSaveAssetPackFailure);\n\n        case 38:\n          _context.next = 40;\n          return takeLatest(DELETE_ASSET_PACK_FAILURE, handleDeleteAssetPackFailure);\n\n        case 40:\n          _context.next = 42;\n          return takeLatest(PUBLISH_THIRD_PARTY_ITEMS_SUCCESS, handlePublishTPItemSuccess);\n\n        case 42:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nvar track = function track(event, params) {\n  return getAnalytics().track(event, params);\n};\n\nfunction handlePublishTPItemSuccess(action) {\n  var items;\n  return _regeneratorRuntime.wrap(function handlePublishTPItemSuccess$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          items = action.payload.items;\n          track('Publish TP Item', {\n            items: items\n          });\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction handleOpenEditor(_) {\n  var project;\n  return _regeneratorRuntime.wrap(function handleOpenEditor$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return select(getCurrentProject);\n\n        case 2:\n          project = _context3.sent;\n\n          if (project) {\n            _context3.next = 5;\n            break;\n          }\n\n          return _context3.abrupt(\"return\");\n\n        case 5:\n          track('Open project', {\n            projectId: project.id\n          });\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction handleNewItem(action) {\n  var project, search;\n  return _regeneratorRuntime.wrap(function handleNewItem$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return select(getCurrentProject);\n\n        case 2:\n          project = _context4.sent;\n\n          if (project) {\n            _context4.next = 5;\n            break;\n          }\n\n          return _context4.abrupt(\"return\");\n\n        case 5:\n          if (!(action.type === ADD_ITEM)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 8;\n          return select(getSearch);\n\n        case 8:\n          search = _context4.sent;\n          track(ADD_ITEM, _objectSpread({}, trimAsset(action), {\n            search: search\n          }));\n\n        case 10:\n          track('New item', {\n            projectId: project.id\n          });\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction handleDeleteItem(_) {\n  var project;\n  return _regeneratorRuntime.wrap(function handleDeleteItem$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return select(getCurrentProject);\n\n        case 2:\n          project = _context5.sent;\n\n          if (project) {\n            _context5.next = 5;\n            break;\n          }\n\n          return _context5.abrupt(\"return\");\n\n        case 5:\n          track('Delete item', {\n            projectId: project.id\n          });\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nvar trackedEnablePrecision = false;\n\nfunction handleToggleSnapToGrid(action) {\n  var project;\n  return _regeneratorRuntime.wrap(function handleToggleSnapToGrid$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (action.payload.enabled) {\n            _context6.next = 9;\n            break;\n          }\n\n          _context6.next = 3;\n          return select(getCurrentProject);\n\n        case 3:\n          project = _context6.sent;\n\n          if (project) {\n            _context6.next = 6;\n            break;\n          }\n\n          return _context6.abrupt(\"return\");\n\n        case 6:\n          if (!trackedEnablePrecision) {\n            track('Enable precision', {\n              projectId: project.id\n            });\n            trackedEnablePrecision = true;\n          }\n\n          _context6.next = 10;\n          break;\n\n        case 9:\n          trackedEnablePrecision = false;\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction handleUpdateTransfrom(_) {\n  var project;\n  return _regeneratorRuntime.wrap(function handleUpdateTransfrom$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return select(getCurrentProject);\n\n        case 2:\n          project = _context7.sent;\n\n          if (project) {\n            _context7.next = 5;\n            break;\n          }\n\n          return _context7.abrupt(\"return\");\n\n        case 5:\n          track('Update item', {\n            projectId: project.id\n          });\n\n        case 6:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction handleConnectWallet(action) {\n  var ethereum = window['ethereum'];\n  var provider = null;\n\n  if (ethereum) {\n    if (ethereum.isMetaMask) {\n      provider = 'metamask';\n    } else if (ethereum.isDapper) {\n      provider = 'dapper';\n    }\n  }\n\n  track('Connect wallet', {\n    address: action.payload.wallet.address,\n    provider: provider\n  });\n}\n\nfunction handleDeployToPoolSuccess(_) {\n  var project, ethAddress;\n  return _regeneratorRuntime.wrap(function handleDeployToPoolSuccess$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return select(getCurrentProject);\n\n        case 2:\n          project = _context8.sent;\n\n          if (project) {\n            _context8.next = 5;\n            break;\n          }\n\n          return _context8.abrupt(\"return\");\n\n        case 5:\n          _context8.next = 7;\n          return select(getAddress);\n\n        case 7:\n          ethAddress = _context8.sent;\n          // Do not change this event name format\n          track('[Success] Deploy to LAND pool', {\n            project_id: project.id,\n            eth_address: ethAddress\n          });\n\n        case 9:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction handleDeployToLandSuccess(_) {\n  var project, ethAddress;\n  return _regeneratorRuntime.wrap(function handleDeployToLandSuccess$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return select(getCurrentProject);\n\n        case 2:\n          project = _context9.sent;\n\n          if (project) {\n            _context9.next = 5;\n            break;\n          }\n\n          return _context9.abrupt(\"return\");\n\n        case 5:\n          _context9.next = 7;\n          return select(getAddress);\n\n        case 7:\n          ethAddress = _context9.sent;\n          // Do not change this event name format\n          track('[Success] Deploy to LAND', {\n            project_id: project.id,\n            eth_address: ethAddress\n          });\n\n        case 9:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction handleClearDeploymentSuccess(_) {\n  var project, ethAddress;\n  return _regeneratorRuntime.wrap(function handleClearDeploymentSuccess$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return select(getCurrentProject);\n\n        case 2:\n          project = _context10.sent;\n\n          if (project) {\n            _context10.next = 5;\n            break;\n          }\n\n          return _context10.abrupt(\"return\");\n\n        case 5:\n          _context10.next = 7;\n          return select(getAddress);\n\n        case 7:\n          ethAddress = _context10.sent;\n          // Do not change this event name format\n          track('[Success] Clear Deployment', {\n            project_id: project.id,\n            eth_address: ethAddress\n          });\n\n        case 9:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction handleSearchAssets(action) {\n  var categories, hits;\n  return _regeneratorRuntime.wrap(function handleSearchAssets$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return select(getSideBarCategories);\n\n        case 2:\n          categories = _context11.sent;\n          hits = categories.reduce(function (hits, category) {\n            return hits + category.assets.length;\n          }, 0);\n          track('Search assets', _objectSpread({}, action.payload, {\n            hits: hits\n          }));\n\n        case 5:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction handleSync(_) {\n  var localProjectIds;\n  return _regeneratorRuntime.wrap(function handleSync$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return select(getLocalProjectIds);\n\n        case 2:\n          localProjectIds = _context12.sent;\n\n          if (localProjectIds.length > 0) {\n            track('Sync projects', {\n              count: localProjectIds.length\n            });\n          }\n\n        case 4:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction handleConnectWalletSuccess(action) {\n  var wallet, analytics;\n  return _regeneratorRuntime.wrap(function handleConnectWalletSuccess$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          wallet = action.payload.wallet;\n          analytics = getAnalytics();\n\n          if (analytics) {\n            analytics.identify(wallet.address);\n            trackConnectWallet({\n              providerType: wallet.providerType,\n              address: wallet.address\n            });\n          }\n\n        case 3:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction handleLocationChange() {\n  var analytics = getAnalytics();\n\n  if (analytics) {\n    analytics.page();\n  }\n}\n\nfunction handleLoginSuccess(action) {\n  var address = action.payload.wallet.address;\n  var analytics = getAnalytics();\n  analytics.identify(address);\n}\n\nfunction handleSaveAssetPackSuccess(action) {\n  var assetPack, project, ethAddress;\n  return _regeneratorRuntime.wrap(function handleSaveAssetPackSuccess$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          assetPack = action.payload.assetPack;\n          _context14.next = 3;\n          return select(getCurrentProject);\n\n        case 3:\n          project = _context14.sent;\n\n          if (project) {\n            _context14.next = 6;\n            break;\n          }\n\n          return _context14.abrupt(\"return\");\n\n        case 6:\n          _context14.next = 8;\n          return select(getAddress);\n\n        case 8:\n          ethAddress = _context14.sent;\n          track('[Success] Save AssetPack', {\n            project_id: project.id,\n            eth_address: ethAddress,\n            assetPack: assetPack\n          });\n\n        case 10:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction handleDeleteAssetPackSuccess(action) {\n  var assetPack, project, ethAddress;\n  return _regeneratorRuntime.wrap(function handleDeleteAssetPackSuccess$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          assetPack = action.payload.assetPack;\n          _context15.next = 3;\n          return select(getCurrentProject);\n\n        case 3:\n          project = _context15.sent;\n\n          if (project) {\n            _context15.next = 6;\n            break;\n          }\n\n          return _context15.abrupt(\"return\");\n\n        case 6:\n          _context15.next = 8;\n          return select(getAddress);\n\n        case 8:\n          ethAddress = _context15.sent;\n          track('[Success] Delete AssetPack', {\n            project_id: project.id,\n            eth_address: ethAddress,\n            assetPack: assetPack\n          });\n\n        case 10:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction handleSaveAssetPackFailure(action) {\n  var assetPack, project, ethAddress;\n  return _regeneratorRuntime.wrap(function handleSaveAssetPackFailure$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          assetPack = action.payload.assetPack;\n          _context16.next = 3;\n          return select(getCurrentProject);\n\n        case 3:\n          project = _context16.sent;\n\n          if (project) {\n            _context16.next = 6;\n            break;\n          }\n\n          return _context16.abrupt(\"return\");\n\n        case 6:\n          _context16.next = 8;\n          return select(getAddress);\n\n        case 8:\n          ethAddress = _context16.sent;\n          track('[Failure] Save AssetPack', {\n            project_id: project.id,\n            eth_address: ethAddress,\n            assetPack: assetPack\n          });\n\n        case 10:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction handleDeleteAssetPackFailure(action) {\n  var assetPack, project, ethAddress;\n  return _regeneratorRuntime.wrap(function handleDeleteAssetPackFailure$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          assetPack = action.payload.assetPack;\n          _context17.next = 3;\n          return select(getCurrentProject);\n\n        case 3:\n          project = _context17.sent;\n\n          if (project) {\n            _context17.next = 6;\n            break;\n          }\n\n          return _context17.abrupt(\"return\");\n\n        case 6:\n          _context17.next = 8;\n          return select(getAddress);\n\n        case 8:\n          ethAddress = _context17.sent;\n          track('[Failure] Delete AssetPack', {\n            project_id: project.id,\n            eth_address: ethAddress,\n            assetPack: assetPack\n          });\n\n        case 10:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}","map":{"version":3,"sources":["/opt/work/NZ_test/src/modules/analytics/sagas.ts"],"names":["analyticsSaga","handlePublishTPItemSuccess","handleOpenEditor","handleNewItem","handleDeleteItem","handleToggleSnapToGrid","handleUpdateTransfrom","handleDeployToPoolSuccess","handleDeployToLandSuccess","handleClearDeploymentSuccess","handleSearchAssets","handleSync","handleConnectWalletSuccess","handleSaveAssetPackSuccess","handleDeleteAssetPackSuccess","handleSaveAssetPackFailure","handleDeleteAssetPackFailure","LOCATION_CHANGE","takeLatest","select","takeEvery","getAnalytics","trackConnectWallet","CONNECT_WALLET_SUCCESS","getAddress","OPEN_EDITOR","TOGGLE_SNAP_TO_GRID","getCurrentProject","ADD_ITEM","DUPLICATE_ITEM","DELETE_ITEM","SET_GROUND","UPDATE_TRANSFORM","DEPLOY_TO_POOL_SUCCESS","DEPLOY_TO_LAND_SUCCESS","CLEAR_DEPLOYMENT_SUCCESS","SEARCH_ASSETS","getSideBarCategories","getSearch","trimAsset","SYNC","getLocalProjectIds","SAVE_ASSET_PACK_SUCCESS","DELETE_ASSET_PACK_SUCCESS","SAVE_ASSET_PACK_FAILURE","DELETE_ASSET_PACK_FAILURE","LOGIN_SUCCESS","PUBLISH_THIRD_PARTY_ITEMS_SUCCESS","handleConnectWallet","handleLocationChange","handleLoginSuccess","track","event","params","action","items","payload","_","project","projectId","id","type","search","trackedEnablePrecision","enabled","ethereum","window","provider","isMetaMask","isDapper","address","wallet","ethAddress","project_id","eth_address","categories","hits","reduce","category","assets","length","localProjectIds","count","analytics","identify","providerType","page","assetPack"],"mappings":"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","sourcesContent":["import { LOCATION_CHANGE } from 'connected-react-router'\nimport { takeLatest, select, takeEvery } from 'redux-saga/effects'\nimport { getAnalytics, trackConnectWallet } from 'decentraland-dapps/dist/modules/analytics/utils'\nimport { ConnectWalletSuccessAction, CONNECT_WALLET_SUCCESS } from 'decentraland-dapps/dist/modules/wallet/actions'\nimport { getAddress } from 'decentraland-dapps/dist/modules/wallet/selectors'\n\nimport { OPEN_EDITOR, OpenEditorAction, TOGGLE_SNAP_TO_GRID, ToggleSnapToGridAction } from 'modules/editor/actions'\nimport { getCurrentProject } from 'modules/project/selectors'\nimport {\n  ADD_ITEM,\n  DUPLICATE_ITEM,\n  AddItemAction,\n  DuplicateItemAction,\n  DeleteItemAction,\n  DELETE_ITEM,\n  SET_GROUND,\n  SetGroundAction,\n  UPDATE_TRANSFORM,\n  UpdateTransfromAction\n} from 'modules/scene/actions'\nimport {\n  DeployToPoolSuccessAction,\n  DEPLOY_TO_POOL_SUCCESS,\n  DEPLOY_TO_LAND_SUCCESS,\n  CLEAR_DEPLOYMENT_SUCCESS,\n  DeployToLandSuccessAction,\n  ClearDeploymentSuccessAction\n} from 'modules/deployment/actions'\nimport { SEARCH_ASSETS, SearchAssetsAction } from 'modules/ui/sidebar/actions'\nimport { getSideBarCategories, getSearch } from 'modules/ui/sidebar/selectors'\nimport { Project } from 'modules/project/types'\nimport { trimAsset } from './track'\nimport { SyncAction, SYNC } from 'modules/sync/actions'\nimport { getLocalProjectIds } from 'modules/sync/selectors'\nimport {\n  SaveAssetPackSuccessAction,\n  SAVE_ASSET_PACK_SUCCESS,\n  DeleteAssetPackSuccessAction,\n  DELETE_ASSET_PACK_SUCCESS,\n  SAVE_ASSET_PACK_FAILURE,\n  DELETE_ASSET_PACK_FAILURE,\n  SaveAssetPackFailureAction,\n  DeleteAssetPackFailureAction\n} from 'modules/assetPack/actions'\nimport { LOGIN_SUCCESS, LoginSuccessAction } from 'modules/identity/actions'\nimport { PublishThirdPartyItemsSuccessAction, PUBLISH_THIRD_PARTY_ITEMS_SUCCESS } from 'modules/thirdParty/actions'\n\nexport function* analyticsSaga() {\n  yield takeLatest(OPEN_EDITOR, handleOpenEditor)\n  yield takeLatest(ADD_ITEM, handleNewItem)\n  yield takeLatest(DUPLICATE_ITEM, handleNewItem)\n  yield takeLatest(SET_GROUND, handleNewItem)\n  yield takeLatest(DELETE_ITEM, handleDeleteItem)\n  yield takeLatest(TOGGLE_SNAP_TO_GRID, handleToggleSnapToGrid)\n  yield takeLatest(UPDATE_TRANSFORM, handleUpdateTransfrom)\n  yield takeLatest(CONNECT_WALLET_SUCCESS, handleConnectWallet)\n  yield takeLatest(DEPLOY_TO_POOL_SUCCESS, handleDeployToPoolSuccess)\n  yield takeLatest(DEPLOY_TO_LAND_SUCCESS, handleDeployToLandSuccess)\n  yield takeLatest(CLEAR_DEPLOYMENT_SUCCESS, handleClearDeploymentSuccess)\n  yield takeLatest(SEARCH_ASSETS, handleSearchAssets)\n  yield takeLatest(SYNC, handleSync)\n  yield takeLatest(CONNECT_WALLET_SUCCESS, handleConnectWalletSuccess)\n  yield takeEvery(LOCATION_CHANGE, handleLocationChange)\n  yield takeLatest(LOGIN_SUCCESS, handleLoginSuccess)\n  yield takeLatest(SAVE_ASSET_PACK_SUCCESS, handleSaveAssetPackSuccess)\n  yield takeLatest(DELETE_ASSET_PACK_SUCCESS, handleDeleteAssetPackSuccess)\n  yield takeLatest(SAVE_ASSET_PACK_FAILURE, handleSaveAssetPackFailure)\n  yield takeLatest(DELETE_ASSET_PACK_FAILURE, handleDeleteAssetPackFailure)\n  yield takeLatest(PUBLISH_THIRD_PARTY_ITEMS_SUCCESS, handlePublishTPItemSuccess)\n}\n\nconst track = (event: string, params: any) => getAnalytics().track(event, params)\n\nfunction* handlePublishTPItemSuccess(action: PublishThirdPartyItemsSuccessAction) {\n  const { items } = action.payload\n  track('Publish TP Item', { items })\n}\n\nfunction* handleOpenEditor(_: OpenEditorAction) {\n  const project: ReturnType<typeof getCurrentProject> = yield select(getCurrentProject)\n  if (!project) return\n\n  track('Open project', { projectId: project.id })\n}\n\nfunction* handleNewItem(action: AddItemAction | DuplicateItemAction | SetGroundAction) {\n  const project: ReturnType<typeof getCurrentProject> = yield select(getCurrentProject)\n  if (!project) return\n\n  if (action.type === ADD_ITEM) {\n    const search: ReturnType<typeof getSearch> = yield select(getSearch)\n    track(ADD_ITEM, {\n      ...trimAsset(action),\n      search\n    })\n  }\n\n  track('New item', { projectId: project.id })\n}\n\nfunction* handleDeleteItem(_: DeleteItemAction) {\n  const project: ReturnType<typeof getCurrentProject> = yield select(getCurrentProject)\n  if (!project) return\n\n  track('Delete item', { projectId: project.id })\n}\n\nlet trackedEnablePrecision = false\nfunction* handleToggleSnapToGrid(action: ToggleSnapToGridAction) {\n  if (!action.payload.enabled) {\n    const project: ReturnType<typeof getCurrentProject> = yield select(getCurrentProject)\n    if (!project) return\n\n    if (!trackedEnablePrecision) {\n      track('Enable precision', { projectId: project.id })\n      trackedEnablePrecision = true\n    }\n  } else {\n    trackedEnablePrecision = false\n  }\n}\n\nfunction* handleUpdateTransfrom(_: UpdateTransfromAction) {\n  const project: ReturnType<typeof getCurrentProject> = yield select(getCurrentProject)\n  if (!project) return\n\n  track('Update item', { projectId: project.id })\n}\n\nfunction handleConnectWallet(action: ConnectWalletSuccessAction) {\n  const ethereum = (window as any)['ethereum']\n\n  let provider = null\n\n  if (ethereum) {\n    if (ethereum.isMetaMask) {\n      provider = 'metamask'\n    } else if (ethereum.isDapper) {\n      provider = 'dapper'\n    }\n  }\n\n  track('Connect wallet', { address: action.payload.wallet.address, provider })\n}\n\nfunction* handleDeployToPoolSuccess(_: DeployToPoolSuccessAction) {\n  const project: Project | null = yield select(getCurrentProject)\n  if (!project) return\n  const ethAddress: string = yield select(getAddress)\n  // Do not change this event name format\n  track('[Success] Deploy to LAND pool', { project_id: project.id, eth_address: ethAddress })\n}\n\nfunction* handleDeployToLandSuccess(_: DeployToLandSuccessAction) {\n  const project: Project | null = yield select(getCurrentProject)\n  if (!project) return\n  const ethAddress: string = yield select(getAddress)\n  // Do not change this event name format\n  track('[Success] Deploy to LAND', { project_id: project.id, eth_address: ethAddress })\n}\n\nfunction* handleClearDeploymentSuccess(_: ClearDeploymentSuccessAction) {\n  const project: Project | null = yield select(getCurrentProject)\n  if (!project) return\n  const ethAddress: string = yield select(getAddress)\n  // Do not change this event name format\n  track('[Success] Clear Deployment', { project_id: project.id, eth_address: ethAddress })\n}\n\nfunction* handleSearchAssets(action: SearchAssetsAction) {\n  const categories: ReturnType<typeof getSideBarCategories> = yield select(getSideBarCategories)\n  const hits = categories.reduce<number>((hits, category) => hits + category.assets.length, 0)\n  track('Search assets', { ...action.payload, hits })\n}\n\nfunction* handleSync(_: SyncAction) {\n  const localProjectIds: string[] = yield select(getLocalProjectIds)\n  if (localProjectIds.length > 0) {\n    track('Sync projects', { count: localProjectIds.length })\n  }\n}\n\nfunction* handleConnectWalletSuccess(action: ConnectWalletSuccessAction) {\n  const { wallet } = action.payload\n  const analytics = getAnalytics()\n\n  if (analytics) {\n    analytics.identify(wallet.address)\n    trackConnectWallet({ providerType: wallet.providerType, address: wallet.address })\n  }\n}\n\nfunction handleLocationChange() {\n  const analytics = getAnalytics()\n\n  if (analytics) {\n    analytics.page()\n  }\n}\n\nfunction handleLoginSuccess(action: LoginSuccessAction) {\n  const { address } = action.payload.wallet\n  const analytics = getAnalytics()\n\n  analytics.identify(address)\n}\n\nfunction* handleSaveAssetPackSuccess(action: SaveAssetPackSuccessAction) {\n  const { assetPack } = action.payload\n  const project: Project | null = yield select(getCurrentProject)\n  if (!project) return\n  const ethAddress: string = yield select(getAddress)\n  track('[Success] Save AssetPack', { project_id: project.id, eth_address: ethAddress, assetPack })\n}\n\nfunction* handleDeleteAssetPackSuccess(action: DeleteAssetPackSuccessAction) {\n  const { assetPack } = action.payload\n  const project: Project | null = yield select(getCurrentProject)\n  if (!project) return\n  const ethAddress: string = yield select(getAddress)\n  track('[Success] Delete AssetPack', { project_id: project.id, eth_address: ethAddress, assetPack })\n}\n\nfunction* handleSaveAssetPackFailure(action: SaveAssetPackFailureAction) {\n  const { assetPack } = action.payload\n  const project: Project | null = yield select(getCurrentProject)\n  if (!project) return\n  const ethAddress: string = yield select(getAddress)\n  track('[Failure] Save AssetPack', { project_id: project.id, eth_address: ethAddress, assetPack })\n}\n\nfunction* handleDeleteAssetPackFailure(action: DeleteAssetPackFailureAction) {\n  const { assetPack } = action.payload\n  const project: Project | null = yield select(getCurrentProject)\n  if (!project) return\n  const ethAddress: string = yield select(getAddress)\n  track('[Failure] Delete AssetPack', { project_id: project.id, eth_address: ethAddress, assetPack })\n}\n"]},"metadata":{},"sourceType":"module"}