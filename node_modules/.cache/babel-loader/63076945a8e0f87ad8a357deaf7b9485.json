{"ast":null,"code":"import _regeneratorRuntime from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/LandOperatorPage/LandOperatorForm/LandOperatorForm.tsx\";\nimport * as React from 'react';\nimport { Network } from '@dcl/schemas';\nimport { Form, Field, Row, Button } from 'decentraland-ui';\nimport { NetworkButton } from 'decentraland-dapps/dist/containers';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport { Link } from 'react-router-dom';\nimport { getUpdateOperator } from 'modules/land/utils';\nimport { locations } from 'routing/locations';\nimport './LandOperatorForm.css';\nimport { isEqual, isValid } from 'lib/address';\nimport { RoleType } from 'modules/land/types';\n\nvar LandOperatorForm = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(LandOperatorForm, _React$PureComponent);\n\n  function LandOperatorForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LandOperatorForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LandOperatorForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      address: '',\n      initial: '',\n      loading: false,\n      editing: false,\n      dirty: false,\n      revoked: false\n    };\n\n    _this.handleSetOperator = function () {\n      var _this$props = _this.props,\n          land = _this$props.land,\n          onSetOperator = _this$props.onSetOperator;\n      var _this$state = _this.state,\n          address = _this$state.address,\n          revoked = _this$state.revoked;\n      onSetOperator(land, revoked ? null : address);\n    };\n\n    _this.handleChange = function (_event, data) {\n      _this.setState({\n        address: data.value,\n        dirty: true,\n        revoked: false\n      });\n    };\n\n    _this.handleRevoke = function () {\n      _this.setState({\n        revoked: true,\n        dirty: true\n      });\n    };\n\n    _this.handleUndo = function () {\n      _this.setState({\n        revoked: false,\n        dirty: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LandOperatorForm, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var land, address;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                land = this.props.land;\n                _context.next = 4;\n                return getUpdateOperator(land);\n\n              case 4:\n                address = _context.sent;\n\n                if (address !== null) {\n                  this.setState({\n                    address: address,\n                    initial: address,\n                    loading: false,\n                    editing: true\n                  });\n                } else {\n                  this.setState({\n                    loading: false\n                  });\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var land = this.props.land;\n      var _this$state2 = this.state,\n          address = _this$state2.address,\n          loading = _this$state2.loading,\n          dirty = _this$state2.dirty,\n          revoked = _this$state2.revoked,\n          editing = _this$state2.editing,\n          initial = _this$state2.initial;\n      var isRevokable = editing && isEqual(address, initial);\n      var hasError = !loading && !!address && !isValid(address);\n      var isDisabled = loading || !dirty || (isEqual(address, initial) || hasError) && !revoked || land.role !== RoleType.OWNER;\n      var classes = [];\n\n      if (revoked) {\n        classes.push('revoked');\n      }\n\n      if (editing) {\n        classes.push('editing');\n      }\n\n      if (isRevokable) {\n        classes.push('is-revokable');\n      }\n\n      return /*#__PURE__*/React.createElement(Form, {\n        className: \"LandOperatorForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        placeholder: \"0x...\",\n        label: t('operator_page.address'),\n        className: classes.join(' '),\n        value: address,\n        onChange: this.handleChange,\n        loading: loading,\n        action: isRevokable ? revoked ? t('operator_page.undo') : t('operator_page.revoke') : undefined,\n        onAction: isRevokable ? revoked ? this.handleUndo : this.handleRevoke : undefined,\n        error: hasError,\n        message: hasError ? t('operator_page.invalid_address') : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"cancel\",\n        to: locations.landDetail(land.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, t('global.cancel'))), /*#__PURE__*/React.createElement(NetworkButton, {\n        type: \"submit\",\n        primary: true,\n        disabled: isDisabled,\n        onClick: this.handleSetOperator,\n        network: Network.ETHEREUM,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, t('global.submit'))));\n    }\n  }]);\n\n  return LandOperatorForm;\n}(React.PureComponent);\n\nexport { LandOperatorForm as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/LandOperatorPage/LandOperatorForm/LandOperatorForm.tsx"],"names":["React","Network","Form","Field","Row","Button","NetworkButton","t","Link","getUpdateOperator","locations","isEqual","isValid","RoleType","LandOperatorForm","state","address","initial","loading","editing","dirty","revoked","handleSetOperator","props","land","onSetOperator","handleChange","_event","data","setState","value","handleRevoke","handleUndo","isRevokable","hasError","isDisabled","role","OWNER","classes","push","join","undefined","landDetail","id","ETHEREUM","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Network } from '@dcl/schemas'\nimport { Form, Field, Row, Button, InputOnChangeData } from 'decentraland-ui'\nimport { NetworkButton } from 'decentraland-dapps/dist/containers'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport { Link } from 'react-router-dom'\nimport { getUpdateOperator } from 'modules/land/utils'\nimport { locations } from 'routing/locations'\nimport { Props, State } from './LandOperatorForm.types'\nimport './LandOperatorForm.css'\nimport { isEqual, isValid } from 'lib/address'\nimport { RoleType } from 'modules/land/types'\n\nexport default class LandOperatorForm extends React.PureComponent<Props, State> {\n  state: State = {\n    address: '',\n    initial: '',\n    loading: false,\n    editing: false,\n    dirty: false,\n    revoked: false\n  }\n\n  async componentWillMount() {\n    this.setState({ loading: true })\n    const { land } = this.props\n    const address = await getUpdateOperator(land)\n    if (address !== null) {\n      this.setState({ address, initial: address, loading: false, editing: true })\n    } else {\n      this.setState({ loading: false })\n    }\n  }\n\n  handleSetOperator = () => {\n    const { land, onSetOperator } = this.props\n    const { address, revoked } = this.state\n    onSetOperator(land, revoked ? null : address)\n  }\n\n  handleChange = (_event: React.ChangeEvent<HTMLInputElement>, data: InputOnChangeData) => {\n    this.setState({ address: data.value, dirty: true, revoked: false })\n  }\n\n  handleRevoke = () => {\n    this.setState({ revoked: true, dirty: true })\n  }\n\n  handleUndo = () => {\n    this.setState({ revoked: false, dirty: false })\n  }\n\n  render() {\n    const { land } = this.props\n    const { address, loading, dirty, revoked, editing, initial } = this.state\n\n    const isRevokable = editing && isEqual(address, initial)\n    const hasError = !loading && !!address && !isValid(address)\n    const isDisabled = loading || !dirty || ((isEqual(address, initial) || hasError) && !revoked) || land.role !== RoleType.OWNER\n\n    const classes = []\n    if (revoked) {\n      classes.push('revoked')\n    }\n    if (editing) {\n      classes.push('editing')\n    }\n    if (isRevokable) {\n      classes.push('is-revokable')\n    }\n\n    return (\n      <Form className=\"LandOperatorForm\">\n        <Field\n          placeholder=\"0x...\"\n          label={t('operator_page.address')}\n          className={classes.join(' ')}\n          value={address}\n          onChange={this.handleChange}\n          loading={loading}\n          action={isRevokable ? (revoked ? t('operator_page.undo') : t('operator_page.revoke')) : undefined}\n          onAction={isRevokable ? (revoked ? this.handleUndo : this.handleRevoke) : undefined}\n          error={hasError}\n          message={hasError ? t('operator_page.invalid_address') : undefined}\n        />\n        <Row>\n          <Link className=\"cancel\" to={locations.landDetail(land.id)}>\n            <Button>{t('global.cancel')}</Button>\n          </Link>\n          <NetworkButton type=\"submit\" primary disabled={isDisabled} onClick={this.handleSetOperator} network={Network.ETHEREUM}>\n            {t('global.submit')}\n          </NetworkButton>\n        </Row>\n      </Form>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}