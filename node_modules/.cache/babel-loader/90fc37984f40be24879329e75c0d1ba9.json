{"ast":null,"code":"export var TABS;\n\n(function (TABS) {\n  TABS[TABS[\"COLLECTIONS\"] = 0] = \"COLLECTIONS\";\n  TABS[TABS[\"ITEMS\"] = 1] = \"ITEMS\";\n})(TABS || (TABS = {}));","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/CollectionsPage/CollectionsPage.types.ts"],"names":["TABS"],"mappings":"AAYA,WAAYA,IAAZ;;WAAYA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;GAAAA,I,KAAAA,I","sourcesContent":["import { Dispatch } from 'redux'\nimport { CallHistoryMethodAction } from 'connected-react-router'\nimport { openModal, OpenModalAction } from 'modules/modal/actions'\nimport { setCollectionPageView, SetCollectionPageViewAction } from 'modules/ui/collection/actions'\nimport { CollectionPageView } from 'modules/ui/collection/types'\nimport { Item } from 'modules/item/types'\nimport { Collection } from 'modules/collection/types'\nimport { fetchItemsRequest, FetchItemsRequestAction } from 'modules/item/actions'\nimport { fetchCollectionsRequest, FetchCollectionsRequestAction } from 'modules/collection/actions'\nimport { CollectionPaginationData } from 'modules/collection/reducer'\nimport { ItemPaginationData } from 'modules/item/reducer'\n\nexport enum TABS {\n  COLLECTIONS,\n  ITEMS\n}\n\nexport type Props = {\n  address?: string\n  items: Item[]\n  collections: Collection[]\n  collectionsPaginationData: CollectionPaginationData | null\n  itemsPaginationData?: ItemPaginationData | null\n  view: CollectionPageView\n  isThirdPartyManager: boolean\n  isLoadingCollections: boolean\n  isLoadingItems: boolean\n  onNavigate: (path: string) => void\n  onSetView: typeof setCollectionPageView\n  onOpenModal: typeof openModal\n  onFetchOrphanItems: typeof fetchItemsRequest\n  onFetchCollections: typeof fetchCollectionsRequest\n}\n\nexport type MapStateProps = Pick<\n  Props,\n  | 'address'\n  | 'items'\n  | 'collections'\n  | 'collectionsPaginationData'\n  | 'itemsPaginationData'\n  | 'view'\n  | 'isThirdPartyManager'\n  | 'isLoadingCollections'\n  | 'isLoadingItems'\n>\nexport type MapDispatchProps = Pick<Props, 'onNavigate' | 'onSetView' | 'onOpenModal' | 'onFetchOrphanItems' | 'onFetchCollections'>\nexport type MapDispatch = Dispatch<\n  CallHistoryMethodAction | SetCollectionPageViewAction | OpenModalAction | FetchItemsRequestAction | FetchCollectionsRequestAction\n>\n"]},"metadata":{},"sourceType":"module"}