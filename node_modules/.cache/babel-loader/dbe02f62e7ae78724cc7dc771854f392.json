{"ast":null,"code":"import _classCallCheck from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/opt/work/NZ_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/opt/work/NZ_test/src/components/Modals/QuotaExceededModal/QuotaExceededModal.tsx\";\nimport * as React from 'react';\nimport { Close, Button } from 'decentraland-ui';\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils';\nimport Modal from 'decentraland-dapps/dist/containers/Modal';\nimport WalletLoginModal from '../WalletLoginModal';\nimport './QuotaExceededModal.css';\n\nvar QuotaExceeded = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(QuotaExceeded, _React$PureComponent);\n\n  function QuotaExceeded() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuotaExceeded);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuotaExceeded)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoginModalOpen: false\n    };\n\n    _this.handleOpenLoginModal = function () {\n      _this.setState({\n        isLoginModalOpen: true\n      });\n    };\n\n    _this.handleCloseLoginModal = function () {\n      _this.setState({\n        isLoginModalOpen: false\n      });\n    };\n\n    _this.handleRetry = function () {\n      _this.props.onRetry();\n    };\n\n    _this.renderLogin = function () {\n      var name = _this.props.name;\n      return /*#__PURE__*/React.createElement(WalletLoginModal, {\n        name: name,\n        onClose: _this.handleCloseLoginModal,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this.renderRetry = function () {\n      var loading = _this.props.loading;\n      var isLoading = loading.size > 0;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, t('quota_exceeded_modal.retry.title')), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, t('quota_exceeded_modal.retry.description')), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        onClick: _this.handleRetry,\n        disabled: isLoading,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, isLoading ? t('global.loading') : t('sync.retry'))));\n    };\n\n    _this.renderSignIn = function () {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, t('quota_exceeded_modal.sign_in.title')), /*#__PURE__*/React.createElement(Modal.Content, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, t('quota_exceeded_modal.sign_in.description')), /*#__PURE__*/React.createElement(Modal.Actions, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        onClick: _this.handleOpenLoginModal,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, t('user_menu.sign_in'))));\n    };\n\n    return _this;\n  }\n\n  _createClass(QuotaExceeded, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var isLoading = props.loading.size;\n      var wasLoading = this.props.loading.size;\n      var hasErrors = props.errors.size;\n      var hadErrors = this.props.errors.size;\n\n      if (!isLoading && wasLoading && !hasErrors && hadErrors) {\n        this.props.onClose();\n      }\n\n      if (props.isLoggingIn) {\n        this.handleCloseLoginModal();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          currentProject = _this$props.currentProject,\n          isLoggedIn = _this$props.isLoggedIn,\n          isLoggingIn = _this$props.isLoggingIn,\n          onClose = _this$props.onClose;\n      var isLoginModalOpen = this.state.isLoginModalOpen;\n      var shouldRetry = currentProject && isLoggedIn;\n      return isLoginModalOpen && !isLoggingIn && !isLoggedIn ? this.renderLogin() : /*#__PURE__*/React.createElement(Modal, {\n        name: name,\n        closeIcon: /*#__PURE__*/React.createElement(Close, {\n          onClick: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, shouldRetry ? this.renderRetry() : this.renderSignIn());\n    }\n  }]);\n\n  return QuotaExceeded;\n}(React.PureComponent);\n\nexport { QuotaExceeded as default };","map":{"version":3,"sources":["/opt/work/NZ_test/src/components/Modals/QuotaExceededModal/QuotaExceededModal.tsx"],"names":["React","Close","Button","t","Modal","WalletLoginModal","QuotaExceeded","state","isLoginModalOpen","handleOpenLoginModal","setState","handleCloseLoginModal","handleRetry","props","onRetry","renderLogin","name","renderRetry","loading","isLoading","size","renderSignIn","wasLoading","hasErrors","errors","hadErrors","onClose","isLoggingIn","currentProject","isLoggedIn","shouldRetry","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Close, Button } from 'decentraland-ui'\nimport { t } from 'decentraland-dapps/dist/modules/translation/utils'\nimport Modal from 'decentraland-dapps/dist/containers/Modal'\nimport WalletLoginModal from '../WalletLoginModal'\nimport { Props, State } from './QuotaExceededModal.types'\nimport './QuotaExceededModal.css'\n\nexport default class QuotaExceeded extends React.PureComponent<Props, State> {\n  state = {\n    isLoginModalOpen: false\n  }\n\n  componentWillReceiveProps(props: Props) {\n    const isLoading = props.loading.size\n    const wasLoading = this.props.loading.size\n    const hasErrors = props.errors.size\n    const hadErrors = this.props.errors.size\n\n    if (!isLoading && wasLoading && !hasErrors && hadErrors) {\n      this.props.onClose()\n    }\n\n    if (props.isLoggingIn) {\n      this.handleCloseLoginModal()\n    }\n  }\n\n  handleOpenLoginModal = () => {\n    this.setState({ isLoginModalOpen: true })\n  }\n\n  handleCloseLoginModal = () => {\n    this.setState({ isLoginModalOpen: false })\n  }\n\n  handleRetry = () => {\n    this.props.onRetry()\n  }\n\n  renderLogin = () => {\n    const { name } = this.props\n    return <WalletLoginModal name={name} onClose={this.handleCloseLoginModal as any} />\n  }\n\n  renderRetry = () => {\n    const { loading } = this.props\n    const isLoading = loading.size > 0\n\n    return (\n      <>\n        <Modal.Header>{t('quota_exceeded_modal.retry.title')}</Modal.Header>\n        <Modal.Content>{t('quota_exceeded_modal.retry.description')}</Modal.Content>\n        <Modal.Actions>\n          <Button primary onClick={this.handleRetry} disabled={isLoading}>\n            {isLoading ? t('global.loading') : t('sync.retry')}\n          </Button>\n        </Modal.Actions>\n      </>\n    )\n  }\n\n  renderSignIn = () => (\n    <>\n      <Modal.Header>{t('quota_exceeded_modal.sign_in.title')}</Modal.Header>\n      <Modal.Content>{t('quota_exceeded_modal.sign_in.description')}</Modal.Content>\n      <Modal.Actions>\n        <Button primary onClick={this.handleOpenLoginModal}>\n          {t('user_menu.sign_in')}\n        </Button>\n      </Modal.Actions>\n    </>\n  )\n\n  render() {\n    const { name, currentProject, isLoggedIn, isLoggingIn, onClose } = this.props\n    const { isLoginModalOpen } = this.state\n\n    const shouldRetry = currentProject && isLoggedIn\n\n    return isLoginModalOpen && !isLoggingIn && !isLoggedIn ? (\n      this.renderLogin()\n    ) : (\n      <Modal name={name} closeIcon={<Close onClick={onClose} />}>\n        {shouldRetry ? this.renderRetry() : this.renderSignIn()}\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}